

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Fri Jul 28 13:24:51 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_initlcd
    43                           	FNCALL	_main,_initkeypad
    44                           	FNCALL	_main,_getlogicseq
    45                           	FNCALL	_getlogicseq,_scroll
    46                           	FNCALL	_getlogicseq,_write
    47                           	FNCALL	_getlogicseq,_scan
    48                           	FNCALL	_getlogicseq,_startswitch
    49                           	FNCALL	_getlogicseq,_strcpy
    50                           	FNCALL	_getlogicseq,_itoaa
    51                           	FNCALL	_getlogicseq,_strcat
    52                           	FNCALL	_startswitch,_init_fun
    53                           	FNCALL	_startswitch,_strcpy
    54                           	FNCALL	_startswitch,_strcmp
    55                           	FNCALL	_startswitch,_write
    56                           	FNCALL	_startswitch,_check
    57                           	FNCALL	_scroll,_write
    58                           	FNCALL	_scroll,_delay
    59                           	FNCALL	_scroll,_cmd
    60                           	FNCALL	_init_fun,_write
    61                           	FNCALL	_write,_clearlcd
    62                           	FNCALL	_write,_cmd
    63                           	FNCALL	_write,_dat
    64                           	FNCALL	_clearlcd,_cmd
    65                           	FNCALL	_scan,_actrow
    66                           	FNCALL	_initlcd,_cmd
    67                           	FNCALL	_actrow,_resetout
    68                           	FNCALL	_actrow,_delay
    69                           	FNCALL	_dat,_setLCD
    70                           	FNCALL	_dat,_delay
    71                           	FNCALL	_cmd,_setLCD
    72                           	FNCALL	_cmd,_delay
    73                           	FNCALL	_itoaa,___wmul
    74                           	FNCALL	_itoaa,___awdiv
    75                           	FNCALL	_itoaa,___awmod
    76                           	FNROOT	_main
    77                           	global	_logic_d4
    78                           	global	_lo
    79                           	global	_logic_d1
    80                           	global	_logic_d2
    81                           	global	_logic_d3
    82                           	global	_plo
    83                           psect	idataBANK3,class=CODE,space=0,delta=2
    84                           global __pidataBANK3
    85  0AF8                     __pidataBANK3:
    86                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
    87                           	line	113
    88                           
    89                           ;initializer for _logic_d4
    90  0AF8  3431               	retlw	031h
    91  0AF9  3430               	retlw	030h
    92  0AFA  3430               	retlw	030h
    93  0AFB  3400               	retlw	0
    94  0AFC  3400               	retlw	0
    95                           psect	idataBANK0,class=CODE,space=0,delta=2
    96                           global __pidataBANK0
    97  0B1E                     __pidataBANK0:
    98                           	line	114
    99                           
   100                           ;initializer for _lo
   101  0B1E  3430               	retlw	030h
   102  0B1F  3430               	retlw	030h
   103  0B20  3430               	retlw	030h
   104  0B21  3430               	retlw	030h
   105  0B22  3400               	retlw	0
   106                           	line	110
   107                           
   108                           ;initializer for _logic_d1
   109  0B23  3431               	retlw	031h
   110  0B24  3430               	retlw	030h
   111  0B25  3430               	retlw	030h
   112  0B26  3400               	retlw	0
   113  0B27  3400               	retlw	0
   114                           psect	idataBANK1,class=CODE,space=0,delta=2
   115                           global __pidataBANK1
   116  0B28                     __pidataBANK1:
   117                           	line	111
   118                           
   119                           ;initializer for _logic_d2
   120  0B28  3430               	retlw	030h
   121  0B29  3431               	retlw	031h
   122  0B2A  3430               	retlw	030h
   123  0B2B  3400               	retlw	0
   124  0B2C  3400               	retlw	0
   125                           	line	112
   126                           
   127                           ;initializer for _logic_d3
   128  0B2D  3430               	retlw	030h
   129  0B2E  3431               	retlw	031h
   130  0B2F  3430               	retlw	030h
   131  0B30  3400               	retlw	0
   132  0B31  3400               	retlw	0
   133                           	line	115
   134                           
   135                           ;initializer for _plo
   136  0B32  3430               	retlw	030h
   137  0B33  3430               	retlw	030h
   138  0B34  3430               	retlw	030h
   139  0B35  3430               	retlw	030h
   140  0B36  3400               	retlw	0
   141                           	global	setLCD@size
   142                           psect	strings,class=STRING,delta=2
   143                           global __pstrings
   144  0003                     __pstrings:
   145                           ;	global	stringdir,stringtab,__stringbase
   146  0003                     stringtab:
   147                           ;	String table - string pointers are 1 byte each
   148  0003  1BFF               	btfsc	(btemp+1),7
   149  0004  280D               	ljmp	stringcode
   150  0005  1383               	bcf	status,7
   151  0006  187F               	btfsc	(btemp+1),0
   152  0007  1783               	bsf	status,7
   153  0008  0800               	movf	indf,w
   154  0009  0A84               	incf fsr
   155  000A  1903               skipnz
   156  000B  0AFF               incf btemp+1
   157  000C  0008               	return
   158  000D                     stringcode:stringdir:
      + 000D                     stringdir:	
   159  000D  3000               movlw high(stringdir)
   160  000E  008A               movwf pclath
   161  000F  0804               movf fsr,w
   162  0010  0A84               incf fsr
   163  0011  0782               	addwf pc
   164  0012                     __stringbase:
   165  0012  3400               	retlw	0
   166                           psect	strings
   167                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   168                           	line	556
   169  0013                     setLCD@size:
   170  0013  3410               	retlw	010h
   171  0014  3400               	retlw	0
   172                           
   173                           	global	setLCD@size
   174                           	global	_dev
   175                           	global	_done_init
   176                           	global	_pdev
   177                           	global	getlogicseq@F1264
   178                           	global	_PORTA
   179  0005                     _PORTA	set	5
   180                           	global	_PORTB
   181  0006                     _PORTB	set	6
   182                           	global	_RB0
   183  0030                     _RB0	set	48
   184                           	global	_RB1
   185  0031                     _RB1	set	49
   186                           	global	_RB2
   187  0032                     _RB2	set	50
   188                           	global	_RB3
   189  0033                     _RB3	set	51
   190                           	global	_RB6
   191  0036                     _RB6	set	54
   192                           	global	_RB7
   193  0037                     _RB7	set	55
   194                           	global	_RC0
   195  0038                     _RC0	set	56
   196                           	global	_RC1
   197  0039                     _RC1	set	57
   198                           	global	_RC2
   199  003A                     _RC2	set	58
   200                           	global	_RC3
   201  003B                     _RC3	set	59
   202                           	global	_RC4
   203  003C                     _RC4	set	60
   204                           	global	_RC5
   205  003D                     _RC5	set	61
   206                           	global	_RC6
   207  003E                     _RC6	set	62
   208                           	global	_RD0
   209  0040                     _RD0	set	64
   210                           	global	_RD1
   211  0041                     _RD1	set	65
   212                           	global	_RD2
   213  0042                     _RD2	set	66
   214                           	global	_RD3
   215  0043                     _RD3	set	67
   216                           	global	_RD4
   217  0044                     _RD4	set	68
   218                           	global	_RD5
   219  0045                     _RD5	set	69
   220                           	global	_RD6
   221  0046                     _RD6	set	70
   222                           	global	_RD7
   223  0047                     _RD7	set	71
   224                           	global	_TRISA
   225  0085                     _TRISA	set	133
   226                           	global	_TRISB
   227  0086                     _TRISB	set	134
   228                           	global	_TRISC
   229  0087                     _TRISC	set	135
   230                           	global	_TRISD
   231  0088                     _TRISD	set	136
   232                           	
   233  0015                     STR_4:	
   234  0015  3457               	retlw	87	;'W'
   235  0016  3445               	retlw	69	;'E'
   236  0017  344C               	retlw	76	;'L'
   237  0018  3443               	retlw	67	;'C'
   238  0019  344F               	retlw	79	;'O'
   239  001A  344D               	retlw	77	;'M'
   240  001B  3445               	retlw	69	;'E'
   241  001C  3420               	retlw	32	;' '
   242  001D  3421               	retlw	33	;'!'
   243  001E  3420               	retlw	32	;' '
   244  001F  3454               	retlw	84	;'T'
   245  0020  344F               	retlw	79	;'O'
   246  0021  3420               	retlw	32	;' '
   247  0022  3450               	retlw	80	;'P'
   248  0023  3452               	retlw	82	;'R'
   249  0024  344F               	retlw	79	;'O'
   250  0025  3447               	retlw	71	;'G'
   251  0026  3452               	retlw	82	;'R'
   252  0027  3441               	retlw	65	;'A'
   253  0028  344D               	retlw	77	;'M'
   254  0029  3441               	retlw	65	;'A'
   255  002A  3442               	retlw	66	;'B'
   256  002B  344C               	retlw	76	;'L'
   257  002C  3445               	retlw	69	;'E'
   258  002D  3420               	retlw	32	;' '
   259  002E  3448               	retlw	72	;'H'
   260  002F  344F               	retlw	79	;'O'
   261  0030  344D               	retlw	77	;'M'
   262  0031  3445               	retlw	69	;'E'
   263  0032  3420               	retlw	32	;' '
   264  0033  3441               	retlw	65	;'A'
   265  0034  3455               	retlw	85	;'U'
   266  0035  3454               	retlw	84	;'T'
   267  0036  344D               	retlw	77	;'M'
   268  0037  3441               	retlw	65	;'A'
   269  0038  3454               	retlw	84	;'T'
   270  0039  344E               	retlw	78	;'N'
   271  003A  3400               	retlw	0
   272                           psect	strings
   273                           	
   274  003B                     STR_7:	
   275  003B  3445               	retlw	69	;'E'
   276  003C  346E               	retlw	110	;'n'
   277  003D  3474               	retlw	116	;'t'
   278  003E  3465               	retlw	101	;'e'
   279  003F  3472               	retlw	114	;'r'
   280  0040  3420               	retlw	32	;' '
   281  0041  344C               	retlw	76	;'L'
   282  0042  346F               	retlw	111	;'o'
   283  0043  3467               	retlw	103	;'g'
   284  0044  3469               	retlw	105	;'i'
   285  0045  3463               	retlw	99	;'c'
   286  0046  3420               	retlw	32	;' '
   287  0047  3444               	retlw	68	;'D'
   288  0048  3445               	retlw	69	;'E'
   289  0049  3456               	retlw	86	;'V'
   290  004A  3431               	retlw	49	;'1'
   291  004B  343A               	retlw	58	;':'
   292  004C  3420               	retlw	32	;' '
   293  004D  3420               	retlw	32	;' '
   294  004E  3400               	retlw	0
   295                           psect	strings
   296                           	
   297  004F                     STR_10:	
   298  004F  3445               	retlw	69	;'E'
   299  0050  346E               	retlw	110	;'n'
   300  0051  3474               	retlw	116	;'t'
   301  0052  3465               	retlw	101	;'e'
   302  0053  3472               	retlw	114	;'r'
   303  0054  3420               	retlw	32	;' '
   304  0055  344C               	retlw	76	;'L'
   305  0056  346F               	retlw	111	;'o'
   306  0057  3467               	retlw	103	;'g'
   307  0058  3469               	retlw	105	;'i'
   308  0059  3463               	retlw	99	;'c'
   309  005A  3420               	retlw	32	;' '
   310  005B  3444               	retlw	68	;'D'
   311  005C  3445               	retlw	69	;'E'
   312  005D  3456               	retlw	86	;'V'
   313  005E  3432               	retlw	50	;'2'
   314  005F  343A               	retlw	58	;':'
   315  0060  3420               	retlw	32	;' '
   316  0061  3420               	retlw	32	;' '
   317  0062  3400               	retlw	0
   318                           psect	strings
   319                           	
   320  0063                     STR_13:	
   321  0063  3445               	retlw	69	;'E'
   322  0064  346E               	retlw	110	;'n'
   323  0065  3474               	retlw	116	;'t'
   324  0066  3465               	retlw	101	;'e'
   325  0067  3472               	retlw	114	;'r'
   326  0068  3420               	retlw	32	;' '
   327  0069  344C               	retlw	76	;'L'
   328  006A  346F               	retlw	111	;'o'
   329  006B  3467               	retlw	103	;'g'
   330  006C  3469               	retlw	105	;'i'
   331  006D  3463               	retlw	99	;'c'
   332  006E  3420               	retlw	32	;' '
   333  006F  3444               	retlw	68	;'D'
   334  0070  3445               	retlw	69	;'E'
   335  0071  3456               	retlw	86	;'V'
   336  0072  3433               	retlw	51	;'3'
   337  0073  343A               	retlw	58	;':'
   338  0074  3420               	retlw	32	;' '
   339  0075  3420               	retlw	32	;' '
   340  0076  3400               	retlw	0
   341                           psect	strings
   342                           	
   343  0077                     STR_5:	
   344  0077  3431               	retlw	49	;'1'
   345  0078  342E               	retlw	46	;'.'
   346  0079  3453               	retlw	83	;'S'
   347  007A  3457               	retlw	87	;'W'
   348  007B  3454               	retlw	84	;'T'
   349  007C  3420               	retlw	32	;' '
   350  007D  3420               	retlw	32	;' '
   351  007E  3432               	retlw	50	;'2'
   352  007F  342E               	retlw	46	;'.'
   353  0080  3452               	retlw	82	;'R'
   354  0081  3445               	retlw	69	;'E'
   355  0082  3450               	retlw	80	;'P'
   356  0083  3452               	retlw	82	;'R'
   357  0084  3447               	retlw	71	;'G'
   358  0085  3400               	retlw	0
   359                           psect	strings
   360                           	
   361  0086                     STR_1:	
   362  0086  3453               	retlw	83	;'S'
   363  0087  3465               	retlw	101	;'e'
   364  0088  346E               	retlw	110	;'n'
   365  0089  3473               	retlw	115	;'s'
   366  008A  3469               	retlw	105	;'i'
   367  008B  346E               	retlw	110	;'n'
   368  008C  3467               	retlw	103	;'g'
   369  008D  342E               	retlw	46	;'.'
   370  008E  342E               	retlw	46	;'.'
   371  008F  342E               	retlw	46	;'.'
   372  0090  3400               	retlw	0
   373                           psect	strings
   374                           	
   375  0091                     STR_6:	
   376  0091  3433               	retlw	51	;'3'
   377  0092  342E               	retlw	46	;'.'
   378  0093  3452               	retlw	82	;'R'
   379  0094  3445               	retlw	69	;'E'
   380  0095  3453               	retlw	83	;'S'
   381  0096  3445               	retlw	69	;'E'
   382  0097  3454               	retlw	84	;'T'
   383  0098  3400               	retlw	0
   384                           psect	strings
   385                           	
   386  0099                     STR_16:	
   387  0099  3430               	retlw	48	;'0'
   388  009A  3430               	retlw	48	;'0'
   389  009B  3430               	retlw	48	;'0'
   390  009C  3430               	retlw	48	;'0'
   391  009D  3400               	retlw	0
   392                           psect	strings
   393                           	
   394  009E                     STR_24:	
   395  009E  3431               	retlw	49	;'1'
   396  009F  3430               	retlw	48	;'0'
   397  00A0  3430               	retlw	48	;'0'
   398  00A1  3430               	retlw	48	;'0'
   399  00A2  3400               	retlw	0
   400                           psect	strings
   401                           	
   402  00A3                     STR_20:	
   403  00A3  3430               	retlw	48	;'0'
   404  00A4  3431               	retlw	49	;'1'
   405  00A5  3430               	retlw	48	;'0'
   406  00A6  3430               	retlw	48	;'0'
   407  00A7  3400               	retlw	0
   408                           psect	strings
   409                           	
   410  00A8                     STR_28:	
   411  00A8  3431               	retlw	49	;'1'
   412  00A9  3431               	retlw	49	;'1'
   413  00AA  3430               	retlw	48	;'0'
   414  00AB  3430               	retlw	48	;'0'
   415  00AC  3400               	retlw	0
   416                           psect	strings
   417                           	
   418  00AD                     STR_18:	
   419  00AD  3430               	retlw	48	;'0'
   420  00AE  3430               	retlw	48	;'0'
   421  00AF  3431               	retlw	49	;'1'
   422  00B0  3430               	retlw	48	;'0'
   423  00B1  3400               	retlw	0
   424                           psect	strings
   425                           	
   426  00B2                     STR_26:	
   427  00B2  3431               	retlw	49	;'1'
   428  00B3  3430               	retlw	48	;'0'
   429  00B4  3431               	retlw	49	;'1'
   430  00B5  3430               	retlw	48	;'0'
   431  00B6  3400               	retlw	0
   432                           psect	strings
   433                           	
   434  00B7                     STR_22:	
   435  00B7  3430               	retlw	48	;'0'
   436  00B8  3431               	retlw	49	;'1'
   437  00B9  3431               	retlw	49	;'1'
   438  00BA  3430               	retlw	48	;'0'
   439  00BB  3400               	retlw	0
   440                           psect	strings
   441                           	
   442  00BC                     STR_30:	
   443  00BC  3431               	retlw	49	;'1'
   444  00BD  3431               	retlw	49	;'1'
   445  00BE  3431               	retlw	49	;'1'
   446  00BF  3430               	retlw	48	;'0'
   447  00C0  3400               	retlw	0
   448                           psect	strings
   449                           	
   450  00C1                     STR_17:	
   451  00C1  3430               	retlw	48	;'0'
   452  00C2  3430               	retlw	48	;'0'
   453  00C3  3430               	retlw	48	;'0'
   454  00C4  3431               	retlw	49	;'1'
   455  00C5  3400               	retlw	0
   456                           psect	strings
   457                           	
   458  00C6                     STR_25:	
   459  00C6  3431               	retlw	49	;'1'
   460  00C7  3430               	retlw	48	;'0'
   461  00C8  3430               	retlw	48	;'0'
   462  00C9  3431               	retlw	49	;'1'
   463  00CA  3400               	retlw	0
   464                           psect	strings
   465                           	
   466  00CB                     STR_21:	
   467  00CB  3430               	retlw	48	;'0'
   468  00CC  3431               	retlw	49	;'1'
   469  00CD  3430               	retlw	48	;'0'
   470  00CE  3431               	retlw	49	;'1'
   471  00CF  3400               	retlw	0
   472                           psect	strings
   473                           	
   474  00D0                     STR_29:	
   475  00D0  3431               	retlw	49	;'1'
   476  00D1  3431               	retlw	49	;'1'
   477  00D2  3430               	retlw	48	;'0'
   478  00D3  3431               	retlw	49	;'1'
   479  00D4  3400               	retlw	0
   480                           psect	strings
   481                           	
   482  00D5                     STR_19:	
   483  00D5  3430               	retlw	48	;'0'
   484  00D6  3430               	retlw	48	;'0'
   485  00D7  3431               	retlw	49	;'1'
   486  00D8  3431               	retlw	49	;'1'
   487  00D9  3400               	retlw	0
   488                           psect	strings
   489                           	
   490  00DA                     STR_27:	
   491  00DA  3431               	retlw	49	;'1'
   492  00DB  3430               	retlw	48	;'0'
   493  00DC  3431               	retlw	49	;'1'
   494  00DD  3431               	retlw	49	;'1'
   495  00DE  3400               	retlw	0
   496                           psect	strings
   497                           	
   498  00DF                     STR_23:	
   499  00DF  3430               	retlw	48	;'0'
   500  00E0  3431               	retlw	49	;'1'
   501  00E1  3431               	retlw	49	;'1'
   502  00E2  3431               	retlw	49	;'1'
   503  00E3  3400               	retlw	0
   504                           psect	strings
   505                           	
   506  00E4                     STR_31:	
   507  00E4  3431               	retlw	49	;'1'
   508  00E5  3431               	retlw	49	;'1'
   509  00E6  3431               	retlw	49	;'1'
   510  00E7  3431               	retlw	49	;'1'
   511  00E8  3400               	retlw	0
   512                           psect	strings
   513                           	
   514  00E9                     STR_9:	
   515  00E9  342D               	retlw	45	;'-'
   516  00EA  342D               	retlw	45	;'-'
   517  00EB  342D               	retlw	45	;'-'
   518  00EC  3400               	retlw	0
   519                           psect	strings
   520  009A                     STR_2	equ	STR_16+1
   521  009A                     STR_3	equ	STR_16+1
   522  00E9                     STR_12	equ	STR_9+0
   523  00E9                     STR_15	equ	STR_9+0
   524  004E                     STR_8	equ	STR_7+19
   525  004E                     STR_11	equ	STR_7+19
   526  004E                     STR_14	equ	STR_7+19
   527                           	file	"prev1.as"
   528                           	line	#
   529                           psect cinit,class=CODE,delta=2
   530                           global start_initialization
   531  0CC9                     start_initialization:
   532                           
   533                           psect	bssBANK0,class=BANK0,space=1
   534                           global __pbssBANK0
   535  006A                     __pbssBANK0:
   536  006A                     _dev:
   537  006A                            ds      2
   538                           
   539  006C                     _done_init:
   540  006C                            ds      2
   541                           
   542  006E                     _pdev:
   543  006E                            ds      2
   544                           
   545                           psect	dataBANK0,class=BANK0,space=1
   546                           global __pdataBANK0
   547  0060                     __pdataBANK0:
   548                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   549                           	line	114
   550  0060                     _lo:
   551  0060                            ds      5
   552                           
   553                           psect	dataBANK0
   554                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   555                           	line	110
   556  0065                     _logic_d1:
   557  0065                            ds      5
   558                           
   559                           psect	dataBANK1,class=BANK1,space=1
   560                           global __pdataBANK1
   561  00E0                     __pdataBANK1:
   562                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   563                           	line	111
   564  00E0                     _logic_d2:
   565  00E0                            ds      5
   566                           
   567                           psect	dataBANK1
   568                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   569                           	line	112
   570  00E5                     _logic_d3:
   571  00E5                            ds      5
   572                           
   573                           psect	dataBANK1
   574                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   575                           	line	115
   576  00EA                     _plo:
   577  00EA                            ds      5
   578                           
   579                           psect	bssBANK3,class=BANK3,space=1
   580                           global __pbssBANK3
   581  0190                     __pbssBANK3:
   582  0190                     getlogicseq@F1264:
   583  0190                            ds      16
   584                           
   585                           psect	dataBANK3,class=BANK3,space=1
   586                           global __pdataBANK3
   587  01A0                     __pdataBANK3:
   588                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   589                           	line	113
   590  01A0                     _logic_d4:
   591  01A0                            ds      5
   592                           
   593                           psect clrtext,class=CODE,delta=2
   594                           global clear_ram
   595                           ;	Called with FSR containing the base address, and
   596                           ;	W with the last address+1
   597  0B0C                     clear_ram:
   598  0B0C  0064               	clrwdt			;clear the watchdog before getting into this loop
   599  0B0D                     clrloop:
   600  0B0D  0180               	clrf	indf		;clear RAM location pointed to by FSR
   601  0B0E  0A84               	incf	fsr,f		;increment pointer
   602  0B0F  0604               	xorwf	fsr,w		;XOR with final address
   603  0B10  1903               	btfsc	status,2	;have we reached the end yet?
   604  0B11  3400               	retlw	0		;all done for this memory range, return
   605  0B12  0604               	xorwf	fsr,w		;XOR again to restore value
   606  0B13  2B0D               	goto	clrloop		;do the next byte
   607                           
   608                           ; Clear objects allocated to BANK0
   609                           psect cinit,class=CODE,delta=2
   610  0CC9  01EA               	clrf	((__pbssBANK0)+0)&07Fh
   611  0CCA  01EB               	clrf	((__pbssBANK0)+1)&07Fh
   612  0CCB  01EC               	clrf	((__pbssBANK0)+2)&07Fh
   613  0CCC  01ED               	clrf	((__pbssBANK0)+3)&07Fh
   614  0CCD  01EE               	clrf	((__pbssBANK0)+4)&07Fh
   615  0CCE  01EF               	clrf	((__pbssBANK0)+5)&07Fh
   616                           ; Clear objects allocated to BANK3
   617                           psect cinit,class=CODE,delta=2
   618  0CCF  1783               	bsf	status, 7	;select IRP bank2
   619  0CD0  3090               	movlw	low(__pbssBANK3)
   620  0CD1  0084               	movwf	fsr
   621  0CD2  30A0               	movlw	low((__pbssBANK3)+010h)
   622  0CD3  120A  158A  230C   	fcall	clear_ram
              120A  158A         
   623                           global btemp
   624                           psect inittext,class=CODE,delta=2
   625                           global init_fetch,btemp
   626                           ;	Called with low address in FSR and high address in W
   627  0B37                     init_fetch:
   628  0B37  087E               	movf btemp,w
   629  0B38  008A               	movwf pclath
   630  0B39  087F               	movf btemp+1,w
   631  0B3A  0082               	movwf pc
   632                           global init_ram
   633                           ;Called with:
   634                           ;	high address of idata address in btemp 
   635                           ;	low address of idata address in btemp+1 
   636                           ;	low address of data in FSR
   637                           ;	high address + 1 of data in btemp-1
   638  0B3B                     init_ram:
   639  0B3B  2337  120A  158A   	fcall init_fetch
   640  0B3E  0080               	movwf indf,f
   641  0B3F  0A84               	incf fsr,f
   642  0B40  0804               	movf fsr,w
   643  0B41  067D               	xorwf btemp-1,w
   644  0B42  1903               	btfsc status,2
   645  0B43  3400               	retlw 0
   646  0B44  0AFF               	incf btemp+1,f
   647  0B45  1903               	btfsc status,2
   648  0B46  0AFE               	incf btemp,f
   649  0B47  2B3B               	goto init_ram
   650                           ; Initialize objects allocated to BANK3
   651                           psect cinit,class=CODE,delta=2
   652                           global init_ram, __pidataBANK3
   653  0CD8  30A5               	movlw low(__pdataBANK3+5)
   654  0CD9  00FD               	movwf btemp-1,f
   655  0CDA  300A               	movlw high(__pidataBANK3)
   656  0CDB  00FE               	movwf btemp,f
   657  0CDC  30F8               	movlw low(__pidataBANK3)
   658  0CDD  00FF               	movwf btemp+1,f
   659  0CDE  30A0               	movlw low(__pdataBANK3)
   660  0CDF  0084               	movwf fsr,f
   661  0CE0  120A  158A  233B   	fcall init_ram
              120A  158A         
   662                           ; Initialize objects allocated to BANK1
   663                           psect cinit,class=CODE,delta=2
   664                           global init_ram, __pidataBANK1
   665  0CE5  1383               	bcf	status, 7	;select IRP bank0
   666  0CE6  30EF               	movlw low(__pdataBANK1+15)
   667  0CE7  00FD               	movwf btemp-1,f
   668  0CE8  300B               	movlw high(__pidataBANK1)
   669  0CE9  00FE               	movwf btemp,f
   670  0CEA  3028               	movlw low(__pidataBANK1)
   671  0CEB  00FF               	movwf btemp+1,f
   672  0CEC  30E0               	movlw low(__pdataBANK1)
   673  0CED  0084               	movwf fsr,f
   674  0CEE  120A  158A  233B   	fcall init_ram
              120A  158A         
   675                           ; Initialize objects allocated to BANK0
   676                           psect cinit,class=CODE,delta=2
   677                           global init_ram, __pidataBANK0
   678  0CF3  306A               	movlw low(__pdataBANK0+10)
   679  0CF4  00FD               	movwf btemp-1,f
   680  0CF5  300B               	movlw high(__pidataBANK0)
   681  0CF6  00FE               	movwf btemp,f
   682  0CF7  301E               	movlw low(__pidataBANK0)
   683  0CF8  00FF               	movwf btemp+1,f
   684  0CF9  3060               	movlw low(__pdataBANK0)
   685  0CFA  0084               	movwf fsr,f
   686  0CFB  120A  158A  233B   	fcall init_ram
              120A  158A         
   687                           psect cinit,class=CODE,delta=2
   688                           global end_of_initialization
   689                           
   690                           ;End of C runtime variable initialization code
   691                           
   692  0D00                     end_of_initialization:
   693  0D00  0183               clrf status
   694  0D01  120A  158A  2B5C   ljmp _main	;jump to C main() function
   695                           psect	cstackBANK1,class=BANK1,space=1
   696                           global __pcstackBANK1
   697  00A0                     __pcstackBANK1:
   698                           	global	getlogicseq@str
   699  00A0                     getlogicseq@str:	; 32 bytes @ 0x0
   700  00A0                     	ds	32
   701                           	global	getlogicseq@bf
   702  00C0                     getlogicseq@bf:	; 2 bytes @ 0x20
   703  00C0                     	ds	2
   704                           	global	getlogicseq@snum
   705  00C2                     getlogicseq@snum:	; 16 bytes @ 0x22
   706  00C2                     	ds	16
   707                           	global	getlogicseq@f1
   708  00D2                     getlogicseq@f1:	; 2 bytes @ 0x32
   709  00D2                     	ds	2
   710                           	global	getlogicseq@f2
   711  00D4                     getlogicseq@f2:	; 2 bytes @ 0x34
   712  00D4                     	ds	2
   713                           	global	getlogicseq@f3
   714  00D6                     getlogicseq@f3:	; 2 bytes @ 0x36
   715  00D6                     	ds	2
   716                           	global	getlogicseq@nf
   717  00D8                     getlogicseq@nf:	; 2 bytes @ 0x38
   718  00D8                     	ds	2
   719                           	global	getlogicseq@wf
   720  00DA                     getlogicseq@wf:	; 2 bytes @ 0x3A
   721  00DA                     	ds	2
   722                           	global	getlogicseq@ccount
   723  00DC                     getlogicseq@ccount:	; 2 bytes @ 0x3C
   724  00DC                     	ds	2
   725                           	global	getlogicseq@num
   726  00DE                     getlogicseq@num:	; 2 bytes @ 0x3E
   727  00DE                     	ds	2
   728                           psect	cstackCOMMON,class=COMMON,space=1
   729                           global __pcstackCOMMON
   730  0070                     __pcstackCOMMON:
   731                           	global	?_initlcd
   732  0070                     ?_initlcd:	; 0 bytes @ 0x0
   733                           	global	?_initkeypad
   734  0070                     ?_initkeypad:	; 0 bytes @ 0x0
   735                           	global	??_initkeypad
   736  0070                     ??_initkeypad:	; 0 bytes @ 0x0
   737                           	global	?_getlogicseq
   738  0070                     ?_getlogicseq:	; 0 bytes @ 0x0
   739                           	global	?_setLCD
   740  0070                     ?_setLCD:	; 0 bytes @ 0x0
   741                           	global	?_init_fun
   742  0070                     ?_init_fun:	; 0 bytes @ 0x0
   743                           	global	?_startswitch
   744  0070                     ?_startswitch:	; 0 bytes @ 0x0
   745                           	global	?_delay
   746  0070                     ?_delay:	; 0 bytes @ 0x0
   747                           	global	?_clearlcd
   748  0070                     ?_clearlcd:	; 0 bytes @ 0x0
   749                           	global	?_resetout
   750  0070                     ?_resetout:	; 0 bytes @ 0x0
   751                           	global	??_resetout
   752  0070                     ??_resetout:	; 0 bytes @ 0x0
   753                           	global	?_strcpy
   754  0070                     ?_strcpy:	; 1 bytes @ 0x0
   755                           	global	?_strcat
   756  0070                     ?_strcat:	; 1 bytes @ 0x0
   757                           	global	?_strcmp
   758  0070                     ?_strcmp:	; 2 bytes @ 0x0
   759                           	global	?_main
   760  0070                     ?_main:	; 2 bytes @ 0x0
   761                           	global	?_check
   762  0070                     ?_check:	; 2 bytes @ 0x0
   763                           	global	?___wmul
   764  0070                     ?___wmul:	; 2 bytes @ 0x0
   765                           	global	?___awdiv
   766  0070                     ?___awdiv:	; 2 bytes @ 0x0
   767                           	global	?___awmod
   768  0070                     ?___awmod:	; 2 bytes @ 0x0
   769                           	global	check@logic
   770  0070                     check@logic:	; 1 bytes @ 0x0
   771                           	global	strcat@from
   772  0070                     strcat@from:	; 1 bytes @ 0x0
   773                           	global	delay@x
   774  0070                     delay@x:	; 2 bytes @ 0x0
   775                           	global	setLCD@number
   776  0070                     setLCD@number:	; 2 bytes @ 0x0
   777                           	global	strcmp@s2
   778  0070                     strcmp@s2:	; 2 bytes @ 0x0
   779                           	global	strcpy@from
   780  0070                     strcpy@from:	; 2 bytes @ 0x0
   781                           	global	___wmul@multiplier
   782  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   783                           	global	___awdiv@divisor
   784  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   785                           	global	___awmod@divisor
   786  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   787  0070                     	ds	1
   788                           	global	??_strcat
   789  0071                     ??_strcat:	; 0 bytes @ 0x1
   790  0071                     	ds	1
   791                           	global	??_strcpy
   792  0072                     ??_strcpy:	; 0 bytes @ 0x2
   793                           	global	??_strcmp
   794  0072                     ??_strcmp:	; 0 bytes @ 0x2
   795                           	global	??_setLCD
   796  0072                     ??_setLCD:	; 0 bytes @ 0x2
   797                           	global	?_actrow
   798  0072                     ?_actrow:	; 0 bytes @ 0x2
   799                           	global	??_check
   800  0072                     ??_check:	; 0 bytes @ 0x2
   801                           	global	??_delay
   802  0072                     ??_delay:	; 0 bytes @ 0x2
   803                           	global	strcat@to
   804  0072                     strcat@to:	; 1 bytes @ 0x2
   805                           	global	actrow@n
   806  0072                     actrow@n:	; 2 bytes @ 0x2
   807                           	global	___wmul@multiplicand
   808  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   809                           	global	___awdiv@dividend
   810  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   811                           	global	___awmod@dividend
   812  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   813  0072                     	ds	1
   814                           	global	check@input
   815  0073                     check@input:	; 1 bytes @ 0x3
   816                           	global	strcat@cp
   817  0073                     strcat@cp:	; 1 bytes @ 0x3
   818  0073                     	ds	1
   819                           	global	??_actrow
   820  0074                     ??_actrow:	; 0 bytes @ 0x4
   821                           	global	??___wmul
   822  0074                     ??___wmul:	; 0 bytes @ 0x4
   823                           	global	??___awdiv
   824  0074                     ??___awdiv:	; 0 bytes @ 0x4
   825                           	global	??___awmod
   826  0074                     ??___awmod:	; 0 bytes @ 0x4
   827                           	global	?_scan
   828  0074                     ?_scan:	; 2 bytes @ 0x4
   829                           	global	check@i
   830  0074                     check@i:	; 2 bytes @ 0x4
   831                           	global	___wmul@product
   832  0074                     ___wmul@product:	; 2 bytes @ 0x4
   833  0074                     	ds	1
   834                           	global	strcpy@to
   835  0075                     strcpy@to:	; 1 bytes @ 0x5
   836                           	global	___awdiv@counter
   837  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   838                           	global	___awmod@counter
   839  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   840  0075                     	ds	1
   841                           	global	??_scan
   842  0076                     ??_scan:	; 0 bytes @ 0x6
   843                           	global	strcmp@r
   844  0076                     strcmp@r:	; 1 bytes @ 0x6
   845                           	global	strcpy@cp
   846  0076                     strcpy@cp:	; 1 bytes @ 0x6
   847                           	global	___awdiv@sign
   848  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   849                           	global	___awmod@sign
   850  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   851  0076                     	ds	1
   852                           	global	strcmp@s1
   853  0077                     strcmp@s1:	; 1 bytes @ 0x7
   854                           	global	___awdiv@quotient
   855  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   856  0077                     	ds	1
   857                           	global	?_cmd
   858  0078                     ?_cmd:	; 0 bytes @ 0x8
   859                           	global	?_dat
   860  0078                     ?_dat:	; 0 bytes @ 0x8
   861                           	global	cmd@Command
   862  0078                     cmd@Command:	; 2 bytes @ 0x8
   863                           	global	dat@Command
   864  0078                     dat@Command:	; 2 bytes @ 0x8
   865  0078                     	ds	1
   866                           	global	?_itoaa
   867  0079                     ?_itoaa:	; 2 bytes @ 0x9
   868                           	global	itoaa@value
   869  0079                     itoaa@value:	; 2 bytes @ 0x9
   870  0079                     	ds	1
   871                           	global	??_initlcd
   872  007A                     ??_initlcd:	; 0 bytes @ 0xA
   873                           	global	??_write
   874  007A                     ??_write:	; 0 bytes @ 0xA
   875                           	global	??_cmd
   876  007A                     ??_cmd:	; 0 bytes @ 0xA
   877                           	global	??_clearlcd
   878  007A                     ??_clearlcd:	; 0 bytes @ 0xA
   879                           	global	??_dat
   880  007A                     ??_dat:	; 0 bytes @ 0xA
   881  007A                     	ds	1
   882                           	global	itoaa@ptr
   883  007B                     itoaa@ptr:	; 1 bytes @ 0xB
   884  007B                     	ds	1
   885                           	global	??_itoaa
   886  007C                     ??_itoaa:	; 0 bytes @ 0xC
   887                           	global	write@i
   888  007C                     write@i:	; 2 bytes @ 0xC
   889  007C                     	ds	2
   890                           	global	??_main
   891  007E                     ??_main:	; 0 bytes @ 0xE
   892                           	global	??_init_fun
   893  007E                     ??_init_fun:	; 0 bytes @ 0xE
   894                           psect	cstackBANK0,class=BANK0,space=1
   895                           global __pcstackBANK0
   896  0020                     __pcstackBANK0:
   897                           	global	itoaa@count
   898  0020                     itoaa@count:	; 2 bytes @ 0x0
   899                           	global	setLCD@vbool
   900  0020                     setLCD@vbool:	; 32 bytes @ 0x0
   901  0020                     	ds	2
   902                           	global	itoaa@temp
   903  0022                     itoaa@temp:	; 2 bytes @ 0x2
   904  0022                     	ds	30
   905                           	global	setLCD@i
   906  0040                     setLCD@i:	; 2 bytes @ 0x20
   907  0040                     	ds	2
   908                           	global	?_write
   909  0042                     ?_write:	; 0 bytes @ 0x22
   910                           	global	write@str
   911  0042                     write@str:	; 2 bytes @ 0x22
   912  0042                     	ds	2
   913                           	global	write@line
   914  0044                     write@line:	; 2 bytes @ 0x24
   915  0044                     	ds	2
   916                           	global	write@erase
   917  0046                     write@erase:	; 2 bytes @ 0x26
   918  0046                     	ds	2
   919                           	global	?_scroll
   920  0048                     ?_scroll:	; 0 bytes @ 0x28
   921                           	global	??_startswitch
   922  0048                     ??_startswitch:	; 0 bytes @ 0x28
   923                           	global	scroll@loops
   924  0048                     scroll@loops:	; 2 bytes @ 0x28
   925  0048                     	ds	2
   926                           	global	??_scroll
   927  004A                     ??_scroll:	; 0 bytes @ 0x2A
   928  004A                     	ds	3
   929                           	global	scroll@st
   930  004D                     scroll@st:	; 2 bytes @ 0x2D
   931  004D                     	ds	2
   932                           	global	scroll@en
   933  004F                     scroll@en:	; 2 bytes @ 0x2F
   934  004F                     	ds	2
   935                           	global	scroll@startat
   936  0051                     scroll@startat:	; 2 bytes @ 0x31
   937  0051                     	ds	2
   938                           	global	scroll@endat
   939  0053                     scroll@endat:	; 2 bytes @ 0x33
   940  0053                     	ds	2
   941                           	global	scroll@loopn
   942  0055                     scroll@loopn:	; 2 bytes @ 0x35
   943  0055                     	ds	2
   944                           	global	scroll@str
   945  0057                     scroll@str:	; 1 bytes @ 0x37
   946  0057                     	ds	1
   947                           	global	scroll@len
   948  0058                     scroll@len:	; 2 bytes @ 0x38
   949  0058                     	ds	2
   950                           	global	scroll@i
   951  005A                     scroll@i:	; 2 bytes @ 0x3A
   952  005A                     	ds	2
   953                           	global	??_getlogicseq
   954  005C                     ??_getlogicseq:	; 0 bytes @ 0x3C
   955  005C                     	ds	4
   956 ;;Data sizes: Strings 216, constant 2, data 30, bss 22, persistent 0 stack 0
   957 ;;Auto spaces:   Size  Autos    Used
   958 ;; COMMON          14     14      14
   959 ;; BANK0           80     64      80
   960 ;; BANK1           80     64      79
   961 ;; BANK3           96      0      21
   962 ;; BANK2           96      0       0
   963                           
   964 ;;
   965 ;; Pointer list with targets:
   966                           
   967 ;; ?___awmod	int  size(1) Largest target is 0
   968 ;;
   969 ;; ?___awdiv	int  size(1) Largest target is 0
   970 ;;
   971 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   972 ;;
   973 ;; ?_strcat	PTR unsigned char  size(1) Largest target is 5
   974 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
   975 ;;
   976 ;; ?_itoaa	int  size(1) Largest target is 0
   977 ;;
   978 ;; ?_strcmp	int  size(1) Largest target is 0
   979 ;;
   980 ;; ?_strcpy	PTR unsigned char  size(1) Largest target is 32
   981 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
   982 ;;		 -> lo(BANK0[5]), plo(BANK1[5]), 
   983 ;;
   984 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 20
   985 ;;		 -> STR_14(CODE[1]), STR_13(CODE[20]), STR_11(CODE[1]), STR_10(CODE[20]), 
   986 ;;		 -> STR_8(CODE[1]), STR_7(CODE[20]), STR_2(CODE[4]), lo(BANK0[5]), 
   987 ;;
   988 ;; strcpy@to	PTR unsigned char  size(1) Largest target is 32
   989 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
   990 ;;		 -> lo(BANK0[5]), plo(BANK1[5]), 
   991 ;;
   992 ;; strcpy@cp	PTR unsigned char  size(1) Largest target is 32
   993 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
   994 ;;		 -> lo(BANK0[5]), plo(BANK1[5]), 
   995 ;;
   996 ;; strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
   997 ;;		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[5]), STR_28(CODE[5]), 
   998 ;;		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), 
   999 ;;		 -> STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 
  1000 ;;		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
  1001 ;;		 -> STR_3(CODE[4]), plo(BANK1[5]), 
  1002 ;;
  1003 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
  1004 ;;		 -> lo(BANK0[5]), 
  1005 ;;
  1006 ;; strcat@from	PTR const unsigned char  size(1) Largest target is 16
  1007 ;;		 -> getlogicseq@snum(BANK1[16]), 
  1008 ;;
  1009 ;; strcat@to	PTR unsigned char  size(1) Largest target is 5
  1010 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
  1011 ;;
  1012 ;; strcat@cp	PTR unsigned char  size(1) Largest target is 5
  1013 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
  1014 ;;
  1015 ;; scroll@str	PTR unsigned char  size(1) Largest target is 38
  1016 ;;		 -> STR_4(CODE[38]), 
  1017 ;;
  1018 ;; write@str	PTR unsigned char  size(2) Largest target is 38
  1019 ;;		 -> STR_15(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), getlogicseq@str(BANK1[32]), 
  1020 ;;		 -> STR_6(CODE[8]), STR_5(CODE[15]), STR_4(CODE[38]), logic_d3(BANK1[5]), 
  1021 ;;		 -> logic_d2(BANK1[5]), logic_d1(BANK0[5]), lo(BANK0[5]), STR_1(CODE[11]), 
  1022 ;;
  1023 ;; itoaa@ptr	PTR unsigned char  size(1) Largest target is 16
  1024 ;;		 -> getlogicseq@snum(BANK1[16]), 
  1025 ;;
  1026 ;; sp__strcat	PTR unsigned char  size(1) Largest target is 5
  1027 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
  1028 ;;
  1029 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 32
  1030 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
  1031 ;;		 -> lo(BANK0[5]), plo(BANK1[5]), 
  1032 ;;
  1033 ;; check@logic	PTR unsigned char  size(1) Largest target is 5
  1034 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
  1035 ;;
  1036 ;; check@input	PTR unsigned char  size(1) Largest target is 5
  1037 ;;		 -> lo(BANK0[5]), 
  1038 ;;
  1039                           
  1040                           
  1041 ;;
  1042 ;; Critical Paths under _main in COMMON
  1043 ;;
  1044 ;;   _getlogicseq->_write
  1045 ;;   _startswitch->_write
  1046 ;;   _scroll->_write
  1047 ;;   _init_fun->_write
  1048 ;;   _write->_cmd
  1049 ;;   _write->_dat
  1050 ;;   _clearlcd->_cmd
  1051 ;;   _scan->_actrow
  1052 ;;   _initlcd->_cmd
  1053 ;;   _actrow->_delay
  1054 ;;   _dat->_setLCD
  1055 ;;   _cmd->_setLCD
  1056 ;;   _itoaa->___awdiv
  1057 ;;
  1058 ;; Critical Paths under _main in BANK0
  1059 ;;
  1060 ;;   _main->_getlogicseq
  1061 ;;   _getlogicseq->_scroll
  1062 ;;   _startswitch->_write
  1063 ;;   _scroll->_write
  1064 ;;   _init_fun->_write
  1065 ;;   _dat->_setLCD
  1066 ;;   _cmd->_setLCD
  1067 ;;
  1068 ;; Critical Paths under _main in BANK1
  1069 ;;
  1070 ;;   _main->_getlogicseq
  1071 ;;
  1072 ;; Critical Paths under _main in BANK3
  1073 ;;
  1074 ;;   None.
  1075 ;;
  1076 ;; Critical Paths under _main in BANK2
  1077 ;;
  1078 ;;   None.
  1079                           
  1080 ;;
  1081 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1082 ;;
  1083                           
  1084 ;;
  1085 ;;Call Graph Tables:
  1086 ;;
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (0) _main                                                 0     0      0    8561
  1091 ;;                            _initlcd
  1092 ;;                         _initkeypad
  1093 ;;                        _getlogicseq
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (1) _getlogicseq                                         68    68      0    8197
  1096 ;;                                             60 BANK0      4     4      0
  1097 ;;                                              0 BANK1     64    64      0
  1098 ;;                             _scroll
  1099 ;;                              _write
  1100 ;;                               _scan
  1101 ;;                        _startswitch
  1102 ;;                             _strcpy
  1103 ;;                              _itoaa
  1104 ;;                             _strcat
  1105 ;; ---------------------------------------------------------------------------------
  1106 ;; (2) _startswitch                                          1     1      0    2749
  1107 ;;                                             40 BANK0      1     1      0
  1108 ;;                           _init_fun
  1109 ;;                             _strcpy
  1110 ;;                             _strcmp
  1111 ;;                              _write
  1112 ;;                              _check
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (2) _scroll                                              52    50      2    1820
  1115 ;;                                             40 BANK0     20    18      2
  1116 ;;                              _write
  1117 ;;                              _delay
  1118 ;;                                _cmd
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; (3) _init_fun                                             0     0      0    1226
  1121 ;;                              _write
  1122 ;; ---------------------------------------------------------------------------------
  1123 ;; (3) _write                                               10     4      6    1226
  1124 ;;                                             10 COMMON     4     4      0
  1125 ;;                                             34 BANK0      6     0      6
  1126 ;;                           _clearlcd
  1127 ;;                                _cmd
  1128 ;;                                _dat
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (4) _clearlcd                                             0     0      0     364
  1131 ;;                                _cmd
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (2) _scan                                                 2     0      2     110
  1134 ;;                                              4 COMMON     2     0      2
  1135 ;;                             _actrow
  1136 ;; ---------------------------------------------------------------------------------
  1137 ;; (1) _initlcd                                              0     0      0     364
  1138 ;;                                _cmd
  1139 ;; ---------------------------------------------------------------------------------
  1140 ;; (3) _actrow                                               2     0      2     110
  1141 ;;                                              2 COMMON     2     0      2
  1142 ;;                           _resetout
  1143 ;;                              _delay
  1144 ;; ---------------------------------------------------------------------------------
  1145 ;; (4) _dat                                                  2     0      2     364
  1146 ;;                                              8 COMMON     2     0      2
  1147 ;;                             _setLCD
  1148 ;;                              _delay
  1149 ;; ---------------------------------------------------------------------------------
  1150 ;; (4) _cmd                                                  2     0      2     364
  1151 ;;                                              8 COMMON     2     0      2
  1152 ;;                             _setLCD
  1153 ;;                              _delay
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (2) _itoaa                                                8     5      3    1078
  1156 ;;                                              9 COMMON     4     1      3
  1157 ;;                                              0 BANK0      4     4      0
  1158 ;;                             ___wmul
  1159 ;;                            ___awdiv
  1160 ;;                            ___awmod
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; (3) ___awmod                                              7     3      4     296
  1163 ;;                                              0 COMMON     7     3      4
  1164 ;; ---------------------------------------------------------------------------------
  1165 ;; (3) ___awdiv                                              9     5      4     300
  1166 ;;                                              0 COMMON     9     5      4
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (3) ___wmul                                               6     2      4      92
  1169 ;;                                              0 COMMON     6     2      4
  1170 ;; ---------------------------------------------------------------------------------
  1171 ;; (4) _resetout                                             0     0      0       0
  1172 ;; ---------------------------------------------------------------------------------
  1173 ;; (6) _setLCD                                              42    40      2     320
  1174 ;;                                              0 COMMON     8     6      2
  1175 ;;                                              0 BANK0     34    34      0
  1176 ;; ---------------------------------------------------------------------------------
  1177 ;; (5) _delay                                                2     0      2      22
  1178 ;;                                              0 COMMON     2     0      2
  1179 ;; ---------------------------------------------------------------------------------
  1180 ;; (2) _strcat                                               4     3      1      96
  1181 ;;                                              0 COMMON     4     3      1
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (4) _strcmp                                               8     6      2      89
  1184 ;;                                              0 COMMON     8     6      2
  1185 ;; ---------------------------------------------------------------------------------
  1186 ;; (3) _strcpy                                               7     5      2      73
  1187 ;;                                              0 COMMON     7     5      2
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (3) _check                                                6     4      2     135
  1190 ;;                                              0 COMMON     6     4      2
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (1) _initkeypad                                           0     0      0       0
  1193 ;; ---------------------------------------------------------------------------------
  1194 ;; Estimated maximum stack depth 6
  1195 ;; ---------------------------------------------------------------------------------
  1196                           
  1197 ;; Call Graph Graphs:
  1198                           
  1199 ;; _main (ROOT)
  1200 ;;   _initlcd
  1201 ;;     _cmd
  1202 ;;       _setLCD
  1203 ;;       _delay
  1204 ;;   _initkeypad
  1205 ;;   _getlogicseq
  1206 ;;     _scroll
  1207 ;;       _write
  1208 ;;         _clearlcd
  1209 ;;           _cmd
  1210 ;;             _setLCD
  1211 ;;             _delay
  1212 ;;         _cmd
  1213 ;;           _setLCD
  1214 ;;           _delay
  1215 ;;         _dat
  1216 ;;           _setLCD
  1217 ;;           _delay
  1218 ;;       _delay
  1219 ;;       _cmd
  1220 ;;         _setLCD
  1221 ;;         _delay
  1222 ;;     _write
  1223 ;;       _clearlcd
  1224 ;;         _cmd
  1225 ;;           _setLCD
  1226 ;;           _delay
  1227 ;;       _cmd
  1228 ;;         _setLCD
  1229 ;;         _delay
  1230 ;;       _dat
  1231 ;;         _setLCD
  1232 ;;         _delay
  1233 ;;     _scan
  1234 ;;       _actrow
  1235 ;;         _resetout
  1236 ;;         _delay
  1237 ;;     _startswitch
  1238 ;;       _init_fun
  1239 ;;         _write
  1240 ;;           _clearlcd
  1241 ;;             _cmd
  1242 ;;               _setLCD
  1243 ;;               _delay
  1244 ;;           _cmd
  1245 ;;             _setLCD
  1246 ;;             _delay
  1247 ;;           _dat
  1248 ;;             _setLCD
  1249 ;;             _delay
  1250 ;;       _strcpy
  1251 ;;       _strcmp
  1252 ;;       _write
  1253 ;;         _clearlcd
  1254 ;;           _cmd
  1255 ;;             _setLCD
  1256 ;;             _delay
  1257 ;;         _cmd
  1258 ;;           _setLCD
  1259 ;;           _delay
  1260 ;;         _dat
  1261 ;;           _setLCD
  1262 ;;           _delay
  1263 ;;       _check
  1264 ;;     _strcpy
  1265 ;;     _itoaa
  1266 ;;       ___wmul
  1267 ;;       ___awdiv
  1268 ;;       ___awmod
  1269 ;;     _strcat
  1270 ;;
  1271                           
  1272 ;; Address spaces:
  1273                           
  1274 ;;Name               Size   Autos  Total    Cost      Usage
  1275 ;;BANK3               60      0      15       9       21.9%
  1276 ;;BITBANK3            60      0       0       8        0.0%
  1277 ;;SFR3                 0      0       0       4        0.0%
  1278 ;;BITSFR3              0      0       0       4        0.0%
  1279 ;;BANK2               60      0       0      11        0.0%
  1280 ;;BITBANK2            60      0       0      10        0.0%
  1281 ;;SFR2                 0      0       0       5        0.0%
  1282 ;;BITSFR2              0      0       0       5        0.0%
  1283 ;;SFR1                 0      0       0       2        0.0%
  1284 ;;BITSFR1              0      0       0       2        0.0%
  1285 ;;BANK1               50     40      4F       7       98.8%
  1286 ;;BITBANK1            50      0       0       6        0.0%
  1287 ;;CODE                 0      0       0       0        0.0%
  1288 ;;DATA                 0      0      CA      12        0.0%
  1289 ;;ABS                  0      0      C2       3        0.0%
  1290 ;;NULL                 0      0       0       0        0.0%
  1291 ;;STACK                0      0       8       2        0.0%
  1292 ;;BANK0               50     40      50       5      100.0%
  1293 ;;BITBANK0            50      0       0       4        0.0%
  1294 ;;SFR0                 0      0       0       1        0.0%
  1295 ;;BITSFR0              0      0       0       1        0.0%
  1296 ;;COMMON               E      E       E       1      100.0%
  1297 ;;BITCOMMON            E      0       0       0        0.0%
  1298 ;;EEDATA             100      0       0       0        0.0%
  1299                           
  1300                           	global	_main
  1301                           psect	maintext,global,class=CODE,delta=2
  1302                           global __pmaintext
  1303  0B5C                     __pmaintext:
  1304                           
  1305 ;; *************** function _main *****************
  1306 ;; Defined at:
  1307 ;;		line 82 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  2  684[COMMON] int 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 17F/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels required when called:    8
  1327 ;; This function calls:
  1328 ;;		_initlcd
  1329 ;;		_initkeypad
  1330 ;;		_getlogicseq
  1331 ;; This function is called by:
  1332 ;;		Startup code after reset
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           psect	maintext
  1336                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1337                           	line	82
  1338                           	global	__size_of_main
  1339  0015                     	__size_of_main	equ	__end_of_main-_main
  1340                           	
  1341  0B5C                     _main:	
  1342                           	opt	stack 0
  1343                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1344                           	line	87
  1345                           	
  1346  0B5C                     l3532:	
  1347                           ;prev11.c: 87: initlcd();
  1348  0B5C  120A  158A  245D   	fcall	_initlcd
              120A  158A         
  1349                           	line	88
  1350                           	
  1351  0B61                     l3534:	
  1352                           ;prev11.c: 88: initkeypad();
  1353  0B61  120A  158A  2304   	fcall	_initkeypad
              120A  158A         
  1354  0B66  2B67               	goto	l3536
  1355                           	line	92
  1356                           ;prev11.c: 92: while(1){
  1357                           	
  1358  0B67                     l685:	
  1359                           	line	94
  1360                           	
  1361  0B67                     l3536:	
  1362                           ;prev11.c: 94: getlogicseq();
  1363  0B67  120A  118A  2478   	fcall	_getlogicseq
              120A  158A         
  1364  0B6C  2B67               	goto	l3536
  1365                           	line	95
  1366                           	
  1367  0B6D                     l686:	
  1368                           	line	92
  1369  0B6D  2B67               	goto	l3536
  1370                           	
  1371  0B6E                     l687:	
  1372                           	line	101
  1373                           	
  1374  0B6E                     l688:	
  1375                           	global	start
  1376  0B6E  120A  118A  2800   	ljmp	start
  1377                           	opt stack 0
  1378                           GLOBAL	__end_of_main
  1379  0B71                     	__end_of_main:
  1380 ;; =============== function _main ends ============
  1381                           
  1382                           	signat	_main,90
  1383                           	global	_getlogicseq
  1384                           psect	text532,local,class=CODE,delta=2
  1385                           global __ptext532
  1386  0478                     __ptext532:
  1387                           
  1388 ;; *************** function _getlogicseq *****************
  1389 ;; Defined at:
  1390 ;;		line 194 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  str            32    0[BANK1 ] unsigned char [32]
  1395 ;;  snum           16   34[BANK1 ] unsigned char [16]
  1396 ;;  num             2   62[BANK1 ] int 
  1397 ;;  ccount          2   60[BANK1 ] int 
  1398 ;;  wf              2   58[BANK1 ] int 
  1399 ;;  nf              2   56[BANK1 ] int 
  1400 ;;  f3              2   54[BANK1 ] int 
  1401 ;;  f2              2   52[BANK1 ] int 
  1402 ;;  f1              2   50[BANK1 ] int 
  1403 ;;  bf              2   32[BANK1 ] int 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;		None               void
  1406 ;; Registers used:
  1407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         0       0       0       0       0
  1414 ;;      Locals:         0       0      64       0       0
  1415 ;;      Temps:          0       4       0       0       0
  1416 ;;      Totals:         0       4      64       0       0
  1417 ;;Total ram usage:       68 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    7
  1420 ;; This function calls:
  1421 ;;		_scroll
  1422 ;;		_write
  1423 ;;		_scan
  1424 ;;		_startswitch
  1425 ;;		_strcpy
  1426 ;;		_itoaa
  1427 ;;		_strcat
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           psect	text532
  1433                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1434                           	line	194
  1435                           	global	__size_of_getlogicseq
  1436  0388                     	__size_of_getlogicseq	equ	__end_of_getlogicseq-_getlogicseq
  1437                           	
  1438  0478                     _getlogicseq:	
  1439                           	opt	stack 0
  1440                           ; Regs used in _getlogicseq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1441                           	line	197
  1442                           	
  1443  0478                     l3344:	
  1444                           ;prev11.c: 197: scroll("WELCOME ! TO PROGRAMABLE HOME AUTMATN",0);
  1445  0478  3000               	movlw	low(0)
  1446  0479  1283               	bcf	status, 5	;RP0=0, select bank0
  1447  047A  1303               	bcf	status, 6	;RP1=0, select bank0
  1448  047B  00C8               	movwf	(?_scroll)
  1449  047C  3000               	movlw	high(0)
  1450  047D  00C9               	movwf	((?_scroll))+1
  1451  047E  3003               	movlw	((STR_4-__stringbase))&0ffh
  1452  047F  120A  158A  2655   	fcall	_scroll
              120A  118A         
  1453                           	line	202
  1454                           	
  1455  0484                     l3346:	
  1456                           ;prev11.c: 201: int num ;
  1457                           ;prev11.c: 202: char snum[16]="";
  1458  0484  30C2               	movlw	(getlogicseq@snum)&0ffh
  1459  0485  0084               	movwf	fsr0
  1460  0486  3090               	movlw	low(getlogicseq@F1264)
  1461  0487  1283               	bcf	status, 5	;RP0=0, select bank0
  1462  0488  1303               	bcf	status, 6	;RP1=0, select bank0
  1463  0489  00DC               	movwf	(??_getlogicseq+0)+0
  1464  048A  0804               	movf	fsr0,w
  1465  048B  00DD               	movwf	((??_getlogicseq+0)+0+1)
  1466  048C  3010               	movlw	16
  1467  048D  00DE               	movwf	((??_getlogicseq+0)+0+2)
  1468  048E                     u4460:
  1469  048E  085C               	movf	(??_getlogicseq+0)+0,w
  1470  048F  0084               	movwf	fsr0
  1471  0490  1783               	bsf	status, 7	;select IRP bank3
  1472                           	
  1473  0491  0800               	movf	indf,w
  1474  0492  00DF               	movwf	((??_getlogicseq+0)+0+3)
  1475  0493  0ADC               	incf	(??_getlogicseq+0)+0,f
  1476  0494  085D               	movf	((??_getlogicseq+0)+0+1),w
  1477  0495  0084               	movwf	fsr0
  1478  0496  1383               	bcf	status, 7	;select IRP bank1
  1479                           	
  1480  0497  085F               	movf	((??_getlogicseq+0)+0+3),w
  1481  0498  0080               	movwf	indf
  1482  0499  0ADD               	incf	((??_getlogicseq+0)+0+1),f
  1483  049A  0BDE               	decfsz	((??_getlogicseq+0)+0+2),f
  1484  049B  2C8E               	goto	u4460
  1485                           	line	203
  1486                           	
  1487  049C                     l3348:	
  1488                           ;prev11.c: 203: int wf=0;
  1489  049C  1683               	bsf	status, 5	;RP0=1, select bank1
  1490  049D  1303               	bcf	status, 6	;RP1=0, select bank1
  1491  049E  01DA               	clrf	(getlogicseq@wf)^080h
  1492  049F  01DB               	clrf	(getlogicseq@wf+1)^080h
  1493                           	line	204
  1494                           	
  1495  04A0                     l3350:	
  1496                           ;prev11.c: 204: int nf=0;
  1497  04A0  01D8               	clrf	(getlogicseq@nf)^080h
  1498  04A1  01D9               	clrf	(getlogicseq@nf+1)^080h
  1499                           	line	205
  1500                           	
  1501  04A2                     l3352:	
  1502                           ;prev11.c: 205: int bf=0;
  1503  04A2  01C0               	clrf	(getlogicseq@bf)^080h
  1504  04A3  01C1               	clrf	(getlogicseq@bf+1)^080h
  1505                           	line	206
  1506                           	
  1507  04A4                     l3354:	
  1508                           ;prev11.c: 206: int ccount=0;
  1509  04A4  01DC               	clrf	(getlogicseq@ccount)^080h
  1510  04A5  01DD               	clrf	(getlogicseq@ccount+1)^080h
  1511                           	line	210
  1512                           	
  1513  04A6                     l3356:	
  1514                           ;prev11.c: 207: char str[32];
  1515                           ;prev11.c: 210: write("1.SWT  2.REPRG",1,1);
  1516  04A6  3065               	movlw	low((STR_5-__stringbase))
  1517  04A7  1283               	bcf	status, 5	;RP0=0, select bank0
  1518  04A8  1303               	bcf	status, 6	;RP1=0, select bank0
  1519  04A9  00C2               	movwf	(?_write)
  1520  04AA  3080               	movlw	80h
  1521  04AB  00C3               	movwf	(?_write+1)
  1522  04AC  3001               	movlw	low(01h)
  1523  04AD  00C4               	movwf	0+(?_write)+02h
  1524  04AE  3000               	movlw	high(01h)
  1525  04AF  00C5               	movwf	(0+(?_write)+02h)+1
  1526  04B0  3001               	movlw	low(01h)
  1527  04B1  00C6               	movwf	0+(?_write)+04h
  1528  04B2  3000               	movlw	high(01h)
  1529  04B3  00C7               	movwf	(0+(?_write)+04h)+1
  1530  04B4  120A  158A  258B   	fcall	_write
              120A  118A         
  1531                           	line	211
  1532                           	
  1533  04B9                     l3358:	
  1534                           ;prev11.c: 211: write("3.RESET",2,0);
  1535  04B9  307F               	movlw	low((STR_6-__stringbase))
  1536  04BA  1283               	bcf	status, 5	;RP0=0, select bank0
  1537  04BB  1303               	bcf	status, 6	;RP1=0, select bank0
  1538  04BC  00C2               	movwf	(?_write)
  1539  04BD  3080               	movlw	80h
  1540  04BE  00C3               	movwf	(?_write+1)
  1541  04BF  3002               	movlw	low(02h)
  1542  04C0  00C4               	movwf	0+(?_write)+02h
  1543  04C1  3000               	movlw	high(02h)
  1544  04C2  00C5               	movwf	(0+(?_write)+02h)+1
  1545  04C3  3000               	movlw	low(0)
  1546  04C4  00C6               	movwf	0+(?_write)+04h
  1547  04C5  3000               	movlw	high(0)
  1548  04C6  00C7               	movwf	(0+(?_write)+04h)+1
  1549  04C7  120A  158A  258B   	fcall	_write
              120A  118A         
  1550                           	line	212
  1551                           	
  1552  04CC                     l3360:	
  1553                           ;prev11.c: 212: int f1=0, f2=0, f3=0;
  1554  04CC  1683               	bsf	status, 5	;RP0=1, select bank1
  1555  04CD  1303               	bcf	status, 6	;RP1=0, select bank1
  1556  04CE  01D2               	clrf	(getlogicseq@f1)^080h
  1557  04CF  01D3               	clrf	(getlogicseq@f1+1)^080h
  1558                           	
  1559  04D0                     l3362:	
  1560  04D0  01D4               	clrf	(getlogicseq@f2)^080h
  1561  04D1  01D5               	clrf	(getlogicseq@f2+1)^080h
  1562                           	
  1563  04D2                     l3364:	
  1564  04D2  01D6               	clrf	(getlogicseq@f3)^080h
  1565  04D3  01D7               	clrf	(getlogicseq@f3+1)^080h
  1566  04D4  2CD5               	goto	l3366
  1567                           	line	213
  1568                           ;prev11.c: 213: while(1)
  1569                           	
  1570  04D5                     l716:	
  1571                           	line	216
  1572                           	
  1573  04D5                     l3366:	
  1574                           ;prev11.c: 214: {
  1575                           ;prev11.c: 216: num=scan();
  1576  04D5  120A  118A  2161   	fcall	_scan
              120A  118A         
  1577  04DA  0875               	movf	(1+(?_scan)),w
  1578  04DB  1683               	bsf	status, 5	;RP0=1, select bank1
  1579  04DC  1303               	bcf	status, 6	;RP1=0, select bank1
  1580  04DD  01DF               	clrf	(getlogicseq@num+1)^080h
  1581  04DE  07DF               	addwf	(getlogicseq@num+1)^080h
  1582  04DF  0874               	movf	(0+(?_scan)),w
  1583  04E0  01DE               	clrf	(getlogicseq@num)^080h
  1584  04E1  07DE               	addwf	(getlogicseq@num)^080h
  1585                           
  1586                           	line	217
  1587                           	
  1588  04E2                     l3368:	
  1589                           ;prev11.c: 217: if(num==1)
  1590  04E2  3001               	movlw	01h
  1591  04E3  065E               	xorwf	(getlogicseq@num)^080h,w
  1592  04E4  045F               	iorwf	(getlogicseq@num+1)^080h,w
  1593  04E5  1D03               	skipz
  1594  04E6  2CE8               	goto	u4471
  1595  04E7  2CE9               	goto	u4470
  1596  04E8                     u4471:
  1597  04E8  2CF1               	goto	l717
  1598  04E9                     u4470:
  1599                           	line	219
  1600                           	
  1601  04E9                     l3370:	
  1602                           ;prev11.c: 218: {
  1603                           ;prev11.c: 219: f1=1;
  1604  04E9  3001               	movlw	low(01h)
  1605  04EA  00D2               	movwf	(getlogicseq@f1)^080h
  1606  04EB  3000               	movlw	high(01h)
  1607  04EC  00D3               	movwf	((getlogicseq@f1)^080h)+1
  1608                           	line	220
  1609                           	
  1610  04ED                     l3372:	
  1611                           ;prev11.c: 220: f2=0;
  1612  04ED  01D4               	clrf	(getlogicseq@f2)^080h
  1613  04EE  01D5               	clrf	(getlogicseq@f2+1)^080h
  1614                           	line	221
  1615                           	
  1616  04EF                     l3374:	
  1617                           ;prev11.c: 221: f3=0;
  1618  04EF  01D6               	clrf	(getlogicseq@f3)^080h
  1619  04F0  01D7               	clrf	(getlogicseq@f3+1)^080h
  1620                           	line	222
  1621                           	
  1622  04F1                     l717:	
  1623                           	line	223
  1624                           ;prev11.c: 222: }
  1625                           ;prev11.c: 223: if(num==2)
  1626  04F1  3002               	movlw	02h
  1627  04F2  065E               	xorwf	(getlogicseq@num)^080h,w
  1628  04F3  045F               	iorwf	(getlogicseq@num+1)^080h,w
  1629  04F4  1D03               	skipz
  1630  04F5  2CF7               	goto	u4481
  1631  04F6  2CF8               	goto	u4480
  1632  04F7                     u4481:
  1633  04F7  2D00               	goto	l718
  1634  04F8                     u4480:
  1635                           	line	225
  1636                           	
  1637  04F8                     l3376:	
  1638                           ;prev11.c: 224: {
  1639                           ;prev11.c: 225: f1=0;
  1640  04F8  01D2               	clrf	(getlogicseq@f1)^080h
  1641  04F9  01D3               	clrf	(getlogicseq@f1+1)^080h
  1642                           	line	226
  1643                           	
  1644  04FA                     l3378:	
  1645                           ;prev11.c: 226: f2=1;
  1646  04FA  3001               	movlw	low(01h)
  1647  04FB  00D4               	movwf	(getlogicseq@f2)^080h
  1648  04FC  3000               	movlw	high(01h)
  1649  04FD  00D5               	movwf	((getlogicseq@f2)^080h)+1
  1650                           	line	227
  1651                           	
  1652  04FE                     l3380:	
  1653                           ;prev11.c: 227: f3=0;
  1654  04FE  01D6               	clrf	(getlogicseq@f3)^080h
  1655  04FF  01D7               	clrf	(getlogicseq@f3+1)^080h
  1656                           	line	228
  1657                           	
  1658  0500                     l718:	
  1659                           	line	229
  1660                           ;prev11.c: 228: }
  1661                           ;prev11.c: 229: if(num==3)
  1662  0500  3003               	movlw	03h
  1663  0501  065E               	xorwf	(getlogicseq@num)^080h,w
  1664  0502  045F               	iorwf	(getlogicseq@num+1)^080h,w
  1665  0503  1D03               	skipz
  1666  0504  2D06               	goto	u4491
  1667  0505  2D07               	goto	u4490
  1668  0506                     u4491:
  1669  0506  2D10               	goto	l3386
  1670  0507                     u4490:
  1671                           	line	231
  1672                           	
  1673  0507                     l3382:	
  1674                           ;prev11.c: 230: {
  1675                           ;prev11.c: 231: f1=0;
  1676  0507  01D2               	clrf	(getlogicseq@f1)^080h
  1677  0508  01D3               	clrf	(getlogicseq@f1+1)^080h
  1678                           	line	232
  1679                           ;prev11.c: 232: f2=0;
  1680  0509  01D4               	clrf	(getlogicseq@f2)^080h
  1681  050A  01D5               	clrf	(getlogicseq@f2+1)^080h
  1682                           	line	233
  1683                           	
  1684  050B                     l3384:	
  1685                           ;prev11.c: 233: f3=1;
  1686  050B  3001               	movlw	low(01h)
  1687  050C  00D6               	movwf	(getlogicseq@f3)^080h
  1688  050D  3000               	movlw	high(01h)
  1689  050E  00D7               	movwf	((getlogicseq@f3)^080h)+1
  1690  050F  2D10               	goto	l3386
  1691                           	line	234
  1692                           	
  1693  0510                     l719:	
  1694                           	line	236
  1695                           	
  1696  0510                     l3386:	
  1697                           ;prev11.c: 234: }
  1698                           ;prev11.c: 236: if(f1)
  1699  0510  0853               	movf	(getlogicseq@f1+1)^080h,w
  1700  0511  0452               	iorwf	(getlogicseq@f1)^080h,w
  1701  0512  1903               	skipnz
  1702  0513  2D15               	goto	u4501
  1703  0514  2D16               	goto	u4500
  1704  0515                     u4501:
  1705  0515  2D1C               	goto	l3390
  1706  0516                     u4500:
  1707                           	line	237
  1708                           	
  1709  0516                     l3388:	
  1710                           ;prev11.c: 237: startswitch();
  1711  0516  120A  158A  2723   	fcall	_startswitch
              120A  118A         
  1712  051B  2CD5               	goto	l3366
  1713                           	line	238
  1714                           	
  1715  051C                     l720:	
  1716                           	
  1717  051C                     l3390:	
  1718                           ;prev11.c: 238: else if(f2)
  1719  051C  1683               	bsf	status, 5	;RP0=1, select bank1
  1720  051D  1303               	bcf	status, 6	;RP1=0, select bank1
  1721  051E  0855               	movf	(getlogicseq@f2+1)^080h,w
  1722  051F  0454               	iorwf	(getlogicseq@f2)^080h,w
  1723  0520  1903               	skipnz
  1724  0521  2D23               	goto	u4511
  1725  0522  2D24               	goto	u4510
  1726  0523                     u4511:
  1727  0523  2D27               	goto	l3396
  1728  0524                     u4510:
  1729  0524  2D34               	goto	l3400
  1730                           	line	239
  1731                           	
  1732  0525                     l3392:	
  1733                           ;prev11.c: 239: goto START_SEQ;
  1734  0525  2D34               	goto	l3400
  1735                           	
  1736  0526                     l3394:	
  1737  0526  2CD5               	goto	l3366
  1738                           	line	240
  1739                           	
  1740  0527                     l722:	
  1741                           	
  1742  0527                     l3396:	
  1743                           ;prev11.c: 240: else if(f3)
  1744  0527  0857               	movf	(getlogicseq@f3+1)^080h,w
  1745  0528  0456               	iorwf	(getlogicseq@f3)^080h,w
  1746  0529  1903               	skipnz
  1747  052A  2D2C               	goto	u4521
  1748  052B  2D2D               	goto	u4520
  1749  052C                     u4521:
  1750  052C  2CD5               	goto	l3366
  1751  052D                     u4520:
  1752  052D  2FFF               	goto	l726
  1753                           	line	241
  1754                           	
  1755  052E                     l3398:	
  1756                           ;prev11.c: 241: return;
  1757  052E  2FFF               	goto	l726
  1758                           	
  1759  052F                     l725:	
  1760  052F  2CD5               	goto	l3366
  1761                           	line	243
  1762                           	
  1763  0530                     l724:	
  1764  0530  2CD5               	goto	l3366
  1765                           	
  1766  0531                     l721:	
  1767  0531  2CD5               	goto	l3366
  1768                           	
  1769  0532                     l727:	
  1770                           	line	213
  1771  0532  2CD5               	goto	l3366
  1772                           	
  1773  0533                     l728:	
  1774  0533  2D34               	goto	l3400
  1775                           	line	246
  1776                           ;prev11.c: 243: }
  1777                           ;prev11.c: 246: START_SEQ:
  1778                           	
  1779  0534                     l723:	
  1780                           	line	248
  1781                           	
  1782  0534                     l3400:	
  1783                           ;prev11.c: 248: wf=0;ccount=0;
  1784  0534  01DA               	clrf	(getlogicseq@wf)^080h
  1785  0535  01DB               	clrf	(getlogicseq@wf+1)^080h
  1786  0536  01DC               	clrf	(getlogicseq@ccount)^080h
  1787  0537  01DD               	clrf	(getlogicseq@ccount+1)^080h
  1788                           	line	249
  1789                           	
  1790  0538                     l3402:	
  1791                           ;prev11.c: 249: strcpy(str,"Enter Logic DEV1:  ");
  1792  0538  3029               	movlw	low((STR_7-__stringbase))
  1793  0539  00F0               	movwf	(?_strcpy)
  1794  053A  3080               	movlw	80h
  1795  053B  00F1               	movwf	(?_strcpy+1)
  1796  053C  30A0               	movlw	(getlogicseq@str)&0ffh
  1797  053D  120A  158A  23E1   	fcall	_strcpy
              120A  118A         
  1798                           	line	250
  1799                           	
  1800  0542                     l3404:	
  1801                           ;prev11.c: 250: write(str,1,1);
  1802  0542  30A0               	movlw	(getlogicseq@str&0ffh)
  1803  0543  1283               	bcf	status, 5	;RP0=0, select bank0
  1804  0544  1303               	bcf	status, 6	;RP1=0, select bank0
  1805  0545  00C2               	movwf	(?_write)
  1806  0546  3000               	movlw	(0x1/2)
  1807  0547  00C3               	movwf	(?_write+1)
  1808  0548  3001               	movlw	low(01h)
  1809  0549  00C4               	movwf	0+(?_write)+02h
  1810  054A  3000               	movlw	high(01h)
  1811  054B  00C5               	movwf	(0+(?_write)+02h)+1
  1812  054C  3001               	movlw	low(01h)
  1813  054D  00C6               	movwf	0+(?_write)+04h
  1814  054E  3000               	movlw	high(01h)
  1815  054F  00C7               	movwf	(0+(?_write)+04h)+1
  1816  0550  120A  158A  258B   	fcall	_write
              120A  118A         
  1817                           	line	251
  1818                           	
  1819  0555                     l3406:	
  1820                           ;prev11.c: 251: write(logic_d1,2,0);
  1821  0555  3065               	movlw	(_logic_d1&0ffh)
  1822  0556  1283               	bcf	status, 5	;RP0=0, select bank0
  1823  0557  1303               	bcf	status, 6	;RP1=0, select bank0
  1824  0558  00C2               	movwf	(?_write)
  1825  0559  3000               	movlw	(0x0/2)
  1826  055A  00C3               	movwf	(?_write+1)
  1827  055B  3002               	movlw	low(02h)
  1828  055C  00C4               	movwf	0+(?_write)+02h
  1829  055D  3000               	movlw	high(02h)
  1830  055E  00C5               	movwf	(0+(?_write)+02h)+1
  1831  055F  3000               	movlw	low(0)
  1832  0560  00C6               	movwf	0+(?_write)+04h
  1833  0561  3000               	movlw	high(0)
  1834  0562  00C7               	movwf	(0+(?_write)+04h)+1
  1835  0563  120A  158A  258B   	fcall	_write
              120A  118A         
  1836  0568  2D69               	goto	l3408
  1837                           	line	253
  1838                           ;prev11.c: 253: while(1)
  1839                           	
  1840  0569                     l729:	
  1841                           	line	255
  1842                           	
  1843  0569                     l3408:	
  1844                           ;prev11.c: 254: {
  1845                           ;prev11.c: 255: num=scan();
  1846  0569  120A  118A  2161   	fcall	_scan
              120A  118A         
  1847  056E  0875               	movf	(1+(?_scan)),w
  1848  056F  1683               	bsf	status, 5	;RP0=1, select bank1
  1849  0570  1303               	bcf	status, 6	;RP1=0, select bank1
  1850  0571  01DF               	clrf	(getlogicseq@num+1)^080h
  1851  0572  07DF               	addwf	(getlogicseq@num+1)^080h
  1852  0573  0874               	movf	(0+(?_scan)),w
  1853  0574  01DE               	clrf	(getlogicseq@num)^080h
  1854  0575  07DE               	addwf	(getlogicseq@num)^080h
  1855                           
  1856                           	line	256
  1857                           	
  1858  0576                     l3410:	
  1859                           ;prev11.c: 256: if(num==1||num==0){
  1860  0576  3001               	movlw	01h
  1861  0577  065E               	xorwf	(getlogicseq@num)^080h,w
  1862  0578  045F               	iorwf	(getlogicseq@num+1)^080h,w
  1863  0579  1903               	skipnz
  1864  057A  2D7C               	goto	u4531
  1865  057B  2D7D               	goto	u4530
  1866  057C                     u4531:
  1867  057C  2D84               	goto	l3414
  1868  057D                     u4530:
  1869                           	
  1870  057D                     l3412:	
  1871  057D  085F               	movf	((getlogicseq@num+1)^080h),w
  1872  057E  045E               	iorwf	((getlogicseq@num)^080h),w
  1873  057F  1D03               	skipz
  1874  0580  2D82               	goto	u4541
  1875  0581  2D83               	goto	u4540
  1876  0582                     u4541:
  1877  0582  2DED               	goto	l3428
  1878  0583                     u4540:
  1879  0583  2D84               	goto	l3414
  1880                           	
  1881  0584                     l732:	
  1882                           	line	257
  1883                           	
  1884  0584                     l3414:	
  1885                           ;prev11.c: 257: if(wf==0)
  1886  0584  085B               	movf	((getlogicseq@wf+1)^080h),w
  1887  0585  045A               	iorwf	((getlogicseq@wf)^080h),w
  1888  0586  1D03               	skipz
  1889  0587  2D89               	goto	u4551
  1890  0588  2D8A               	goto	u4550
  1891  0589                     u4551:
  1892  0589  2DF0               	goto	l3430
  1893  058A                     u4550:
  1894                           	line	259
  1895                           	
  1896  058A                     l3416:	
  1897                           ;prev11.c: 258: {
  1898                           ;prev11.c: 259: if(ccount==0)
  1899  058A  085D               	movf	((getlogicseq@ccount+1)^080h),w
  1900  058B  045C               	iorwf	((getlogicseq@ccount)^080h),w
  1901  058C  1D03               	skipz
  1902  058D  2D8F               	goto	u4561
  1903  058E  2D90               	goto	u4560
  1904  058F                     u4561:
  1905  058F  2D9A               	goto	l734
  1906  0590                     u4560:
  1907                           	line	260
  1908                           	
  1909  0590                     l3418:	
  1910                           ;prev11.c: 260: strcpy(logic_d1,"");
  1911  0590  303C               	movlw	low((STR_8-__stringbase))
  1912  0591  00F0               	movwf	(?_strcpy)
  1913  0592  3080               	movlw	80h
  1914  0593  00F1               	movwf	(?_strcpy+1)
  1915  0594  3065               	movlw	(_logic_d1)&0ffh
  1916  0595  120A  158A  23E1   	fcall	_strcpy
              120A  118A         
  1917                           	
  1918  059A                     l734:	
  1919                           	line	261
  1920                           ;prev11.c: 261: write("---",2,0);
  1921  059A  30D7               	movlw	low((STR_9-__stringbase))
  1922  059B  1283               	bcf	status, 5	;RP0=0, select bank0
  1923  059C  1303               	bcf	status, 6	;RP1=0, select bank0
  1924  059D  00C2               	movwf	(?_write)
  1925  059E  3080               	movlw	80h
  1926  059F  00C3               	movwf	(?_write+1)
  1927  05A0  3002               	movlw	low(02h)
  1928  05A1  00C4               	movwf	0+(?_write)+02h
  1929  05A2  3000               	movlw	high(02h)
  1930  05A3  00C5               	movwf	(0+(?_write)+02h)+1
  1931  05A4  3000               	movlw	low(0)
  1932  05A5  00C6               	movwf	0+(?_write)+04h
  1933  05A6  3000               	movlw	high(0)
  1934  05A7  00C7               	movwf	(0+(?_write)+04h)+1
  1935  05A8  120A  158A  258B   	fcall	_write
              120A  118A         
  1936                           	line	262
  1937                           ;prev11.c: 262: itoaa(num, snum);
  1938  05AD  1683               	bsf	status, 5	;RP0=1, select bank1
  1939  05AE  1303               	bcf	status, 6	;RP1=0, select bank1
  1940  05AF  085F               	movf	(getlogicseq@num+1)^080h,w
  1941  05B0  01FA               	clrf	(?_itoaa+1)
  1942  05B1  07FA               	addwf	(?_itoaa+1)
  1943  05B2  085E               	movf	(getlogicseq@num)^080h,w
  1944  05B3  01F9               	clrf	(?_itoaa)
  1945  05B4  07F9               	addwf	(?_itoaa)
  1946                           
  1947  05B5  30C2               	movlw	(getlogicseq@snum)&0ffh
  1948  05B6  1283               	bcf	status, 5	;RP0=0, select bank0
  1949  05B7  1303               	bcf	status, 6	;RP1=0, select bank0
  1950  05B8  00DC               	movwf	(??_getlogicseq+0)+0
  1951  05B9  085C               	movf	(??_getlogicseq+0)+0,w
  1952  05BA  00FB               	movwf	0+(?_itoaa)+02h
  1953  05BB  120A  118A  2249   	fcall	_itoaa
              120A  118A         
  1954                           	line	263
  1955                           	
  1956  05C0                     l3420:	
  1957                           ;prev11.c: 263: strcat(logic_d1,snum);
  1958  05C0  30C2               	movlw	(getlogicseq@snum)&0ffh
  1959  05C1  1283               	bcf	status, 5	;RP0=0, select bank0
  1960  05C2  1303               	bcf	status, 6	;RP1=0, select bank0
  1961  05C3  00DC               	movwf	(??_getlogicseq+0)+0
  1962  05C4  085C               	movf	(??_getlogicseq+0)+0,w
  1963  05C5  00F0               	movwf	(?_strcat)
  1964  05C6  3065               	movlw	(_logic_d1)&0ffh
  1965  05C7  120A  158A  240A   	fcall	_strcat
              120A  118A         
  1966                           	line	264
  1967                           	
  1968  05CC                     l3422:	
  1969                           ;prev11.c: 264: write( logic_d1,2,0); ;
  1970  05CC  3065               	movlw	(_logic_d1&0ffh)
  1971  05CD  1283               	bcf	status, 5	;RP0=0, select bank0
  1972  05CE  1303               	bcf	status, 6	;RP1=0, select bank0
  1973  05CF  00C2               	movwf	(?_write)
  1974  05D0  3000               	movlw	(0x0/2)
  1975  05D1  00C3               	movwf	(?_write+1)
  1976  05D2  3002               	movlw	low(02h)
  1977  05D3  00C4               	movwf	0+(?_write)+02h
  1978  05D4  3000               	movlw	high(02h)
  1979  05D5  00C5               	movwf	(0+(?_write)+02h)+1
  1980  05D6  3000               	movlw	low(0)
  1981  05D7  00C6               	movwf	0+(?_write)+04h
  1982  05D8  3000               	movlw	high(0)
  1983  05D9  00C7               	movwf	(0+(?_write)+04h)+1
  1984  05DA  120A  158A  258B   	fcall	_write
              120A  118A         
  1985                           	line	265
  1986                           	
  1987  05DF                     l3424:	
  1988                           ;prev11.c: 265: wf=1;
  1989  05DF  3001               	movlw	low(01h)
  1990  05E0  1683               	bsf	status, 5	;RP0=1, select bank1
  1991  05E1  1303               	bcf	status, 6	;RP1=0, select bank1
  1992  05E2  00DA               	movwf	(getlogicseq@wf)^080h
  1993  05E3  3000               	movlw	high(01h)
  1994  05E4  00DB               	movwf	((getlogicseq@wf)^080h)+1
  1995                           	line	266
  1996                           	
  1997  05E5                     l3426:	
  1998                           ;prev11.c: 266: ccount++;
  1999  05E5  3001               	movlw	low(01h)
  2000  05E6  07DC               	addwf	(getlogicseq@ccount)^080h,f
  2001  05E7  1803               	skipnc
  2002  05E8  0ADD               	incf	(getlogicseq@ccount+1)^080h,f
  2003  05E9  3000               	movlw	high(01h)
  2004  05EA  07DD               	addwf	(getlogicseq@ccount+1)^080h,f
  2005  05EB  2DF0               	goto	l3430
  2006                           	line	267
  2007                           	
  2008  05EC                     l733:	
  2009                           	line	268
  2010                           ;prev11.c: 267: }
  2011                           ;prev11.c: 268: }
  2012  05EC  2DF0               	goto	l3430
  2013                           	line	269
  2014                           	
  2015  05ED                     l730:	
  2016                           	line	270
  2017                           	
  2018  05ED                     l3428:	
  2019                           ;prev11.c: 269: else{
  2020                           ;prev11.c: 270: wf=0;
  2021  05ED  01DA               	clrf	(getlogicseq@wf)^080h
  2022  05EE  01DB               	clrf	(getlogicseq@wf+1)^080h
  2023  05EF  2DF0               	goto	l3430
  2024                           	line	271
  2025                           	
  2026  05F0                     l735:	
  2027                           	line	272
  2028                           	
  2029  05F0                     l3430:	
  2030                           ;prev11.c: 271: }
  2031                           ;prev11.c: 272: if(ccount>=3)
  2032  05F0  085D               	movf	(getlogicseq@ccount+1)^080h,w
  2033  05F1  3A80               	xorlw	80h
  2034  05F2  00FF               	movwf	btemp+1
  2035  05F3  3080               	movlw	(high(03h))^80h
  2036  05F4  027F               	subwf	btemp+1,w
  2037  05F5  1D03               	skipz
  2038  05F6  2DF9               	goto	u4575
  2039  05F7  3003               	movlw	low(03h)
  2040  05F8  025C               	subwf	(getlogicseq@ccount)^080h,w
  2041  05F9                     u4575:
  2042                           
  2043  05F9  1C03               	skipc
  2044  05FA  2DFC               	goto	u4571
  2045  05FB  2DFD               	goto	u4570
  2046  05FC                     u4571:
  2047  05FC  2DFF               	goto	l3434
  2048  05FD                     u4570:
  2049  05FD  2E21               	goto	l3444
  2050                           	line	273
  2051                           	
  2052  05FE                     l3432:	
  2053                           ;prev11.c: 273: break;
  2054  05FE  2E21               	goto	l3444
  2055                           	
  2056  05FF                     l736:	
  2057                           	line	276
  2058                           	
  2059  05FF                     l3434:	
  2060                           ;prev11.c: 276: if(num==2)
  2061  05FF  3002               	movlw	02h
  2062  0600  1683               	bsf	status, 5	;RP0=1, select bank1
  2063  0601  1303               	bcf	status, 6	;RP1=0, select bank1
  2064  0602  065E               	xorwf	(getlogicseq@num)^080h,w
  2065  0603  045F               	iorwf	(getlogicseq@num+1)^080h,w
  2066  0604  1D03               	skipz
  2067  0605  2E07               	goto	u4581
  2068  0606  2E08               	goto	u4580
  2069  0607                     u4581:
  2070  0607  2E14               	goto	l3440
  2071  0608                     u4580:
  2072                           	line	278
  2073                           	
  2074  0608                     l3436:	
  2075                           ;prev11.c: 277: {
  2076                           ;prev11.c: 278: if(nf==0){
  2077  0608  0859               	movf	((getlogicseq@nf+1)^080h),w
  2078  0609  0458               	iorwf	((getlogicseq@nf)^080h),w
  2079  060A  1D03               	skipz
  2080  060B  2E0D               	goto	u4591
  2081  060C  2E0E               	goto	u4590
  2082  060D                     u4591:
  2083  060D  2D69               	goto	l3408
  2084  060E                     u4590:
  2085                           	line	279
  2086                           	
  2087  060E                     l3438:	
  2088                           ;prev11.c: 279: nf=1;
  2089  060E  3001               	movlw	low(01h)
  2090  060F  00D8               	movwf	(getlogicseq@nf)^080h
  2091  0610  3000               	movlw	high(01h)
  2092  0611  00D9               	movwf	((getlogicseq@nf)^080h)+1
  2093                           	line	280
  2094                           ;prev11.c: 280: break;
  2095  0612  2E21               	goto	l3444
  2096                           	line	281
  2097                           	
  2098  0613                     l739:	
  2099                           	line	282
  2100                           ;prev11.c: 281: }
  2101                           ;prev11.c: 282: }
  2102  0613  2D69               	goto	l3408
  2103                           	line	283
  2104                           	
  2105  0614                     l738:	
  2106                           	
  2107  0614                     l3440:	
  2108                           ;prev11.c: 283: else if(num==99){
  2109  0614  3063               	movlw	063h
  2110  0615  065E               	xorwf	(getlogicseq@num)^080h,w
  2111  0616  045F               	iorwf	(getlogicseq@num+1)^080h,w
  2112  0617  1D03               	skipz
  2113  0618  2E1A               	goto	u4601
  2114  0619  2E1B               	goto	u4600
  2115  061A                     u4601:
  2116  061A  2D69               	goto	l3408
  2117  061B                     u4600:
  2118                           	line	284
  2119                           	
  2120  061B                     l3442:	
  2121                           ;prev11.c: 284: nf=0;
  2122  061B  01D8               	clrf	(getlogicseq@nf)^080h
  2123  061C  01D9               	clrf	(getlogicseq@nf+1)^080h
  2124  061D  2D69               	goto	l3408
  2125                           	line	285
  2126                           	
  2127  061E                     l741:	
  2128  061E  2D69               	goto	l3408
  2129                           	line	286
  2130                           	
  2131  061F                     l740:	
  2132  061F  2D69               	goto	l3408
  2133                           	
  2134  0620                     l742:	
  2135                           	line	253
  2136  0620  2D69               	goto	l3408
  2137                           	
  2138  0621                     l737:	
  2139                           	line	289
  2140                           	
  2141  0621                     l3444:	
  2142                           ;prev11.c: 285: }
  2143                           ;prev11.c: 286: }
  2144                           ;prev11.c: 289: wf=0;ccount=0;
  2145  0621  1683               	bsf	status, 5	;RP0=1, select bank1
  2146  0622  1303               	bcf	status, 6	;RP1=0, select bank1
  2147  0623  01DA               	clrf	(getlogicseq@wf)^080h
  2148  0624  01DB               	clrf	(getlogicseq@wf+1)^080h
  2149  0625  01DC               	clrf	(getlogicseq@ccount)^080h
  2150  0626  01DD               	clrf	(getlogicseq@ccount+1)^080h
  2151                           	line	290
  2152                           	
  2153  0627                     l3446:	
  2154                           ;prev11.c: 290: strcpy(str,"Enter Logic DEV2:  ");
  2155  0627  303D               	movlw	low((STR_10-__stringbase))
  2156  0628  00F0               	movwf	(?_strcpy)
  2157  0629  3080               	movlw	80h
  2158  062A  00F1               	movwf	(?_strcpy+1)
  2159  062B  30A0               	movlw	(getlogicseq@str)&0ffh
  2160  062C  120A  158A  23E1   	fcall	_strcpy
              120A  118A         
  2161                           	line	291
  2162                           	
  2163  0631                     l3448:	
  2164                           ;prev11.c: 291: write(str,1,1);
  2165  0631  30A0               	movlw	(getlogicseq@str&0ffh)
  2166  0632  1283               	bcf	status, 5	;RP0=0, select bank0
  2167  0633  1303               	bcf	status, 6	;RP1=0, select bank0
  2168  0634  00C2               	movwf	(?_write)
  2169  0635  3000               	movlw	(0x1/2)
  2170  0636  00C3               	movwf	(?_write+1)
  2171  0637  3001               	movlw	low(01h)
  2172  0638  00C4               	movwf	0+(?_write)+02h
  2173  0639  3000               	movlw	high(01h)
  2174  063A  00C5               	movwf	(0+(?_write)+02h)+1
  2175  063B  3001               	movlw	low(01h)
  2176  063C  00C6               	movwf	0+(?_write)+04h
  2177  063D  3000               	movlw	high(01h)
  2178  063E  00C7               	movwf	(0+(?_write)+04h)+1
  2179  063F  120A  158A  258B   	fcall	_write
              120A  118A         
  2180                           	line	292
  2181                           	
  2182  0644                     l3450:	
  2183                           ;prev11.c: 292: write(logic_d2,2,0);
  2184  0644  30E0               	movlw	(_logic_d2&0ffh)
  2185  0645  1283               	bcf	status, 5	;RP0=0, select bank0
  2186  0646  1303               	bcf	status, 6	;RP1=0, select bank0
  2187  0647  00C2               	movwf	(?_write)
  2188  0648  3000               	movlw	(0x1/2)
  2189  0649  00C3               	movwf	(?_write+1)
  2190  064A  3002               	movlw	low(02h)
  2191  064B  00C4               	movwf	0+(?_write)+02h
  2192  064C  3000               	movlw	high(02h)
  2193  064D  00C5               	movwf	(0+(?_write)+02h)+1
  2194  064E  3000               	movlw	low(0)
  2195  064F  00C6               	movwf	0+(?_write)+04h
  2196  0650  3000               	movlw	high(0)
  2197  0651  00C7               	movwf	(0+(?_write)+04h)+1
  2198  0652  120A  158A  258B   	fcall	_write
              120A  118A         
  2199  0657  2E58               	goto	l3452
  2200                           	line	294
  2201                           ;prev11.c: 294: while(1)
  2202                           	
  2203  0658                     l743:	
  2204                           	line	296
  2205                           	
  2206  0658                     l3452:	
  2207                           ;prev11.c: 295: {
  2208                           ;prev11.c: 296: num=scan();
  2209  0658  120A  118A  2161   	fcall	_scan
              120A  118A         
  2210  065D  0875               	movf	(1+(?_scan)),w
  2211  065E  1683               	bsf	status, 5	;RP0=1, select bank1
  2212  065F  1303               	bcf	status, 6	;RP1=0, select bank1
  2213  0660  01DF               	clrf	(getlogicseq@num+1)^080h
  2214  0661  07DF               	addwf	(getlogicseq@num+1)^080h
  2215  0662  0874               	movf	(0+(?_scan)),w
  2216  0663  01DE               	clrf	(getlogicseq@num)^080h
  2217  0664  07DE               	addwf	(getlogicseq@num)^080h
  2218                           
  2219                           	line	297
  2220                           	
  2221  0665                     l3454:	
  2222                           ;prev11.c: 297: if(num==1||num==0){
  2223  0665  3001               	movlw	01h
  2224  0666  065E               	xorwf	(getlogicseq@num)^080h,w
  2225  0667  045F               	iorwf	(getlogicseq@num+1)^080h,w
  2226  0668  1903               	skipnz
  2227  0669  2E6B               	goto	u4611
  2228  066A  2E6C               	goto	u4610
  2229  066B                     u4611:
  2230  066B  2E73               	goto	l3458
  2231  066C                     u4610:
  2232                           	
  2233  066C                     l3456:	
  2234  066C  085F               	movf	((getlogicseq@num+1)^080h),w
  2235  066D  045E               	iorwf	((getlogicseq@num)^080h),w
  2236  066E  1D03               	skipz
  2237  066F  2E71               	goto	u4621
  2238  0670  2E72               	goto	u4620
  2239  0671                     u4621:
  2240  0671  2EDC               	goto	l3472
  2241  0672                     u4620:
  2242  0672  2E73               	goto	l3458
  2243                           	
  2244  0673                     l746:	
  2245                           	line	298
  2246                           	
  2247  0673                     l3458:	
  2248                           ;prev11.c: 298: if(wf==0)
  2249  0673  085B               	movf	((getlogicseq@wf+1)^080h),w
  2250  0674  045A               	iorwf	((getlogicseq@wf)^080h),w
  2251  0675  1D03               	skipz
  2252  0676  2E78               	goto	u4631
  2253  0677  2E79               	goto	u4630
  2254  0678                     u4631:
  2255  0678  2EDF               	goto	l3474
  2256  0679                     u4630:
  2257                           	line	299
  2258                           	
  2259  0679                     l3460:	
  2260                           ;prev11.c: 299: { if(ccount==0)
  2261  0679  085D               	movf	((getlogicseq@ccount+1)^080h),w
  2262  067A  045C               	iorwf	((getlogicseq@ccount)^080h),w
  2263  067B  1D03               	skipz
  2264  067C  2E7E               	goto	u4641
  2265  067D  2E7F               	goto	u4640
  2266  067E                     u4641:
  2267  067E  2E89               	goto	l748
  2268  067F                     u4640:
  2269                           	line	300
  2270                           	
  2271  067F                     l3462:	
  2272                           ;prev11.c: 300: strcpy(logic_d2,"");
  2273  067F  303C               	movlw	low((STR_11-__stringbase))
  2274  0680  00F0               	movwf	(?_strcpy)
  2275  0681  3080               	movlw	80h
  2276  0682  00F1               	movwf	(?_strcpy+1)
  2277  0683  30E0               	movlw	(_logic_d2)&0ffh
  2278  0684  120A  158A  23E1   	fcall	_strcpy
              120A  118A         
  2279                           	
  2280  0689                     l748:	
  2281                           	line	301
  2282                           ;prev11.c: 301: write("---",2,0);
  2283  0689  30D7               	movlw	low((STR_12-__stringbase))
  2284  068A  1283               	bcf	status, 5	;RP0=0, select bank0
  2285  068B  1303               	bcf	status, 6	;RP1=0, select bank0
  2286  068C  00C2               	movwf	(?_write)
  2287  068D  3080               	movlw	80h
  2288  068E  00C3               	movwf	(?_write+1)
  2289  068F  3002               	movlw	low(02h)
  2290  0690  00C4               	movwf	0+(?_write)+02h
  2291  0691  3000               	movlw	high(02h)
  2292  0692  00C5               	movwf	(0+(?_write)+02h)+1
  2293  0693  3000               	movlw	low(0)
  2294  0694  00C6               	movwf	0+(?_write)+04h
  2295  0695  3000               	movlw	high(0)
  2296  0696  00C7               	movwf	(0+(?_write)+04h)+1
  2297  0697  120A  158A  258B   	fcall	_write
              120A  118A         
  2298                           	line	302
  2299                           ;prev11.c: 302: itoaa(num, snum);
  2300  069C  1683               	bsf	status, 5	;RP0=1, select bank1
  2301  069D  1303               	bcf	status, 6	;RP1=0, select bank1
  2302  069E  085F               	movf	(getlogicseq@num+1)^080h,w
  2303  069F  01FA               	clrf	(?_itoaa+1)
  2304  06A0  07FA               	addwf	(?_itoaa+1)
  2305  06A1  085E               	movf	(getlogicseq@num)^080h,w
  2306  06A2  01F9               	clrf	(?_itoaa)
  2307  06A3  07F9               	addwf	(?_itoaa)
  2308                           
  2309  06A4  30C2               	movlw	(getlogicseq@snum)&0ffh
  2310  06A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2311  06A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2312  06A7  00DC               	movwf	(??_getlogicseq+0)+0
  2313  06A8  085C               	movf	(??_getlogicseq+0)+0,w
  2314  06A9  00FB               	movwf	0+(?_itoaa)+02h
  2315  06AA  120A  118A  2249   	fcall	_itoaa
              120A  118A         
  2316                           	line	303
  2317                           	
  2318  06AF                     l3464:	
  2319                           ;prev11.c: 303: strcat(logic_d2,snum);
  2320  06AF  30C2               	movlw	(getlogicseq@snum)&0ffh
  2321  06B0  1283               	bcf	status, 5	;RP0=0, select bank0
  2322  06B1  1303               	bcf	status, 6	;RP1=0, select bank0
  2323  06B2  00DC               	movwf	(??_getlogicseq+0)+0
  2324  06B3  085C               	movf	(??_getlogicseq+0)+0,w
  2325  06B4  00F0               	movwf	(?_strcat)
  2326  06B5  30E0               	movlw	(_logic_d2)&0ffh
  2327  06B6  120A  158A  240A   	fcall	_strcat
              120A  118A         
  2328                           	line	304
  2329                           	
  2330  06BB                     l3466:	
  2331                           ;prev11.c: 304: write( logic_d2,2,0); ;
  2332  06BB  30E0               	movlw	(_logic_d2&0ffh)
  2333  06BC  1283               	bcf	status, 5	;RP0=0, select bank0
  2334  06BD  1303               	bcf	status, 6	;RP1=0, select bank0
  2335  06BE  00C2               	movwf	(?_write)
  2336  06BF  3000               	movlw	(0x1/2)
  2337  06C0  00C3               	movwf	(?_write+1)
  2338  06C1  3002               	movlw	low(02h)
  2339  06C2  00C4               	movwf	0+(?_write)+02h
  2340  06C3  3000               	movlw	high(02h)
  2341  06C4  00C5               	movwf	(0+(?_write)+02h)+1
  2342  06C5  3000               	movlw	low(0)
  2343  06C6  00C6               	movwf	0+(?_write)+04h
  2344  06C7  3000               	movlw	high(0)
  2345  06C8  00C7               	movwf	(0+(?_write)+04h)+1
  2346  06C9  120A  158A  258B   	fcall	_write
              120A  118A         
  2347                           	line	305
  2348                           	
  2349  06CE                     l3468:	
  2350                           ;prev11.c: 305: wf=1;
  2351  06CE  3001               	movlw	low(01h)
  2352  06CF  1683               	bsf	status, 5	;RP0=1, select bank1
  2353  06D0  1303               	bcf	status, 6	;RP1=0, select bank1
  2354  06D1  00DA               	movwf	(getlogicseq@wf)^080h
  2355  06D2  3000               	movlw	high(01h)
  2356  06D3  00DB               	movwf	((getlogicseq@wf)^080h)+1
  2357                           	line	306
  2358                           	
  2359  06D4                     l3470:	
  2360                           ;prev11.c: 306: ccount++;
  2361  06D4  3001               	movlw	low(01h)
  2362  06D5  07DC               	addwf	(getlogicseq@ccount)^080h,f
  2363  06D6  1803               	skipnc
  2364  06D7  0ADD               	incf	(getlogicseq@ccount+1)^080h,f
  2365  06D8  3000               	movlw	high(01h)
  2366  06D9  07DD               	addwf	(getlogicseq@ccount+1)^080h,f
  2367  06DA  2EDF               	goto	l3474
  2368                           	line	307
  2369                           	
  2370  06DB                     l747:	
  2371                           	line	308
  2372                           ;prev11.c: 307: }
  2373                           ;prev11.c: 308: }
  2374  06DB  2EDF               	goto	l3474
  2375                           	line	309
  2376                           	
  2377  06DC                     l744:	
  2378                           	line	310
  2379                           	
  2380  06DC                     l3472:	
  2381                           ;prev11.c: 309: else{
  2382                           ;prev11.c: 310: wf=0;
  2383  06DC  01DA               	clrf	(getlogicseq@wf)^080h
  2384  06DD  01DB               	clrf	(getlogicseq@wf+1)^080h
  2385  06DE  2EDF               	goto	l3474
  2386                           	line	311
  2387                           	
  2388  06DF                     l749:	
  2389                           	line	312
  2390                           	
  2391  06DF                     l3474:	
  2392                           ;prev11.c: 311: }
  2393                           ;prev11.c: 312: if(ccount>=3)
  2394  06DF  085D               	movf	(getlogicseq@ccount+1)^080h,w
  2395  06E0  3A80               	xorlw	80h
  2396  06E1  00FF               	movwf	btemp+1
  2397  06E2  3080               	movlw	(high(03h))^80h
  2398  06E3  027F               	subwf	btemp+1,w
  2399  06E4  1D03               	skipz
  2400  06E5  2EE8               	goto	u4655
  2401  06E6  3003               	movlw	low(03h)
  2402  06E7  025C               	subwf	(getlogicseq@ccount)^080h,w
  2403  06E8                     u4655:
  2404                           
  2405  06E8  1C03               	skipc
  2406  06E9  2EEB               	goto	u4651
  2407  06EA  2EEC               	goto	u4650
  2408  06EB                     u4651:
  2409  06EB  2EEE               	goto	l3478
  2410  06EC                     u4650:
  2411  06EC  2F10               	goto	l3488
  2412                           	line	313
  2413                           	
  2414  06ED                     l3476:	
  2415                           ;prev11.c: 313: break;
  2416  06ED  2F10               	goto	l3488
  2417                           	
  2418  06EE                     l750:	
  2419                           	line	315
  2420                           	
  2421  06EE                     l3478:	
  2422                           ;prev11.c: 315: if(num==2)
  2423  06EE  3002               	movlw	02h
  2424  06EF  1683               	bsf	status, 5	;RP0=1, select bank1
  2425  06F0  1303               	bcf	status, 6	;RP1=0, select bank1
  2426  06F1  065E               	xorwf	(getlogicseq@num)^080h,w
  2427  06F2  045F               	iorwf	(getlogicseq@num+1)^080h,w
  2428  06F3  1D03               	skipz
  2429  06F4  2EF6               	goto	u4661
  2430  06F5  2EF7               	goto	u4660
  2431  06F6                     u4661:
  2432  06F6  2F03               	goto	l3484
  2433  06F7                     u4660:
  2434                           	line	317
  2435                           	
  2436  06F7                     l3480:	
  2437                           ;prev11.c: 316: {
  2438                           ;prev11.c: 317: if(nf==0){
  2439  06F7  0859               	movf	((getlogicseq@nf+1)^080h),w
  2440  06F8  0458               	iorwf	((getlogicseq@nf)^080h),w
  2441  06F9  1D03               	skipz
  2442  06FA  2EFC               	goto	u4671
  2443  06FB  2EFD               	goto	u4670
  2444  06FC                     u4671:
  2445  06FC  2E58               	goto	l3452
  2446  06FD                     u4670:
  2447                           	line	318
  2448                           	
  2449  06FD                     l3482:	
  2450                           ;prev11.c: 318: nf=1;
  2451  06FD  3001               	movlw	low(01h)
  2452  06FE  00D8               	movwf	(getlogicseq@nf)^080h
  2453  06FF  3000               	movlw	high(01h)
  2454  0700  00D9               	movwf	((getlogicseq@nf)^080h)+1
  2455                           	line	319
  2456                           ;prev11.c: 319: break;
  2457  0701  2F10               	goto	l3488
  2458                           	line	320
  2459                           	
  2460  0702                     l753:	
  2461                           	line	321
  2462                           ;prev11.c: 320: }
  2463                           ;prev11.c: 321: }
  2464  0702  2E58               	goto	l3452
  2465                           	line	322
  2466                           	
  2467  0703                     l752:	
  2468                           	
  2469  0703                     l3484:	
  2470                           ;prev11.c: 322: else if(num==99){
  2471  0703  3063               	movlw	063h
  2472  0704  065E               	xorwf	(getlogicseq@num)^080h,w
  2473  0705  045F               	iorwf	(getlogicseq@num+1)^080h,w
  2474  0706  1D03               	skipz
  2475  0707  2F09               	goto	u4681
  2476  0708  2F0A               	goto	u4680
  2477  0709                     u4681:
  2478  0709  2E58               	goto	l3452
  2479  070A                     u4680:
  2480                           	line	323
  2481                           	
  2482  070A                     l3486:	
  2483                           ;prev11.c: 323: nf=0;
  2484  070A  01D8               	clrf	(getlogicseq@nf)^080h
  2485  070B  01D9               	clrf	(getlogicseq@nf+1)^080h
  2486  070C  2E58               	goto	l3452
  2487                           	line	324
  2488                           	
  2489  070D                     l755:	
  2490  070D  2E58               	goto	l3452
  2491                           	line	325
  2492                           	
  2493  070E                     l754:	
  2494  070E  2E58               	goto	l3452
  2495                           	
  2496  070F                     l756:	
  2497                           	line	294
  2498  070F  2E58               	goto	l3452
  2499                           	
  2500  0710                     l751:	
  2501                           	line	328
  2502                           	
  2503  0710                     l3488:	
  2504                           ;prev11.c: 324: }
  2505                           ;prev11.c: 325: }
  2506                           ;prev11.c: 328: wf=0;ccount=0;
  2507  0710  1683               	bsf	status, 5	;RP0=1, select bank1
  2508  0711  1303               	bcf	status, 6	;RP1=0, select bank1
  2509  0712  01DA               	clrf	(getlogicseq@wf)^080h
  2510  0713  01DB               	clrf	(getlogicseq@wf+1)^080h
  2511  0714  01DC               	clrf	(getlogicseq@ccount)^080h
  2512  0715  01DD               	clrf	(getlogicseq@ccount+1)^080h
  2513                           	line	329
  2514                           	
  2515  0716                     l3490:	
  2516                           ;prev11.c: 329: strcpy(str,"Enter Logic DEV3:  ");
  2517  0716  3051               	movlw	low((STR_13-__stringbase))
  2518  0717  00F0               	movwf	(?_strcpy)
  2519  0718  3080               	movlw	80h
  2520  0719  00F1               	movwf	(?_strcpy+1)
  2521  071A  30A0               	movlw	(getlogicseq@str)&0ffh
  2522  071B  120A  158A  23E1   	fcall	_strcpy
              120A  118A         
  2523                           	line	330
  2524                           	
  2525  0720                     l3492:	
  2526                           ;prev11.c: 330: write(str,1,1);
  2527  0720  30A0               	movlw	(getlogicseq@str&0ffh)
  2528  0721  1283               	bcf	status, 5	;RP0=0, select bank0
  2529  0722  1303               	bcf	status, 6	;RP1=0, select bank0
  2530  0723  00C2               	movwf	(?_write)
  2531  0724  3000               	movlw	(0x1/2)
  2532  0725  00C3               	movwf	(?_write+1)
  2533  0726  3001               	movlw	low(01h)
  2534  0727  00C4               	movwf	0+(?_write)+02h
  2535  0728  3000               	movlw	high(01h)
  2536  0729  00C5               	movwf	(0+(?_write)+02h)+1
  2537  072A  3001               	movlw	low(01h)
  2538  072B  00C6               	movwf	0+(?_write)+04h
  2539  072C  3000               	movlw	high(01h)
  2540  072D  00C7               	movwf	(0+(?_write)+04h)+1
  2541  072E  120A  158A  258B   	fcall	_write
              120A  118A         
  2542                           	line	331
  2543                           	
  2544  0733                     l3494:	
  2545                           ;prev11.c: 331: write(logic_d3,2,0);
  2546  0733  30E5               	movlw	(_logic_d3&0ffh)
  2547  0734  1283               	bcf	status, 5	;RP0=0, select bank0
  2548  0735  1303               	bcf	status, 6	;RP1=0, select bank0
  2549  0736  00C2               	movwf	(?_write)
  2550  0737  3000               	movlw	(0x1/2)
  2551  0738  00C3               	movwf	(?_write+1)
  2552  0739  3002               	movlw	low(02h)
  2553  073A  00C4               	movwf	0+(?_write)+02h
  2554  073B  3000               	movlw	high(02h)
  2555  073C  00C5               	movwf	(0+(?_write)+02h)+1
  2556  073D  3000               	movlw	low(0)
  2557  073E  00C6               	movwf	0+(?_write)+04h
  2558  073F  3000               	movlw	high(0)
  2559  0740  00C7               	movwf	(0+(?_write)+04h)+1
  2560  0741  120A  158A  258B   	fcall	_write
              120A  118A         
  2561  0746  2F47               	goto	l3496
  2562                           	line	333
  2563                           ;prev11.c: 333: while(1)
  2564                           	
  2565  0747                     l757:	
  2566                           	line	335
  2567                           	
  2568  0747                     l3496:	
  2569                           ;prev11.c: 334: {
  2570                           ;prev11.c: 335: num=scan();
  2571  0747  120A  118A  2161   	fcall	_scan
              120A  118A         
  2572  074C  0875               	movf	(1+(?_scan)),w
  2573  074D  1683               	bsf	status, 5	;RP0=1, select bank1
  2574  074E  1303               	bcf	status, 6	;RP1=0, select bank1
  2575  074F  01DF               	clrf	(getlogicseq@num+1)^080h
  2576  0750  07DF               	addwf	(getlogicseq@num+1)^080h
  2577  0751  0874               	movf	(0+(?_scan)),w
  2578  0752  01DE               	clrf	(getlogicseq@num)^080h
  2579  0753  07DE               	addwf	(getlogicseq@num)^080h
  2580                           
  2581                           	line	336
  2582                           	
  2583  0754                     l3498:	
  2584                           ;prev11.c: 336: if(num==1||num==0){
  2585  0754  3001               	movlw	01h
  2586  0755  065E               	xorwf	(getlogicseq@num)^080h,w
  2587  0756  045F               	iorwf	(getlogicseq@num+1)^080h,w
  2588  0757  1903               	skipnz
  2589  0758  2F5A               	goto	u4691
  2590  0759  2F5B               	goto	u4690
  2591  075A                     u4691:
  2592  075A  2F62               	goto	l3502
  2593  075B                     u4690:
  2594                           	
  2595  075B                     l3500:	
  2596  075B  085F               	movf	((getlogicseq@num+1)^080h),w
  2597  075C  045E               	iorwf	((getlogicseq@num)^080h),w
  2598  075D  1D03               	skipz
  2599  075E  2F60               	goto	u4701
  2600  075F  2F61               	goto	u4700
  2601  0760                     u4701:
  2602  0760  2FCB               	goto	l3516
  2603  0761                     u4700:
  2604  0761  2F62               	goto	l3502
  2605                           	
  2606  0762                     l760:	
  2607                           	line	337
  2608                           	
  2609  0762                     l3502:	
  2610                           ;prev11.c: 337: if(wf==0)
  2611  0762  085B               	movf	((getlogicseq@wf+1)^080h),w
  2612  0763  045A               	iorwf	((getlogicseq@wf)^080h),w
  2613  0764  1D03               	skipz
  2614  0765  2F67               	goto	u4711
  2615  0766  2F68               	goto	u4710
  2616  0767                     u4711:
  2617  0767  2FCE               	goto	l3518
  2618  0768                     u4710:
  2619                           	line	338
  2620                           	
  2621  0768                     l3504:	
  2622                           ;prev11.c: 338: { if(ccount==0)
  2623  0768  085D               	movf	((getlogicseq@ccount+1)^080h),w
  2624  0769  045C               	iorwf	((getlogicseq@ccount)^080h),w
  2625  076A  1D03               	skipz
  2626  076B  2F6D               	goto	u4721
  2627  076C  2F6E               	goto	u4720
  2628  076D                     u4721:
  2629  076D  2F78               	goto	l762
  2630  076E                     u4720:
  2631                           	line	339
  2632                           	
  2633  076E                     l3506:	
  2634                           ;prev11.c: 339: strcpy(logic_d3,"");
  2635  076E  303C               	movlw	low((STR_14-__stringbase))
  2636  076F  00F0               	movwf	(?_strcpy)
  2637  0770  3080               	movlw	80h
  2638  0771  00F1               	movwf	(?_strcpy+1)
  2639  0772  30E5               	movlw	(_logic_d3)&0ffh
  2640  0773  120A  158A  23E1   	fcall	_strcpy
              120A  118A         
  2641                           	
  2642  0778                     l762:	
  2643                           	line	340
  2644                           ;prev11.c: 340: write("---",2,0);
  2645  0778  30D7               	movlw	low((STR_15-__stringbase))
  2646  0779  1283               	bcf	status, 5	;RP0=0, select bank0
  2647  077A  1303               	bcf	status, 6	;RP1=0, select bank0
  2648  077B  00C2               	movwf	(?_write)
  2649  077C  3080               	movlw	80h
  2650  077D  00C3               	movwf	(?_write+1)
  2651  077E  3002               	movlw	low(02h)
  2652  077F  00C4               	movwf	0+(?_write)+02h
  2653  0780  3000               	movlw	high(02h)
  2654  0781  00C5               	movwf	(0+(?_write)+02h)+1
  2655  0782  3000               	movlw	low(0)
  2656  0783  00C6               	movwf	0+(?_write)+04h
  2657  0784  3000               	movlw	high(0)
  2658  0785  00C7               	movwf	(0+(?_write)+04h)+1
  2659  0786  120A  158A  258B   	fcall	_write
              120A  118A         
  2660                           	line	341
  2661                           ;prev11.c: 341: itoaa(num, snum);
  2662  078B  1683               	bsf	status, 5	;RP0=1, select bank1
  2663  078C  1303               	bcf	status, 6	;RP1=0, select bank1
  2664  078D  085F               	movf	(getlogicseq@num+1)^080h,w
  2665  078E  01FA               	clrf	(?_itoaa+1)
  2666  078F  07FA               	addwf	(?_itoaa+1)
  2667  0790  085E               	movf	(getlogicseq@num)^080h,w
  2668  0791  01F9               	clrf	(?_itoaa)
  2669  0792  07F9               	addwf	(?_itoaa)
  2670                           
  2671  0793  30C2               	movlw	(getlogicseq@snum)&0ffh
  2672  0794  1283               	bcf	status, 5	;RP0=0, select bank0
  2673  0795  1303               	bcf	status, 6	;RP1=0, select bank0
  2674  0796  00DC               	movwf	(??_getlogicseq+0)+0
  2675  0797  085C               	movf	(??_getlogicseq+0)+0,w
  2676  0798  00FB               	movwf	0+(?_itoaa)+02h
  2677  0799  120A  118A  2249   	fcall	_itoaa
              120A  118A         
  2678                           	line	342
  2679                           	
  2680  079E                     l3508:	
  2681                           ;prev11.c: 342: strcat(logic_d3,snum);
  2682  079E  30C2               	movlw	(getlogicseq@snum)&0ffh
  2683  079F  1283               	bcf	status, 5	;RP0=0, select bank0
  2684  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2685  07A1  00DC               	movwf	(??_getlogicseq+0)+0
  2686  07A2  085C               	movf	(??_getlogicseq+0)+0,w
  2687  07A3  00F0               	movwf	(?_strcat)
  2688  07A4  30E5               	movlw	(_logic_d3)&0ffh
  2689  07A5  120A  158A  240A   	fcall	_strcat
              120A  118A         
  2690                           	line	343
  2691                           	
  2692  07AA                     l3510:	
  2693                           ;prev11.c: 343: write( logic_d3,2,0); ;
  2694  07AA  30E5               	movlw	(_logic_d3&0ffh)
  2695  07AB  1283               	bcf	status, 5	;RP0=0, select bank0
  2696  07AC  1303               	bcf	status, 6	;RP1=0, select bank0
  2697  07AD  00C2               	movwf	(?_write)
  2698  07AE  3000               	movlw	(0x1/2)
  2699  07AF  00C3               	movwf	(?_write+1)
  2700  07B0  3002               	movlw	low(02h)
  2701  07B1  00C4               	movwf	0+(?_write)+02h
  2702  07B2  3000               	movlw	high(02h)
  2703  07B3  00C5               	movwf	(0+(?_write)+02h)+1
  2704  07B4  3000               	movlw	low(0)
  2705  07B5  00C6               	movwf	0+(?_write)+04h
  2706  07B6  3000               	movlw	high(0)
  2707  07B7  00C7               	movwf	(0+(?_write)+04h)+1
  2708  07B8  120A  158A  258B   	fcall	_write
              120A  118A         
  2709                           	line	344
  2710                           	
  2711  07BD                     l3512:	
  2712                           ;prev11.c: 344: wf=1;
  2713  07BD  3001               	movlw	low(01h)
  2714  07BE  1683               	bsf	status, 5	;RP0=1, select bank1
  2715  07BF  1303               	bcf	status, 6	;RP1=0, select bank1
  2716  07C0  00DA               	movwf	(getlogicseq@wf)^080h
  2717  07C1  3000               	movlw	high(01h)
  2718  07C2  00DB               	movwf	((getlogicseq@wf)^080h)+1
  2719                           	line	345
  2720                           	
  2721  07C3                     l3514:	
  2722                           ;prev11.c: 345: ccount++;
  2723  07C3  3001               	movlw	low(01h)
  2724  07C4  07DC               	addwf	(getlogicseq@ccount)^080h,f
  2725  07C5  1803               	skipnc
  2726  07C6  0ADD               	incf	(getlogicseq@ccount+1)^080h,f
  2727  07C7  3000               	movlw	high(01h)
  2728  07C8  07DD               	addwf	(getlogicseq@ccount+1)^080h,f
  2729  07C9  2FCE               	goto	l3518
  2730                           	line	346
  2731                           	
  2732  07CA                     l761:	
  2733                           	line	347
  2734                           ;prev11.c: 346: }
  2735                           ;prev11.c: 347: }
  2736  07CA  2FCE               	goto	l3518
  2737                           	line	348
  2738                           	
  2739  07CB                     l758:	
  2740                           	line	349
  2741                           	
  2742  07CB                     l3516:	
  2743                           ;prev11.c: 348: else{
  2744                           ;prev11.c: 349: wf=0;
  2745  07CB  01DA               	clrf	(getlogicseq@wf)^080h
  2746  07CC  01DB               	clrf	(getlogicseq@wf+1)^080h
  2747  07CD  2FCE               	goto	l3518
  2748                           	line	350
  2749                           	
  2750  07CE                     l763:	
  2751                           	line	351
  2752                           	
  2753  07CE                     l3518:	
  2754                           ;prev11.c: 350: }
  2755                           ;prev11.c: 351: if(ccount>=3)
  2756  07CE  085D               	movf	(getlogicseq@ccount+1)^080h,w
  2757  07CF  3A80               	xorlw	80h
  2758  07D0  00FF               	movwf	btemp+1
  2759  07D1  3080               	movlw	(high(03h))^80h
  2760  07D2  027F               	subwf	btemp+1,w
  2761  07D3  1D03               	skipz
  2762  07D4  2FD7               	goto	u4735
  2763  07D5  3003               	movlw	low(03h)
  2764  07D6  025C               	subwf	(getlogicseq@ccount)^080h,w
  2765  07D7                     u4735:
  2766                           
  2767  07D7  1C03               	skipc
  2768  07D8  2FDA               	goto	u4731
  2769  07D9  2FDB               	goto	u4730
  2770  07DA                     u4731:
  2771  07DA  2FDD               	goto	l3522
  2772  07DB                     u4730:
  2773  07DB  2FFF               	goto	l726
  2774                           	line	352
  2775                           	
  2776  07DC                     l3520:	
  2777                           ;prev11.c: 352: break;
  2778  07DC  2FFF               	goto	l726
  2779                           	
  2780  07DD                     l764:	
  2781                           	line	354
  2782                           	
  2783  07DD                     l3522:	
  2784                           ;prev11.c: 354: if(num==2)
  2785  07DD  3002               	movlw	02h
  2786  07DE  1683               	bsf	status, 5	;RP0=1, select bank1
  2787  07DF  1303               	bcf	status, 6	;RP1=0, select bank1
  2788  07E0  065E               	xorwf	(getlogicseq@num)^080h,w
  2789  07E1  045F               	iorwf	(getlogicseq@num+1)^080h,w
  2790  07E2  1D03               	skipz
  2791  07E3  2FE5               	goto	u4741
  2792  07E4  2FE6               	goto	u4740
  2793  07E5                     u4741:
  2794  07E5  2FF2               	goto	l3528
  2795  07E6                     u4740:
  2796                           	line	356
  2797                           	
  2798  07E6                     l3524:	
  2799                           ;prev11.c: 355: {
  2800                           ;prev11.c: 356: if(nf==0){
  2801  07E6  0859               	movf	((getlogicseq@nf+1)^080h),w
  2802  07E7  0458               	iorwf	((getlogicseq@nf)^080h),w
  2803  07E8  1D03               	skipz
  2804  07E9  2FEB               	goto	u4751
  2805  07EA  2FEC               	goto	u4750
  2806  07EB                     u4751:
  2807  07EB  2F47               	goto	l3496
  2808  07EC                     u4750:
  2809                           	line	357
  2810                           	
  2811  07EC                     l3526:	
  2812                           ;prev11.c: 357: nf=1;
  2813  07EC  3001               	movlw	low(01h)
  2814  07ED  00D8               	movwf	(getlogicseq@nf)^080h
  2815  07EE  3000               	movlw	high(01h)
  2816  07EF  00D9               	movwf	((getlogicseq@nf)^080h)+1
  2817                           	line	358
  2818                           ;prev11.c: 358: break;
  2819  07F0  2FFF               	goto	l726
  2820                           	line	359
  2821                           	
  2822  07F1                     l767:	
  2823                           	line	360
  2824                           ;prev11.c: 359: }
  2825                           ;prev11.c: 360: }
  2826  07F1  2F47               	goto	l3496
  2827                           	line	361
  2828                           	
  2829  07F2                     l766:	
  2830                           	
  2831  07F2                     l3528:	
  2832                           ;prev11.c: 361: else if(num==99){
  2833  07F2  3063               	movlw	063h
  2834  07F3  065E               	xorwf	(getlogicseq@num)^080h,w
  2835  07F4  045F               	iorwf	(getlogicseq@num+1)^080h,w
  2836  07F5  1D03               	skipz
  2837  07F6  2FF8               	goto	u4761
  2838  07F7  2FF9               	goto	u4760
  2839  07F8                     u4761:
  2840  07F8  2F47               	goto	l3496
  2841  07F9                     u4760:
  2842                           	line	362
  2843                           	
  2844  07F9                     l3530:	
  2845                           ;prev11.c: 362: nf=0;
  2846  07F9  01D8               	clrf	(getlogicseq@nf)^080h
  2847  07FA  01D9               	clrf	(getlogicseq@nf+1)^080h
  2848  07FB  2F47               	goto	l3496
  2849                           	line	363
  2850                           	
  2851  07FC                     l769:	
  2852  07FC  2F47               	goto	l3496
  2853                           	line	364
  2854                           	
  2855  07FD                     l768:	
  2856  07FD  2F47               	goto	l3496
  2857                           	
  2858  07FE                     l770:	
  2859                           	line	333
  2860  07FE  2F47               	goto	l3496
  2861                           	
  2862  07FF                     l765:	
  2863                           	line	410
  2864                           	
  2865  07FF                     l726:	
  2866  07FF  0008               	return
  2867                           	opt stack 0
  2868                           GLOBAL	__end_of_getlogicseq
  2869  0800                     	__end_of_getlogicseq:
  2870 ;; =============== function _getlogicseq ends ============
  2871                           
  2872                           	signat	_getlogicseq,88
  2873                           	global	_startswitch
  2874                           psect	text533,local,class=CODE,delta=2
  2875                           global __ptext533
  2876  0F23                     __ptext533:
  2877                           
  2878 ;; *************** function _startswitch *****************
  2879 ;; Defined at:
  2880 ;;		line 144 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;		None               void
  2887 ;; Registers used:
  2888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2894 ;;      Params:         0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       1       0       0       0
  2897 ;;      Totals:         0       1       0       0       0
  2898 ;;Total ram usage:        1 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    6
  2901 ;; This function calls:
  2902 ;;		_init_fun
  2903 ;;		_strcpy
  2904 ;;		_strcmp
  2905 ;;		_write
  2906 ;;		_check
  2907 ;; This function is called by:
  2908 ;;		_getlogicseq
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           psect	text533
  2912                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  2913                           	line	144
  2914                           	global	__size_of_startswitch
  2915  00DD                     	__size_of_startswitch	equ	__end_of_startswitch-_startswitch
  2916                           	
  2917  0F23                     _startswitch:	
  2918                           	opt	stack 0
  2919                           ; Regs used in _startswitch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2920                           	line	145
  2921                           	
  2922  0F23                     l3302:	
  2923                           ;prev11.c: 145: init_fun();
  2924  0F23  120A  158A  23BB   	fcall	_init_fun
              120A  158A         
  2925                           	line	148
  2926                           ;prev11.c: 148: strcpy(plo,lo);
  2927  0F28  3060               	movlw	(_lo&0ffh)
  2928  0F29  00F0               	movwf	(?_strcpy)
  2929  0F2A  3000               	movlw	(0x0/2)
  2930  0F2B  00F1               	movwf	(?_strcpy+1)
  2931  0F2C  30EA               	movlw	(_plo)&0ffh
  2932  0F2D  120A  158A  23E1   	fcall	_strcpy
              120A  158A         
  2933                           	line	149
  2934                           ;prev11.c: 149: strcpy(lo,"000");;
  2935  0F32  3088               	movlw	low((STR_2-__stringbase))
  2936  0F33  00F0               	movwf	(?_strcpy)
  2937  0F34  3080               	movlw	80h
  2938  0F35  00F1               	movwf	(?_strcpy+1)
  2939  0F36  3060               	movlw	(_lo)&0ffh
  2940  0F37  120A  158A  23E1   	fcall	_strcpy
              120A  158A         
  2941                           	line	150
  2942                           	
  2943  0F3C                     l3304:	
  2944                           ;prev11.c: 150: if(RC4==1)
  2945  0F3C  1283               	bcf	status, 5	;RP0=0, select bank0
  2946  0F3D  1303               	bcf	status, 6	;RP1=0, select bank0
  2947  0F3E  1E07               	btfss	(60/8),(60)&7
  2948  0F3F  2F41               	goto	u4381
  2949  0F40  2F42               	goto	u4380
  2950  0F41                     u4381:
  2951  0F41  2F47               	goto	l3308
  2952  0F42                     u4380:
  2953                           	line	151
  2954                           	
  2955  0F42                     l3306:	
  2956                           ;prev11.c: 151: lo[0]='1';
  2957  0F42  3031               	movlw	(031h)
  2958  0F43  00C8               	movwf	(??_startswitch+0)+0
  2959  0F44  0848               	movf	(??_startswitch+0)+0,w
  2960  0F45  00E0               	movwf	(_lo)
  2961  0F46  2F47               	goto	l3308
  2962                           	
  2963  0F47                     l701:	
  2964                           	line	152
  2965                           	
  2966  0F47                     l3308:	
  2967                           ;prev11.c: 152: if(RC5==1)
  2968  0F47  1E87               	btfss	(61/8),(61)&7
  2969  0F48  2F4A               	goto	u4391
  2970  0F49  2F4B               	goto	u4390
  2971  0F4A                     u4391:
  2972  0F4A  2F50               	goto	l3312
  2973  0F4B                     u4390:
  2974                           	line	153
  2975                           	
  2976  0F4B                     l3310:	
  2977                           ;prev11.c: 153: lo[1]='1';
  2978  0F4B  3031               	movlw	(031h)
  2979  0F4C  00C8               	movwf	(??_startswitch+0)+0
  2980  0F4D  0848               	movf	(??_startswitch+0)+0,w
  2981  0F4E  00E1               	movwf	0+(_lo)+01h
  2982  0F4F  2F50               	goto	l3312
  2983                           	
  2984  0F50                     l702:	
  2985                           	line	154
  2986                           	
  2987  0F50                     l3312:	
  2988                           ;prev11.c: 154: if(RC6==1)
  2989  0F50  1F07               	btfss	(62/8),(62)&7
  2990  0F51  2F53               	goto	u4401
  2991  0F52  2F54               	goto	u4400
  2992  0F53                     u4401:
  2993  0F53  2F59               	goto	l3316
  2994  0F54                     u4400:
  2995                           	line	155
  2996                           	
  2997  0F54                     l3314:	
  2998                           ;prev11.c: 155: lo[2]='1';
  2999  0F54  3031               	movlw	(031h)
  3000  0F55  00C8               	movwf	(??_startswitch+0)+0
  3001  0F56  0848               	movf	(??_startswitch+0)+0,w
  3002  0F57  00E2               	movwf	0+(_lo)+02h
  3003  0F58  2F59               	goto	l3316
  3004                           	
  3005  0F59                     l703:	
  3006                           	line	158
  3007                           	
  3008  0F59                     l3316:	
  3009                           ;prev11.c: 158: pdev=dev;
  3010  0F59  086B               	movf	(_dev+1),w
  3011  0F5A  01EF               	clrf	(_pdev+1)
  3012  0F5B  07EF               	addwf	(_pdev+1)
  3013  0F5C  086A               	movf	(_dev),w
  3014  0F5D  01EE               	clrf	(_pdev)
  3015  0F5E  07EE               	addwf	(_pdev)
  3016                           
  3017                           	line	159
  3018                           	
  3019  0F5F                     l3318:	
  3020                           ;prev11.c: 159: dev=0b0000;
  3021  0F5F  01EA               	clrf	(_dev)
  3022  0F60  01EB               	clrf	(_dev+1)
  3023                           	line	161
  3024                           	
  3025  0F61                     l3320:	
  3026                           ;prev11.c: 161: if(strcmp(lo,plo)!=0&&strcmp(lo,"000")!=0)
  3027  0F61  30EA               	movlw	(_plo&0ffh)
  3028  0F62  00F0               	movwf	(?_strcmp)
  3029  0F63  3000               	movlw	(0x1/2)
  3030  0F64  00F1               	movwf	(?_strcmp+1)
  3031  0F65  3060               	movlw	(_lo)&0ffh
  3032  0F66  120A  158A  2490   	fcall	_strcmp
              120A  158A         
  3033  0F6B  0871               	movf	(1+(?_strcmp)),w
  3034  0F6C  0470               	iorwf	(0+(?_strcmp)),w
  3035  0F6D  1903               	skipnz
  3036  0F6E  2F70               	goto	u4411
  3037  0F6F  2F71               	goto	u4410
  3038  0F70                     u4411:
  3039  0F70  2FFF               	goto	l711
  3040  0F71                     u4410:
  3041                           	
  3042  0F71                     l3322:	
  3043  0F71  3088               	movlw	low((STR_3-__stringbase))
  3044  0F72  00F0               	movwf	(?_strcmp)
  3045  0F73  3080               	movlw	80h
  3046  0F74  00F1               	movwf	(?_strcmp+1)
  3047  0F75  3060               	movlw	(_lo)&0ffh
  3048  0F76  120A  158A  2490   	fcall	_strcmp
              120A  158A         
  3049  0F7B  0871               	movf	(1+(?_strcmp)),w
  3050  0F7C  0470               	iorwf	(0+(?_strcmp)),w
  3051  0F7D  1903               	skipnz
  3052  0F7E  2F80               	goto	u4421
  3053  0F7F  2F81               	goto	u4420
  3054  0F80                     u4421:
  3055  0F80  2FFF               	goto	l711
  3056  0F81                     u4420:
  3057                           	line	164
  3058                           	
  3059  0F81                     l3324:	
  3060                           ;prev11.c: 162: {
  3061                           ;prev11.c: 164: write(lo,1,1);
  3062  0F81  3060               	movlw	(_lo&0ffh)
  3063  0F82  1283               	bcf	status, 5	;RP0=0, select bank0
  3064  0F83  1303               	bcf	status, 6	;RP1=0, select bank0
  3065  0F84  00C2               	movwf	(?_write)
  3066  0F85  3000               	movlw	(0x0/2)
  3067  0F86  00C3               	movwf	(?_write+1)
  3068  0F87  3001               	movlw	low(01h)
  3069  0F88  00C4               	movwf	0+(?_write)+02h
  3070  0F89  3000               	movlw	high(01h)
  3071  0F8A  00C5               	movwf	(0+(?_write)+02h)+1
  3072  0F8B  3001               	movlw	low(01h)
  3073  0F8C  00C6               	movwf	0+(?_write)+04h
  3074  0F8D  3000               	movlw	high(01h)
  3075  0F8E  00C7               	movwf	(0+(?_write)+04h)+1
  3076  0F8F  120A  158A  258B   	fcall	_write
              120A  158A         
  3077                           	line	167
  3078                           ;prev11.c: 167: if(check(lo,logic_d1))
  3079  0F94  3065               	movlw	(_logic_d1)&0ffh
  3080  0F95  1283               	bcf	status, 5	;RP0=0, select bank0
  3081  0F96  1303               	bcf	status, 6	;RP1=0, select bank0
  3082  0F97  00C8               	movwf	(??_startswitch+0)+0
  3083  0F98  0848               	movf	(??_startswitch+0)+0,w
  3084  0F99  00F0               	movwf	(?_check)
  3085  0F9A  3060               	movlw	(_lo)&0ffh
  3086  0F9B  120A  158A  2542   	fcall	_check
              120A  158A         
  3087  0FA0  0871               	movf	(1+(?_check)),w
  3088  0FA1  0470               	iorwf	(0+(?_check)),w
  3089  0FA2  1903               	skipnz
  3090  0FA3  2FA5               	goto	u4431
  3091  0FA4  2FA6               	goto	u4430
  3092  0FA5                     u4431:
  3093  0FA5  2FAF               	goto	l3328
  3094  0FA6                     u4430:
  3095                           	line	168
  3096                           	
  3097  0FA6                     l3326:	
  3098                           ;prev11.c: 168: dev=dev|0b0001;
  3099  0FA6  3001               	movlw	low(01h)
  3100  0FA7  1283               	bcf	status, 5	;RP0=0, select bank0
  3101  0FA8  1303               	bcf	status, 6	;RP1=0, select bank0
  3102  0FA9  046A               	iorwf	(_dev),w
  3103  0FAA  00EA               	movwf	(_dev)
  3104  0FAB  3000               	movlw	high(01h)
  3105  0FAC  046B               	iorwf	(_dev+1),w
  3106  0FAD  00EB               	movwf	1+(_dev)
  3107  0FAE  2FB8               	goto	l3330
  3108                           	line	169
  3109                           	
  3110  0FAF                     l705:	
  3111                           	line	170
  3112                           	
  3113  0FAF                     l3328:	
  3114                           ;prev11.c: 169: else
  3115                           ;prev11.c: 170: dev=dev&0b0110;
  3116  0FAF  3006               	movlw	low(06h)
  3117  0FB0  1283               	bcf	status, 5	;RP0=0, select bank0
  3118  0FB1  1303               	bcf	status, 6	;RP1=0, select bank0
  3119  0FB2  056A               	andwf	(_dev),w
  3120  0FB3  00EA               	movwf	(_dev)
  3121  0FB4  3000               	movlw	high(06h)
  3122  0FB5  056B               	andwf	(_dev+1),w
  3123  0FB6  00EB               	movwf	1+(_dev)
  3124  0FB7  2FB8               	goto	l3330
  3125                           	
  3126  0FB8                     l706:	
  3127                           	line	172
  3128                           	
  3129  0FB8                     l3330:	
  3130                           ;prev11.c: 172: if(check(lo,logic_d2))
  3131  0FB8  30E0               	movlw	(_logic_d2)&0ffh
  3132  0FB9  00C8               	movwf	(??_startswitch+0)+0
  3133  0FBA  0848               	movf	(??_startswitch+0)+0,w
  3134  0FBB  00F0               	movwf	(?_check)
  3135  0FBC  3060               	movlw	(_lo)&0ffh
  3136  0FBD  120A  158A  2542   	fcall	_check
              120A  158A         
  3137  0FC2  0871               	movf	(1+(?_check)),w
  3138  0FC3  0470               	iorwf	(0+(?_check)),w
  3139  0FC4  1903               	skipnz
  3140  0FC5  2FC7               	goto	u4441
  3141  0FC6  2FC8               	goto	u4440
  3142  0FC7                     u4441:
  3143  0FC7  2FD1               	goto	l3334
  3144  0FC8                     u4440:
  3145                           	line	173
  3146                           	
  3147  0FC8                     l3332:	
  3148                           ;prev11.c: 173: dev=dev|0b0010;
  3149  0FC8  3002               	movlw	low(02h)
  3150  0FC9  1283               	bcf	status, 5	;RP0=0, select bank0
  3151  0FCA  1303               	bcf	status, 6	;RP1=0, select bank0
  3152  0FCB  046A               	iorwf	(_dev),w
  3153  0FCC  00EA               	movwf	(_dev)
  3154  0FCD  3000               	movlw	high(02h)
  3155  0FCE  046B               	iorwf	(_dev+1),w
  3156  0FCF  00EB               	movwf	1+(_dev)
  3157  0FD0  2FDA               	goto	l3336
  3158                           	line	174
  3159                           	
  3160  0FD1                     l707:	
  3161                           	line	175
  3162                           	
  3163  0FD1                     l3334:	
  3164                           ;prev11.c: 174: else
  3165                           ;prev11.c: 175: dev=dev&0b0101;
  3166  0FD1  3005               	movlw	low(05h)
  3167  0FD2  1283               	bcf	status, 5	;RP0=0, select bank0
  3168  0FD3  1303               	bcf	status, 6	;RP1=0, select bank0
  3169  0FD4  056A               	andwf	(_dev),w
  3170  0FD5  00EA               	movwf	(_dev)
  3171  0FD6  3000               	movlw	high(05h)
  3172  0FD7  056B               	andwf	(_dev+1),w
  3173  0FD8  00EB               	movwf	1+(_dev)
  3174  0FD9  2FDA               	goto	l3336
  3175                           	
  3176  0FDA                     l708:	
  3177                           	line	178
  3178                           	
  3179  0FDA                     l3336:	
  3180                           ;prev11.c: 178: if(check(lo,logic_d3))
  3181  0FDA  30E5               	movlw	(_logic_d3)&0ffh
  3182  0FDB  00C8               	movwf	(??_startswitch+0)+0
  3183  0FDC  0848               	movf	(??_startswitch+0)+0,w
  3184  0FDD  00F0               	movwf	(?_check)
  3185  0FDE  3060               	movlw	(_lo)&0ffh
  3186  0FDF  120A  158A  2542   	fcall	_check
              120A  158A         
  3187  0FE4  0871               	movf	(1+(?_check)),w
  3188  0FE5  0470               	iorwf	(0+(?_check)),w
  3189  0FE6  1903               	skipnz
  3190  0FE7  2FE9               	goto	u4451
  3191  0FE8  2FEA               	goto	u4450
  3192  0FE9                     u4451:
  3193  0FE9  2FF3               	goto	l3340
  3194  0FEA                     u4450:
  3195                           	line	179
  3196                           	
  3197  0FEA                     l3338:	
  3198                           ;prev11.c: 179: dev=dev|0b0100;
  3199  0FEA  3004               	movlw	low(04h)
  3200  0FEB  1283               	bcf	status, 5	;RP0=0, select bank0
  3201  0FEC  1303               	bcf	status, 6	;RP1=0, select bank0
  3202  0FED  046A               	iorwf	(_dev),w
  3203  0FEE  00EA               	movwf	(_dev)
  3204  0FEF  3000               	movlw	high(04h)
  3205  0FF0  046B               	iorwf	(_dev+1),w
  3206  0FF1  00EB               	movwf	1+(_dev)
  3207  0FF2  2FFB               	goto	l710
  3208                           	line	180
  3209                           	
  3210  0FF3                     l709:	
  3211                           	line	181
  3212                           	
  3213  0FF3                     l3340:	
  3214                           ;prev11.c: 180: else
  3215                           ;prev11.c: 181: dev=dev&0b0011;
  3216  0FF3  3003               	movlw	low(03h)
  3217  0FF4  1283               	bcf	status, 5	;RP0=0, select bank0
  3218  0FF5  1303               	bcf	status, 6	;RP1=0, select bank0
  3219  0FF6  056A               	andwf	(_dev),w
  3220  0FF7  00EA               	movwf	(_dev)
  3221  0FF8  3000               	movlw	high(03h)
  3222  0FF9  056B               	andwf	(_dev+1),w
  3223  0FFA  00EB               	movwf	1+(_dev)
  3224                           	
  3225  0FFB                     l710:	
  3226                           	line	186
  3227                           ;prev11.c: 186: PORTA=dev;
  3228  0FFB  086A               	movf	(_dev),w
  3229  0FFC  0085               	movwf	(5)	;volatile
  3230  0FFD  2FFF               	goto	l711
  3231                           	line	187
  3232                           	
  3233  0FFE                     l704:	
  3234  0FFE  2FFF               	goto	l711
  3235                           	line	188
  3236                           	
  3237  0FFF                     l3342:	
  3238                           	line	190
  3239                           ;prev11.c: 187: }
  3240                           ;prev11.c: 188: return;
  3241                           	
  3242  0FFF                     l711:	
  3243  0FFF  0008               	return
  3244                           	opt stack 0
  3245                           GLOBAL	__end_of_startswitch
  3246  1000                     	__end_of_startswitch:
  3247 ;; =============== function _startswitch ends ============
  3248                           
  3249                           	signat	_startswitch,88
  3250                           	global	_scroll
  3251                           psect	text534,local,class=CODE,delta=2
  3252                           global __ptext534
  3253  0E55                     __ptext534:
  3254                           
  3255 ;; *************** function _scroll *****************
  3256 ;; Defined at:
  3257 ;;		line 599 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  str             1    wreg     PTR unsigned char 
  3260 ;;		 -> STR_4(38), 
  3261 ;;  loops           2   40[BANK0 ] int 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  str             1   55[BANK0 ] PTR unsigned char 
  3264 ;;		 -> STR_4(38), 
  3265 ;;  dest           32    0        unsigned char [32]
  3266 ;;  endat           2   51[BANK0 ] int 
  3267 ;;  startat         2   49[BANK0 ] int 
  3268 ;;  i               2   58[BANK0 ] int 
  3269 ;;  len             2   56[BANK0 ] int 
  3270 ;;  loopn           2   53[BANK0 ] int 
  3271 ;;  en              2   47[BANK0 ] int 
  3272 ;;  st              2   45[BANK0 ] int 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;		None               void
  3275 ;; Registers used:
  3276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         0       2       0       0       0
  3283 ;;      Locals:         0      15       0       0       0
  3284 ;;      Temps:          0       3       0       0       0
  3285 ;;      Totals:         0      20       0       0       0
  3286 ;;Total ram usage:       20 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    5
  3289 ;; This function calls:
  3290 ;;		_write
  3291 ;;		_delay
  3292 ;;		_cmd
  3293 ;; This function is called by:
  3294 ;;		_getlogicseq
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           psect	text534
  3298                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3299                           	line	599
  3300                           	global	__size_of_scroll
  3301  00CE                     	__size_of_scroll	equ	__end_of_scroll-_scroll
  3302                           	
  3303  0E55                     _scroll:	
  3304                           	opt	stack 1
  3305                           ; Regs used in _scroll: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3306                           ;scroll@str stored from wreg
  3307                           	line	601
  3308  0E55  1283               	bcf	status, 5	;RP0=0, select bank0
  3309  0E56  1303               	bcf	status, 6	;RP1=0, select bank0
  3310  0E57  00D7               	movwf	(scroll@str)
  3311                           	
  3312  0E58                     l3262:	
  3313                           ;prev11.c: 601: write(str,1,0); ;
  3314  0E58  0857               	movf	(scroll@str),w
  3315  0E59  00C2               	movwf	(?_write)
  3316  0E5A  3080               	movlw	80h
  3317  0E5B  00C3               	movwf	(?_write+1)
  3318  0E5C  3001               	movlw	low(01h)
  3319  0E5D  00C4               	movwf	0+(?_write)+02h
  3320  0E5E  3000               	movlw	high(01h)
  3321  0E5F  00C5               	movwf	(0+(?_write)+02h)+1
  3322  0E60  3000               	movlw	low(0)
  3323  0E61  00C6               	movwf	0+(?_write)+04h
  3324  0E62  3000               	movlw	high(0)
  3325  0E63  00C7               	movwf	(0+(?_write)+04h)+1
  3326  0E64  120A  158A  258B   	fcall	_write
              120A  158A         
  3327                           	line	602
  3328                           	
  3329  0E69                     l3264:	
  3330                           ;prev11.c: 602: int loopn=0;
  3331  0E69  1283               	bcf	status, 5	;RP0=0, select bank0
  3332  0E6A  1303               	bcf	status, 6	;RP1=0, select bank0
  3333  0E6B  01D5               	clrf	(scroll@loopn)
  3334  0E6C  01D6               	clrf	(scroll@loopn+1)
  3335                           	line	604
  3336                           	
  3337  0E6D                     l3266:	
  3338                           ;prev11.c: 603: int i;
  3339                           ;prev11.c: 604: int len=0;;
  3340  0E6D  01D8               	clrf	(scroll@len)
  3341  0E6E  01D9               	clrf	(scroll@len+1)
  3342                           	line	605
  3343                           	
  3344  0E6F                     l3268:	
  3345                           ;prev11.c: 605: int st=0;
  3346  0E6F  01CD               	clrf	(scroll@st)
  3347  0E70  01CE               	clrf	(scroll@st+1)
  3348                           	line	607
  3349                           ;prev11.c: 606: int en;
  3350                           ;prev11.c: 607: while(str[i]!='\0')
  3351  0E71  2E7F               	goto	l3272
  3352                           	
  3353  0E72                     l852:	
  3354                           	line	608
  3355                           	
  3356  0E72                     l3270:	
  3357                           ;prev11.c: 608: { i++;
  3358  0E72  3001               	movlw	low(01h)
  3359  0E73  07DA               	addwf	(scroll@i),f
  3360  0E74  1803               	skipnc
  3361  0E75  0ADB               	incf	(scroll@i+1),f
  3362  0E76  3000               	movlw	high(01h)
  3363  0E77  07DB               	addwf	(scroll@i+1),f
  3364                           	line	609
  3365                           ;prev11.c: 609: len++;
  3366  0E78  3001               	movlw	low(01h)
  3367  0E79  07D8               	addwf	(scroll@len),f
  3368  0E7A  1803               	skipnc
  3369  0E7B  0AD9               	incf	(scroll@len+1),f
  3370  0E7C  3000               	movlw	high(01h)
  3371  0E7D  07D9               	addwf	(scroll@len+1),f
  3372  0E7E  2E7F               	goto	l3272
  3373                           	line	610
  3374                           	
  3375  0E7F                     l851:	
  3376                           	line	607
  3377                           	
  3378  0E7F                     l3272:	
  3379  0E7F  085A               	movf	(scroll@i),w
  3380  0E80  0757               	addwf	(scroll@str),w
  3381  0E81  0084               	movwf	fsr0
  3382  0E82  120A  118A  200D   	fcall	stringdir
              120A  158A         
  3383  0E87  3800               	iorlw	0
  3384  0E88  1D03               	skipz
  3385  0E89  2E8B               	goto	u4331
  3386  0E8A  2E8C               	goto	u4330
  3387  0E8B                     u4331:
  3388  0E8B  2E72               	goto	l3270
  3389  0E8C                     u4330:
  3390  0E8C  2E8D               	goto	l3274
  3391                           	
  3392  0E8D                     l853:	
  3393                           	line	611
  3394                           	
  3395  0E8D                     l3274:	
  3396                           ;prev11.c: 610: }
  3397                           ;prev11.c: 611: en=len-1;
  3398  0E8D  0858               	movf	(scroll@len),w
  3399  0E8E  3EFF               	addlw	low(-1)
  3400  0E8F  00CF               	movwf	(scroll@en)
  3401  0E90  0859               	movf	(scroll@len+1),w
  3402  0E91  1803               	skipnc
  3403  0E92  3E01               	addlw	1
  3404  0E93  3EFF               	addlw	high(-1)
  3405  0E94  00D0               	movwf	1+(scroll@en)
  3406                           	line	613
  3407                           	
  3408  0E95                     l3276:	
  3409                           ;prev11.c: 613: if(len>32)
  3410  0E95  0859               	movf	(scroll@len+1),w
  3411  0E96  3A80               	xorlw	80h
  3412  0E97  00FF               	movwf	btemp+1
  3413  0E98  3080               	movlw	(high(021h))^80h
  3414  0E99  027F               	subwf	btemp+1,w
  3415  0E9A  1D03               	skipz
  3416  0E9B  2E9E               	goto	u4345
  3417  0E9C  3021               	movlw	low(021h)
  3418  0E9D  0258               	subwf	(scroll@len),w
  3419  0E9E                     u4345:
  3420                           
  3421  0E9E  1C03               	skipc
  3422  0E9F  2EA1               	goto	u4341
  3423  0EA0  2EA2               	goto	u4340
  3424  0EA1                     u4341:
  3425  0EA1  2F22               	goto	l863
  3426  0EA2                     u4340:
  3427                           	line	617
  3428                           	
  3429  0EA2                     l3278:	
  3430                           ;prev11.c: 614: {
  3431                           ;prev11.c: 616: char dest [32] ;
  3432                           ;prev11.c: 617: int startat=0;
  3433  0EA2  1283               	bcf	status, 5	;RP0=0, select bank0
  3434  0EA3  1303               	bcf	status, 6	;RP1=0, select bank0
  3435  0EA4  01D1               	clrf	(scroll@startat)
  3436  0EA5  01D2               	clrf	(scroll@startat+1)
  3437                           	line	618
  3438                           	
  3439  0EA6                     l3280:	
  3440                           ;prev11.c: 618: int endat=31;
  3441  0EA6  301F               	movlw	low(01Fh)
  3442  0EA7  00D3               	movwf	(scroll@endat)
  3443  0EA8  3000               	movlw	high(01Fh)
  3444  0EA9  00D4               	movwf	((scroll@endat))+1
  3445  0EAA  2EAB               	goto	l3282
  3446                           	line	619
  3447                           ;prev11.c: 619: START:
  3448                           	
  3449  0EAB                     l855:	
  3450                           	line	620
  3451                           	
  3452  0EAB                     l3282:	
  3453                           ;prev11.c: 620: i=0;
  3454  0EAB  1283               	bcf	status, 5	;RP0=0, select bank0
  3455  0EAC  1303               	bcf	status, 6	;RP1=0, select bank0
  3456  0EAD  01DA               	clrf	(scroll@i)
  3457  0EAE  01DB               	clrf	(scroll@i+1)
  3458                           	line	621
  3459                           ;prev11.c: 621: while(i++<32)
  3460  0EAF  2EC3               	goto	l3288
  3461                           	
  3462  0EB0                     l857:	
  3463                           	line	624
  3464                           	
  3465  0EB0                     l3284:	
  3466                           ;prev11.c: 622: {
  3467                           ;prev11.c: 624: delay(3000);
  3468  0EB0  30B8               	movlw	low(0BB8h)
  3469  0EB1  00F0               	movwf	(?_delay)
  3470  0EB2  300B               	movlw	high(0BB8h)
  3471  0EB3  00F1               	movwf	((?_delay))+1
  3472  0EB4  120A  158A  2348   	fcall	_delay
              120A  158A         
  3473                           	line	625
  3474                           	
  3475  0EB9                     l3286:	
  3476                           ;prev11.c: 625: cmd(0x1E);
  3477  0EB9  301E               	movlw	low(01Eh)
  3478  0EBA  00F8               	movwf	(?_cmd)
  3479  0EBB  3000               	movlw	high(01Eh)
  3480  0EBC  00F9               	movwf	((?_cmd))+1
  3481  0EBD  120A  158A  2371   	fcall	_cmd
              120A  158A         
  3482  0EC2  2EC3               	goto	l3288
  3483                           	line	628
  3484                           	
  3485  0EC3                     l856:	
  3486                           	line	621
  3487                           	
  3488  0EC3                     l3288:	
  3489  0EC3  3001               	movlw	low(01h)
  3490  0EC4  1283               	bcf	status, 5	;RP0=0, select bank0
  3491  0EC5  1303               	bcf	status, 6	;RP1=0, select bank0
  3492  0EC6  07DA               	addwf	(scroll@i),f
  3493  0EC7  1803               	skipnc
  3494  0EC8  0ADB               	incf	(scroll@i+1),f
  3495  0EC9  3000               	movlw	high(01h)
  3496  0ECA  07DB               	addwf	(scroll@i+1),f
  3497  0ECB  085B               	movf	((scroll@i+1)),w
  3498  0ECC  3A80               	xorlw	80h
  3499  0ECD  00FF               	movwf	btemp+1
  3500  0ECE  3080               	movlw	(high(021h))^80h
  3501  0ECF  027F               	subwf	btemp+1,w
  3502  0ED0  1D03               	skipz
  3503  0ED1  2ED4               	goto	u4355
  3504  0ED2  3021               	movlw	low(021h)
  3505  0ED3  025A               	subwf	((scroll@i)),w
  3506  0ED4                     u4355:
  3507                           
  3508  0ED4  1C03               	skipc
  3509  0ED5  2ED7               	goto	u4351
  3510  0ED6  2ED8               	goto	u4350
  3511  0ED7                     u4351:
  3512  0ED7  2EB0               	goto	l3284
  3513  0ED8                     u4350:
  3514  0ED8  2ED9               	goto	l3290
  3515                           	
  3516  0ED9                     l858:	
  3517                           	line	630
  3518                           	
  3519  0ED9                     l3290:	
  3520                           ;prev11.c: 628: }
  3521                           ;prev11.c: 630: i=0;
  3522  0ED9  1283               	bcf	status, 5	;RP0=0, select bank0
  3523  0EDA  1303               	bcf	status, 6	;RP1=0, select bank0
  3524  0EDB  01DA               	clrf	(scroll@i)
  3525  0EDC  01DB               	clrf	(scroll@i+1)
  3526                           	line	631
  3527                           ;prev11.c: 631: while(i++<32)
  3528  0EDD  2EF1               	goto	l3296
  3529                           	
  3530  0EDE                     l860:	
  3531                           	line	634
  3532                           	
  3533  0EDE                     l3292:	
  3534                           ;prev11.c: 632: {
  3535                           ;prev11.c: 634: delay(3000);
  3536  0EDE  30B8               	movlw	low(0BB8h)
  3537  0EDF  00F0               	movwf	(?_delay)
  3538  0EE0  300B               	movlw	high(0BB8h)
  3539  0EE1  00F1               	movwf	((?_delay))+1
  3540  0EE2  120A  158A  2348   	fcall	_delay
              120A  158A         
  3541                           	line	635
  3542                           	
  3543  0EE7                     l3294:	
  3544                           ;prev11.c: 635: cmd(0x18);
  3545  0EE7  3018               	movlw	low(018h)
  3546  0EE8  00F8               	movwf	(?_cmd)
  3547  0EE9  3000               	movlw	high(018h)
  3548  0EEA  00F9               	movwf	((?_cmd))+1
  3549  0EEB  120A  158A  2371   	fcall	_cmd
              120A  158A         
  3550  0EF0  2EF1               	goto	l3296
  3551                           	line	638
  3552                           	
  3553  0EF1                     l859:	
  3554                           	line	631
  3555                           	
  3556  0EF1                     l3296:	
  3557  0EF1  3001               	movlw	low(01h)
  3558  0EF2  1283               	bcf	status, 5	;RP0=0, select bank0
  3559  0EF3  1303               	bcf	status, 6	;RP1=0, select bank0
  3560  0EF4  07DA               	addwf	(scroll@i),f
  3561  0EF5  1803               	skipnc
  3562  0EF6  0ADB               	incf	(scroll@i+1),f
  3563  0EF7  3000               	movlw	high(01h)
  3564  0EF8  07DB               	addwf	(scroll@i+1),f
  3565  0EF9  085B               	movf	((scroll@i+1)),w
  3566  0EFA  3A80               	xorlw	80h
  3567  0EFB  00FF               	movwf	btemp+1
  3568  0EFC  3080               	movlw	(high(021h))^80h
  3569  0EFD  027F               	subwf	btemp+1,w
  3570  0EFE  1D03               	skipz
  3571  0EFF  2F02               	goto	u4365
  3572  0F00  3021               	movlw	low(021h)
  3573  0F01  025A               	subwf	((scroll@i)),w
  3574  0F02                     u4365:
  3575                           
  3576  0F02  1C03               	skipc
  3577  0F03  2F05               	goto	u4361
  3578  0F04  2F06               	goto	u4360
  3579  0F05                     u4361:
  3580  0F05  2EDE               	goto	l3292
  3581  0F06                     u4360:
  3582  0F06  2F07               	goto	l3298
  3583                           	
  3584  0F07                     l861:	
  3585                           	line	639
  3586                           	
  3587  0F07                     l3298:	
  3588                           ;prev11.c: 638: }
  3589                           ;prev11.c: 639: if(loopn++<loops)
  3590  0F07  1283               	bcf	status, 5	;RP0=0, select bank0
  3591  0F08  1303               	bcf	status, 6	;RP1=0, select bank0
  3592  0F09  0856               	movf	(scroll@loopn+1),w
  3593  0F0A  00CB               	movwf	(??_scroll+0)+0+1
  3594  0F0B  0855               	movf	(scroll@loopn),w
  3595  0F0C  00CA               	movwf	(??_scroll+0)+0
  3596  0F0D  3001               	movlw	(01h)
  3597  0F0E  07D5               	addwf	(scroll@loopn),f
  3598  0F0F  1803               	skipnc
  3599  0F10  0AD6               	incf	(scroll@loopn+1),f
  3600  0F11  084B               	movf	1+(??_scroll+0)+0,w
  3601  0F12  3A80               	xorlw	80h
  3602  0F13  00CC               	movwf	(??_scroll+2)+0
  3603  0F14  0849               	movf	(scroll@loops+1),w
  3604  0F15  3A80               	xorlw	80h
  3605  0F16  024C               	subwf	(??_scroll+2)+0,w
  3606  0F17  1D03               	skipz
  3607  0F18  2F1B               	goto	u4375
  3608  0F19  0848               	movf	(scroll@loops),w
  3609  0F1A  024A               	subwf	0+(??_scroll+0)+0,w
  3610  0F1B                     u4375:
  3611                           
  3612  0F1B  1803               	skipnc
  3613  0F1C  2F1E               	goto	u4371
  3614  0F1D  2F1F               	goto	u4370
  3615  0F1E                     u4371:
  3616  0F1E  2F22               	goto	l863
  3617  0F1F                     u4370:
  3618  0F1F  2EAB               	goto	l3282
  3619                           	line	640
  3620                           	
  3621  0F20                     l3300:	
  3622                           ;prev11.c: 640: goto START;
  3623  0F20  2EAB               	goto	l3282
  3624                           	
  3625  0F21                     l862:	
  3626  0F21  2F22               	goto	l863
  3627                           	line	641
  3628                           	
  3629  0F22                     l854:	
  3630                           	line	646
  3631                           	
  3632  0F22                     l863:	
  3633  0F22  0008               	return
  3634                           	opt stack 0
  3635                           GLOBAL	__end_of_scroll
  3636  0F23                     	__end_of_scroll:
  3637 ;; =============== function _scroll ends ============
  3638                           
  3639                           	signat	_scroll,8312
  3640                           	global	_init_fun
  3641                           psect	text535,local,class=CODE,delta=2
  3642                           global __ptext535
  3643  0BBB                     __ptext535:
  3644                           
  3645 ;; *************** function _init_fun *****************
  3646 ;; Defined at:
  3647 ;;		line 133 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;		None
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;		None               void
  3654 ;; Registers used:
  3655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3661 ;;      Params:         0       0       0       0       0
  3662 ;;      Locals:         0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0
  3664 ;;      Totals:         0       0       0       0       0
  3665 ;;Total ram usage:        0 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    5
  3668 ;; This function calls:
  3669 ;;		_write
  3670 ;; This function is called by:
  3671 ;;		_startswitch
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           psect	text535
  3675                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3676                           	line	133
  3677                           	global	__size_of_init_fun
  3678  0026                     	__size_of_init_fun	equ	__end_of_init_fun-_init_fun
  3679                           	
  3680  0BBB                     _init_fun:	
  3681                           	opt	stack 0
  3682                           ; Regs used in _init_fun: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3683                           	line	134
  3684                           	
  3685  0BBB                     l3252:	
  3686                           ;prev11.c: 134: if(done_init==0)
  3687  0BBB  1283               	bcf	status, 5	;RP0=0, select bank0
  3688  0BBC  1303               	bcf	status, 6	;RP1=0, select bank0
  3689  0BBD  086D               	movf	((_done_init+1)),w
  3690  0BBE  046C               	iorwf	((_done_init)),w
  3691  0BBF  1D03               	skipz
  3692  0BC0  2BC2               	goto	u4321
  3693  0BC1  2BC3               	goto	u4320
  3694  0BC2                     u4321:
  3695  0BC2  2BE0               	goto	l698
  3696  0BC3                     u4320:
  3697                           	line	137
  3698                           	
  3699  0BC3                     l3254:	
  3700                           ;prev11.c: 135: {
  3701                           ;prev11.c: 137: TRISA=0b110000;
  3702  0BC3  3030               	movlw	(030h)
  3703  0BC4  1683               	bsf	status, 5	;RP0=1, select bank1
  3704  0BC5  1303               	bcf	status, 6	;RP1=0, select bank1
  3705  0BC6  0085               	movwf	(133)^080h	;volatile
  3706                           	line	138
  3707                           	
  3708  0BC7                     l3256:	
  3709                           ;prev11.c: 138: PORTA=0x0;
  3710  0BC7  1283               	bcf	status, 5	;RP0=0, select bank0
  3711  0BC8  1303               	bcf	status, 6	;RP1=0, select bank0
  3712  0BC9  0185               	clrf	(5)	;volatile
  3713                           	line	139
  3714                           	
  3715  0BCA                     l3258:	
  3716                           ;prev11.c: 139: done_init=1;
  3717  0BCA  3001               	movlw	low(01h)
  3718  0BCB  00EC               	movwf	(_done_init)
  3719  0BCC  3000               	movlw	high(01h)
  3720  0BCD  00ED               	movwf	((_done_init))+1
  3721                           	line	140
  3722                           	
  3723  0BCE                     l3260:	
  3724                           ;prev11.c: 140: write("Sensing...",1,1);
  3725  0BCE  3074               	movlw	low((STR_1-__stringbase))
  3726  0BCF  00C2               	movwf	(?_write)
  3727  0BD0  3080               	movlw	80h
  3728  0BD1  00C3               	movwf	(?_write+1)
  3729  0BD2  3001               	movlw	low(01h)
  3730  0BD3  00C4               	movwf	0+(?_write)+02h
  3731  0BD4  3000               	movlw	high(01h)
  3732  0BD5  00C5               	movwf	(0+(?_write)+02h)+1
  3733  0BD6  3001               	movlw	low(01h)
  3734  0BD7  00C6               	movwf	0+(?_write)+04h
  3735  0BD8  3000               	movlw	high(01h)
  3736  0BD9  00C7               	movwf	(0+(?_write)+04h)+1
  3737  0BDA  120A  158A  258B   	fcall	_write
              120A  158A         
  3738  0BDF  2BE0               	goto	l698
  3739                           	line	141
  3740                           	
  3741  0BE0                     l697:	
  3742                           	line	142
  3743                           	
  3744  0BE0                     l698:	
  3745  0BE0  0008               	return
  3746                           	opt stack 0
  3747                           GLOBAL	__end_of_init_fun
  3748  0BE1                     	__end_of_init_fun:
  3749 ;; =============== function _init_fun ends ============
  3750                           
  3751                           	signat	_init_fun,88
  3752                           	global	_write
  3753                           psect	text536,local,class=CODE,delta=2
  3754                           global __ptext536
  3755  0D8B                     __ptext536:
  3756                           
  3757 ;; *************** function _write *****************
  3758 ;; Defined at:
  3759 ;;		line 578 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  str             2   34[BANK0 ] PTR unsigned char 
  3762 ;;		 -> STR_15(4), STR_12(4), STR_9(4), getlogicseq@str(32), 
  3763 ;;		 -> STR_6(8), STR_5(15), STR_4(38), logic_d3(5), 
  3764 ;;		 -> logic_d2(5), logic_d1(5), lo(5), STR_1(11), 
  3765 ;;  line            2   36[BANK0 ] int 
  3766 ;;  erase           2   38[BANK0 ] int 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  i               2   12[COMMON] int 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;		None               void
  3771 ;; Registers used:
  3772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3778 ;;      Params:         0       6       0       0       0
  3779 ;;      Locals:         2       0       0       0       0
  3780 ;;      Temps:          2       0       0       0       0
  3781 ;;      Totals:         4       6       0       0       0
  3782 ;;Total ram usage:       10 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    4
  3785 ;; This function calls:
  3786 ;;		_clearlcd
  3787 ;;		_cmd
  3788 ;;		_dat
  3789 ;; This function is called by:
  3790 ;;		_init_fun
  3791 ;;		_startswitch
  3792 ;;		_getlogicseq
  3793 ;;		_scroll
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           psect	text536
  3797                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3798                           	line	578
  3799                           	global	__size_of_write
  3800  0064                     	__size_of_write	equ	__end_of_write-_write
  3801                           	
  3802  0D8B                     _write:	
  3803                           	opt	stack 1
  3804                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3805                           	line	579
  3806                           	
  3807  0D8B                     l3234:	
  3808                           ;prev11.c: 579: if(erase==1)
  3809  0D8B  3001               	movlw	01h
  3810  0D8C  1283               	bcf	status, 5	;RP0=0, select bank0
  3811  0D8D  1303               	bcf	status, 6	;RP1=0, select bank0
  3812  0D8E  0646               	xorwf	(write@erase),w
  3813  0D8F  0447               	iorwf	(write@erase+1),w
  3814  0D90  1D03               	skipz
  3815  0D91  2D93               	goto	u4291
  3816  0D92  2D94               	goto	u4290
  3817  0D93                     u4291:
  3818  0D93  2D9A               	goto	l3238
  3819  0D94                     u4290:
  3820                           	line	580
  3821                           	
  3822  0D94                     l3236:	
  3823                           ;prev11.c: 580: clearlcd();
  3824  0D94  120A  158A  2314   	fcall	_clearlcd
              120A  158A         
  3825  0D99  2D9A               	goto	l3238
  3826                           	
  3827  0D9A                     l842:	
  3828                           	line	582
  3829                           	
  3830  0D9A                     l3238:	
  3831                           ;prev11.c: 582: if(line==2)
  3832  0D9A  3002               	movlw	02h
  3833  0D9B  1283               	bcf	status, 5	;RP0=0, select bank0
  3834  0D9C  1303               	bcf	status, 6	;RP1=0, select bank0
  3835  0D9D  0644               	xorwf	(write@line),w
  3836  0D9E  0445               	iorwf	(write@line+1),w
  3837  0D9F  1D03               	skipz
  3838  0DA0  2DA2               	goto	u4301
  3839  0DA1  2DA3               	goto	u4300
  3840  0DA2                     u4301:
  3841  0DA2  2DAD               	goto	l3242
  3842  0DA3                     u4300:
  3843                           	line	583
  3844                           	
  3845  0DA3                     l3240:	
  3846                           ;prev11.c: 583: cmd(0xC0);
  3847  0DA3  30C0               	movlw	low(0C0h)
  3848  0DA4  00F8               	movwf	(?_cmd)
  3849  0DA5  3000               	movlw	high(0C0h)
  3850  0DA6  00F9               	movwf	((?_cmd))+1
  3851  0DA7  120A  158A  2371   	fcall	_cmd
              120A  158A         
  3852  0DAC  2DB7               	goto	l3244
  3853                           	line	584
  3854                           	
  3855  0DAD                     l843:	
  3856                           	line	585
  3857                           	
  3858  0DAD                     l3242:	
  3859                           ;prev11.c: 584: else
  3860                           ;prev11.c: 585: cmd(0x2);
  3861  0DAD  3002               	movlw	low(02h)
  3862  0DAE  00F8               	movwf	(?_cmd)
  3863  0DAF  3000               	movlw	high(02h)
  3864  0DB0  00F9               	movwf	((?_cmd))+1
  3865  0DB1  120A  158A  2371   	fcall	_cmd
              120A  158A         
  3866  0DB6  2DB7               	goto	l3244
  3867                           	
  3868  0DB7                     l844:	
  3869                           	line	587
  3870                           	
  3871  0DB7                     l3244:	
  3872                           ;prev11.c: 587: int i=0;
  3873  0DB7  01FC               	clrf	(write@i)
  3874  0DB8  01FD               	clrf	(write@i+1)
  3875                           	line	588
  3876                           ;prev11.c: 588: while(str[i]!='\0')
  3877  0DB9  2DDA               	goto	l3250
  3878                           	
  3879  0DBA                     l846:	
  3880                           	line	590
  3881                           	
  3882  0DBA                     l3246:	
  3883                           ;prev11.c: 589: {
  3884                           ;prev11.c: 590: dat(str[i]);
  3885  0DBA  087C               	movf	(write@i),w
  3886  0DBB  1283               	bcf	status, 5	;RP0=0, select bank0
  3887  0DBC  1303               	bcf	status, 6	;RP1=0, select bank0
  3888  0DBD  0742               	addwf	(write@str),w
  3889  0DBE  0084               	movwf	fsr0
  3890  0DBF  0843               	movf	(write@str+1),w
  3891  0DC0  1803               	skipnc
  3892  0DC1  0A43               	incf	(write@str+1),w
  3893  0DC2  00FF               	movwf	btemp+1
  3894  0DC3  120A  118A  2003   	fcall	stringtab
              120A  158A         
  3895  0DC8  00FA               	movwf	(??_write+0)+0
  3896  0DC9  01FB               	clrf	(??_write+0)+0+1
  3897  0DCA  087A               	movf	0+(??_write+0)+0,w
  3898  0DCB  00F8               	movwf	(?_dat)
  3899  0DCC  087B               	movf	1+(??_write+0)+0,w
  3900  0DCD  00F9               	movwf	(?_dat+1)
  3901  0DCE  120A  158A  2396   	fcall	_dat
              120A  158A         
  3902                           	line	591
  3903                           	
  3904  0DD3                     l3248:	
  3905                           ;prev11.c: 591: i++;
  3906  0DD3  3001               	movlw	low(01h)
  3907  0DD4  07FC               	addwf	(write@i),f
  3908  0DD5  1803               	skipnc
  3909  0DD6  0AFD               	incf	(write@i+1),f
  3910  0DD7  3000               	movlw	high(01h)
  3911  0DD8  07FD               	addwf	(write@i+1),f
  3912  0DD9  2DDA               	goto	l3250
  3913                           	line	592
  3914                           	
  3915  0DDA                     l845:	
  3916                           	line	588
  3917                           	
  3918  0DDA                     l3250:	
  3919  0DDA  087C               	movf	(write@i),w
  3920  0DDB  1283               	bcf	status, 5	;RP0=0, select bank0
  3921  0DDC  1303               	bcf	status, 6	;RP1=0, select bank0
  3922  0DDD  0742               	addwf	(write@str),w
  3923  0DDE  0084               	movwf	fsr0
  3924  0DDF  0843               	movf	(write@str+1),w
  3925  0DE0  1803               	skipnc
  3926  0DE1  0A43               	incf	(write@str+1),w
  3927  0DE2  00FF               	movwf	btemp+1
  3928  0DE3  120A  118A  2003   	fcall	stringtab
              120A  158A         
  3929  0DE8  3800               	iorlw	0
  3930  0DE9  1D03               	skipz
  3931  0DEA  2DEC               	goto	u4311
  3932  0DEB  2DED               	goto	u4310
  3933  0DEC                     u4311:
  3934  0DEC  2DBA               	goto	l3246
  3935  0DED                     u4310:
  3936  0DED  2DEE               	goto	l848
  3937                           	
  3938  0DEE                     l847:	
  3939                           	line	595
  3940                           	
  3941  0DEE                     l848:	
  3942  0DEE  0008               	return
  3943                           	opt stack 0
  3944                           GLOBAL	__end_of_write
  3945  0DEF                     	__end_of_write:
  3946 ;; =============== function _write ends ============
  3947                           
  3948                           	signat	_write,12408
  3949                           	global	_clearlcd
  3950                           psect	text537,local,class=CODE,delta=2
  3951                           global __ptext537
  3952  0B14                     __ptext537:
  3953                           
  3954 ;; *************** function _clearlcd *****************
  3955 ;; Defined at:
  3956 ;;		line 521 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;		None
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;		None
  3961 ;; Return value:  Size  Location     Type
  3962 ;;		None               void
  3963 ;; Registers used:
  3964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3970 ;;      Params:         0       0       0       0       0
  3971 ;;      Locals:         0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0
  3973 ;;      Totals:         0       0       0       0       0
  3974 ;;Total ram usage:        0 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    3
  3977 ;; This function calls:
  3978 ;;		_cmd
  3979 ;; This function is called by:
  3980 ;;		_write
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           psect	text537
  3984                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3985                           	line	521
  3986                           	global	__size_of_clearlcd
  3987  000A                     	__size_of_clearlcd	equ	__end_of_clearlcd-_clearlcd
  3988                           	
  3989  0B14                     _clearlcd:	
  3990                           	opt	stack 1
  3991                           ; Regs used in _clearlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3992                           	line	522
  3993                           	
  3994  0B14                     l3232:	
  3995                           ;prev11.c: 522: cmd(0x01);
  3996  0B14  3001               	movlw	low(01h)
  3997  0B15  00F8               	movwf	(?_cmd)
  3998  0B16  3000               	movlw	high(01h)
  3999  0B17  00F9               	movwf	((?_cmd))+1
  4000  0B18  120A  158A  2371   	fcall	_cmd
              120A  158A         
  4001                           	line	523
  4002                           	
  4003  0B1D                     l826:	
  4004  0B1D  0008               	return
  4005                           	opt stack 0
  4006                           GLOBAL	__end_of_clearlcd
  4007  0B1E                     	__end_of_clearlcd:
  4008 ;; =============== function _clearlcd ends ============
  4009                           
  4010                           	signat	_clearlcd,88
  4011                           	global	_scan
  4012                           psect	text538,local,class=CODE,delta=2
  4013                           global __ptext538
  4014  0161                     __ptext538:
  4015                           
  4016 ;; *************** function _scan *****************
  4017 ;; Defined at:
  4018 ;;		line 660 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  2    4[COMMON] int 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4032 ;;      Params:         2       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0
  4035 ;;      Totals:         2       0       0       0       0
  4036 ;;Total ram usage:        2 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    2
  4039 ;; This function calls:
  4040 ;;		_actrow
  4041 ;; This function is called by:
  4042 ;;		_getlogicseq
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           psect	text538
  4046                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4047                           	line	660
  4048                           	global	__size_of_scan
  4049  00E8                     	__size_of_scan	equ	__end_of_scan-_scan
  4050                           	
  4051  0161                     _scan:	
  4052                           	opt	stack 4
  4053                           ; Regs used in _scan: [wreg+status,2+status,0+pclath+cstack]
  4054                           	line	661
  4055                           	
  4056  0161                     l3124:	
  4057                           ;prev11.c: 661: actrow(1) ;
  4058  0161  3001               	movlw	low(01h)
  4059  0162  00F2               	movwf	(?_actrow)
  4060  0163  3000               	movlw	high(01h)
  4061  0164  00F3               	movwf	((?_actrow))+1
  4062  0165  120A  158A  2504   	fcall	_actrow
              120A  118A         
  4063                           	line	662
  4064                           	
  4065  016A                     l3126:	
  4066                           ;prev11.c: 662: if( RC2==1)
  4067  016A  1283               	bcf	status, 5	;RP0=0, select bank0
  4068  016B  1303               	bcf	status, 6	;RP1=0, select bank0
  4069  016C  1D07               	btfss	(58/8),(58)&7
  4070  016D  296F               	goto	u4131
  4071  016E  2970               	goto	u4130
  4072  016F                     u4131:
  4073  016F  2975               	goto	l869
  4074  0170                     u4130:
  4075                           	line	663
  4076                           	
  4077  0170                     l3128:	
  4078                           ;prev11.c: 663: return 0;
  4079  0170  01F4               	clrf	(?_scan)
  4080  0171  01F5               	clrf	(?_scan+1)
  4081  0172  2A48               	goto	l870
  4082                           	
  4083  0173                     l3130:	
  4084  0173  2A48               	goto	l870
  4085                           	
  4086  0174                     l3132:	
  4087  0174  2998               	goto	l3150
  4088                           	line	664
  4089                           	
  4090  0175                     l869:	
  4091                           ;prev11.c: 664: else if(RC3==1)
  4092  0175  1D87               	btfss	(59/8),(59)&7
  4093  0176  2978               	goto	u4141
  4094  0177  2979               	goto	u4140
  4095  0178                     u4141:
  4096  0178  2980               	goto	l872
  4097  0179                     u4140:
  4098                           	line	665
  4099                           	
  4100  0179                     l3134:	
  4101                           ;prev11.c: 665: return 1;
  4102  0179  3001               	movlw	low(01h)
  4103  017A  00F4               	movwf	(?_scan)
  4104  017B  3000               	movlw	high(01h)
  4105  017C  00F5               	movwf	((?_scan))+1
  4106  017D  2A48               	goto	l870
  4107                           	
  4108  017E                     l3136:	
  4109  017E  2A48               	goto	l870
  4110                           	
  4111  017F                     l3138:	
  4112  017F  2998               	goto	l3150
  4113                           	line	666
  4114                           	
  4115  0180                     l872:	
  4116                           ;prev11.c: 666: else if(RB6==1)
  4117  0180  1F06               	btfss	(54/8),(54)&7
  4118  0181  2983               	goto	u4151
  4119  0182  2984               	goto	u4150
  4120  0183                     u4151:
  4121  0183  298B               	goto	l874
  4122  0184                     u4150:
  4123                           	line	667
  4124                           	
  4125  0184                     l3140:	
  4126                           ;prev11.c: 667: return 2;
  4127  0184  3002               	movlw	low(02h)
  4128  0185  00F4               	movwf	(?_scan)
  4129  0186  3000               	movlw	high(02h)
  4130  0187  00F5               	movwf	((?_scan))+1
  4131  0188  2A48               	goto	l870
  4132                           	
  4133  0189                     l3142:	
  4134  0189  2A48               	goto	l870
  4135                           	
  4136  018A                     l3144:	
  4137  018A  2998               	goto	l3150
  4138                           	line	668
  4139                           	
  4140  018B                     l874:	
  4141                           ;prev11.c: 668: else if(RB7==1)
  4142  018B  1F86               	btfss	(55/8),(55)&7
  4143  018C  298E               	goto	u4161
  4144  018D  298F               	goto	u4160
  4145  018E                     u4161:
  4146  018E  2998               	goto	l3150
  4147  018F                     u4160:
  4148                           	line	669
  4149                           	
  4150  018F                     l3146:	
  4151                           ;prev11.c: 669: return 3;
  4152  018F  3003               	movlw	low(03h)
  4153  0190  00F4               	movwf	(?_scan)
  4154  0191  3000               	movlw	high(03h)
  4155  0192  00F5               	movwf	((?_scan))+1
  4156  0193  2A48               	goto	l870
  4157                           	
  4158  0194                     l3148:	
  4159  0194  2A48               	goto	l870
  4160                           	
  4161  0195                     l876:	
  4162  0195  2998               	goto	l3150
  4163                           	line	671
  4164                           	
  4165  0196                     l875:	
  4166  0196  2998               	goto	l3150
  4167                           	
  4168  0197                     l873:	
  4169  0197  2998               	goto	l3150
  4170                           	
  4171  0198                     l871:	
  4172                           	
  4173  0198                     l3150:	
  4174                           ;prev11.c: 671: actrow(2) ;
  4175  0198  3002               	movlw	low(02h)
  4176  0199  00F2               	movwf	(?_actrow)
  4177  019A  3000               	movlw	high(02h)
  4178  019B  00F3               	movwf	((?_actrow))+1
  4179  019C  120A  158A  2504   	fcall	_actrow
              120A  118A         
  4180                           	line	673
  4181                           	
  4182  01A1                     l3152:	
  4183                           ;prev11.c: 673: if( RC2==1)
  4184  01A1  1283               	bcf	status, 5	;RP0=0, select bank0
  4185  01A2  1303               	bcf	status, 6	;RP1=0, select bank0
  4186  01A3  1D07               	btfss	(58/8),(58)&7
  4187  01A4  29A6               	goto	u4171
  4188  01A5  29A7               	goto	u4170
  4189  01A6                     u4171:
  4190  01A6  29AE               	goto	l877
  4191  01A7                     u4170:
  4192                           	line	674
  4193                           	
  4194  01A7                     l3154:	
  4195                           ;prev11.c: 674: return 4;
  4196  01A7  3004               	movlw	low(04h)
  4197  01A8  00F4               	movwf	(?_scan)
  4198  01A9  3000               	movlw	high(04h)
  4199  01AA  00F5               	movwf	((?_scan))+1
  4200  01AB  2A48               	goto	l870
  4201                           	
  4202  01AC                     l3156:	
  4203  01AC  2A48               	goto	l870
  4204                           	
  4205  01AD                     l3158:	
  4206  01AD  29D1               	goto	l3176
  4207                           	line	675
  4208                           	
  4209  01AE                     l877:	
  4210                           ;prev11.c: 675: else if(RC3==1)
  4211  01AE  1D87               	btfss	(59/8),(59)&7
  4212  01AF  29B1               	goto	u4181
  4213  01B0  29B2               	goto	u4180
  4214  01B1                     u4181:
  4215  01B1  29B9               	goto	l879
  4216  01B2                     u4180:
  4217                           	line	676
  4218                           	
  4219  01B2                     l3160:	
  4220                           ;prev11.c: 676: return 5;
  4221  01B2  3005               	movlw	low(05h)
  4222  01B3  00F4               	movwf	(?_scan)
  4223  01B4  3000               	movlw	high(05h)
  4224  01B5  00F5               	movwf	((?_scan))+1
  4225  01B6  2A48               	goto	l870
  4226                           	
  4227  01B7                     l3162:	
  4228  01B7  2A48               	goto	l870
  4229                           	
  4230  01B8                     l3164:	
  4231  01B8  29D1               	goto	l3176
  4232                           	line	677
  4233                           	
  4234  01B9                     l879:	
  4235                           ;prev11.c: 677: else if(RB6==1)
  4236  01B9  1F06               	btfss	(54/8),(54)&7
  4237  01BA  29BC               	goto	u4191
  4238  01BB  29BD               	goto	u4190
  4239  01BC                     u4191:
  4240  01BC  29C4               	goto	l881
  4241  01BD                     u4190:
  4242                           	line	678
  4243                           	
  4244  01BD                     l3166:	
  4245                           ;prev11.c: 678: return 6;
  4246  01BD  3006               	movlw	low(06h)
  4247  01BE  00F4               	movwf	(?_scan)
  4248  01BF  3000               	movlw	high(06h)
  4249  01C0  00F5               	movwf	((?_scan))+1
  4250  01C1  2A48               	goto	l870
  4251                           	
  4252  01C2                     l3168:	
  4253  01C2  2A48               	goto	l870
  4254                           	
  4255  01C3                     l3170:	
  4256  01C3  29D1               	goto	l3176
  4257                           	line	679
  4258                           	
  4259  01C4                     l881:	
  4260                           ;prev11.c: 679: else if(RB7==1)
  4261  01C4  1F86               	btfss	(55/8),(55)&7
  4262  01C5  29C7               	goto	u4201
  4263  01C6  29C8               	goto	u4200
  4264  01C7                     u4201:
  4265  01C7  29D1               	goto	l3176
  4266  01C8                     u4200:
  4267                           	line	680
  4268                           	
  4269  01C8                     l3172:	
  4270                           ;prev11.c: 680: return 7;
  4271  01C8  3007               	movlw	low(07h)
  4272  01C9  00F4               	movwf	(?_scan)
  4273  01CA  3000               	movlw	high(07h)
  4274  01CB  00F5               	movwf	((?_scan))+1
  4275  01CC  2A48               	goto	l870
  4276                           	
  4277  01CD                     l3174:	
  4278  01CD  2A48               	goto	l870
  4279                           	
  4280  01CE                     l883:	
  4281  01CE  29D1               	goto	l3176
  4282                           	line	682
  4283                           	
  4284  01CF                     l882:	
  4285  01CF  29D1               	goto	l3176
  4286                           	
  4287  01D0                     l880:	
  4288  01D0  29D1               	goto	l3176
  4289                           	
  4290  01D1                     l878:	
  4291                           	
  4292  01D1                     l3176:	
  4293                           ;prev11.c: 682: actrow(3) ;
  4294  01D1  3003               	movlw	low(03h)
  4295  01D2  00F2               	movwf	(?_actrow)
  4296  01D3  3000               	movlw	high(03h)
  4297  01D4  00F3               	movwf	((?_actrow))+1
  4298  01D5  120A  158A  2504   	fcall	_actrow
              120A  118A         
  4299                           	line	684
  4300                           	
  4301  01DA                     l3178:	
  4302                           ;prev11.c: 684: if( RC2==1)
  4303  01DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4304  01DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4305  01DC  1D07               	btfss	(58/8),(58)&7
  4306  01DD  29DF               	goto	u4211
  4307  01DE  29E0               	goto	u4210
  4308  01DF                     u4211:
  4309  01DF  29E7               	goto	l884
  4310  01E0                     u4210:
  4311                           	line	685
  4312                           	
  4313  01E0                     l3180:	
  4314                           ;prev11.c: 685: return 8;
  4315  01E0  3008               	movlw	low(08h)
  4316  01E1  00F4               	movwf	(?_scan)
  4317  01E2  3000               	movlw	high(08h)
  4318  01E3  00F5               	movwf	((?_scan))+1
  4319  01E4  2A48               	goto	l870
  4320                           	
  4321  01E5                     l3182:	
  4322  01E5  2A48               	goto	l870
  4323                           	
  4324  01E6                     l3184:	
  4325  01E6  2A0A               	goto	l3202
  4326                           	line	686
  4327                           	
  4328  01E7                     l884:	
  4329                           ;prev11.c: 686: else if(RC3==1)
  4330  01E7  1D87               	btfss	(59/8),(59)&7
  4331  01E8  29EA               	goto	u4221
  4332  01E9  29EB               	goto	u4220
  4333  01EA                     u4221:
  4334  01EA  29F2               	goto	l886
  4335  01EB                     u4220:
  4336                           	line	687
  4337                           	
  4338  01EB                     l3186:	
  4339                           ;prev11.c: 687: return 9;
  4340  01EB  3009               	movlw	low(09h)
  4341  01EC  00F4               	movwf	(?_scan)
  4342  01ED  3000               	movlw	high(09h)
  4343  01EE  00F5               	movwf	((?_scan))+1
  4344  01EF  2A48               	goto	l870
  4345                           	
  4346  01F0                     l3188:	
  4347  01F0  2A48               	goto	l870
  4348                           	
  4349  01F1                     l3190:	
  4350  01F1  2A0A               	goto	l3202
  4351                           	line	688
  4352                           	
  4353  01F2                     l886:	
  4354                           ;prev11.c: 688: else if(RB6==1)
  4355  01F2  1F06               	btfss	(54/8),(54)&7
  4356  01F3  29F5               	goto	u4231
  4357  01F4  29F6               	goto	u4230
  4358  01F5                     u4231:
  4359  01F5  29FD               	goto	l888
  4360  01F6                     u4230:
  4361                           	line	689
  4362                           	
  4363  01F6                     l3192:	
  4364                           ;prev11.c: 689: return 10;
  4365  01F6  300A               	movlw	low(0Ah)
  4366  01F7  00F4               	movwf	(?_scan)
  4367  01F8  3000               	movlw	high(0Ah)
  4368  01F9  00F5               	movwf	((?_scan))+1
  4369  01FA  2A48               	goto	l870
  4370                           	
  4371  01FB                     l3194:	
  4372  01FB  2A48               	goto	l870
  4373                           	
  4374  01FC                     l3196:	
  4375  01FC  2A0A               	goto	l3202
  4376                           	line	690
  4377                           	
  4378  01FD                     l888:	
  4379                           ;prev11.c: 690: else if(RB7==1)
  4380  01FD  1F86               	btfss	(55/8),(55)&7
  4381  01FE  2A00               	goto	u4241
  4382  01FF  2A01               	goto	u4240
  4383  0200                     u4241:
  4384  0200  2A0A               	goto	l3202
  4385  0201                     u4240:
  4386                           	line	691
  4387                           	
  4388  0201                     l3198:	
  4389                           ;prev11.c: 691: return 11;
  4390  0201  300B               	movlw	low(0Bh)
  4391  0202  00F4               	movwf	(?_scan)
  4392  0203  3000               	movlw	high(0Bh)
  4393  0204  00F5               	movwf	((?_scan))+1
  4394  0205  2A48               	goto	l870
  4395                           	
  4396  0206                     l3200:	
  4397  0206  2A48               	goto	l870
  4398                           	
  4399  0207                     l890:	
  4400  0207  2A0A               	goto	l3202
  4401                           	line	694
  4402                           	
  4403  0208                     l889:	
  4404  0208  2A0A               	goto	l3202
  4405                           	
  4406  0209                     l887:	
  4407  0209  2A0A               	goto	l3202
  4408                           	
  4409  020A                     l885:	
  4410                           	
  4411  020A                     l3202:	
  4412                           ;prev11.c: 694: actrow(4) ;
  4413  020A  3004               	movlw	low(04h)
  4414  020B  00F2               	movwf	(?_actrow)
  4415  020C  3000               	movlw	high(04h)
  4416  020D  00F3               	movwf	((?_actrow))+1
  4417  020E  120A  158A  2504   	fcall	_actrow
              120A  118A         
  4418                           	line	696
  4419                           	
  4420  0213                     l3204:	
  4421                           ;prev11.c: 696: if( RC2==1)
  4422  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  4423  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  4424  0215  1D07               	btfss	(58/8),(58)&7
  4425  0216  2A18               	goto	u4251
  4426  0217  2A19               	goto	u4250
  4427  0218                     u4251:
  4428  0218  2A20               	goto	l891
  4429  0219                     u4250:
  4430                           	line	697
  4431                           	
  4432  0219                     l3206:	
  4433                           ;prev11.c: 697: return 12;
  4434  0219  300C               	movlw	low(0Ch)
  4435  021A  00F4               	movwf	(?_scan)
  4436  021B  3000               	movlw	high(0Ch)
  4437  021C  00F5               	movwf	((?_scan))+1
  4438  021D  2A48               	goto	l870
  4439                           	
  4440  021E                     l3208:	
  4441  021E  2A48               	goto	l870
  4442                           	
  4443  021F                     l3210:	
  4444  021F  2A43               	goto	l3228
  4445                           	line	698
  4446                           	
  4447  0220                     l891:	
  4448                           ;prev11.c: 698: else if(RC3==1)
  4449  0220  1D87               	btfss	(59/8),(59)&7
  4450  0221  2A23               	goto	u4261
  4451  0222  2A24               	goto	u4260
  4452  0223                     u4261:
  4453  0223  2A2B               	goto	l893
  4454  0224                     u4260:
  4455                           	line	699
  4456                           	
  4457  0224                     l3212:	
  4458                           ;prev11.c: 699: return 13;
  4459  0224  300D               	movlw	low(0Dh)
  4460  0225  00F4               	movwf	(?_scan)
  4461  0226  3000               	movlw	high(0Dh)
  4462  0227  00F5               	movwf	((?_scan))+1
  4463  0228  2A48               	goto	l870
  4464                           	
  4465  0229                     l3214:	
  4466  0229  2A48               	goto	l870
  4467                           	
  4468  022A                     l3216:	
  4469  022A  2A43               	goto	l3228
  4470                           	line	700
  4471                           	
  4472  022B                     l893:	
  4473                           ;prev11.c: 700: else if(RB6==1)
  4474  022B  1F06               	btfss	(54/8),(54)&7
  4475  022C  2A2E               	goto	u4271
  4476  022D  2A2F               	goto	u4270
  4477  022E                     u4271:
  4478  022E  2A36               	goto	l895
  4479  022F                     u4270:
  4480                           	line	701
  4481                           	
  4482  022F                     l3218:	
  4483                           ;prev11.c: 701: return 14;
  4484  022F  300E               	movlw	low(0Eh)
  4485  0230  00F4               	movwf	(?_scan)
  4486  0231  3000               	movlw	high(0Eh)
  4487  0232  00F5               	movwf	((?_scan))+1
  4488  0233  2A48               	goto	l870
  4489                           	
  4490  0234                     l3220:	
  4491  0234  2A48               	goto	l870
  4492                           	
  4493  0235                     l3222:	
  4494  0235  2A43               	goto	l3228
  4495                           	line	702
  4496                           	
  4497  0236                     l895:	
  4498                           ;prev11.c: 702: else if(RB7==1)
  4499  0236  1F86               	btfss	(55/8),(55)&7
  4500  0237  2A39               	goto	u4281
  4501  0238  2A3A               	goto	u4280
  4502  0239                     u4281:
  4503  0239  2A43               	goto	l3228
  4504  023A                     u4280:
  4505                           	line	703
  4506                           	
  4507  023A                     l3224:	
  4508                           ;prev11.c: 703: return 15;
  4509  023A  300F               	movlw	low(0Fh)
  4510  023B  00F4               	movwf	(?_scan)
  4511  023C  3000               	movlw	high(0Fh)
  4512  023D  00F5               	movwf	((?_scan))+1
  4513  023E  2A48               	goto	l870
  4514                           	
  4515  023F                     l3226:	
  4516  023F  2A48               	goto	l870
  4517                           	
  4518  0240                     l897:	
  4519  0240  2A43               	goto	l3228
  4520                           	line	707
  4521                           	
  4522  0241                     l896:	
  4523  0241  2A43               	goto	l3228
  4524                           	
  4525  0242                     l894:	
  4526  0242  2A43               	goto	l3228
  4527                           	
  4528  0243                     l892:	
  4529                           	
  4530  0243                     l3228:	
  4531                           ;prev11.c: 707: return 99;
  4532  0243  3063               	movlw	low(063h)
  4533  0244  00F4               	movwf	(?_scan)
  4534  0245  3000               	movlw	high(063h)
  4535  0246  00F5               	movwf	((?_scan))+1
  4536  0247  2A48               	goto	l870
  4537                           	
  4538  0248                     l3230:	
  4539                           	line	711
  4540                           	
  4541  0248                     l870:	
  4542  0248  0008               	return
  4543                           	opt stack 0
  4544                           GLOBAL	__end_of_scan
  4545  0249                     	__end_of_scan:
  4546 ;; =============== function _scan ends ============
  4547                           
  4548                           	signat	_scan,90
  4549                           	global	_initlcd
  4550                           psect	text539,local,class=CODE,delta=2
  4551                           global __ptext539
  4552  0C5D                     __ptext539:
  4553                           
  4554 ;; *************** function _initlcd *****************
  4555 ;; Defined at:
  4556 ;;		line 503 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;		None               void
  4563 ;; Registers used:
  4564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4570 ;;      Params:         0       0       0       0       0
  4571 ;;      Locals:         0       0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0
  4573 ;;      Totals:         0       0       0       0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    3
  4577 ;; This function calls:
  4578 ;;		_cmd
  4579 ;; This function is called by:
  4580 ;;		_main
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           psect	text539
  4584                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4585                           	line	503
  4586                           	global	__size_of_initlcd
  4587  0033                     	__size_of_initlcd	equ	__end_of_initlcd-_initlcd
  4588                           	
  4589  0C5D                     _initlcd:	
  4590                           	opt	stack 4
  4591                           ; Regs used in _initlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4592                           	line	505
  4593                           	
  4594  0C5D                     l3110:	
  4595                           ;prev11.c: 505: TRISC=0b11111100;
  4596  0C5D  30FC               	movlw	(0FCh)
  4597  0C5E  1683               	bsf	status, 5	;RP0=1, select bank1
  4598  0C5F  1303               	bcf	status, 6	;RP1=0, select bank1
  4599  0C60  0087               	movwf	(135)^080h	;volatile
  4600                           	line	507
  4601                           	
  4602  0C61                     l3112:	
  4603                           ;prev11.c: 507: TRISD=0x00;
  4604  0C61  0188               	clrf	(136)^080h	;volatile
  4605                           	line	509
  4606                           	
  4607  0C62                     l3114:	
  4608                           ;prev11.c: 509: cmd(0x38);
  4609  0C62  3038               	movlw	low(038h)
  4610  0C63  00F8               	movwf	(?_cmd)
  4611  0C64  3000               	movlw	high(038h)
  4612  0C65  00F9               	movwf	((?_cmd))+1
  4613  0C66  120A  158A  2371   	fcall	_cmd
              120A  158A         
  4614                           	line	511
  4615                           	
  4616  0C6B                     l3116:	
  4617                           ;prev11.c: 511: cmd(0x0C);
  4618  0C6B  300C               	movlw	low(0Ch)
  4619  0C6C  00F8               	movwf	(?_cmd)
  4620  0C6D  3000               	movlw	high(0Ch)
  4621  0C6E  00F9               	movwf	((?_cmd))+1
  4622  0C6F  120A  158A  2371   	fcall	_cmd
              120A  158A         
  4623                           	line	513
  4624                           	
  4625  0C74                     l3118:	
  4626                           ;prev11.c: 513: cmd(0x01);
  4627  0C74  3001               	movlw	low(01h)
  4628  0C75  00F8               	movwf	(?_cmd)
  4629  0C76  3000               	movlw	high(01h)
  4630  0C77  00F9               	movwf	((?_cmd))+1
  4631  0C78  120A  158A  2371   	fcall	_cmd
              120A  158A         
  4632                           	line	515
  4633                           	
  4634  0C7D                     l3120:	
  4635                           ;prev11.c: 515: cmd(0x80);
  4636  0C7D  3080               	movlw	low(080h)
  4637  0C7E  00F8               	movwf	(?_cmd)
  4638  0C7F  3000               	movlw	high(080h)
  4639  0C80  00F9               	movwf	((?_cmd))+1
  4640  0C81  120A  158A  2371   	fcall	_cmd
              120A  158A         
  4641                           	line	517
  4642                           	
  4643  0C86                     l3122:	
  4644                           ;prev11.c: 517: cmd(0x0f);
  4645  0C86  300F               	movlw	low(0Fh)
  4646  0C87  00F8               	movwf	(?_cmd)
  4647  0C88  3000               	movlw	high(0Fh)
  4648  0C89  00F9               	movwf	((?_cmd))+1
  4649  0C8A  120A  158A  2371   	fcall	_cmd
              120A  158A         
  4650                           	line	519
  4651                           	
  4652  0C8F                     l823:	
  4653  0C8F  0008               	return
  4654                           	opt stack 0
  4655                           GLOBAL	__end_of_initlcd
  4656  0C90                     	__end_of_initlcd:
  4657 ;; =============== function _initlcd ends ============
  4658                           
  4659                           	signat	_initlcd,88
  4660                           	global	_actrow
  4661                           psect	text540,local,class=CODE,delta=2
  4662                           global __ptext540
  4663  0D04                     __ptext540:
  4664                           
  4665 ;; *************** function _actrow *****************
  4666 ;; Defined at:
  4667 ;;		line 719 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  n               2    2[COMMON] int 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;		None               void
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, pclath, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4681 ;;      Params:         2       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0
  4684 ;;      Totals:         2       0       0       0       0
  4685 ;;Total ram usage:        2 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    1
  4688 ;; This function calls:
  4689 ;;		_resetout
  4690 ;;		_delay
  4691 ;; This function is called by:
  4692 ;;		_scan
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           psect	text540
  4696                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4697                           	line	719
  4698                           	global	__size_of_actrow
  4699  003E                     	__size_of_actrow	equ	__end_of_actrow-_actrow
  4700                           	
  4701  0D04                     _actrow:	
  4702                           	opt	stack 4
  4703                           ; Regs used in _actrow: [wreg+status,2+status,0+pclath+cstack]
  4704                           	line	720
  4705                           	
  4706  0D04                     l3090:	
  4707                           ;prev11.c: 720: resetout();
  4708  0D04  120A  158A  22FD   	fcall	_resetout
              120A  158A         
  4709                           	line	722
  4710                           	
  4711  0D09                     l3092:	
  4712                           ;prev11.c: 722: if(n==1)
  4713  0D09  3001               	movlw	01h
  4714  0D0A  0672               	xorwf	(actrow@n),w
  4715  0D0B  0473               	iorwf	(actrow@n+1),w
  4716  0D0C  1D03               	skipz
  4717  0D0D  2D0F               	goto	u4091
  4718  0D0E  2D10               	goto	u4090
  4719  0D0F                     u4091:
  4720  0D0F  2D14               	goto	l3096
  4721  0D10                     u4090:
  4722                           	line	724
  4723                           	
  4724  0D10                     l3094:	
  4725                           ;prev11.c: 723: {
  4726                           ;prev11.c: 724: RB0=1;
  4727  0D10  1283               	bcf	status, 5	;RP0=0, select bank0
  4728  0D11  1303               	bcf	status, 6	;RP1=0, select bank0
  4729  0D12  1406               	bsf	(48/8),(48)&7
  4730                           	line	725
  4731                           ;prev11.c: 725: }
  4732  0D13  2D38               	goto	l3108
  4733                           	line	726
  4734                           	
  4735  0D14                     l903:	
  4736                           	
  4737  0D14                     l3096:	
  4738                           ;prev11.c: 726: else if(n==2)
  4739  0D14  3002               	movlw	02h
  4740  0D15  0672               	xorwf	(actrow@n),w
  4741  0D16  0473               	iorwf	(actrow@n+1),w
  4742  0D17  1D03               	skipz
  4743  0D18  2D1A               	goto	u4101
  4744  0D19  2D1B               	goto	u4100
  4745  0D1A                     u4101:
  4746  0D1A  2D1F               	goto	l3100
  4747  0D1B                     u4100:
  4748                           	line	728
  4749                           	
  4750  0D1B                     l3098:	
  4751                           ;prev11.c: 727: {
  4752                           ;prev11.c: 728: RB1=1;
  4753  0D1B  1283               	bcf	status, 5	;RP0=0, select bank0
  4754  0D1C  1303               	bcf	status, 6	;RP1=0, select bank0
  4755  0D1D  1486               	bsf	(49/8),(49)&7
  4756                           	line	729
  4757                           ;prev11.c: 729: }
  4758  0D1E  2D38               	goto	l3108
  4759                           	line	730
  4760                           	
  4761  0D1F                     l905:	
  4762                           	
  4763  0D1F                     l3100:	
  4764                           ;prev11.c: 730: else if(n==3)
  4765  0D1F  3003               	movlw	03h
  4766  0D20  0672               	xorwf	(actrow@n),w
  4767  0D21  0473               	iorwf	(actrow@n+1),w
  4768  0D22  1D03               	skipz
  4769  0D23  2D25               	goto	u4111
  4770  0D24  2D26               	goto	u4110
  4771  0D25                     u4111:
  4772  0D25  2D2A               	goto	l3104
  4773  0D26                     u4110:
  4774                           	line	732
  4775                           	
  4776  0D26                     l3102:	
  4777                           ;prev11.c: 731: {
  4778                           ;prev11.c: 732: RB2=1;
  4779  0D26  1283               	bcf	status, 5	;RP0=0, select bank0
  4780  0D27  1303               	bcf	status, 6	;RP1=0, select bank0
  4781  0D28  1506               	bsf	(50/8),(50)&7
  4782                           	line	733
  4783                           ;prev11.c: 733: }
  4784  0D29  2D38               	goto	l3108
  4785                           	line	734
  4786                           	
  4787  0D2A                     l907:	
  4788                           	
  4789  0D2A                     l3104:	
  4790                           ;prev11.c: 734: else if(n==4)
  4791  0D2A  3004               	movlw	04h
  4792  0D2B  0672               	xorwf	(actrow@n),w
  4793  0D2C  0473               	iorwf	(actrow@n+1),w
  4794  0D2D  1D03               	skipz
  4795  0D2E  2D30               	goto	u4121
  4796  0D2F  2D31               	goto	u4120
  4797  0D30                     u4121:
  4798  0D30  2D38               	goto	l3108
  4799  0D31                     u4120:
  4800                           	line	736
  4801                           	
  4802  0D31                     l3106:	
  4803                           ;prev11.c: 735: {
  4804                           ;prev11.c: 736: RB3=1;
  4805  0D31  1283               	bcf	status, 5	;RP0=0, select bank0
  4806  0D32  1303               	bcf	status, 6	;RP1=0, select bank0
  4807  0D33  1586               	bsf	(51/8),(51)&7
  4808  0D34  2D38               	goto	l3108
  4809                           	line	737
  4810                           	
  4811  0D35                     l909:	
  4812  0D35  2D38               	goto	l3108
  4813                           	line	738
  4814                           	
  4815  0D36                     l908:	
  4816  0D36  2D38               	goto	l3108
  4817                           	
  4818  0D37                     l906:	
  4819  0D37  2D38               	goto	l3108
  4820                           	
  4821  0D38                     l904:	
  4822                           	
  4823  0D38                     l3108:	
  4824                           ;prev11.c: 737: }
  4825                           ;prev11.c: 738: delay(200);
  4826  0D38  30C8               	movlw	low(0C8h)
  4827  0D39  00F0               	movwf	(?_delay)
  4828  0D3A  3000               	movlw	high(0C8h)
  4829  0D3B  00F1               	movwf	((?_delay))+1
  4830  0D3C  120A  158A  2348   	fcall	_delay
              120A  158A         
  4831                           	line	741
  4832                           	
  4833  0D41                     l910:	
  4834  0D41  0008               	return
  4835                           	opt stack 0
  4836                           GLOBAL	__end_of_actrow
  4837  0D42                     	__end_of_actrow:
  4838 ;; =============== function _actrow ends ============
  4839                           
  4840                           	signat	_actrow,4216
  4841                           	global	_dat
  4842                           psect	text541,local,class=CODE,delta=2
  4843                           global __ptext541
  4844  0B96                     __ptext541:
  4845                           
  4846 ;; *************** function _dat *****************
  4847 ;; Defined at:
  4848 ;;		line 536 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  Command         2    8[COMMON] unsigned int 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;		None               void
  4855 ;; Registers used:
  4856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4862 ;;      Params:         2       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0
  4865 ;;      Totals:         2       0       0       0       0
  4866 ;;Total ram usage:        2 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    2
  4869 ;; This function calls:
  4870 ;;		_setLCD
  4871 ;;		_delay
  4872 ;; This function is called by:
  4873 ;;		_write
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           psect	text541
  4877                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4878                           	line	536
  4879                           	global	__size_of_dat
  4880  0025                     	__size_of_dat	equ	__end_of_dat-_dat
  4881                           	
  4882  0B96                     _dat:	
  4883                           	opt	stack 2
  4884                           ; Regs used in _dat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4885                           	line	537
  4886                           	
  4887  0B96                     l3078:	
  4888                           ;prev11.c: 537: setLCD(Command);
  4889  0B96  0879               	movf	(dat@Command+1),w
  4890  0B97  01F1               	clrf	(?_setLCD+1)
  4891  0B98  07F1               	addwf	(?_setLCD+1)
  4892  0B99  0878               	movf	(dat@Command),w
  4893  0B9A  01F0               	clrf	(?_setLCD)
  4894  0B9B  07F0               	addwf	(?_setLCD)
  4895                           
  4896  0B9C  120A  118A  2334   	fcall	_setLCD
              120A  158A         
  4897                           	line	539
  4898                           	
  4899  0BA1                     l3080:	
  4900                           ;prev11.c: 539: RC0=1;
  4901  0BA1  1283               	bcf	status, 5	;RP0=0, select bank0
  4902  0BA2  1303               	bcf	status, 6	;RP1=0, select bank0
  4903  0BA3  1407               	bsf	(56/8),(56)&7
  4904                           	line	541
  4905                           	
  4906  0BA4                     l3082:	
  4907                           ;prev11.c: 541: RC1=1;
  4908  0BA4  1487               	bsf	(57/8),(57)&7
  4909                           	line	543
  4910                           	
  4911  0BA5                     l3084:	
  4912                           ;prev11.c: 543: delay(20);
  4913  0BA5  3014               	movlw	low(014h)
  4914  0BA6  00F0               	movwf	(?_delay)
  4915  0BA7  3000               	movlw	high(014h)
  4916  0BA8  00F1               	movwf	((?_delay))+1
  4917  0BA9  120A  158A  2348   	fcall	_delay
              120A  158A         
  4918                           	line	545
  4919                           	
  4920  0BAE                     l3086:	
  4921                           ;prev11.c: 545: RC1=0;
  4922  0BAE  1283               	bcf	status, 5	;RP0=0, select bank0
  4923  0BAF  1303               	bcf	status, 6	;RP1=0, select bank0
  4924  0BB0  1087               	bcf	(57/8),(57)&7
  4925                           	line	547
  4926                           	
  4927  0BB1                     l3088:	
  4928                           ;prev11.c: 547: delay(20);
  4929  0BB1  3014               	movlw	low(014h)
  4930  0BB2  00F0               	movwf	(?_delay)
  4931  0BB3  3000               	movlw	high(014h)
  4932  0BB4  00F1               	movwf	((?_delay))+1
  4933  0BB5  120A  158A  2348   	fcall	_delay
              120A  158A         
  4934                           	line	553
  4935                           	
  4936  0BBA                     l832:	
  4937  0BBA  0008               	return
  4938                           	opt stack 0
  4939                           GLOBAL	__end_of_dat
  4940  0BBB                     	__end_of_dat:
  4941 ;; =============== function _dat ends ============
  4942                           
  4943                           	signat	_dat,4216
  4944                           	global	_cmd
  4945                           psect	text542,local,class=CODE,delta=2
  4946                           global __ptext542
  4947  0B71                     __ptext542:
  4948                           
  4949 ;; *************** function _cmd *****************
  4950 ;; Defined at:
  4951 ;;		line 525 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  Command         2    8[COMMON] unsigned int 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;		None               void
  4958 ;; Registers used:
  4959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4965 ;;      Params:         2       0       0       0       0
  4966 ;;      Locals:         0       0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0
  4968 ;;      Totals:         2       0       0       0       0
  4969 ;;Total ram usage:        2 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    2
  4972 ;; This function calls:
  4973 ;;		_setLCD
  4974 ;;		_delay
  4975 ;; This function is called by:
  4976 ;;		_initlcd
  4977 ;;		_clearlcd
  4978 ;;		_write
  4979 ;;		_scroll
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           psect	text542
  4983                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4984                           	line	525
  4985                           	global	__size_of_cmd
  4986  0025                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  4987                           	
  4988  0B71                     _cmd:	
  4989                           	opt	stack 2
  4990                           ; Regs used in _cmd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4991                           	line	526
  4992                           	
  4993  0B71                     l3066:	
  4994                           ;prev11.c: 526: setLCD(Command);
  4995  0B71  0879               	movf	(cmd@Command+1),w
  4996  0B72  01F1               	clrf	(?_setLCD+1)
  4997  0B73  07F1               	addwf	(?_setLCD+1)
  4998  0B74  0878               	movf	(cmd@Command),w
  4999  0B75  01F0               	clrf	(?_setLCD)
  5000  0B76  07F0               	addwf	(?_setLCD)
  5001                           
  5002  0B77  120A  118A  2334   	fcall	_setLCD
              120A  158A         
  5003                           	line	527
  5004                           	
  5005  0B7C                     l3068:	
  5006                           ;prev11.c: 527: RC0=0;
  5007  0B7C  1283               	bcf	status, 5	;RP0=0, select bank0
  5008  0B7D  1303               	bcf	status, 6	;RP1=0, select bank0
  5009  0B7E  1007               	bcf	(56/8),(56)&7
  5010                           	line	528
  5011                           	
  5012  0B7F                     l3070:	
  5013                           ;prev11.c: 528: RC1=1;
  5014  0B7F  1487               	bsf	(57/8),(57)&7
  5015                           	line	529
  5016                           	
  5017  0B80                     l3072:	
  5018                           ;prev11.c: 529: delay(20);
  5019  0B80  3014               	movlw	low(014h)
  5020  0B81  00F0               	movwf	(?_delay)
  5021  0B82  3000               	movlw	high(014h)
  5022  0B83  00F1               	movwf	((?_delay))+1
  5023  0B84  120A  158A  2348   	fcall	_delay
              120A  158A         
  5024                           	line	530
  5025                           	
  5026  0B89                     l3074:	
  5027                           ;prev11.c: 530: RC1=0;
  5028  0B89  1283               	bcf	status, 5	;RP0=0, select bank0
  5029  0B8A  1303               	bcf	status, 6	;RP1=0, select bank0
  5030  0B8B  1087               	bcf	(57/8),(57)&7
  5031                           	line	531
  5032                           	
  5033  0B8C                     l3076:	
  5034                           ;prev11.c: 531: delay(20);
  5035  0B8C  3014               	movlw	low(014h)
  5036  0B8D  00F0               	movwf	(?_delay)
  5037  0B8E  3000               	movlw	high(014h)
  5038  0B8F  00F1               	movwf	((?_delay))+1
  5039  0B90  120A  158A  2348   	fcall	_delay
              120A  158A         
  5040                           	line	533
  5041                           	
  5042  0B95                     l829:	
  5043  0B95  0008               	return
  5044                           	opt stack 0
  5045                           GLOBAL	__end_of_cmd
  5046  0B96                     	__end_of_cmd:
  5047 ;; =============== function _cmd ends ============
  5048                           
  5049                           	signat	_cmd,4216
  5050                           	global	_itoaa
  5051                           psect	text543,local,class=CODE,delta=2
  5052                           global __ptext543
  5053  0249                     __ptext543:
  5054                           
  5055 ;; *************** function _itoaa *****************
  5056 ;; Defined at:
  5057 ;;		line 476 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  value           2    9[COMMON] int 
  5060 ;;  ptr             1   11[COMMON] PTR unsigned char 
  5061 ;;		 -> getlogicseq@snum(16), 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  temp            2    2[BANK0 ] int 
  5064 ;;  count           2    0[BANK0 ] int 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  2    9[COMMON] int 
  5067 ;; Registers used:
  5068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5074 ;;      Params:         3       0       0       0       0
  5075 ;;      Locals:         0       4       0       0       0
  5076 ;;      Temps:          1       0       0       0       0
  5077 ;;      Totals:         4       4       0       0       0
  5078 ;;Total ram usage:        8 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    1
  5081 ;; This function calls:
  5082 ;;		___wmul
  5083 ;;		___awdiv
  5084 ;;		___awmod
  5085 ;; This function is called by:
  5086 ;;		_getlogicseq
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           psect	text543
  5090                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5091                           	line	476
  5092                           	global	__size_of_itoaa
  5093  00EB                     	__size_of_itoaa	equ	__end_of_itoaa-_itoaa
  5094                           	
  5095  0249                     _itoaa:	
  5096                           	opt	stack 5
  5097                           ; Regs used in _itoaa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5098                           	line	477
  5099                           	
  5100  0249                     l3018:	
  5101                           ;prev11.c: 477: int count=0,temp;
  5102  0249  1283               	bcf	status, 5	;RP0=0, select bank0
  5103  024A  1303               	bcf	status, 6	;RP1=0, select bank0
  5104  024B  01A0               	clrf	(itoaa@count)
  5105  024C  01A1               	clrf	(itoaa@count+1)
  5106                           	line	478
  5107                           	
  5108  024D                     l3020:	
  5109                           ;prev11.c: 478: if(ptr==(0))
  5110  024D  08FB               	movf	(itoaa@ptr),f
  5111  024E  1D03               	skipz
  5112  024F  2A51               	goto	u4021
  5113  0250  2A52               	goto	u4020
  5114  0251                     u4021:
  5115  0251  2A54               	goto	l3024
  5116  0252                     u4020:
  5117  0252  2B33               	goto	l814
  5118                           	line	479
  5119                           	
  5120  0253                     l3022:	
  5121                           ;prev11.c: 479: return 0;
  5122                           ;	Return value of _itoaa is never used
  5123  0253  2B33               	goto	l814
  5124                           	
  5125  0254                     l813:	
  5126                           	line	480
  5127                           	
  5128  0254                     l3024:	
  5129                           ;prev11.c: 480: if(value==0)
  5130  0254  087A               	movf	((itoaa@value+1)),w
  5131  0255  0479               	iorwf	((itoaa@value)),w
  5132  0256  1D03               	skipz
  5133  0257  2A59               	goto	u4031
  5134  0258  2A5A               	goto	u4030
  5135  0259                     u4031:
  5136  0259  2A63               	goto	l815
  5137  025A                     u4030:
  5138                           	line	482
  5139                           	
  5140  025A                     l3026:	
  5141                           ;prev11.c: 481: {
  5142                           ;prev11.c: 482: *ptr='0';
  5143  025A  3030               	movlw	(030h)
  5144  025B  00FC               	movwf	(??_itoaa+0)+0
  5145  025C  087B               	movf	(itoaa@ptr),w
  5146  025D  0084               	movwf	fsr0
  5147  025E  087C               	movf	(??_itoaa+0)+0,w
  5148  025F  1383               	bcf	status, 7	;select IRP bank0
  5149  0260  0080               	movwf	indf
  5150  0261  2B33               	goto	l814
  5151                           	line	483
  5152                           	
  5153  0262                     l3028:	
  5154                           ;prev11.c: 483: return 1;
  5155                           ;	Return value of _itoaa is never used
  5156  0262  2B33               	goto	l814
  5157                           	line	484
  5158                           	
  5159  0263                     l815:	
  5160                           	line	486
  5161                           ;prev11.c: 484: }
  5162                           ;prev11.c: 486: if(value<0)
  5163  0263  1FFA               	btfss	(itoaa@value+1),7
  5164  0264  2A66               	goto	u4041
  5165  0265  2A67               	goto	u4040
  5166  0266                     u4041:
  5167  0266  2A90               	goto	l3038
  5168  0267                     u4040:
  5169                           	line	488
  5170                           	
  5171  0267                     l3030:	
  5172                           ;prev11.c: 487: {
  5173                           ;prev11.c: 488: value*=(-1);
  5174  0267  30FF               	movlw	low(-1)
  5175  0268  00F0               	movwf	(?___wmul)
  5176  0269  30FF               	movlw	high(-1)
  5177  026A  00F1               	movwf	((?___wmul))+1
  5178  026B  087A               	movf	(itoaa@value+1),w
  5179  026C  01F3               	clrf	1+(?___wmul)+02h
  5180  026D  07F3               	addwf	1+(?___wmul)+02h
  5181  026E  0879               	movf	(itoaa@value),w
  5182  026F  01F2               	clrf	0+(?___wmul)+02h
  5183  0270  07F2               	addwf	0+(?___wmul)+02h
  5184                           
  5185  0271  120A  158A  2433   	fcall	___wmul
              120A  118A         
  5186  0276  0871               	movf	(1+(?___wmul)),w
  5187  0277  01FA               	clrf	(itoaa@value+1)
  5188  0278  07FA               	addwf	(itoaa@value+1)
  5189  0279  0870               	movf	(0+(?___wmul)),w
  5190  027A  01F9               	clrf	(itoaa@value)
  5191  027B  07F9               	addwf	(itoaa@value)
  5192                           
  5193                           	line	489
  5194                           	
  5195  027C                     l3032:	
  5196                           ;prev11.c: 489: *ptr++='-';
  5197  027C  302D               	movlw	(02Dh)
  5198  027D  00FC               	movwf	(??_itoaa+0)+0
  5199  027E  087B               	movf	(itoaa@ptr),w
  5200  027F  0084               	movwf	fsr0
  5201  0280  087C               	movf	(??_itoaa+0)+0,w
  5202  0281  1383               	bcf	status, 7	;select IRP bank0
  5203  0282  0080               	movwf	indf
  5204                           	
  5205  0283                     l3034:	
  5206  0283  3001               	movlw	(01h)
  5207  0284  00FC               	movwf	(??_itoaa+0)+0
  5208  0285  087C               	movf	(??_itoaa+0)+0,w
  5209  0286  07FB               	addwf	(itoaa@ptr),f
  5210                           	line	490
  5211                           	
  5212  0287                     l3036:	
  5213                           ;prev11.c: 490: count++;
  5214  0287  3001               	movlw	low(01h)
  5215  0288  1283               	bcf	status, 5	;RP0=0, select bank0
  5216  0289  1303               	bcf	status, 6	;RP1=0, select bank0
  5217  028A  07A0               	addwf	(itoaa@count),f
  5218  028B  1803               	skipnc
  5219  028C  0AA1               	incf	(itoaa@count+1),f
  5220  028D  3000               	movlw	high(01h)
  5221  028E  07A1               	addwf	(itoaa@count+1),f
  5222  028F  2A90               	goto	l3038
  5223                           	line	491
  5224                           	
  5225  0290                     l816:	
  5226                           	line	492
  5227                           	
  5228  0290                     l3038:	
  5229                           ;prev11.c: 491: }
  5230                           ;prev11.c: 492: for(temp=value;temp>0;temp/=10,ptr++);
  5231  0290  087A               	movf	(itoaa@value+1),w
  5232  0291  01A3               	clrf	(itoaa@temp+1)
  5233  0292  07A3               	addwf	(itoaa@temp+1)
  5234  0293  0879               	movf	(itoaa@value),w
  5235  0294  01A2               	clrf	(itoaa@temp)
  5236  0295  07A2               	addwf	(itoaa@temp)
  5237                           
  5238                           	
  5239  0296                     l3040:	
  5240  0296  0823               	movf	(itoaa@temp+1),w
  5241  0297  3A80               	xorlw	80h
  5242  0298  00FF               	movwf	btemp+1
  5243  0299  3080               	movlw	(high(01h))^80h
  5244  029A  027F               	subwf	btemp+1,w
  5245  029B  1D03               	skipz
  5246  029C  2A9F               	goto	u4055
  5247  029D  3001               	movlw	low(01h)
  5248  029E  0222               	subwf	(itoaa@temp),w
  5249  029F                     u4055:
  5250                           
  5251  029F  1803               	skipnc
  5252  02A0  2AA2               	goto	u4051
  5253  02A1  2AA3               	goto	u4050
  5254  02A2                     u4051:
  5255  02A2  2AA5               	goto	l3044
  5256  02A3                     u4050:
  5257  02A3  2AD0               	goto	l3050
  5258                           	
  5259  02A4                     l3042:	
  5260  02A4  2AD0               	goto	l3050
  5261                           	
  5262  02A5                     l817:	
  5263                           	
  5264  02A5                     l3044:	
  5265  02A5  300A               	movlw	low(0Ah)
  5266  02A6  00F0               	movwf	(?___awdiv)
  5267  02A7  3000               	movlw	high(0Ah)
  5268  02A8  00F1               	movwf	((?___awdiv))+1
  5269  02A9  1283               	bcf	status, 5	;RP0=0, select bank0
  5270  02AA  1303               	bcf	status, 6	;RP1=0, select bank0
  5271  02AB  0823               	movf	(itoaa@temp+1),w
  5272  02AC  01F3               	clrf	1+(?___awdiv)+02h
  5273  02AD  07F3               	addwf	1+(?___awdiv)+02h
  5274  02AE  0822               	movf	(itoaa@temp),w
  5275  02AF  01F2               	clrf	0+(?___awdiv)+02h
  5276  02B0  07F2               	addwf	0+(?___awdiv)+02h
  5277                           
  5278  02B1  120A  118A  20ED   	fcall	___awdiv
              120A  118A         
  5279  02B6  0871               	movf	(1+(?___awdiv)),w
  5280  02B7  1283               	bcf	status, 5	;RP0=0, select bank0
  5281  02B8  1303               	bcf	status, 6	;RP1=0, select bank0
  5282  02B9  01A3               	clrf	(itoaa@temp+1)
  5283  02BA  07A3               	addwf	(itoaa@temp+1)
  5284  02BB  0870               	movf	(0+(?___awdiv)),w
  5285  02BC  01A2               	clrf	(itoaa@temp)
  5286  02BD  07A2               	addwf	(itoaa@temp)
  5287                           
  5288                           	
  5289  02BE                     l3046:	
  5290  02BE  3001               	movlw	(01h)
  5291  02BF  00FC               	movwf	(??_itoaa+0)+0
  5292  02C0  087C               	movf	(??_itoaa+0)+0,w
  5293  02C1  07FB               	addwf	(itoaa@ptr),f
  5294                           	
  5295  02C2                     l3048:	
  5296  02C2  0823               	movf	(itoaa@temp+1),w
  5297  02C3  3A80               	xorlw	80h
  5298  02C4  00FF               	movwf	btemp+1
  5299  02C5  3080               	movlw	(high(01h))^80h
  5300  02C6  027F               	subwf	btemp+1,w
  5301  02C7  1D03               	skipz
  5302  02C8  2ACB               	goto	u4065
  5303  02C9  3001               	movlw	low(01h)
  5304  02CA  0222               	subwf	(itoaa@temp),w
  5305  02CB                     u4065:
  5306                           
  5307  02CB  1803               	skipnc
  5308  02CC  2ACE               	goto	u4061
  5309  02CD  2ACF               	goto	u4060
  5310  02CE                     u4061:
  5311  02CE  2AA5               	goto	l3044
  5312  02CF                     u4060:
  5313  02CF  2AD0               	goto	l3050
  5314                           	
  5315  02D0                     l818:	
  5316                           	line	493
  5317                           	
  5318  02D0                     l3050:	
  5319                           ;prev11.c: 493: *ptr='\0';
  5320  02D0  087B               	movf	(itoaa@ptr),w
  5321  02D1  0084               	movwf	fsr0
  5322  02D2  1383               	bcf	status, 7	;select IRP bank0
  5323  02D3  0180               	clrf	indf
  5324                           	line	494
  5325                           	
  5326  02D4                     l3052:	
  5327                           ;prev11.c: 494: for(temp=value;temp>0;temp/=10)
  5328  02D4  087A               	movf	(itoaa@value+1),w
  5329  02D5  1283               	bcf	status, 5	;RP0=0, select bank0
  5330  02D6  1303               	bcf	status, 6	;RP1=0, select bank0
  5331  02D7  01A3               	clrf	(itoaa@temp+1)
  5332  02D8  07A3               	addwf	(itoaa@temp+1)
  5333  02D9  0879               	movf	(itoaa@value),w
  5334  02DA  01A2               	clrf	(itoaa@temp)
  5335  02DB  07A2               	addwf	(itoaa@temp)
  5336                           
  5337                           	
  5338  02DC                     l3054:	
  5339  02DC  0823               	movf	(itoaa@temp+1),w
  5340  02DD  3A80               	xorlw	80h
  5341  02DE  00FF               	movwf	btemp+1
  5342  02DF  3080               	movlw	(high(01h))^80h
  5343  02E0  027F               	subwf	btemp+1,w
  5344  02E1  1D03               	skipz
  5345  02E2  2AE5               	goto	u4075
  5346  02E3  3001               	movlw	low(01h)
  5347  02E4  0222               	subwf	(itoaa@temp),w
  5348  02E5                     u4075:
  5349                           
  5350  02E5  1803               	skipnc
  5351  02E6  2AE8               	goto	u4071
  5352  02E7  2AE9               	goto	u4070
  5353  02E8                     u4071:
  5354  02E8  2AEB               	goto	l3058
  5355  02E9                     u4070:
  5356  02E9  2B33               	goto	l814
  5357                           	
  5358  02EA                     l3056:	
  5359  02EA  2B33               	goto	l814
  5360                           	line	495
  5361                           	
  5362  02EB                     l819:	
  5363                           	line	496
  5364                           	
  5365  02EB                     l3058:	
  5366                           ;prev11.c: 495: {
  5367                           ;prev11.c: 496: *--ptr=temp%10+'0';
  5368  02EB  300A               	movlw	low(0Ah)
  5369  02EC  00F0               	movwf	(?___awmod)
  5370  02ED  3000               	movlw	high(0Ah)
  5371  02EE  00F1               	movwf	((?___awmod))+1
  5372  02EF  1283               	bcf	status, 5	;RP0=0, select bank0
  5373  02F0  1303               	bcf	status, 6	;RP1=0, select bank0
  5374  02F1  0823               	movf	(itoaa@temp+1),w
  5375  02F2  01F3               	clrf	1+(?___awmod)+02h
  5376  02F3  07F3               	addwf	1+(?___awmod)+02h
  5377  02F4  0822               	movf	(itoaa@temp),w
  5378  02F5  01F2               	clrf	0+(?___awmod)+02h
  5379  02F6  07F2               	addwf	0+(?___awmod)+02h
  5380                           
  5381  02F7  120A  158A  25EF   	fcall	___awmod
              120A  118A         
  5382  02FC  0870               	movf	(0+(?___awmod)),w
  5383  02FD  3E30               	addlw	030h
  5384  02FE  00FC               	movwf	(??_itoaa+0)+0
  5385  02FF  3001               	movlw	low(01h)
  5386  0300  02FB               	subwf	(itoaa@ptr),f
  5387  0301  087B               	movf	((itoaa@ptr)),w
  5388  0302  0084               	movwf	fsr0
  5389  0303  087C               	movf	(??_itoaa+0)+0,w
  5390  0304  1383               	bcf	status, 7	;select IRP bank0
  5391  0305  0080               	movwf	indf
  5392                           	line	497
  5393                           	
  5394  0306                     l3060:	
  5395                           ;prev11.c: 497: count++;
  5396  0306  3001               	movlw	low(01h)
  5397  0307  1283               	bcf	status, 5	;RP0=0, select bank0
  5398  0308  1303               	bcf	status, 6	;RP1=0, select bank0
  5399  0309  07A0               	addwf	(itoaa@count),f
  5400  030A  1803               	skipnc
  5401  030B  0AA1               	incf	(itoaa@count+1),f
  5402  030C  3000               	movlw	high(01h)
  5403  030D  07A1               	addwf	(itoaa@count+1),f
  5404                           	line	494
  5405                           	
  5406  030E                     l3062:	
  5407  030E  300A               	movlw	low(0Ah)
  5408  030F  00F0               	movwf	(?___awdiv)
  5409  0310  3000               	movlw	high(0Ah)
  5410  0311  00F1               	movwf	((?___awdiv))+1
  5411  0312  0823               	movf	(itoaa@temp+1),w
  5412  0313  01F3               	clrf	1+(?___awdiv)+02h
  5413  0314  07F3               	addwf	1+(?___awdiv)+02h
  5414  0315  0822               	movf	(itoaa@temp),w
  5415  0316  01F2               	clrf	0+(?___awdiv)+02h
  5416  0317  07F2               	addwf	0+(?___awdiv)+02h
  5417                           
  5418  0318  120A  118A  20ED   	fcall	___awdiv
              120A  118A         
  5419  031D  0871               	movf	(1+(?___awdiv)),w
  5420  031E  1283               	bcf	status, 5	;RP0=0, select bank0
  5421  031F  1303               	bcf	status, 6	;RP1=0, select bank0
  5422  0320  01A3               	clrf	(itoaa@temp+1)
  5423  0321  07A3               	addwf	(itoaa@temp+1)
  5424  0322  0870               	movf	(0+(?___awdiv)),w
  5425  0323  01A2               	clrf	(itoaa@temp)
  5426  0324  07A2               	addwf	(itoaa@temp)
  5427                           
  5428                           	
  5429  0325                     l3064:	
  5430  0325  0823               	movf	(itoaa@temp+1),w
  5431  0326  3A80               	xorlw	80h
  5432  0327  00FF               	movwf	btemp+1
  5433  0328  3080               	movlw	(high(01h))^80h
  5434  0329  027F               	subwf	btemp+1,w
  5435  032A  1D03               	skipz
  5436  032B  2B2E               	goto	u4085
  5437  032C  3001               	movlw	low(01h)
  5438  032D  0222               	subwf	(itoaa@temp),w
  5439  032E                     u4085:
  5440                           
  5441  032E  1803               	skipnc
  5442  032F  2B31               	goto	u4081
  5443  0330  2B32               	goto	u4080
  5444  0331                     u4081:
  5445  0331  2AEB               	goto	l3058
  5446  0332                     u4080:
  5447  0332  2B33               	goto	l814
  5448                           	
  5449  0333                     l820:	
  5450                           	line	500
  5451                           ;prev11.c: 498: }
  5452                           ;prev11.c: 499: return count;
  5453                           ;	Return value of _itoaa is never used
  5454                           	
  5455  0333                     l814:	
  5456  0333  0008               	return
  5457                           	opt stack 0
  5458                           GLOBAL	__end_of_itoaa
  5459  0334                     	__end_of_itoaa:
  5460 ;; =============== function _itoaa ends ============
  5461                           
  5462                           	signat	_itoaa,8314
  5463                           	global	___awmod
  5464                           psect	text544,local,class=CODE,delta=2
  5465                           global __ptext544
  5466  0DEF                     __ptext544:
  5467                           
  5468 ;; *************** function ___awmod *****************
  5469 ;; Defined at:
  5470 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  divisor         2    0[COMMON] int 
  5473 ;;  dividend        2    2[COMMON] int 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  sign            1    6[COMMON] unsigned char 
  5476 ;;  counter         1    5[COMMON] unsigned char 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  2    0[COMMON] int 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2, status,0
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5486 ;;      Params:         4       0       0       0       0
  5487 ;;      Locals:         2       0       0       0       0
  5488 ;;      Temps:          1       0       0       0       0
  5489 ;;      Totals:         7       0       0       0       0
  5490 ;;Total ram usage:        7 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_itoaa
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           psect	text544
  5499                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  5500                           	line	5
  5501                           	global	__size_of___awmod
  5502  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  5503                           	
  5504  0DEF                     ___awmod:	
  5505                           	opt	stack 5
  5506                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5507                           	line	8
  5508                           	
  5509  0DEF                     l2984:	
  5510  0DEF  01F6               	clrf	(___awmod@sign)
  5511                           	line	9
  5512  0DF0  1FF3               	btfss	(___awmod@dividend+1),7
  5513  0DF1  2DF3               	goto	u3931
  5514  0DF2  2DF4               	goto	u3930
  5515  0DF3                     u3931:
  5516  0DF3  2DFD               	goto	l2988
  5517  0DF4                     u3930:
  5518                           	line	10
  5519                           	
  5520  0DF4                     l2986:	
  5521  0DF4  09F2               	comf	(___awmod@dividend),f
  5522  0DF5  09F3               	comf	(___awmod@dividend+1),f
  5523  0DF6  0AF2               	incf	(___awmod@dividend),f
  5524  0DF7  1903               	skipnz
  5525  0DF8  0AF3               	incf	(___awmod@dividend+1),f
  5526                           	line	11
  5527  0DF9  01F6               	clrf	(___awmod@sign)
  5528  0DFA  1403               	bsf	status,0
  5529  0DFB  0DF6               	rlf	(___awmod@sign),f
  5530  0DFC  2DFD               	goto	l2988
  5531                           	line	12
  5532                           	
  5533  0DFD                     l1150:	
  5534                           	line	13
  5535                           	
  5536  0DFD                     l2988:	
  5537  0DFD  1FF1               	btfss	(___awmod@divisor+1),7
  5538  0DFE  2E00               	goto	u3941
  5539  0DFF  2E01               	goto	u3940
  5540  0E00                     u3941:
  5541  0E00  2E07               	goto	l2992
  5542  0E01                     u3940:
  5543                           	line	14
  5544                           	
  5545  0E01                     l2990:	
  5546  0E01  09F0               	comf	(___awmod@divisor),f
  5547  0E02  09F1               	comf	(___awmod@divisor+1),f
  5548  0E03  0AF0               	incf	(___awmod@divisor),f
  5549  0E04  1903               	skipnz
  5550  0E05  0AF1               	incf	(___awmod@divisor+1),f
  5551  0E06  2E07               	goto	l2992
  5552                           	
  5553  0E07                     l1151:	
  5554                           	line	15
  5555                           	
  5556  0E07                     l2992:	
  5557  0E07  0871               	movf	(___awmod@divisor+1),w
  5558  0E08  0470               	iorwf	(___awmod@divisor),w
  5559  0E09  1903               	skipnz
  5560  0E0A  2E0C               	goto	u3951
  5561  0E0B  2E0D               	goto	u3950
  5562  0E0C                     u3951:
  5563  0E0C  2E43               	goto	l3010
  5564  0E0D                     u3950:
  5565                           	line	16
  5566                           	
  5567  0E0D                     l2994:	
  5568  0E0D  01F5               	clrf	(___awmod@counter)
  5569  0E0E  1403               	bsf	status,0
  5570  0E0F  0DF5               	rlf	(___awmod@counter),f
  5571                           	line	17
  5572  0E10  2E1D               	goto	l3000
  5573                           	
  5574  0E11                     l1154:	
  5575                           	line	18
  5576                           	
  5577  0E11                     l2996:	
  5578  0E11  3001               	movlw	01h
  5579                           	
  5580  0E12                     u3965:
  5581  0E12  1003               	clrc
  5582  0E13  0DF0               	rlf	(___awmod@divisor),f
  5583  0E14  0DF1               	rlf	(___awmod@divisor+1),f
  5584  0E15  3EFF               	addlw	-1
  5585  0E16  1D03               	skipz
  5586  0E17  2E12               	goto	u3965
  5587                           	line	19
  5588                           	
  5589  0E18                     l2998:	
  5590  0E18  3001               	movlw	(01h)
  5591  0E19  00F4               	movwf	(??___awmod+0)+0
  5592  0E1A  0874               	movf	(??___awmod+0)+0,w
  5593  0E1B  07F5               	addwf	(___awmod@counter),f
  5594  0E1C  2E1D               	goto	l3000
  5595                           	line	20
  5596                           	
  5597  0E1D                     l1153:	
  5598                           	line	17
  5599                           	
  5600  0E1D                     l3000:	
  5601  0E1D  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  5602  0E1E  2E20               	goto	u3971
  5603  0E1F  2E21               	goto	u3970
  5604  0E20                     u3971:
  5605  0E20  2E11               	goto	l2996
  5606  0E21                     u3970:
  5607  0E21  2E23               	goto	l3002
  5608                           	
  5609  0E22                     l1155:	
  5610  0E22  2E23               	goto	l3002
  5611                           	line	21
  5612                           	
  5613  0E23                     l1156:	
  5614                           	line	22
  5615                           	
  5616  0E23                     l3002:	
  5617  0E23  0871               	movf	(___awmod@divisor+1),w
  5618  0E24  0273               	subwf	(___awmod@dividend+1),w
  5619  0E25  1D03               	skipz
  5620  0E26  2E29               	goto	u3985
  5621  0E27  0870               	movf	(___awmod@divisor),w
  5622  0E28  0272               	subwf	(___awmod@dividend),w
  5623  0E29                     u3985:
  5624  0E29  1C03               	skipc
  5625  0E2A  2E2C               	goto	u3981
  5626  0E2B  2E2D               	goto	u3980
  5627  0E2C                     u3981:
  5628  0E2C  2E34               	goto	l3006
  5629  0E2D                     u3980:
  5630                           	line	23
  5631                           	
  5632  0E2D                     l3004:	
  5633  0E2D  0870               	movf	(___awmod@divisor),w
  5634  0E2E  02F2               	subwf	(___awmod@dividend),f
  5635  0E2F  0871               	movf	(___awmod@divisor+1),w
  5636  0E30  1C03               	skipc
  5637  0E31  03F3               	decf	(___awmod@dividend+1),f
  5638  0E32  02F3               	subwf	(___awmod@dividend+1),f
  5639  0E33  2E34               	goto	l3006
  5640                           	
  5641  0E34                     l1157:	
  5642                           	line	24
  5643                           	
  5644  0E34                     l3006:	
  5645  0E34  3001               	movlw	01h
  5646                           	
  5647  0E35                     u3995:
  5648  0E35  1003               	clrc
  5649  0E36  0CF1               	rrf	(___awmod@divisor+1),f
  5650  0E37  0CF0               	rrf	(___awmod@divisor),f
  5651  0E38  3EFF               	addlw	-1
  5652  0E39  1D03               	skipz
  5653  0E3A  2E35               	goto	u3995
  5654                           	line	25
  5655                           	
  5656  0E3B                     l3008:	
  5657  0E3B  3001               	movlw	low(01h)
  5658  0E3C  02F5               	subwf	(___awmod@counter),f
  5659  0E3D  1D03               	btfss	status,2
  5660  0E3E  2E40               	goto	u4001
  5661  0E3F  2E41               	goto	u4000
  5662  0E40                     u4001:
  5663  0E40  2E23               	goto	l3002
  5664  0E41                     u4000:
  5665  0E41  2E43               	goto	l3010
  5666                           	
  5667  0E42                     l1158:	
  5668  0E42  2E43               	goto	l3010
  5669                           	line	26
  5670                           	
  5671  0E43                     l1152:	
  5672                           	line	27
  5673                           	
  5674  0E43                     l3010:	
  5675  0E43  0876               	movf	(___awmod@sign),w
  5676  0E44  1D03               	skipz
  5677  0E45  2E47               	goto	u4010
  5678  0E46  2E4D               	goto	l3014
  5679  0E47                     u4010:
  5680                           	line	28
  5681                           	
  5682  0E47                     l3012:	
  5683  0E47  09F2               	comf	(___awmod@dividend),f
  5684  0E48  09F3               	comf	(___awmod@dividend+1),f
  5685  0E49  0AF2               	incf	(___awmod@dividend),f
  5686  0E4A  1903               	skipnz
  5687  0E4B  0AF3               	incf	(___awmod@dividend+1),f
  5688  0E4C  2E4D               	goto	l3014
  5689                           	
  5690  0E4D                     l1159:	
  5691                           	line	29
  5692                           	
  5693  0E4D                     l3014:	
  5694  0E4D  0873               	movf	(___awmod@dividend+1),w
  5695  0E4E  01F1               	clrf	(?___awmod+1)
  5696  0E4F  07F1               	addwf	(?___awmod+1)
  5697  0E50  0872               	movf	(___awmod@dividend),w
  5698  0E51  01F0               	clrf	(?___awmod)
  5699  0E52  07F0               	addwf	(?___awmod)
  5700                           
  5701  0E53  2E54               	goto	l1160
  5702                           	
  5703  0E54                     l3016:	
  5704                           	line	30
  5705                           	
  5706  0E54                     l1160:	
  5707  0E54  0008               	return
  5708                           	opt stack 0
  5709                           GLOBAL	__end_of___awmod
  5710  0E55                     	__end_of___awmod:
  5711 ;; =============== function ___awmod ends ============
  5712                           
  5713                           	signat	___awmod,8314
  5714                           	global	___awdiv
  5715                           psect	text545,local,class=CODE,delta=2
  5716                           global __ptext545
  5717  00ED                     __ptext545:
  5718                           
  5719 ;; *************** function ___awdiv *****************
  5720 ;; Defined at:
  5721 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  divisor         2    0[COMMON] int 
  5724 ;;  dividend        2    2[COMMON] int 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  quotient        2    7[COMMON] int 
  5727 ;;  sign            1    6[COMMON] unsigned char 
  5728 ;;  counter         1    5[COMMON] unsigned char 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  2    0[COMMON] int 
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, status,0
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5738 ;;      Params:         4       0       0       0       0
  5739 ;;      Locals:         4       0       0       0       0
  5740 ;;      Temps:          1       0       0       0       0
  5741 ;;      Totals:         9       0       0       0       0
  5742 ;;Total ram usage:        9 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; This function calls:
  5745 ;;		Nothing
  5746 ;; This function is called by:
  5747 ;;		_itoaa
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           psect	text545
  5751                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  5752                           	line	5
  5753                           	global	__size_of___awdiv
  5754  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5755                           	
  5756  00ED                     ___awdiv:	
  5757                           	opt	stack 5
  5758                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5759                           	line	9
  5760                           	
  5761  00ED                     l2944:	
  5762  00ED  01F6               	clrf	(___awdiv@sign)
  5763                           	line	10
  5764  00EE  1FF1               	btfss	(___awdiv@divisor+1),7
  5765  00EF  28F1               	goto	u3831
  5766  00F0  28F2               	goto	u3830
  5767  00F1                     u3831:
  5768  00F1  28FB               	goto	l2948
  5769  00F2                     u3830:
  5770                           	line	11
  5771                           	
  5772  00F2                     l2946:	
  5773  00F2  09F0               	comf	(___awdiv@divisor),f
  5774  00F3  09F1               	comf	(___awdiv@divisor+1),f
  5775  00F4  0AF0               	incf	(___awdiv@divisor),f
  5776  00F5  1903               	skipnz
  5777  00F6  0AF1               	incf	(___awdiv@divisor+1),f
  5778                           	line	12
  5779  00F7  01F6               	clrf	(___awdiv@sign)
  5780  00F8  1403               	bsf	status,0
  5781  00F9  0DF6               	rlf	(___awdiv@sign),f
  5782  00FA  28FB               	goto	l2948
  5783                           	line	13
  5784                           	
  5785  00FB                     l1082:	
  5786                           	line	14
  5787                           	
  5788  00FB                     l2948:	
  5789  00FB  1FF3               	btfss	(___awdiv@dividend+1),7
  5790  00FC  28FE               	goto	u3841
  5791  00FD  28FF               	goto	u3840
  5792  00FE                     u3841:
  5793  00FE  2909               	goto	l2954
  5794  00FF                     u3840:
  5795                           	line	15
  5796                           	
  5797  00FF                     l2950:	
  5798  00FF  09F2               	comf	(___awdiv@dividend),f
  5799  0100  09F3               	comf	(___awdiv@dividend+1),f
  5800  0101  0AF2               	incf	(___awdiv@dividend),f
  5801  0102  1903               	skipnz
  5802  0103  0AF3               	incf	(___awdiv@dividend+1),f
  5803                           	line	16
  5804                           	
  5805  0104                     l2952:	
  5806  0104  3001               	movlw	(01h)
  5807  0105  00F4               	movwf	(??___awdiv+0)+0
  5808  0106  0874               	movf	(??___awdiv+0)+0,w
  5809  0107  06F6               	xorwf	(___awdiv@sign),f
  5810  0108  2909               	goto	l2954
  5811                           	line	17
  5812                           	
  5813  0109                     l1083:	
  5814                           	line	18
  5815                           	
  5816  0109                     l2954:	
  5817  0109  01F7               	clrf	(___awdiv@quotient)
  5818  010A  01F8               	clrf	(___awdiv@quotient+1)
  5819                           	line	19
  5820                           	
  5821  010B                     l2956:	
  5822  010B  0871               	movf	(___awdiv@divisor+1),w
  5823  010C  0470               	iorwf	(___awdiv@divisor),w
  5824  010D  1903               	skipnz
  5825  010E  2910               	goto	u3851
  5826  010F  2911               	goto	u3850
  5827  0110                     u3851:
  5828  0110  294F               	goto	l2976
  5829  0111                     u3850:
  5830                           	line	20
  5831                           	
  5832  0111                     l2958:	
  5833  0111  01F5               	clrf	(___awdiv@counter)
  5834  0112  1403               	bsf	status,0
  5835  0113  0DF5               	rlf	(___awdiv@counter),f
  5836                           	line	21
  5837  0114  2921               	goto	l2964
  5838                           	
  5839  0115                     l1086:	
  5840                           	line	22
  5841                           	
  5842  0115                     l2960:	
  5843  0115  3001               	movlw	01h
  5844                           	
  5845  0116                     u3865:
  5846  0116  1003               	clrc
  5847  0117  0DF0               	rlf	(___awdiv@divisor),f
  5848  0118  0DF1               	rlf	(___awdiv@divisor+1),f
  5849  0119  3EFF               	addlw	-1
  5850  011A  1D03               	skipz
  5851  011B  2916               	goto	u3865
  5852                           	line	23
  5853                           	
  5854  011C                     l2962:	
  5855  011C  3001               	movlw	(01h)
  5856  011D  00F4               	movwf	(??___awdiv+0)+0
  5857  011E  0874               	movf	(??___awdiv+0)+0,w
  5858  011F  07F5               	addwf	(___awdiv@counter),f
  5859  0120  2921               	goto	l2964
  5860                           	line	24
  5861                           	
  5862  0121                     l1085:	
  5863                           	line	21
  5864                           	
  5865  0121                     l2964:	
  5866  0121  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  5867  0122  2924               	goto	u3871
  5868  0123  2925               	goto	u3870
  5869  0124                     u3871:
  5870  0124  2915               	goto	l2960
  5871  0125                     u3870:
  5872  0125  2927               	goto	l2966
  5873                           	
  5874  0126                     l1087:	
  5875  0126  2927               	goto	l2966
  5876                           	line	25
  5877                           	
  5878  0127                     l1088:	
  5879                           	line	26
  5880                           	
  5881  0127                     l2966:	
  5882  0127  3001               	movlw	01h
  5883                           	
  5884  0128                     u3885:
  5885  0128  1003               	clrc
  5886  0129  0DF7               	rlf	(___awdiv@quotient),f
  5887  012A  0DF8               	rlf	(___awdiv@quotient+1),f
  5888  012B  3EFF               	addlw	-1
  5889  012C  1D03               	skipz
  5890  012D  2928               	goto	u3885
  5891                           	line	27
  5892  012E  0871               	movf	(___awdiv@divisor+1),w
  5893  012F  0273               	subwf	(___awdiv@dividend+1),w
  5894  0130  1D03               	skipz
  5895  0131  2934               	goto	u3895
  5896  0132  0870               	movf	(___awdiv@divisor),w
  5897  0133  0272               	subwf	(___awdiv@dividend),w
  5898  0134                     u3895:
  5899  0134  1C03               	skipc
  5900  0135  2937               	goto	u3891
  5901  0136  2938               	goto	u3890
  5902  0137                     u3891:
  5903  0137  2940               	goto	l2972
  5904  0138                     u3890:
  5905                           	line	28
  5906                           	
  5907  0138                     l2968:	
  5908  0138  0870               	movf	(___awdiv@divisor),w
  5909  0139  02F2               	subwf	(___awdiv@dividend),f
  5910  013A  0871               	movf	(___awdiv@divisor+1),w
  5911  013B  1C03               	skipc
  5912  013C  03F3               	decf	(___awdiv@dividend+1),f
  5913  013D  02F3               	subwf	(___awdiv@dividend+1),f
  5914                           	line	29
  5915                           	
  5916  013E                     l2970:	
  5917  013E  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5918  013F  2940               	goto	l2972
  5919                           	line	30
  5920                           	
  5921  0140                     l1089:	
  5922                           	line	31
  5923                           	
  5924  0140                     l2972:	
  5925  0140  3001               	movlw	01h
  5926                           	
  5927  0141                     u3905:
  5928  0141  1003               	clrc
  5929  0142  0CF1               	rrf	(___awdiv@divisor+1),f
  5930  0143  0CF0               	rrf	(___awdiv@divisor),f
  5931  0144  3EFF               	addlw	-1
  5932  0145  1D03               	skipz
  5933  0146  2941               	goto	u3905
  5934                           	line	32
  5935                           	
  5936  0147                     l2974:	
  5937  0147  3001               	movlw	low(01h)
  5938  0148  02F5               	subwf	(___awdiv@counter),f
  5939  0149  1D03               	btfss	status,2
  5940  014A  294C               	goto	u3911
  5941  014B  294D               	goto	u3910
  5942  014C                     u3911:
  5943  014C  2927               	goto	l2966
  5944  014D                     u3910:
  5945  014D  294F               	goto	l2976
  5946                           	
  5947  014E                     l1090:	
  5948  014E  294F               	goto	l2976
  5949                           	line	33
  5950                           	
  5951  014F                     l1084:	
  5952                           	line	34
  5953                           	
  5954  014F                     l2976:	
  5955  014F  0876               	movf	(___awdiv@sign),w
  5956  0150  1D03               	skipz
  5957  0151  2953               	goto	u3920
  5958  0152  2959               	goto	l2980
  5959  0153                     u3920:
  5960                           	line	35
  5961                           	
  5962  0153                     l2978:	
  5963  0153  09F7               	comf	(___awdiv@quotient),f
  5964  0154  09F8               	comf	(___awdiv@quotient+1),f
  5965  0155  0AF7               	incf	(___awdiv@quotient),f
  5966  0156  1903               	skipnz
  5967  0157  0AF8               	incf	(___awdiv@quotient+1),f
  5968  0158  2959               	goto	l2980
  5969                           	
  5970  0159                     l1091:	
  5971                           	line	36
  5972                           	
  5973  0159                     l2980:	
  5974  0159  0878               	movf	(___awdiv@quotient+1),w
  5975  015A  01F1               	clrf	(?___awdiv+1)
  5976  015B  07F1               	addwf	(?___awdiv+1)
  5977  015C  0877               	movf	(___awdiv@quotient),w
  5978  015D  01F0               	clrf	(?___awdiv)
  5979  015E  07F0               	addwf	(?___awdiv)
  5980                           
  5981  015F  2960               	goto	l1092
  5982                           	
  5983  0160                     l2982:	
  5984                           	line	37
  5985                           	
  5986  0160                     l1092:	
  5987  0160  0008               	return
  5988                           	opt stack 0
  5989                           GLOBAL	__end_of___awdiv
  5990  0161                     	__end_of___awdiv:
  5991 ;; =============== function ___awdiv ends ============
  5992                           
  5993                           	signat	___awdiv,8314
  5994                           	global	___wmul
  5995                           psect	text546,local,class=CODE,delta=2
  5996                           global __ptext546
  5997  0C33                     __ptext546:
  5998                           
  5999 ;; *************** function ___wmul *****************
  6000 ;; Defined at:
  6001 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  multiplier      2    0[COMMON] unsigned int 
  6004 ;;  multiplicand    2    2[COMMON] unsigned int 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  product         2    4[COMMON] unsigned int 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  2    0[COMMON] unsigned int 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6016 ;;      Params:         4       0       0       0       0
  6017 ;;      Locals:         2       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0
  6019 ;;      Totals:         6       0       0       0       0
  6020 ;;Total ram usage:        6 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_itoaa
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           psect	text546
  6029                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  6030                           	line	3
  6031                           	global	__size_of___wmul
  6032  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6033                           	
  6034  0C33                     ___wmul:	
  6035                           	opt	stack 5
  6036                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6037                           	line	4
  6038                           	
  6039  0C33                     l2932:	
  6040  0C33  01F4               	clrf	(___wmul@product)
  6041  0C34  01F5               	clrf	(___wmul@product+1)
  6042  0C35  2C36               	goto	l2934
  6043                           	line	6
  6044                           	
  6045  0C36                     l942:	
  6046                           	line	7
  6047                           	
  6048  0C36                     l2934:	
  6049  0C36  1C70               	btfss	(___wmul@multiplier),(0)&7
  6050  0C37  2C39               	goto	u3791
  6051  0C38  2C3A               	goto	u3790
  6052  0C39                     u3791:
  6053  0C39  2C40               	goto	l943
  6054  0C3A                     u3790:
  6055                           	line	8
  6056                           	
  6057  0C3A                     l2936:	
  6058  0C3A  0872               	movf	(___wmul@multiplicand),w
  6059  0C3B  07F4               	addwf	(___wmul@product),f
  6060  0C3C  1803               	skipnc
  6061  0C3D  0AF5               	incf	(___wmul@product+1),f
  6062  0C3E  0873               	movf	(___wmul@multiplicand+1),w
  6063  0C3F  07F5               	addwf	(___wmul@product+1),f
  6064                           	
  6065  0C40                     l943:	
  6066                           	line	9
  6067  0C40  3001               	movlw	01h
  6068                           	
  6069  0C41                     u3805:
  6070  0C41  1003               	clrc
  6071  0C42  0DF2               	rlf	(___wmul@multiplicand),f
  6072  0C43  0DF3               	rlf	(___wmul@multiplicand+1),f
  6073  0C44  3EFF               	addlw	-1
  6074  0C45  1D03               	skipz
  6075  0C46  2C41               	goto	u3805
  6076                           	line	10
  6077                           	
  6078  0C47                     l2938:	
  6079  0C47  3001               	movlw	01h
  6080                           	
  6081  0C48                     u3815:
  6082  0C48  1003               	clrc
  6083  0C49  0CF1               	rrf	(___wmul@multiplier+1),f
  6084  0C4A  0CF0               	rrf	(___wmul@multiplier),f
  6085  0C4B  3EFF               	addlw	-1
  6086  0C4C  1D03               	skipz
  6087  0C4D  2C48               	goto	u3815
  6088                           	line	11
  6089  0C4E  0871               	movf	((___wmul@multiplier+1)),w
  6090  0C4F  0470               	iorwf	((___wmul@multiplier)),w
  6091  0C50  1D03               	skipz
  6092  0C51  2C53               	goto	u3821
  6093  0C52  2C54               	goto	u3820
  6094  0C53                     u3821:
  6095  0C53  2C36               	goto	l2934
  6096  0C54                     u3820:
  6097  0C54  2C55               	goto	l2940
  6098                           	
  6099  0C55                     l944:	
  6100                           	line	12
  6101                           	
  6102  0C55                     l2940:	
  6103  0C55  0875               	movf	(___wmul@product+1),w
  6104  0C56  01F1               	clrf	(?___wmul+1)
  6105  0C57  07F1               	addwf	(?___wmul+1)
  6106  0C58  0874               	movf	(___wmul@product),w
  6107  0C59  01F0               	clrf	(?___wmul)
  6108  0C5A  07F0               	addwf	(?___wmul)
  6109                           
  6110  0C5B  2C5C               	goto	l945
  6111                           	
  6112  0C5C                     l2942:	
  6113                           	line	13
  6114                           	
  6115  0C5C                     l945:	
  6116  0C5C  0008               	return
  6117                           	opt stack 0
  6118                           GLOBAL	__end_of___wmul
  6119  0C5D                     	__end_of___wmul:
  6120 ;; =============== function ___wmul ends ============
  6121                           
  6122                           	signat	___wmul,8314
  6123                           	global	_resetout
  6124                           psect	text547,local,class=CODE,delta=2
  6125                           global __ptext547
  6126  0AFD                     __ptext547:
  6127                           
  6128 ;; *************** function _resetout *****************
  6129 ;; Defined at:
  6130 ;;		line 715 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;		None               void
  6137 ;; Registers used:
  6138 ;;		None
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6144 ;;      Params:         0       0       0       0       0
  6145 ;;      Locals:         0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0
  6147 ;;      Totals:         0       0       0       0       0
  6148 ;;Total ram usage:        0 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_actrow
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           psect	text547
  6157                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6158                           	line	715
  6159                           	global	__size_of_resetout
  6160  0007                     	__size_of_resetout	equ	__end_of_resetout-_resetout
  6161                           	
  6162  0AFD                     _resetout:	
  6163                           	opt	stack 4
  6164                           ; Regs used in _resetout: []
  6165                           	line	716
  6166                           	
  6167  0AFD                     l2930:	
  6168                           ;prev11.c: 716: RC2=0;RC3=0;RB6=0;RB7=0;
  6169  0AFD  1283               	bcf	status, 5	;RP0=0, select bank0
  6170  0AFE  1303               	bcf	status, 6	;RP1=0, select bank0
  6171  0AFF  1107               	bcf	(58/8),(58)&7
  6172  0B00  1187               	bcf	(59/8),(59)&7
  6173  0B01  1306               	bcf	(54/8),(54)&7
  6174  0B02  1386               	bcf	(55/8),(55)&7
  6175                           	line	717
  6176                           	
  6177  0B03                     l900:	
  6178  0B03  0008               	return
  6179                           	opt stack 0
  6180                           GLOBAL	__end_of_resetout
  6181  0B04                     	__end_of_resetout:
  6182 ;; =============== function _resetout ends ============
  6183                           
  6184                           	signat	_resetout,88
  6185                           	global	_setLCD
  6186                           psect	text548,local,class=CODE,delta=2
  6187                           global __ptext548
  6188  0334                     __ptext548:
  6189                           
  6190 ;; *************** function _setLCD *****************
  6191 ;; Defined at:
  6192 ;;		line 555 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;  number          2    0[COMMON] int 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  vbool          32    0[BANK0 ] int [16]
  6197 ;;  i               2   32[BANK0 ] int 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;		None               void
  6200 ;; Registers used:
  6201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6207 ;;      Params:         2       0       0       0       0
  6208 ;;      Locals:         0      34       0       0       0
  6209 ;;      Temps:          6       0       0       0       0
  6210 ;;      Totals:         8      34       0       0       0
  6211 ;;Total ram usage:       42 bytes
  6212 ;; Hardware stack levels used:    2
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_cmd
  6217 ;;		_dat
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           psect	text548
  6221                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6222                           	line	555
  6223                           	global	__size_of_setLCD
  6224  0144                     	__size_of_setLCD	equ	__end_of_setLCD-_setLCD
  6225                           	
  6226  0334                     _setLCD:	
  6227                           	opt	stack 2
  6228                           ; Regs used in _setLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6229                           	line	560
  6230                           	
  6231  0334                     l2916:	
  6232                           ;prev11.c: 556: const int size=8*sizeof(int);
  6233                           ;prev11.c: 557: int vbool[8*sizeof(int)];
  6234                           ;prev11.c: 558: int i;;
  6235                           ;prev11.c: 560: for (i = 0; i <size; i++)
  6236  0334  1283               	bcf	status, 5	;RP0=0, select bank0
  6237  0335  1303               	bcf	status, 6	;RP1=0, select bank0
  6238  0336  01C0               	clrf	(setLCD@i)
  6239  0337  01C1               	clrf	(setLCD@i+1)
  6240                           	
  6241  0338                     l2918:	
  6242  0338  3001               	movlw	(setLCD@size-__stringbase)
  6243  0339  0084               	movwf	fsr0
  6244  033A  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6245  033F  00F2               	movwf	(??_setLCD+0)+0
  6246  0340  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6247  0345  00F3               	movwf	(??_setLCD+0)+0+1
  6248  0346  0841               	movf	(setLCD@i+1),w
  6249  0347  3A80               	xorlw	80h
  6250  0348  00F4               	movwf	(??_setLCD+2)+0
  6251  0349  0873               	movf	1+(??_setLCD+0)+0,w
  6252  034A  3A80               	xorlw	80h
  6253  034B  0274               	subwf	(??_setLCD+2)+0,w
  6254  034C  1D03               	skipz
  6255  034D  2B50               	goto	u3605
  6256  034E  0872               	movf	0+(??_setLCD+0)+0,w
  6257  034F  0240               	subwf	(setLCD@i),w
  6258  0350                     u3605:
  6259                           
  6260  0350  1C03               	skipc
  6261  0351  2B53               	goto	u3601
  6262  0352  2B54               	goto	u3600
  6263  0353                     u3601:
  6264  0353  2B56               	goto	l2922
  6265  0354                     u3600:
  6266  0354  2B97               	goto	l2928
  6267                           	
  6268  0355                     l2920:	
  6269  0355  2B97               	goto	l2928
  6270                           	line	561
  6271                           	
  6272  0356                     l837:	
  6273                           	line	562
  6274                           	
  6275  0356                     l2922:	
  6276                           ;prev11.c: 561: {
  6277                           ;prev11.c: 562: vbool[i] = number<<i < 0;
  6278  0356  1283               	bcf	status, 5	;RP0=0, select bank0
  6279  0357  1303               	bcf	status, 6	;RP1=0, select bank0
  6280  0358  0A40               	incf	(setLCD@i),w
  6281  0359  00F2               	movwf	(??_setLCD+0)+0
  6282  035A  0871               	movf	(setLCD@number+1),w
  6283  035B  00F4               	movwf	(??_setLCD+1)+0+1
  6284  035C  0870               	movf	(setLCD@number),w
  6285  035D  00F3               	movwf	(??_setLCD+1)+0
  6286  035E  2B62               	goto	u3614
  6287  035F                     u3615:
  6288  035F  1003               	clrc
  6289  0360  0DF3               	rlf	(??_setLCD+1)+0,f
  6290  0361  0DF4               	rlf	(??_setLCD+1)+1,f
  6291  0362                     u3614:
  6292  0362  0BF2               	decfsz	(??_setLCD+0)+0,f
  6293  0363  2B5F               	goto	u3615
  6294  0364  3000               	movlw	0
  6295  0365  1BF4               	btfsc	1+(??_setLCD+1)+0,7
  6296  0366  3001               	movlw	1
  6297  0367  00F5               	movwf	(??_setLCD+3)+0
  6298  0368  01F6               	clrf	(??_setLCD+3)+0+1
  6299  0369  0840               	movf	(setLCD@i),w
  6300  036A  00F7               	movwf	(??_setLCD+5)+0
  6301  036B  0777               	addwf	(??_setLCD+5)+0,w
  6302  036C  3E20               	addlw	setLCD@vbool&0ffh
  6303  036D  0084               	movwf	fsr0
  6304  036E  0875               	movf	0+(??_setLCD+3)+0,w
  6305  036F  1383               	bcf	status, 7	;select IRP bank0
  6306  0370  0080               	movwf	indf
  6307  0371  0A84               	incf	fsr0,f
  6308  0372  0876               	movf	1+(??_setLCD+3)+0,w
  6309  0373  0080               	movwf	indf
  6310                           	line	560
  6311                           	
  6312  0374                     l2924:	
  6313  0374  3001               	movlw	low(01h)
  6314  0375  07C0               	addwf	(setLCD@i),f
  6315  0376  1803               	skipnc
  6316  0377  0AC1               	incf	(setLCD@i+1),f
  6317  0378  3000               	movlw	high(01h)
  6318  0379  07C1               	addwf	(setLCD@i+1),f
  6319                           	
  6320  037A                     l2926:	
  6321  037A  3001               	movlw	(setLCD@size-__stringbase)
  6322  037B  0084               	movwf	fsr0
  6323  037C  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6324  0381  00F2               	movwf	(??_setLCD+0)+0
  6325  0382  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6326  0387  00F3               	movwf	(??_setLCD+0)+0+1
  6327  0388  0841               	movf	(setLCD@i+1),w
  6328  0389  3A80               	xorlw	80h
  6329  038A  00F4               	movwf	(??_setLCD+2)+0
  6330  038B  0873               	movf	1+(??_setLCD+0)+0,w
  6331  038C  3A80               	xorlw	80h
  6332  038D  0274               	subwf	(??_setLCD+2)+0,w
  6333  038E  1D03               	skipz
  6334  038F  2B92               	goto	u3625
  6335  0390  0872               	movf	0+(??_setLCD+0)+0,w
  6336  0391  0240               	subwf	(setLCD@i),w
  6337  0392                     u3625:
  6338                           
  6339  0392  1C03               	skipc
  6340  0393  2B95               	goto	u3621
  6341  0394  2B96               	goto	u3620
  6342  0395                     u3621:
  6343  0395  2B56               	goto	l2922
  6344  0396                     u3620:
  6345  0396  2B97               	goto	l2928
  6346                           	
  6347  0397                     l838:	
  6348                           	line	565
  6349                           	
  6350  0397                     l2928:	
  6351                           ;prev11.c: 563: }
  6352                           ;prev11.c: 565: RD0=vbool[size-1];
  6353  0397  3001               	movlw	(setLCD@size-__stringbase)
  6354  0398  0084               	movwf	fsr0
  6355  0399  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6356  039E  00F2               	movwf	(??_setLCD+0)+0
  6357  039F  0772               	addwf	(??_setLCD+0)+0,w
  6358  03A0  3EFE               	addlw	0FEh
  6359  03A1  3E20               	addlw	setLCD@vbool&0ffh
  6360  03A2  0084               	movwf	fsr0
  6361  03A3  1383               	bcf	status, 7	;select IRP bank0
  6362  03A4  0800               	movf	indf,w
  6363  03A5  00F3               	movwf	(??_setLCD+1)+0+0
  6364  03A6  0A84               	incf	fsr0,f
  6365  03A7  0800               	movf	indf,w
  6366  03A8  00F4               	movwf	(??_setLCD+1)+0+1
  6367  03A9  1873               	btfsc	0+(??_setLCD+1)+0,0
  6368  03AA  2BAC               	goto	u3631
  6369  03AB  2BB0               	goto	u3630
  6370                           	
  6371  03AC                     u3631:
  6372  03AC  1283               	bcf	status, 5	;RP0=0, select bank0
  6373  03AD  1303               	bcf	status, 6	;RP1=0, select bank0
  6374  03AE  1408               	bsf	(64/8),(64)&7
  6375  03AF  2BB3               	goto	u3644
  6376  03B0                     u3630:
  6377  03B0  1283               	bcf	status, 5	;RP0=0, select bank0
  6378  03B1  1303               	bcf	status, 6	;RP1=0, select bank0
  6379  03B2  1008               	bcf	(64/8),(64)&7
  6380  03B3                     u3644:
  6381                           	line	566
  6382                           ;prev11.c: 566: RD1=vbool[size-2];
  6383  03B3  3001               	movlw	(setLCD@size-__stringbase)
  6384  03B4  0084               	movwf	fsr0
  6385  03B5  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6386  03BA  00F2               	movwf	(??_setLCD+0)+0
  6387  03BB  0772               	addwf	(??_setLCD+0)+0,w
  6388  03BC  3EFC               	addlw	0FCh
  6389  03BD  3E20               	addlw	setLCD@vbool&0ffh
  6390  03BE  0084               	movwf	fsr0
  6391  03BF  1383               	bcf	status, 7	;select IRP bank0
  6392  03C0  0800               	movf	indf,w
  6393  03C1  00F3               	movwf	(??_setLCD+1)+0+0
  6394  03C2  0A84               	incf	fsr0,f
  6395  03C3  0800               	movf	indf,w
  6396  03C4  00F4               	movwf	(??_setLCD+1)+0+1
  6397  03C5  1873               	btfsc	0+(??_setLCD+1)+0,0
  6398  03C6  2BC8               	goto	u3651
  6399  03C7  2BCC               	goto	u3650
  6400                           	
  6401  03C8                     u3651:
  6402  03C8  1283               	bcf	status, 5	;RP0=0, select bank0
  6403  03C9  1303               	bcf	status, 6	;RP1=0, select bank0
  6404  03CA  1488               	bsf	(65/8),(65)&7
  6405  03CB  2BCF               	goto	u3664
  6406  03CC                     u3650:
  6407  03CC  1283               	bcf	status, 5	;RP0=0, select bank0
  6408  03CD  1303               	bcf	status, 6	;RP1=0, select bank0
  6409  03CE  1088               	bcf	(65/8),(65)&7
  6410  03CF                     u3664:
  6411                           	line	567
  6412                           ;prev11.c: 567: RD2=vbool[size-3];
  6413  03CF  3001               	movlw	(setLCD@size-__stringbase)
  6414  03D0  0084               	movwf	fsr0
  6415  03D1  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6416  03D6  00F2               	movwf	(??_setLCD+0)+0
  6417  03D7  0772               	addwf	(??_setLCD+0)+0,w
  6418  03D8  3EFA               	addlw	0FAh
  6419  03D9  3E20               	addlw	setLCD@vbool&0ffh
  6420  03DA  0084               	movwf	fsr0
  6421  03DB  1383               	bcf	status, 7	;select IRP bank0
  6422  03DC  0800               	movf	indf,w
  6423  03DD  00F3               	movwf	(??_setLCD+1)+0+0
  6424  03DE  0A84               	incf	fsr0,f
  6425  03DF  0800               	movf	indf,w
  6426  03E0  00F4               	movwf	(??_setLCD+1)+0+1
  6427  03E1  1873               	btfsc	0+(??_setLCD+1)+0,0
  6428  03E2  2BE4               	goto	u3671
  6429  03E3  2BE8               	goto	u3670
  6430                           	
  6431  03E4                     u3671:
  6432  03E4  1283               	bcf	status, 5	;RP0=0, select bank0
  6433  03E5  1303               	bcf	status, 6	;RP1=0, select bank0
  6434  03E6  1508               	bsf	(66/8),(66)&7
  6435  03E7  2BEB               	goto	u3684
  6436  03E8                     u3670:
  6437  03E8  1283               	bcf	status, 5	;RP0=0, select bank0
  6438  03E9  1303               	bcf	status, 6	;RP1=0, select bank0
  6439  03EA  1108               	bcf	(66/8),(66)&7
  6440  03EB                     u3684:
  6441                           	line	568
  6442                           ;prev11.c: 568: RD3=vbool[size-4];
  6443  03EB  3001               	movlw	(setLCD@size-__stringbase)
  6444  03EC  0084               	movwf	fsr0
  6445  03ED  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6446  03F2  00F2               	movwf	(??_setLCD+0)+0
  6447  03F3  0772               	addwf	(??_setLCD+0)+0,w
  6448  03F4  3EF8               	addlw	0F8h
  6449  03F5  3E20               	addlw	setLCD@vbool&0ffh
  6450  03F6  0084               	movwf	fsr0
  6451  03F7  1383               	bcf	status, 7	;select IRP bank0
  6452  03F8  0800               	movf	indf,w
  6453  03F9  00F3               	movwf	(??_setLCD+1)+0+0
  6454  03FA  0A84               	incf	fsr0,f
  6455  03FB  0800               	movf	indf,w
  6456  03FC  00F4               	movwf	(??_setLCD+1)+0+1
  6457  03FD  1873               	btfsc	0+(??_setLCD+1)+0,0
  6458  03FE  2C00               	goto	u3691
  6459  03FF  2C04               	goto	u3690
  6460                           	
  6461  0400                     u3691:
  6462  0400  1283               	bcf	status, 5	;RP0=0, select bank0
  6463  0401  1303               	bcf	status, 6	;RP1=0, select bank0
  6464  0402  1588               	bsf	(67/8),(67)&7
  6465  0403  2C07               	goto	u3704
  6466  0404                     u3690:
  6467  0404  1283               	bcf	status, 5	;RP0=0, select bank0
  6468  0405  1303               	bcf	status, 6	;RP1=0, select bank0
  6469  0406  1188               	bcf	(67/8),(67)&7
  6470  0407                     u3704:
  6471                           	line	569
  6472                           ;prev11.c: 569: RD4=vbool[size-5];
  6473  0407  3001               	movlw	(setLCD@size-__stringbase)
  6474  0408  0084               	movwf	fsr0
  6475  0409  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6476  040E  00F2               	movwf	(??_setLCD+0)+0
  6477  040F  0772               	addwf	(??_setLCD+0)+0,w
  6478  0410  3EF6               	addlw	0F6h
  6479  0411  3E20               	addlw	setLCD@vbool&0ffh
  6480  0412  0084               	movwf	fsr0
  6481  0413  1383               	bcf	status, 7	;select IRP bank0
  6482  0414  0800               	movf	indf,w
  6483  0415  00F3               	movwf	(??_setLCD+1)+0+0
  6484  0416  0A84               	incf	fsr0,f
  6485  0417  0800               	movf	indf,w
  6486  0418  00F4               	movwf	(??_setLCD+1)+0+1
  6487  0419  1873               	btfsc	0+(??_setLCD+1)+0,0
  6488  041A  2C1C               	goto	u3711
  6489  041B  2C20               	goto	u3710
  6490                           	
  6491  041C                     u3711:
  6492  041C  1283               	bcf	status, 5	;RP0=0, select bank0
  6493  041D  1303               	bcf	status, 6	;RP1=0, select bank0
  6494  041E  1608               	bsf	(68/8),(68)&7
  6495  041F  2C23               	goto	u3724
  6496  0420                     u3710:
  6497  0420  1283               	bcf	status, 5	;RP0=0, select bank0
  6498  0421  1303               	bcf	status, 6	;RP1=0, select bank0
  6499  0422  1208               	bcf	(68/8),(68)&7
  6500  0423                     u3724:
  6501                           	line	570
  6502                           ;prev11.c: 570: RD5=vbool[size-6];
  6503  0423  3001               	movlw	(setLCD@size-__stringbase)
  6504  0424  0084               	movwf	fsr0
  6505  0425  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6506  042A  00F2               	movwf	(??_setLCD+0)+0
  6507  042B  0772               	addwf	(??_setLCD+0)+0,w
  6508  042C  3EF4               	addlw	0F4h
  6509  042D  3E20               	addlw	setLCD@vbool&0ffh
  6510  042E  0084               	movwf	fsr0
  6511  042F  1383               	bcf	status, 7	;select IRP bank0
  6512  0430  0800               	movf	indf,w
  6513  0431  00F3               	movwf	(??_setLCD+1)+0+0
  6514  0432  0A84               	incf	fsr0,f
  6515  0433  0800               	movf	indf,w
  6516  0434  00F4               	movwf	(??_setLCD+1)+0+1
  6517  0435  1873               	btfsc	0+(??_setLCD+1)+0,0
  6518  0436  2C38               	goto	u3731
  6519  0437  2C3C               	goto	u3730
  6520                           	
  6521  0438                     u3731:
  6522  0438  1283               	bcf	status, 5	;RP0=0, select bank0
  6523  0439  1303               	bcf	status, 6	;RP1=0, select bank0
  6524  043A  1688               	bsf	(69/8),(69)&7
  6525  043B  2C3F               	goto	u3744
  6526  043C                     u3730:
  6527  043C  1283               	bcf	status, 5	;RP0=0, select bank0
  6528  043D  1303               	bcf	status, 6	;RP1=0, select bank0
  6529  043E  1288               	bcf	(69/8),(69)&7
  6530  043F                     u3744:
  6531                           	line	571
  6532                           ;prev11.c: 571: RD6=vbool[size-7];
  6533  043F  3001               	movlw	(setLCD@size-__stringbase)
  6534  0440  0084               	movwf	fsr0
  6535  0441  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6536  0446  00F2               	movwf	(??_setLCD+0)+0
  6537  0447  0772               	addwf	(??_setLCD+0)+0,w
  6538  0448  3EF2               	addlw	0F2h
  6539  0449  3E20               	addlw	setLCD@vbool&0ffh
  6540  044A  0084               	movwf	fsr0
  6541  044B  1383               	bcf	status, 7	;select IRP bank0
  6542  044C  0800               	movf	indf,w
  6543  044D  00F3               	movwf	(??_setLCD+1)+0+0
  6544  044E  0A84               	incf	fsr0,f
  6545  044F  0800               	movf	indf,w
  6546  0450  00F4               	movwf	(??_setLCD+1)+0+1
  6547  0451  1873               	btfsc	0+(??_setLCD+1)+0,0
  6548  0452  2C54               	goto	u3751
  6549  0453  2C58               	goto	u3750
  6550                           	
  6551  0454                     u3751:
  6552  0454  1283               	bcf	status, 5	;RP0=0, select bank0
  6553  0455  1303               	bcf	status, 6	;RP1=0, select bank0
  6554  0456  1708               	bsf	(70/8),(70)&7
  6555  0457  2C5B               	goto	u3764
  6556  0458                     u3750:
  6557  0458  1283               	bcf	status, 5	;RP0=0, select bank0
  6558  0459  1303               	bcf	status, 6	;RP1=0, select bank0
  6559  045A  1308               	bcf	(70/8),(70)&7
  6560  045B                     u3764:
  6561                           	line	572
  6562                           ;prev11.c: 572: RD7=vbool[size-8];
  6563  045B  3001               	movlw	(setLCD@size-__stringbase)
  6564  045C  0084               	movwf	fsr0
  6565  045D  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6566  0462  00F2               	movwf	(??_setLCD+0)+0
  6567  0463  0772               	addwf	(??_setLCD+0)+0,w
  6568  0464  3EF0               	addlw	0F0h
  6569  0465  3E20               	addlw	setLCD@vbool&0ffh
  6570  0466  0084               	movwf	fsr0
  6571  0467  1383               	bcf	status, 7	;select IRP bank0
  6572  0468  0800               	movf	indf,w
  6573  0469  00F3               	movwf	(??_setLCD+1)+0+0
  6574  046A  0A84               	incf	fsr0,f
  6575  046B  0800               	movf	indf,w
  6576  046C  00F4               	movwf	(??_setLCD+1)+0+1
  6577  046D  1873               	btfsc	0+(??_setLCD+1)+0,0
  6578  046E  2C70               	goto	u3771
  6579  046F  2C74               	goto	u3770
  6580                           	
  6581  0470                     u3771:
  6582  0470  1283               	bcf	status, 5	;RP0=0, select bank0
  6583  0471  1303               	bcf	status, 6	;RP1=0, select bank0
  6584  0472  1788               	bsf	(71/8),(71)&7
  6585  0473  2C77               	goto	u3784
  6586  0474                     u3770:
  6587  0474  1283               	bcf	status, 5	;RP0=0, select bank0
  6588  0475  1303               	bcf	status, 6	;RP1=0, select bank0
  6589  0476  1388               	bcf	(71/8),(71)&7
  6590  0477                     u3784:
  6591                           	line	576
  6592                           	
  6593  0477                     l839:	
  6594  0477  0008               	return
  6595                           	opt stack 0
  6596                           GLOBAL	__end_of_setLCD
  6597  0478                     	__end_of_setLCD:
  6598 ;; =============== function _setLCD ends ============
  6599                           
  6600                           	signat	_setLCD,4216
  6601                           	global	_delay
  6602                           psect	text549,local,class=CODE,delta=2
  6603                           global __ptext549
  6604  0B48                     __ptext549:
  6605                           
  6606 ;; *************** function _delay *****************
  6607 ;; Defined at:
  6608 ;;		line 470 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  x               2    0[COMMON] unsigned int 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;		None               void
  6615 ;; Registers used:
  6616 ;;		wreg
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6622 ;;      Params:         2       0       0       0       0
  6623 ;;      Locals:         0       0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0
  6625 ;;      Totals:         2       0       0       0       0
  6626 ;;Total ram usage:        2 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_cmd
  6632 ;;		_dat
  6633 ;;		_scroll
  6634 ;;		_actrow
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           psect	text549
  6638                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6639                           	line	470
  6640                           	global	__size_of_delay
  6641  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  6642                           	
  6643  0B48                     _delay:	
  6644                           	opt	stack 3
  6645                           ; Regs used in _delay: [wreg]
  6646                           	line	471
  6647                           	
  6648  0B48                     l2912:	
  6649                           ;prev11.c: 471: while(x-->0);
  6650  0B48  2B4A               	goto	l2914
  6651                           	
  6652  0B49                     l808:	
  6653  0B49  2B4A               	goto	l2914
  6654                           	
  6655  0B4A                     l807:	
  6656                           	
  6657  0B4A                     l2914:	
  6658  0B4A  3001               	movlw	low(01h)
  6659  0B4B  02F0               	subwf	(delay@x),f
  6660  0B4C  3000               	movlw	high(01h)
  6661  0B4D  1C03               	skipc
  6662  0B4E  03F1               	decf	(delay@x+1),f
  6663  0B4F  02F1               	subwf	(delay@x+1),f
  6664  0B50  30FF               	movlw	high(0FFFFh)
  6665  0B51  0671               	xorwf	((delay@x+1)),w
  6666  0B52  1D03               	skipz
  6667  0B53  2B56               	goto	u3595
  6668  0B54  30FF               	movlw	low(0FFFFh)
  6669  0B55  0670               	xorwf	((delay@x)),w
  6670  0B56                     u3595:
  6671                           
  6672  0B56  1D03               	skipz
  6673  0B57  2B59               	goto	u3591
  6674  0B58  2B5A               	goto	u3590
  6675  0B59                     u3591:
  6676  0B59  2B4A               	goto	l2914
  6677  0B5A                     u3590:
  6678  0B5A  2B5B               	goto	l810
  6679                           	
  6680  0B5B                     l809:	
  6681                           	line	472
  6682                           	
  6683  0B5B                     l810:	
  6684  0B5B  0008               	return
  6685                           	opt stack 0
  6686                           GLOBAL	__end_of_delay
  6687  0B5C                     	__end_of_delay:
  6688 ;; =============== function _delay ends ============
  6689                           
  6690                           	signat	_delay,4216
  6691                           	global	_strcat
  6692                           psect	text550,local,class=CODE,delta=2
  6693                           global __ptext550
  6694  0C0A                     __ptext550:
  6695                           
  6696 ;; *************** function _strcat *****************
  6697 ;; Defined at:
  6698 ;;		line 10 in file "../../common/strcat.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  to              1    wreg     PTR unsigned char 
  6701 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  6702 ;;  from            1    0[COMMON] PTR const unsigned char 
  6703 ;;		 -> getlogicseq@snum(16), 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  to              1    2[COMMON] PTR unsigned char 
  6706 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  6707 ;;  cp              1    3[COMMON] PTR unsigned char 
  6708 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      PTR unsigned char 
  6711 ;; Registers used:
  6712 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6718 ;;      Params:         1       0       0       0       0
  6719 ;;      Locals:         2       0       0       0       0
  6720 ;;      Temps:          1       0       0       0       0
  6721 ;;      Totals:         4       0       0       0       0
  6722 ;;Total ram usage:        4 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_getlogicseq
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           psect	text550
  6731                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcat.c"
  6732                           	line	10
  6733                           	global	__size_of_strcat
  6734  0029                     	__size_of_strcat	equ	__end_of_strcat-_strcat
  6735                           	
  6736  0C0A                     _strcat:	
  6737                           	opt	stack 6
  6738                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  6739                           ;strcat@to stored from wreg
  6740                           	line	18
  6741  0C0A  00F2               	movwf	(strcat@to)
  6742                           	
  6743  0C0B                     l2836:	
  6744  0C0B  0872               	movf	(strcat@to),w
  6745  0C0C  00F1               	movwf	(??_strcat+0)+0
  6746  0C0D  0871               	movf	(??_strcat+0)+0,w
  6747  0C0E  00F3               	movwf	(strcat@cp)
  6748                           	line	19
  6749  0C0F  2C15               	goto	l2840
  6750                           	
  6751  0C10                     l914:	
  6752                           	line	20
  6753                           	
  6754  0C10                     l2838:	
  6755  0C10  3001               	movlw	(01h)
  6756  0C11  00F1               	movwf	(??_strcat+0)+0
  6757  0C12  0871               	movf	(??_strcat+0)+0,w
  6758  0C13  07F3               	addwf	(strcat@cp),f
  6759  0C14  2C15               	goto	l2840
  6760                           	
  6761  0C15                     l913:	
  6762                           	line	19
  6763                           	
  6764  0C15                     l2840:	
  6765  0C15  0873               	movf	(strcat@cp),w
  6766  0C16  0084               	movwf	fsr0
  6767  0C17  1383               	bcf	status, 7	;select IRP bank0
  6768  0C18  0880               	movf	indf,f
  6769  0C19  1D03               	skipz
  6770  0C1A  2C1C               	goto	u3411
  6771  0C1B  2C1D               	goto	u3410
  6772  0C1C                     u3411:
  6773  0C1C  2C10               	goto	l2838
  6774  0C1D                     u3410:
  6775  0C1D  2C20               	goto	l2842
  6776                           	
  6777  0C1E                     l915:	
  6778                           	line	21
  6779  0C1E  2C20               	goto	l2842
  6780                           	
  6781  0C1F                     l917:	
  6782                           	line	22
  6783  0C1F  2C20               	goto	l2842
  6784                           	
  6785  0C20                     l916:	
  6786                           	line	21
  6787                           	
  6788  0C20                     l2842:	
  6789  0C20  0870               	movf	(strcat@from),w
  6790  0C21  0084               	movwf	fsr0
  6791  0C22  3001               	movlw	01h
  6792  0C23  07F0               	addwf	(strcat@from),f
  6793  0C24  0800               	movf	indf,w
  6794  0C25  00F1               	movwf	(??_strcat+0)+0
  6795  0C26  0873               	movf	(strcat@cp),w
  6796  0C27  0084               	movwf	fsr0
  6797  0C28  3001               	movlw	01h
  6798  0C29  07F3               	addwf	(strcat@cp),f
  6799  0C2A  0871               	movf	(??_strcat+0)+0,w
  6800  0C2B  0080               	movwf	indf
  6801  0C2C  0880               	movf	(indf),f
  6802  0C2D  1D03               	skipz
  6803  0C2E  2C30               	goto	u3421
  6804  0C2F  2C31               	goto	u3420
  6805  0C30                     u3421:
  6806  0C30  2C20               	goto	l2842
  6807  0C31                     u3420:
  6808  0C31  2C32               	goto	l919
  6809                           	
  6810  0C32                     l918:	
  6811                           	line	24
  6812                           ;	Return value of _strcat is never used
  6813                           	
  6814  0C32                     l919:	
  6815  0C32  0008               	return
  6816                           	opt stack 0
  6817                           GLOBAL	__end_of_strcat
  6818  0C33                     	__end_of_strcat:
  6819 ;; =============== function _strcat ends ============
  6820                           
  6821                           	signat	_strcat,8313
  6822                           	global	_strcmp
  6823                           psect	text551,local,class=CODE,delta=2
  6824                           global __ptext551
  6825  0C90                     __ptext551:
  6826                           
  6827 ;; *************** function _strcmp *****************
  6828 ;; Defined at:
  6829 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  s1              1    wreg     PTR const unsigned char 
  6832 ;;		 -> lo(5), 
  6833 ;;  s2              2    0[COMMON] PTR const unsigned char 
  6834 ;;		 -> STR_31(5), STR_30(5), STR_29(5), STR_28(5), 
  6835 ;;		 -> STR_27(5), STR_26(5), STR_25(5), STR_24(5), 
  6836 ;;		 -> STR_23(5), STR_22(5), STR_21(5), STR_20(5), 
  6837 ;;		 -> STR_19(5), STR_18(5), STR_17(5), STR_16(5), 
  6838 ;;		 -> STR_3(4), plo(5), 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  s1              1    7[COMMON] PTR const unsigned char 
  6841 ;;		 -> lo(5), 
  6842 ;;  r               1    6[COMMON] char 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  2    0[COMMON] int 
  6845 ;; Registers used:
  6846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6852 ;;      Params:         2       0       0       0       0
  6853 ;;      Locals:         2       0       0       0       0
  6854 ;;      Temps:          4       0       0       0       0
  6855 ;;      Totals:         8       0       0       0       0
  6856 ;;Total ram usage:        8 bytes
  6857 ;; Hardware stack levels used:    2
  6858 ;; This function calls:
  6859 ;;		Nothing
  6860 ;; This function is called by:
  6861 ;;		_startswitch
  6862 ;;		_parselogic
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           psect	text551
  6866                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  6867                           	line	34
  6868                           	global	__size_of_strcmp
  6869  0039                     	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  6870                           	
  6871  0C90                     _strcmp:	
  6872                           	opt	stack 4
  6873                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6874                           ;strcmp@s1 stored from wreg
  6875  0C90  00F7               	movwf	(strcmp@s1)
  6876                           	line	37
  6877                           	
  6878  0C91                     l2826:	
  6879  0C91  2C93               	goto	l2828
  6880                           	
  6881  0C92                     l923:	
  6882                           	line	38
  6883  0C92  2C93               	goto	l2828
  6884                           	
  6885  0C93                     l922:	
  6886                           	line	37
  6887                           	
  6888  0C93                     l2828:	
  6889  0C93  0877               	movf	(strcmp@s1),w
  6890  0C94  0084               	movwf	fsr
  6891  0C95  1383               	bcf	status, 7	;select IRP bank0
  6892  0C96  0800               	movf	indf,w
  6893  0C97  00F2               	movwf	(??_strcmp+0)+0
  6894  0C98  0871               	movf	(strcmp@s2+1),w
  6895  0C99  00F4               	movwf	(??_strcmp+1)+0+1
  6896  0C9A  0870               	movf	(strcmp@s2),w
  6897  0C9B  00F3               	movwf	(??_strcmp+1)+0
  6898  0C9C  3001               	movlw	(01h)
  6899  0C9D  07F0               	addwf	(strcmp@s2),f
  6900  0C9E  1803               	skipnc
  6901  0C9F  0AF1               	incf	(strcmp@s2+1),f
  6902  0CA0  0874               	movf	1+(??_strcmp+1)+0,w
  6903  0CA1  1283               	bcf	status, 5	;RP0=0, select bank0
  6904  0CA2  1303               	bcf	status, 6	;RP1=0, select bank0
  6905  0CA3  00FF               	movwf	btemp+1
  6906  0CA4  0873               	movf	0+(??_strcmp+1)+0,w
  6907  0CA5  0084               	movwf	fsr0
  6908  0CA6  120A  118A  2003   	fcall	stringtab
              120A  158A         
  6909  0CAB  3AFF               	xorlw	0ffh
  6910  0CAC  3E01               	addlw	1
  6911  0CAD  0772               	addwf	(??_strcmp+0)+0,w
  6912  0CAE  00F5               	movwf	(??_strcmp+3)+0
  6913  0CAF  0875               	movf	(??_strcmp+3)+0,w
  6914  0CB0  00F6               	movwf	(strcmp@r)
  6915  0CB1  08F6               	movf	((strcmp@r)),f
  6916  0CB2  1D03               	skipz
  6917  0CB3  2CB5               	goto	u3391
  6918  0CB4  2CB6               	goto	u3390
  6919  0CB5                     u3391:
  6920  0CB5  2CC2               	goto	l2832
  6921  0CB6                     u3390:
  6922                           	
  6923  0CB6                     l2830:	
  6924  0CB6  0877               	movf	(strcmp@s1),w
  6925  0CB7  0084               	movwf	fsr0
  6926  0CB8  3001               	movlw	01h
  6927  0CB9  07F7               	addwf	(strcmp@s1),f
  6928  0CBA  1383               	bcf	status, 7	;select IRP bank0
  6929  0CBB  0880               	movf	indf,f
  6930  0CBC  1D03               	skipz
  6931  0CBD  2CBF               	goto	u3401
  6932  0CBE  2CC0               	goto	u3400
  6933  0CBF                     u3401:
  6934  0CBF  2C93               	goto	l2828
  6935  0CC0                     u3400:
  6936  0CC0  2CC2               	goto	l2832
  6937                           	
  6938  0CC1                     l925:	
  6939  0CC1  2CC2               	goto	l2832
  6940                           	
  6941  0CC2                     l926:	
  6942                           	line	39
  6943                           	
  6944  0CC2                     l2832:	
  6945  0CC2  0876               	movf	(strcmp@r),w
  6946  0CC3  00F0               	movwf	(?_strcmp)
  6947  0CC4  01F1               	clrf	(?_strcmp+1)
  6948  0CC5  1BF0               	btfsc	(?_strcmp),7
  6949  0CC6  03F1               	decf	(?_strcmp+1),f
  6950  0CC7  2CC8               	goto	l927
  6951                           	
  6952  0CC8                     l2834:	
  6953                           	line	40
  6954                           	
  6955  0CC8                     l927:	
  6956  0CC8  0008               	return
  6957                           	opt stack 0
  6958                           GLOBAL	__end_of_strcmp
  6959  0CC9                     	__end_of_strcmp:
  6960 ;; =============== function _strcmp ends ============
  6961                           
  6962                           	signat	_strcmp,8314
  6963                           	global	_strcpy
  6964                           psect	text552,local,class=CODE,delta=2
  6965                           global __ptext552
  6966  0BE1                     __ptext552:
  6967                           
  6968 ;; *************** function _strcpy *****************
  6969 ;; Defined at:
  6970 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  to              1    wreg     PTR unsigned char 
  6973 ;;		 -> getlogicseq@str(32), logic_d3(5), logic_d2(5), logic_d1(5), 
  6974 ;;		 -> lo(5), plo(5), 
  6975 ;;  from            2    0[COMMON] PTR const unsigned char 
  6976 ;;		 -> STR_14(1), STR_13(20), STR_11(1), STR_10(20), 
  6977 ;;		 -> STR_8(1), STR_7(20), STR_2(4), lo(5), 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  to              1    5[COMMON] PTR unsigned char 
  6980 ;;		 -> getlogicseq@str(32), logic_d3(5), logic_d2(5), logic_d1(5), 
  6981 ;;		 -> lo(5), plo(5), 
  6982 ;;  cp              1    6[COMMON] PTR unsigned char 
  6983 ;;		 -> getlogicseq@str(32), logic_d3(5), logic_d2(5), logic_d1(5), 
  6984 ;;		 -> lo(5), plo(5), 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      PTR unsigned char 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6994 ;;      Params:         2       0       0       0       0
  6995 ;;      Locals:         2       0       0       0       0
  6996 ;;      Temps:          3       0       0       0       0
  6997 ;;      Totals:         7       0       0       0       0
  6998 ;;Total ram usage:        7 bytes
  6999 ;; Hardware stack levels used:    2
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_startswitch
  7004 ;;		_getlogicseq
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           psect	text552
  7008                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  7009                           	line	10
  7010                           	global	__size_of_strcpy
  7011  0029                     	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  7012                           	
  7013  0BE1                     _strcpy:	
  7014                           	opt	stack 5
  7015                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7016                           ;strcpy@to stored from wreg
  7017                           	line	18
  7018  0BE1  00F5               	movwf	(strcpy@to)
  7019                           	
  7020  0BE2                     l2822:	
  7021  0BE2  0875               	movf	(strcpy@to),w
  7022  0BE3  00F2               	movwf	(??_strcpy+0)+0
  7023  0BE4  0872               	movf	(??_strcpy+0)+0,w
  7024  0BE5  00F6               	movwf	(strcpy@cp)
  7025                           	line	19
  7026  0BE6  2BE8               	goto	l2824
  7027                           	
  7028  0BE7                     l931:	
  7029                           	line	20
  7030  0BE7  2BE8               	goto	l2824
  7031                           	
  7032  0BE8                     l930:	
  7033                           	line	19
  7034                           	
  7035  0BE8                     l2824:	
  7036  0BE8  0871               	movf	(strcpy@from+1),w
  7037  0BE9  00F3               	movwf	(??_strcpy+0)+0+1
  7038  0BEA  0870               	movf	(strcpy@from),w
  7039  0BEB  00F2               	movwf	(??_strcpy+0)+0
  7040  0BEC  3001               	movlw	(01h)
  7041  0BED  07F0               	addwf	(strcpy@from),f
  7042  0BEE  1803               	skipnc
  7043  0BEF  0AF1               	incf	(strcpy@from+1),f
  7044  0BF0  0873               	movf	1+(??_strcpy+0)+0,w
  7045  0BF1  1283               	bcf	status, 5	;RP0=0, select bank0
  7046  0BF2  1303               	bcf	status, 6	;RP1=0, select bank0
  7047  0BF3  00FF               	movwf	btemp+1
  7048  0BF4  0872               	movf	0+(??_strcpy+0)+0,w
  7049  0BF5  0084               	movwf	fsr0
  7050  0BF6  120A  118A  2003   	fcall	stringtab
              120A  158A         
  7051  0BFB  00F4               	movwf	(??_strcpy+2)+0
  7052  0BFC  0876               	movf	(strcpy@cp),w
  7053  0BFD  0084               	movwf	fsr0
  7054  0BFE  3001               	movlw	01h
  7055  0BFF  07F6               	addwf	(strcpy@cp),f
  7056  0C00  0874               	movf	(??_strcpy+2)+0,w
  7057  0C01  1383               	bcf	status, 7	;select IRP bank0
  7058  0C02  0080               	movwf	indf
  7059  0C03  0880               	movf	(indf),f
  7060  0C04  1D03               	skipz
  7061  0C05  2C07               	goto	u3381
  7062  0C06  2C08               	goto	u3380
  7063  0C07                     u3381:
  7064  0C07  2BE8               	goto	l2824
  7065  0C08                     u3380:
  7066  0C08  2C09               	goto	l933
  7067                           	
  7068  0C09                     l932:	
  7069                           	line	22
  7070                           ;	Return value of _strcpy is never used
  7071                           	
  7072  0C09                     l933:	
  7073  0C09  0008               	return
  7074                           	opt stack 0
  7075                           GLOBAL	__end_of_strcpy
  7076  0C0A                     	__end_of_strcpy:
  7077 ;; =============== function _strcpy ends ============
  7078                           
  7079                           	signat	_strcpy,8313
  7080                           	global	_check
  7081                           psect	text553,local,class=CODE,delta=2
  7082                           global __ptext553
  7083  0D42                     __ptext553:
  7084                           
  7085 ;; *************** function _check *****************
  7086 ;; Defined at:
  7087 ;;		line 120 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  input           1    wreg     PTR unsigned char 
  7090 ;;		 -> lo(5), 
  7091 ;;  logic           1    0[COMMON] PTR unsigned char 
  7092 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;  input           1    3[COMMON] PTR unsigned char 
  7095 ;;		 -> lo(5), 
  7096 ;;  i               2    4[COMMON] int 
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  2    0[COMMON] int 
  7099 ;; Registers used:
  7100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7106 ;;      Params:         2       0       0       0       0
  7107 ;;      Locals:         3       0       0       0       0
  7108 ;;      Temps:          1       0       0       0       0
  7109 ;;      Totals:         6       0       0       0       0
  7110 ;;Total ram usage:        6 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		_startswitch
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           psect	text553
  7119                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7120                           	line	120
  7121                           	global	__size_of_check
  7122  0049                     	__size_of_check	equ	__end_of_check-_check
  7123                           	
  7124  0D42                     _check:	
  7125                           	opt	stack 5
  7126                           ; Regs used in _check: [wreg-fsr0h+status,2+status,0+btemp+1]
  7127                           ;check@input stored from wreg
  7128                           	line	122
  7129  0D42  00F3               	movwf	(check@input)
  7130                           	
  7131  0D43                     l2800:	
  7132                           ;prev11.c: 122: int i=0;
  7133  0D43  01F4               	clrf	(check@i)
  7134  0D44  01F5               	clrf	(check@i+1)
  7135                           	line	124
  7136                           ;prev11.c: 124: for(i=0;i<4;i++)
  7137  0D45  01F4               	clrf	(check@i)
  7138  0D46  01F5               	clrf	(check@i+1)
  7139                           	
  7140  0D47                     l2802:	
  7141  0D47  0875               	movf	(check@i+1),w
  7142  0D48  3A80               	xorlw	80h
  7143  0D49  00FF               	movwf	btemp+1
  7144  0D4A  3080               	movlw	(high(04h))^80h
  7145  0D4B  027F               	subwf	btemp+1,w
  7146  0D4C  1D03               	skipz
  7147  0D4D  2D50               	goto	u3345
  7148  0D4E  3004               	movlw	low(04h)
  7149  0D4F  0274               	subwf	(check@i),w
  7150  0D50                     u3345:
  7151                           
  7152  0D50  1C03               	skipc
  7153  0D51  2D53               	goto	u3341
  7154  0D52  2D54               	goto	u3340
  7155  0D53                     u3341:
  7156  0D53  2D56               	goto	l2806
  7157  0D54                     u3340:
  7158  0D54  2D85               	goto	l2818
  7159                           	
  7160  0D55                     l2804:	
  7161  0D55  2D85               	goto	l2818
  7162                           	line	125
  7163                           	
  7164  0D56                     l691:	
  7165                           	line	126
  7166                           	
  7167  0D56                     l2806:	
  7168                           ;prev11.c: 125: {
  7169                           ;prev11.c: 126: if(input[i]=='0'&&logic[i]=='1')
  7170  0D56  0874               	movf	(check@i),w
  7171  0D57  0773               	addwf	(check@input),w
  7172  0D58  00F2               	movwf	(??_check+0)+0
  7173  0D59  0872               	movf	0+(??_check+0)+0,w
  7174  0D5A  0084               	movwf	fsr0
  7175  0D5B  1383               	bcf	status, 7	;select IRP bank0
  7176  0D5C  0800               	movf	indf,w
  7177  0D5D  3A30               	xorlw	030h
  7178  0D5E  1D03               	skipz
  7179  0D5F  2D61               	goto	u3351
  7180  0D60  2D62               	goto	u3350
  7181  0D61                     u3351:
  7182  0D61  2D71               	goto	l2814
  7183  0D62                     u3350:
  7184                           	
  7185  0D62                     l2808:	
  7186  0D62  0874               	movf	(check@i),w
  7187  0D63  0770               	addwf	(check@logic),w
  7188  0D64  00F2               	movwf	(??_check+0)+0
  7189  0D65  0872               	movf	0+(??_check+0)+0,w
  7190  0D66  0084               	movwf	fsr0
  7191  0D67  0800               	movf	indf,w
  7192  0D68  3A31               	xorlw	031h
  7193  0D69  1D03               	skipz
  7194  0D6A  2D6C               	goto	u3361
  7195  0D6B  2D6D               	goto	u3360
  7196  0D6C                     u3361:
  7197  0D6C  2D71               	goto	l2814
  7198  0D6D                     u3360:
  7199                           	line	127
  7200                           	
  7201  0D6D                     l2810:	
  7202                           ;prev11.c: 127: return 0;
  7203  0D6D  01F0               	clrf	(?_check)
  7204  0D6E  01F1               	clrf	(?_check+1)
  7205  0D6F  2D8A               	goto	l694
  7206                           	
  7207  0D70                     l2812:	
  7208  0D70  2D8A               	goto	l694
  7209                           	
  7210  0D71                     l693:	
  7211                           	line	124
  7212                           	
  7213  0D71                     l2814:	
  7214  0D71  3001               	movlw	low(01h)
  7215  0D72  07F4               	addwf	(check@i),f
  7216  0D73  1803               	skipnc
  7217  0D74  0AF5               	incf	(check@i+1),f
  7218  0D75  3000               	movlw	high(01h)
  7219  0D76  07F5               	addwf	(check@i+1),f
  7220                           	
  7221  0D77                     l2816:	
  7222  0D77  0875               	movf	(check@i+1),w
  7223  0D78  3A80               	xorlw	80h
  7224  0D79  00FF               	movwf	btemp+1
  7225  0D7A  3080               	movlw	(high(04h))^80h
  7226  0D7B  027F               	subwf	btemp+1,w
  7227  0D7C  1D03               	skipz
  7228  0D7D  2D80               	goto	u3375
  7229  0D7E  3004               	movlw	low(04h)
  7230  0D7F  0274               	subwf	(check@i),w
  7231  0D80                     u3375:
  7232                           
  7233  0D80  1C03               	skipc
  7234  0D81  2D83               	goto	u3371
  7235  0D82  2D84               	goto	u3370
  7236  0D83                     u3371:
  7237  0D83  2D56               	goto	l2806
  7238  0D84                     u3370:
  7239  0D84  2D85               	goto	l2818
  7240                           	
  7241  0D85                     l692:	
  7242                           	line	129
  7243                           	
  7244  0D85                     l2818:	
  7245                           ;prev11.c: 128: }
  7246                           ;prev11.c: 129: return 1;
  7247  0D85  3001               	movlw	low(01h)
  7248  0D86  00F0               	movwf	(?_check)
  7249  0D87  3000               	movlw	high(01h)
  7250  0D88  00F1               	movwf	((?_check))+1
  7251  0D89  2D8A               	goto	l694
  7252                           	
  7253  0D8A                     l2820:	
  7254                           	line	130
  7255                           	
  7256  0D8A                     l694:	
  7257  0D8A  0008               	return
  7258                           	opt stack 0
  7259                           GLOBAL	__end_of_check
  7260  0D8B                     	__end_of_check:
  7261 ;; =============== function _check ends ============
  7262                           
  7263                           	signat	_check,8314
  7264                           	global	_initkeypad
  7265                           psect	text554,local,class=CODE,delta=2
  7266                           global __ptext554
  7267  0B04                     __ptext554:
  7268                           
  7269 ;; *************** function _initkeypad *****************
  7270 ;; Defined at:
  7271 ;;		line 653 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;		None               void
  7278 ;; Registers used:
  7279 ;;		wreg, status,2
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7285 ;;      Params:         0       0       0       0       0
  7286 ;;      Locals:         0       0       0       0       0
  7287 ;;      Temps:          0       0       0       0       0
  7288 ;;      Totals:         0       0       0       0       0
  7289 ;;Total ram usage:        0 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_main
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           psect	text554
  7298                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7299                           	line	653
  7300                           	global	__size_of_initkeypad
  7301  0008                     	__size_of_initkeypad	equ	__end_of_initkeypad-_initkeypad
  7302                           	
  7303  0B04                     _initkeypad:	
  7304                           	opt	stack 7
  7305                           ; Regs used in _initkeypad: [wreg+status,2]
  7306                           	line	654
  7307                           	
  7308  0B04                     l1362:	
  7309                           ;prev11.c: 654: PORTB = 0;
  7310  0B04  1283               	bcf	status, 5	;RP0=0, select bank0
  7311  0B05  1303               	bcf	status, 6	;RP1=0, select bank0
  7312  0B06  0186               	clrf	(6)	;volatile
  7313                           	line	655
  7314                           	
  7315  0B07                     l1364:	
  7316                           ;prev11.c: 655: TRISB = 0b11000000;
  7317  0B07  30C0               	movlw	(0C0h)
  7318  0B08  1683               	bsf	status, 5	;RP0=1, select bank1
  7319  0B09  1303               	bcf	status, 6	;RP1=0, select bank1
  7320  0B0A  0086               	movwf	(134)^080h	;volatile
  7321                           	line	657
  7322                           	
  7323  0B0B                     l866:	
  7324  0B0B  0008               	return
  7325                           	opt stack 0
  7326                           GLOBAL	__end_of_initkeypad
  7327  0B0C                     	__end_of_initkeypad:
  7328 ;; =============== function _initkeypad ends ============
  7329                           
  7330                           	signat	_initkeypad,88
  7331                           psect	text555,local,class=CODE,delta=2
  7332                           global __ptext555
  7333  0000                     __ptext555:
  7334                           	global	btemp
  7335  007E                     	btemp set 07Eh
  7336                           
  7337                           	DABS	1,126,2	;btemp
  7338                           	global	wtemp0
  7339  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Fri Jul 28 13:24:51 2017

                   pc 0002          ___awdiv@sign 0076                    _lo 0060                    fsr 0004  
 ___wmul@multiplicand 0072                   l701 0F47                   l710 0FFB                   l702 0F50  
                 l711 0FFF                   l703 0F59                   l704 0FFE                   l720 051C  
                 l705 0FAF                   l721 0531                   l810 0B5B                   l706 0FB8  
                 l730 05ED                   l722 0527                   l707 0FD1                   l723 0534  
                 l900 0B03                   l820 0333                   l708 0FDA                   l740 061F  
                 l732 0584                   l724 0530                   l716 04D5                   l813 0254  
                 l709 0FF3                   l741 061E                   l733 05EC                   l725 052F  
                 l717 04F1                   l814 0333                   l910 0D41                   l750 06EE  
                 l742 0620                   l734 059A                   l726 07FF                   l718 0500  
                 l807 0B4A                   l815 0263                   l903 0D14                   l823 0C8F  
                 l751 0710                   l743 0658                   l735 05F0                   l727 0532  
                 l719 0510                   l808 0B49                   l816 0290                   l832 0BBA  
                 l904 0D38                   l760 0762                   l752 0703                   l744 06DC  
                 l736 05FF                   l728 0533                   l913 0C15                   l809 0B5B  
                 l817 02A5                   l905 0D1F                   l761 07CA                   l753 0702  
                 l737 0621                   l729 0569                   l930 0BE8                   l922 0C93  
                 l914 0C10                   l818 02D0                   l906 0D37                   l826 0B1D  
                 l842 0D9A                   l770 07FE                   l762 0778                   l754 070E  
                 l746 0673                   l738 0614                   l691 0D56                   l931 0BE7  
                 l923 0C92                   l915 0C1E                   l819 02EB                   l907 0D2A  
                 l843 0DAD                   l851 0E7F                   l763 07CE                   l755 070D  
                 l747 06DB                   l739 0613                   l692 0D85                   l932 0C09  
                 l916 0C20                   l908 0D36                   l844 0DB7                   l860 0EDE  
                 l852 0E72                   l764 07DD                   l756 070F                   l748 0689  
                 l693 0D71                   l933 0C09                   l925 0CC1                   l917 0C1F  
                 l837 0356                   l829 0B95                   l909 0D35                   l845 0DDA  
                 l861 0F07                   l853 0E8D                   l765 07FF                   l757 0747  
                 l749 06DF                   l685 0B67                   l694 0D8A                   l926 0CC2  
                 l918 0C32                   l838 0397                   l942 0C36                   l870 0248  
                 l846 0DBA                   l854 0F22                   l862 0F21                   l766 07F2  
                 l758 07CB                   l686 0B6D                   l927 0CC8                   l919 0C32  
                 l839 0477                   l943 0C40                   l871 0198                   l847 0DEE  
                 l855 0EAB                   l863 0F22                   l767 07F1                   l687 0B6E  
                 l944 0C55                   l880 01D0                   l872 0180                   l848 0DEE  
                 l856 0EC3                   l768 07FD                   l688 0B6E                   l945 0C5C  
                 l881 01C4                   l873 0197                   l697 0BE0                   l857 0EB0  
                 l769 07FC                   l866 0B0B                   l890 0207                   l882 01CF  
                 l874 018B                   l698 0BE0                   l858 0ED9                   l891 0220  
                 l883 01CE                   l875 0196                   l859 0EF1                   l892 0243  
                 l884 01E7                   l876 0195                   l893 022B                   l885 020A  
                 l877 01AE                   l869 0175                   l894 0242                   l886 01F2  
                 l878 01D1                   l895 0236                   l887 0209                   l879 01B9  
                 l896 0241                   l888 01FD                   l897 0240                   l889 0208  
                 _RB0 0030                   _RB1 0031                   _RC0 0038                   _RB2 0032  
                 _RC1 0039                   _RB3 0033                   _RD0 0040                   _RC2 003A  
                 _RD1 0041                   _RC3 003B                   _RD2 0042                   _RC4 003C  
                 _RB6 0036                   _RD3 0043                   _RC5 003D                   _RB7 0037  
                 _RD4 0044                   _RC6 003E                   _RD5 0045                   _RD6 0046  
                 _RD7 0047                   _dat 0B96                   _cmd 0B71                   _dev 006A  
                 _plo 00EA          ?_getlogicseq 0070                   fsr0 0004                   indf 0000  
        ___awmod@sign 0076           _startswitch 0F23                  l1150 0DFD                  l1151 0E07  
                l1160 0E54                  l1152 0E43                  l3000 0E1D                  l1153 0E1D  
                l1090 014E                  l1082 00FB                  l3002 0E23                  l1154 0E11  
                l3010 0E43                  l1091 0159                  l1083 0109                  l1155 0E22  
                l1092 0160                  l1084 014F                  l3012 0E47                  l3004 0E2D  
                l1156 0E23                  l3020 024D                  l3100 0D1F                  l1085 0121  
                l1157 0E34                  l1086 0115                  l3014 0E4D                  l1158 0E42  
                l3006 0E34                  l3030 0267                  l3022 0253                  l3102 0D26  
                l3110 0C5D                  ?_dat 0078                  l1087 0126                  l1159 0E4D  
                l1088 0127                  l3016 0E54                  l3008 0E3B                  l3040 0296  
                l3032 027C                  l3024 0254                  l3104 0D2A                  l3120 0C7D  
                l3112 0C61                  l3200 0206                  l1089 0140                  l1362 0B04  
                l3042 02A4                  l3050 02D0                  l3034 0283                  l3026 025A  
                l3018 0249                  l3106 0D31                  l3122 0C86                  l3114 0C62  
                l3210 021F                  l3202 020A                  l3130 0173                  ?_cmd 0078  
                l1364 0B07                  l3060 0306                  l3052 02D4                  l3044 02A5  
                l3036 0287                  l3028 0262                  l3108 0D38                  l3116 0C6B  
                l3220 0234                  l3212 0224                  l3204 0213                  l3140 0184  
                l3132 0174                  l3124 0161                  l3300 0F20                  l3062 030E  
                l3054 02DC                  l3046 02BE                  l3038 0290                  l3070 0B7F  
                l3118 0C74                  l3230 0248                  l3222 0235                  l3214 0229  
                l3206 0219                  l3142 0189                  l3134 0179                  l3150 0198  
                l3126 016A                  l3310 0F4B                  l3302 0F23                  l3064 0325  
                l3056 02EA                  l3048 02C2                  l3072 0B80                  l3080 0BA1  
                l3224 023A                  l3216 022A                  l3208 021E                  l3160 01B2  
                l3152 01A1                  l3144 018A                  l3136 017E                  l3128 0170  
                l3232 0B14                  l3240 0DA3                  l3320 0F61                  l3312 0F50  
                l3304 0F3C                  l3400 0534                  l3058 02EB                  l3074 0B89  
                l3066 0B71                  l3082 0BA4                  l3090 0D04                  l3226 023F  
                l3218 022F                  l3170 01C3                  l3162 01B7                  l3154 01A7  
                l3146 018F                  l3138 017F                  l3250 0DDA                  l3242 0DAD  
                l3234 0D8B                  l3330 0FB8                  l3322 0F71                  l3314 0F54  
                l3306 0F42                  l3410 0576                  l3402 0538                  l3076 0B8C  
                l3068 0B7C                  l3084 0BA5                  l3092 0D09                  l3228 0243  
                l3180 01E0                  l3172 01C8                  l3164 01B8                  l3156 01AC  
                l3148 0194                  l3244 0DB7                  l3236 0D94                  l3260 0BCE  
                l3252 0BBB                  l3340 0FF3                  l3332 0FC8                  l3324 0F81  
                l3316 0F59                  l3308 0F47                  l3500 075B                  l3420 05C0  
                l3412 057D                  l3404 0542                  l3086 0BAE                  l3078 0B96  
                l3094 0D10                  l3190 01F1                  l3182 01E5                  l3174 01CD  
                l3166 01BD                  l3158 01AD                  l3246 0DBA                  l3238 0D9A  
                l3254 0BC3                  l3270 0E72                  l3262 0E58                  l3342 0FFF  
                l3334 0FD1                  l3326 0FA6                  l3318 0F5F                  l3510 07AA  
                l3502 0762                  l3422 05CC                  l3430 05F0                  l3414 0584  
                l3406 0555                  l3350 04A0                  l2800 0D43                  l3088 0BB1  
                l3096 0D14                  l3192 01F6                  l3184 01E6                  l3168 01C2  
                l3176 01D1                  l3248 0DD3                  l3256 0BC7                  l3280 0EA6  
                l3272 0E7F                  l3264 0E69                  l3336 0FDA                  l3328 0FAF  
                l3520 07DC                  l3512 07BD                  l3504 0768                  l3440 0614  
                l3432 05FE                  l3424 05DF                  l3416 058A                  l3408 0569  
                l3360 04CC                  l3352 04A2                  l3344 0478                  l2810 0D6D  
                l2802 0D47                  l3098 0D1B                  l3194 01FB                  l3186 01EB  
                l3178 01DA                  l3258 0BCA                  l3290 0ED9                  l3282 0EAB  
                l3274 0E8D                  l3266 0E6D                  l3338 0FEA                  l3530 07F9  
                l3522 07DD                  l3514 07C3                  l3506 076E                  l3450 0644  
                l3442 061B                  l3434 05FF                  l3426 05E5                  l3418 0590  
                l3370 04E9                  l3362 04D0                  l3354 04A4                  l3346 0484  
                l2820 0D8A                  l2812 0D70                  l2804 0D55                  l3196 01FC  
                l3188 01F0                  l3292 0EDE                  l3284 0EB0                  l3276 0E95  
                l3268 0E6F                  l3524 07E6                  l3508 079E                  l3516 07CB  
                l3460 0679                  l3452 0658                  l3436 0608                  l3444 0621  
                l3428 05ED                  l3380 04FE                  l3372 04ED                  l3364 04D2  
                l3356 04A6                  l3348 049C                  l3532 0B5C                  l2814 0D71  
                l2806 0D56                  l2822 0BE2                  l2830 0CB6                  l3198 0201  
                l3294 0EE7                  l3286 0EB9                  l3278 0EA2                  l3526 07EC  
                l3518 07CE                  l3470 06D4                  l3462 067F                  l3454 0665  
                l3446 0627                  l3438 060E                  l3390 051C                  l3382 0507  
                l3374 04EF                  l3366 04D5                  l3358 04B9                  l3534 0B61  
                l2816 0D77                  l2808 0D62                  l2824 0BE8                  l2832 0CC2  
                l2840 0C15                  l2912 0B48                  l2920 0355                  l3296 0EF1  
                l3288 0EC3                  l3528 07F2                  l3480 06F7                  l3464 06AF  
                l3472 06DC                  l3456 066C                  l3448 0631                  l3392 0525  
                l3384 050B                  l3376 04F8                  l3368 04E2                  l3536 0B67  
                l2818 0D85                  l2834 0CC8                  l2826 0C91                  l2842 0C20  
                l2914 0B4A                  l2922 0356                  l2930 0AFD                  l3298 0F07  
                l3490 0716                  l3482 06FD                  l3466 06BB                  l3474 06DF  
                l3458 0673                  l3394 0526                  l3386 0510                  l3378 04FA  
                l2828 0C93                  l2836 0C0B                  l2924 0374                  l2916 0334  
                l2940 0C55                  l2932 0C33                  l3492 0720                  l3484 0703  
                l3476 06ED                  l3468 06CE                  l3396 0527                  l3388 0516  
                l2838 0C10                  l2926 037A                  l2918 0338                  l2942 0C5C  
                l2934 0C36                  l2950 00FF                  l3494 0733                  l3486 070A  
                l3478 06EE                  l3398 052E                  l2928 0397                  l2936 0C3A  
                l2960 0115                  l2952 0104                  l2944 00ED                  l3496 0747  
                l3488 0710                  l2938 0C47                  l2970 013E                  l2962 011C  
                l2954 0109                  l2946 00F2                  l3498 0754                  l2980 0159  
                l2972 0140                  l2964 0121                  l2956 010B                  l2948 00FB  
                l2982 0160                  l2974 0147                  l2966 0127                  l2958 0111  
                l2990 0E01                  l2968 0138                  l2976 014F                  l2992 0E07  
                l2984 0DEF                  l2978 0153                  l2994 0E0D                  l2986 0DF4  
                l2996 0E11                  l2988 0DFD                  l2998 0E18                  STR_1 0086  
                STR_2 009A                  STR_3 009A                  STR_4 0015                  STR_5 0077  
                STR_6 0091                  STR_7 003B                  STR_8 004E                  STR_9 00E9  
                u4000 0E41                  u4001 0E40                  u4010 0E47                  u4020 0252  
                u4100 0D1B                  u4021 0251                  u4101 0D1A                  u4030 025A  
                u4110 0D26                  u4031 0259                  u4111 0D25                  u3400 0CC0  
                u4040 0267                  u4120 0D31                  u4200 01C8                  u3401 0CBF  
                u4041 0266                  u4121 0D30                  u4201 01C7                  u3410 0C1D  
                u4050 02A3                  u4210 01E0                  u4130 0170                  u3411 0C1C  
                u4051 02A2                  u4211 01DF                  u4131 016F                  u3340 0D54  
                u3420 0C31                  u4060 02CF                  u4220 01EB                  u4140 0179  
                u4300 0DA3                  u3341 0D53                  u3421 0C30                  u4061 02CE  
                u4221 01EA                  u4141 0178                  u4301 0DA2                  u3350 0D62  
                u4070 02E9                  u4230 01F6                  u4150 0184                  u4310 0DED  
                u3351 0D61                  u4071 02E8                  u4055 029F                  u4231 01F5  
                u4151 0183                  u4311 0DEC                  u3360 0D6D                  u3600 0354  
                u4080 0332                  u4240 0201                  u4160 018F                  u4320 0BC3  
                u4400 0F54                  u3361 0D6C                  u3345 0D50                  u3601 0353  
                u4081 0331                  u4065 02CB                  u4241 0200                  u4161 018E  
                u4321 0BC2                  u4401 0F53                  u3370 0D84                  u4090 0D10  
                u4250 0219                  u4170 01A7                  u4330 0E8C                  u4410 0F71  
                u3371 0D83                  u4075 02E5                  u4091 0D0F                  u4251 0218  
                u4171 01A6                  u4331 0E8B                  u4411 0F70                  u3380 0C08  
                u3620 0396                  u4260 0224                  u4180 01B2                  u4340 0EA2  
                u4420 0F81                  u4500 0516                  u3381 0C07                  u3621 0395  
                u3605 0350                  u4085 032E                  u4261 0223                  u4181 01B1  
                u4341 0EA1                  u4421 0F80                  u4501 0515                  u3390 0CB6  
                u3710 0420                  u3630 03B0                  u3614 0362                  u4270 022F  
                u4190 01BD                  u4350 0ED8                  u4430 0FA6                  u4510 0524  
                u3375 0D80                  u3391 0CB5                  u3711 041C                  u3631 03AC  
                u3615 035F                  u4271 022E                  u4191 01BC                  u4351 0ED7  
                u4431 0FA5                  u4511 0523                  u3704 0407                  u4280 023A  
                u4360 0F06                  u4440 0FC8                  u4600 061B                  u4520 052D  
                u3625 0392                  u4281 0239                  u4361 0F05                  u4345 0E9E  
                u4441 0FC7                  u4601 061A                  u4521 052C                  u3730 043C  
                u3650 03CC                  u4290 0D94                  u4370 0F1F                  u4450 0FEA  
                u4610 066C                  u4530 057D                  u3731 0438                  u3651 03C8  
                u4291 0D93                  u4371 0F1E                  u4355 0ED4                  u4451 0FE9  
                u4611 066B                  u4531 057C                  u3724 0423                  u3644 03B3  
                u3820 0C54                  u4380 0F42                  u4700 0761                  u4620 0672  
                u4540 0583                  u4460 048E                  u3821 0C53                  u3805 0C41  
                u4365 0F02                  u4381 0F41                  u4701 0760                  u4621 0671  
                u4541 0582                  u3590 0B5A                  u3750 0458                  u3670 03E8  
                u3910 014D                  u3830 00F2                  u4390 0F4B                  u4710 0768  
                u4630 0679                  u4550 058A                  u4470 04E9                  u3591 0B59  
                u3751 0454                  u3671 03E4                  u3815 0C48                  u3911 014C  
                u3831 00F1                  u4375 0F1B                  u4391 0F4A                  u4711 0767  
                u4631 0678                  u4551 0589                  u4471 04E8                  u3744 043F  
                u3664 03CF                  u3920 0153                  u3840 00FF                  u4720 076E  
                u4640 067F                  u4560 0590                  u4480 04F8                  u3905 0141  
                u3841 00FE                  u4721 076D                  u4641 067E                  u4561 058F  
                u4481 04F7                  u3770 0474                  u3690 0404                  u3850 0111  
                u3930 0DF4                  u4730 07DB                  u4650 06EC                  u4570 05FD  
                u4490 0507                  u3595 0B56                  u3771 0470                  u3691 0400  
                u3851 0110                  u3931 0DF3                  u4731 07DA                  u4651 06EB  
                u4571 05FC                  u4491 0506                  u3764 045B                  u3684 03EB  
                u3940 0E01                  u4740 07E6                  u4660 06F7                  u4580 0608  
                u3941 0E00                  u4741 07E5                  u4661 06F6                  u4581 0607  
                u3790 0C3A                  u3870 0125                  u3950 0E0D                  u4750 07EC  
                u4670 06FD                  u4590 060E                  u3791 0C39                  u3871 0124  
                u3951 0E0C                  u4751 07EB                  u4735 07D7                  u4671 06FC  
                u4655 06E8                  u4591 060D                  u4575 05F9                  u3784 0477  
                u4760 07F9                  u4680 070A                  u3865 0116                  u4761 07F8  
                u4681 0709                  u3890 0138                  u3970 0E21                  u4690 075B  
                u3891 0137                  u3971 0E20                  u4691 075A                  u3980 0E2D  
                u3885 0128                  u3981 0E2C                  u3965 0E12                  u3895 0134  
                u3985 0E29                  u3995 0E35                  _main 0B5C                  _pdev 006E  
                _scan 0161                  btemp 007E                  start 0000                 ??_dat 007A  
               ??_cmd 007A                 ?_main 0070                 ?_scan 0074       __end_of___awdiv 0161  
               STR_10 004F                 STR_11 004E                 STR_12 00E9                 STR_20 00A3  
               STR_21 00CB                 STR_13 0063                 STR_14 004E                 STR_30 00BC  
               STR_22 00B7                 STR_15 00E9                 STR_31 00E4                 STR_23 00DF  
               STR_24 009E                 STR_16 0099                 STR_25 00C6                 STR_17 00C1  
               STR_26 00B2                 STR_18 00AD                 STR_27 00DA                 STR_19 00D5  
               STR_28 00A8       __end_of___awmod 0E55                 STR_29 00D0       ___awdiv@divisor 0070  
     ___awdiv@counter 0075                 _PORTA 0005                 _PORTB 0006                 _TRISA 0085  
               _TRISB 0086                 _TRISC 0087                 _TRISD 0088                 _check 0D42  
               _delay 0B48                 _itoaa 0249       __end_of_initlcd 0C90                 _write 0D8B  
               pclath 000A                 status 0003                 wtemp0 007E          __end_of_main 0B71  
        __end_of_scan 0249                ??_main 007E                ??_scan 0076                ?_check 0070  
              ?_delay 0070                ?_itoaa 0079      ___awdiv@dividend 0072                ?_write 0042  
    __end_of_clearlcd 0B1E                ___wmul 0C33             ??___awdiv 0074             ??___awmod 0074  
              _actrow 0D04                check@i 0074           setLCD@vbool 0020                _setLCD 0334  
    __end_of_init_fun 0BE1                delay@x 0070      ___awdiv@quotient 0077       ___awmod@divisor 0070  
              _scroll 0E55       ___awmod@counter 0075                _strcat 0C0A                _strcmp 0C90  
              clrloop 0B0D                _strcpy 0BE1             ??_initlcd 007A      __end_of_resetout 0B04  
__size_of_getlogicseq 0388                write@i 007C        __pcstackCOMMON 0070          __pidataBANK0 0B1E  
        __pidataBANK1 0B28          __pidataBANK3 0AF8         __end_of_check 0D8B         __end_of_delay 0B5C  
       __end_of_itoaa 0334         __end_of_write 0DEF               ??_check 0072               ??_delay 0072  
        ?_startswitch 0070               ??_itoaa 007C               ??_write 007A            __pbssBANK0 006A  
          __pbssBANK3 0190            dat@Command 0078            __pmaintext 0B5C               ?___wmul 0070  
             ?_actrow 0072            cmd@Command 0078               ?_setLCD 0070               ?_scroll 0048  
             ?_strcat 0070               ?_strcmp 0070               ?_strcpy 0070         getlogicseq@f1 00D2  
       getlogicseq@f2 00D4         getlogicseq@f3 00D6         getlogicseq@bf 00C0         getlogicseq@nf 00D8  
       getlogicseq@wf 00DA             ?_clearlcd 0070             ?_init_fun 0070            check@logic 0070  
          check@input 0073             ?_resetout 0070               ___awdiv 00ED               ___awmod 0DEF  
     __size_of___wmul 002A       __size_of_actrow 003E       __size_of_setLCD 0144       __size_of_scroll 00CE  
          _initkeypad 0B04       __size_of_strcat 0029       __size_of_strcmp 0039       __size_of_strcpy 0029  
        setLCD@number 0070          __size_of_dat 0025          __size_of_cmd 0025               _initlcd 0C5D  
    ___awmod@dividend 0072               actrow@n 0072            ??_clearlcd 007A           scroll@endat 0053  
     getlogicseq@snum 00C2           scroll@loopn 0055           scroll@loops 0048  end_of_initialization 0D00  
             setLCD@i 0040               init_ram 0B3B            ??_init_fun 007E               scroll@i 005A  
          ??_resetout 0070               strcmp@r 0076  __size_of_startswitch 00DD        __end_of___wmul 0C5D  
      __end_of_actrow 0D42           ?_initkeypad 0070        __end_of_setLCD 0478        __end_of_scroll 0F23  
       ??_getlogicseq 005C        __end_of_strcat 0C33        __end_of_strcmp 0CC9        __end_of_strcpy 0C0A  
 start_initialization 0CC9           __end_of_dat 0BBB           __end_of_cmd 0B96              ??___wmul 0074  
          setLCD@size 0013              ??_actrow 0074           __pdataBANK0 0060           __pdataBANK1 00E0  
         __pdataBANK3 01A0              ??_setLCD 0072              ??_scroll 004A              ??_strcat 0071  
            ??_strcmp 0072              ??_strcpy 0072            itoaa@count 0020            itoaa@value 0079  
       __pcstackBANK0 0020         __pcstackBANK1 00A0     __size_of_clearlcd 000A   __end_of_getlogicseq 0800  
 __size_of_initkeypad 0008     __size_of_init_fun 0026              ?___awdiv 0070              ?___awmod 0070  
           __ptext540 0D04             __ptext532 0478             __ptext541 0B96             __ptext533 0F23  
           __ptext550 0C0A             __ptext542 0B71             __ptext534 0E55             __ptext551 0C90  
           __ptext543 0249             __ptext535 0BBB             __ptext552 0BE1             __ptext544 0DEF  
           __ptext536 0D8B             __ptext553 0D42             __ptext545 00ED             __ptext537 0B14  
           __ptext554 0B04             __ptext546 0C33             __ptext538 0161             __ptext555 0000  
           __ptext547 0AFD             __ptext539 0C5D             __ptext548 0334             __ptext549 0B48  
   __size_of_resetout 0007             __pstrings 0003             _done_init 006C              ?_initlcd 0070  
      __size_of_check 0049        __size_of_delay 0014        __size_of_itoaa 00EB        __size_of_write 0064  
      getlogicseq@num 00DE        getlogicseq@str 00A0        ___wmul@product 0074     getlogicseq@ccount 00DC  
         __stringbase 0012     ___wmul@multiplier 0070         scroll@startat 0051           _getlogicseq 0478  
           init_fetch 0B37      __size_of___awdiv 0074      __size_of___awmod 0066             itoaa@temp 0022  
        ??_initkeypad 0070            strcat@from 0070      __size_of_initlcd 0033              _clearlcd 0B14  
       ??_startswitch 0048      getlogicseq@F1264 0190            strcpy@from 0070              _init_fun 0BBB  
       __size_of_main 0015         __size_of_scan 00E8              _logic_d1 0065              _logic_d2 00E0  
            _logic_d3 00E5              _logic_d4 01A0             scroll@len 0058             scroll@str 0057  
  __end_of_initkeypad 0B0C              clear_ram 0B0C            write@erase 0046              _resetout 0AFD  
            itoaa@ptr 007B   __end_of_startswitch 1000             stringcode 000D              scroll@en 004F  
            scroll@st 004D             write@line 0044              strcat@cp 0073              strcat@to 0072  
            strcmp@s1 0077              strcmp@s2 0070              strcpy@cp 0076              strcpy@to 0075  
            stringdir 000D              stringtab 0003              write@str 0042  
