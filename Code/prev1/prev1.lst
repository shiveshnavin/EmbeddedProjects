

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Sun Jul 30 21:22:51 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_initlcd
    43                           	FNCALL	_main,_initkeypad
    44                           	FNCALL	_main,_write_eep
    45                           	FNCALL	_main,_read_eep
    46                           	FNCALL	_main,_write
    47                           	FNCALL	_main,_delay
    48                           	FNCALL	_main,_dat
    49                           	FNCALL	_write,_clearlcd
    50                           	FNCALL	_write,_cmd
    51                           	FNCALL	_write,_dat
    52                           	FNCALL	_clearlcd,_cmd
    53                           	FNCALL	_initlcd,_cmd
    54                           	FNCALL	_cmd,_setLCD
    55                           	FNCALL	_cmd,_delay
    56                           	FNCALL	_dat,_setLCD
    57                           	FNCALL	_dat,_delay
    58                           	FNCALL	_write_eep,_write_eep
    59                           	FNROOT	_main
    60                           	global	_logic_d4
    61                           	global	_lo
    62                           	global	_logic_d1
    63                           	global	_logic_d2
    64                           	global	_logic_d3
    65                           	global	_plo
    66                           psect	idataBANK1,class=CODE,space=0,delta=2
    67                           global __pidataBANK1
    68  048D                     __pidataBANK1:
    69                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
    70                           	line	131
    71                           
    72                           ;initializer for _logic_d4
    73  048D  3431               	retlw	031h
    74  048E  3430               	retlw	030h
    75  048F  3430               	retlw	030h
    76  0490  3400               	retlw	0
    77  0491  3400               	retlw	0
    78                           psect	idataBANK0,class=CODE,space=0,delta=2
    79                           global __pidataBANK0
    80  04BC                     __pidataBANK0:
    81                           	line	132
    82                           
    83                           ;initializer for _lo
    84  04BC  3430               	retlw	030h
    85  04BD  3430               	retlw	030h
    86  04BE  3430               	retlw	030h
    87  04BF  3430               	retlw	030h
    88  04C0  3400               	retlw	0
    89                           	line	128
    90                           
    91                           ;initializer for _logic_d1
    92  04C1  3431               	retlw	031h
    93  04C2  3430               	retlw	030h
    94  04C3  3430               	retlw	030h
    95  04C4  3400               	retlw	0
    96  04C5  3400               	retlw	0
    97                           	line	129
    98                           
    99                           ;initializer for _logic_d2
   100  04C6  3430               	retlw	030h
   101  04C7  3431               	retlw	031h
   102  04C8  3430               	retlw	030h
   103  04C9  3400               	retlw	0
   104  04CA  3400               	retlw	0
   105                           	line	130
   106                           
   107                           ;initializer for _logic_d3
   108  04CB  3430               	retlw	030h
   109  04CC  3431               	retlw	031h
   110  04CD  3430               	retlw	030h
   111  04CE  3400               	retlw	0
   112  04CF  3400               	retlw	0
   113                           psect	idataBANK1
   114                           	line	133
   115                           
   116                           ;initializer for _plo
   117  0492  3430               	retlw	030h
   118  0493  3430               	retlw	030h
   119  0494  3430               	retlw	030h
   120  0495  3430               	retlw	030h
   121  0496  3400               	retlw	0
   122                           	global	_adr
   123                           psect	stringtext,class=STRCODE,delta=2,reloc=256
   124                           global __pstringtext
   125  0800                     __pstringtext:
   126                           ;	global	stringtab,__stringbase
   127  0800                     stringtab:
   128                           ;	String table - string pointers are 2 bytes each
   129  0800  1BFF               	btfsc	(btemp+1),7
   130  0801  280A               	ljmp	stringcode
   131  0802  1383               	bcf	status,7
   132  0803  187F               	btfsc	(btemp+1),0
   133  0804  1783               	bsf	status,7
   134  0805  0800               	movf	indf,w
   135  0806  0A84               	incf fsr
   136  0807  1903               skipnz
   137  0808  0AFF               incf btemp+1
   138  0809  0008               	return
   139  080A                     stringcode:
   140  080A  087F               	movf btemp+1,w
   141  080B  397F               andlw 7Fh
   142  080C  008A               movwf	pclath
   143  080D  0804               	movf	fsr,w
   144  080E  0A84               incf fsr
   145  080F  1903               skipnz
   146  0810  0AFF               incf btemp+1
   147  0811  0082               	movwf pc
   148  0812                     __stringbase:
   149                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   150                           	line	15
   151  0812                     _adr:
   152  0812  3400               	retlw	0
   153  0813  3404               	retlw	04h
   154  0814  3408               	retlw	08h
   155  0815  340C               	retlw	0Ch
   156  0816  340F               	retlw	0Fh
   157                           	global	setLCD@size
   158                           psect	stringtext
   159                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   160                           	line	589
   161  0817                     setLCD@size:
   162  0817  3410               	retlw	010h
   163  0818  3400               	retlw	0
   164                           
   165                           	global	_adr
   166                           	global	setLCD@size
   167                           	global	_dev
   168                           	global	_done_init
   169                           	global	_f1
   170                           	global	_f2
   171                           	global	_f3
   172                           	global	_pdev
   173                           	global	_retm
   174                           	global	read_log@F1910
   175                           	global	getlogicseq@F1867
   176                           	global	_PORTA
   177  0005                     _PORTA	set	5
   178                           	global	_PORTB
   179  0006                     _PORTB	set	6
   180                           	global	_RB0
   181  0030                     _RB0	set	48
   182                           	global	_RB1
   183  0031                     _RB1	set	49
   184                           	global	_RB2
   185  0032                     _RB2	set	50
   186                           	global	_RB3
   187  0033                     _RB3	set	51
   188                           	global	_RB5
   189  0035                     _RB5	set	53
   190                           	global	_RB6
   191  0036                     _RB6	set	54
   192                           	global	_RB7
   193  0037                     _RB7	set	55
   194                           	global	_RC0
   195  0038                     _RC0	set	56
   196                           	global	_RC1
   197  0039                     _RC1	set	57
   198                           	global	_RC2
   199  003A                     _RC2	set	58
   200                           	global	_RC3
   201  003B                     _RC3	set	59
   202                           	global	_RC4
   203  003C                     _RC4	set	60
   204                           	global	_RC5
   205  003D                     _RC5	set	61
   206                           	global	_RD0
   207  0040                     _RD0	set	64
   208                           	global	_RD1
   209  0041                     _RD1	set	65
   210                           	global	_RD2
   211  0042                     _RD2	set	66
   212                           	global	_RD3
   213  0043                     _RD3	set	67
   214                           	global	_RD4
   215  0044                     _RD4	set	68
   216                           	global	_RD5
   217  0045                     _RD5	set	69
   218                           	global	_RD6
   219  0046                     _RD6	set	70
   220                           	global	_RD7
   221  0047                     _RD7	set	71
   222                           	global	_TRISA
   223  0085                     _TRISA	set	133
   224                           	global	_TRISB
   225  0086                     _TRISB	set	134
   226                           	global	_TRISC
   227  0087                     _TRISC	set	135
   228                           	global	_TRISD
   229  0088                     _TRISD	set	136
   230                           	global	_EEADR
   231  010D                     _EEADR	set	269
   232                           	global	_EEDAT
   233  010C                     _EEDAT	set	268
   234                           	global	_EECON2
   235  018D                     _EECON2	set	397
   236                           	global	_EEPGD
   237  0C67                     _EEPGD	set	3175
   238                           	global	_RD
   239  0C60                     _RD	set	3168
   240                           	global	_WR
   241  0C61                     _WR	set	3169
   242                           	global	_WREN
   243  0C62                     _WREN	set	3170
   244                           	global	_WRERR
   245  0C63                     _WRERR	set	3171
   246                           	
   247  0819                     STR_6:	
   248  0819  3457               	retlw	87	;'W'
   249  081A  3445               	retlw	69	;'E'
   250  081B  344C               	retlw	76	;'L'
   251  081C  3443               	retlw	67	;'C'
   252  081D  344F               	retlw	79	;'O'
   253  081E  344D               	retlw	77	;'M'
   254  081F  3445               	retlw	69	;'E'
   255  0820  3420               	retlw	32	;' '
   256  0821  3421               	retlw	33	;'!'
   257  0822  3420               	retlw	32	;' '
   258  0823  3454               	retlw	84	;'T'
   259  0824  344F               	retlw	79	;'O'
   260  0825  3420               	retlw	32	;' '
   261  0826  3450               	retlw	80	;'P'
   262  0827  3452               	retlw	82	;'R'
   263  0828  344F               	retlw	79	;'O'
   264  0829  3447               	retlw	71	;'G'
   265  082A  3452               	retlw	82	;'R'
   266  082B  3441               	retlw	65	;'A'
   267  082C  344D               	retlw	77	;'M'
   268  082D  3441               	retlw	65	;'A'
   269  082E  3442               	retlw	66	;'B'
   270  082F  344C               	retlw	76	;'L'
   271  0830  3445               	retlw	69	;'E'
   272  0831  3420               	retlw	32	;' '
   273  0832  3448               	retlw	72	;'H'
   274  0833  344F               	retlw	79	;'O'
   275  0834  344D               	retlw	77	;'M'
   276  0835  3445               	retlw	69	;'E'
   277  0836  3420               	retlw	32	;' '
   278  0837  3441               	retlw	65	;'A'
   279  0838  3455               	retlw	85	;'U'
   280  0839  3454               	retlw	84	;'T'
   281  083A  344D               	retlw	77	;'M'
   282  083B  3441               	retlw	65	;'A'
   283  083C  3454               	retlw	84	;'T'
   284  083D  344E               	retlw	78	;'N'
   285  083E  3400               	retlw	0
   286                           psect	stringtext
   287                           	
   288  083F                     STR_9:	
   289  083F  3450               	retlw	80	;'P'
   290  0840  3472               	retlw	114	;'r'
   291  0841  3465               	retlw	101	;'e'
   292  0842  3473               	retlw	115	;'s'
   293  0843  3473               	retlw	115	;'s'
   294  0844  3420               	retlw	32	;' '
   295  0845  3432               	retlw	50	;'2'
   296  0846  342E               	retlw	46	;'.'
   297  0847  3420               	retlw	32	;' '
   298  0848  342D               	retlw	45	;'-'
   299  0849  3420               	retlw	32	;' '
   300  084A  3453               	retlw	83	;'S'
   301  084B  346B               	retlw	107	;'k'
   302  084C  3469               	retlw	105	;'i'
   303  084D  3470               	retlw	112	;'p'
   304  084E  3420               	retlw	32	;' '
   305  084F  3466               	retlw	102	;'f'
   306  0850  346F               	retlw	111	;'o'
   307  0851  3472               	retlw	114	;'r'
   308  0852  3420               	retlw	32	;' '
   309  0853  3444               	retlw	68	;'D'
   310  0854  3465               	retlw	101	;'e'
   311  0855  3476               	retlw	118	;'v'
   312  0856  3469               	retlw	105	;'i'
   313  0857  3463               	retlw	99	;'c'
   314  0858  3465               	retlw	101	;'e'
   315  0859  3400               	retlw	0
   316                           psect	stringtext
   317                           	
   318  085A                     STR_10:	
   319  085A  3445               	retlw	69	;'E'
   320  085B  346E               	retlw	110	;'n'
   321  085C  3474               	retlw	116	;'t'
   322  085D  3465               	retlw	101	;'e'
   323  085E  3472               	retlw	114	;'r'
   324  085F  3420               	retlw	32	;' '
   325  0860  344C               	retlw	76	;'L'
   326  0861  346F               	retlw	111	;'o'
   327  0862  3467               	retlw	103	;'g'
   328  0863  3469               	retlw	105	;'i'
   329  0864  3463               	retlw	99	;'c'
   330  0865  3420               	retlw	32	;' '
   331  0866  3444               	retlw	68	;'D'
   332  0867  3445               	retlw	69	;'E'
   333  0868  3456               	retlw	86	;'V'
   334  0869  3431               	retlw	49	;'1'
   335  086A  343A               	retlw	58	;':'
   336  086B  3420               	retlw	32	;' '
   337  086C  3420               	retlw	32	;' '
   338  086D  3400               	retlw	0
   339                           psect	stringtext
   340                           	
   341  086E                     STR_13:	
   342  086E  3445               	retlw	69	;'E'
   343  086F  346E               	retlw	110	;'n'
   344  0870  3474               	retlw	116	;'t'
   345  0871  3465               	retlw	101	;'e'
   346  0872  3472               	retlw	114	;'r'
   347  0873  3420               	retlw	32	;' '
   348  0874  344C               	retlw	76	;'L'
   349  0875  346F               	retlw	111	;'o'
   350  0876  3467               	retlw	103	;'g'
   351  0877  3469               	retlw	105	;'i'
   352  0878  3463               	retlw	99	;'c'
   353  0879  3420               	retlw	32	;' '
   354  087A  3444               	retlw	68	;'D'
   355  087B  3445               	retlw	69	;'E'
   356  087C  3456               	retlw	86	;'V'
   357  087D  3432               	retlw	50	;'2'
   358  087E  343A               	retlw	58	;':'
   359  087F  3420               	retlw	32	;' '
   360  0880  3420               	retlw	32	;' '
   361  0881  3400               	retlw	0
   362                           psect	stringtext
   363                           	
   364  0882                     STR_16:	
   365  0882  3445               	retlw	69	;'E'
   366  0883  346E               	retlw	110	;'n'
   367  0884  3474               	retlw	116	;'t'
   368  0885  3465               	retlw	101	;'e'
   369  0886  3472               	retlw	114	;'r'
   370  0887  3420               	retlw	32	;' '
   371  0888  344C               	retlw	76	;'L'
   372  0889  346F               	retlw	111	;'o'
   373  088A  3467               	retlw	103	;'g'
   374  088B  3469               	retlw	105	;'i'
   375  088C  3463               	retlw	99	;'c'
   376  088D  3420               	retlw	32	;' '
   377  088E  3444               	retlw	68	;'D'
   378  088F  3445               	retlw	69	;'E'
   379  0890  3456               	retlw	86	;'V'
   380  0891  3433               	retlw	51	;'3'
   381  0892  343A               	retlw	58	;':'
   382  0893  3420               	retlw	32	;' '
   383  0894  3420               	retlw	32	;' '
   384  0895  3400               	retlw	0
   385                           psect	stringtext
   386                           	
   387  0896                     STR_5:	
   388  0896  3450               	retlw	80	;'P'
   389  0897  3472               	retlw	114	;'r'
   390  0898  3465               	retlw	101	;'e'
   391  0899  3473               	retlw	115	;'s'
   392  089A  3473               	retlw	115	;'s'
   393  089B  3420               	retlw	32	;' '
   394  089C  3432               	retlw	50	;'2'
   395  089D  3420               	retlw	32	;' '
   396  089E  3474               	retlw	116	;'t'
   397  089F  346F               	retlw	111	;'o'
   398  08A0  3420               	retlw	32	;' '
   399  08A1  3452               	retlw	82	;'R'
   400  08A2  3445               	retlw	69	;'E'
   401  08A3  3450               	retlw	80	;'P'
   402  08A4  3452               	retlw	82	;'R'
   403  08A5  3447               	retlw	71	;'G'
   404  08A6  3400               	retlw	0
   405                           psect	stringtext
   406                           	
   407  08A7                     STR_7:	
   408  08A7  3431               	retlw	49	;'1'
   409  08A8  342E               	retlw	46	;'.'
   410  08A9  3453               	retlw	83	;'S'
   411  08AA  3457               	retlw	87	;'W'
   412  08AB  3454               	retlw	84	;'T'
   413  08AC  3420               	retlw	32	;' '
   414  08AD  3420               	retlw	32	;' '
   415  08AE  3432               	retlw	50	;'2'
   416  08AF  342E               	retlw	46	;'.'
   417  08B0  3452               	retlw	82	;'R'
   418  08B1  3445               	retlw	69	;'E'
   419  08B2  3450               	retlw	80	;'P'
   420  08B3  3452               	retlw	82	;'R'
   421  08B4  3447               	retlw	71	;'G'
   422  08B5  3400               	retlw	0
   423                           psect	stringtext
   424                           	
   425  08B6                     STR_3:	
   426  08B6  3453               	retlw	83	;'S'
   427  08B7  3465               	retlw	101	;'e'
   428  08B8  346E               	retlw	110	;'n'
   429  08B9  3473               	retlw	115	;'s'
   430  08BA  3469               	retlw	105	;'i'
   431  08BB  346E               	retlw	110	;'n'
   432  08BC  3467               	retlw	103	;'g'
   433  08BD  342E               	retlw	46	;'.'
   434  08BE  342E               	retlw	46	;'.'
   435  08BF  342E               	retlw	46	;'.'
   436  08C0  3400               	retlw	0
   437                           psect	stringtext
   438                           	
   439  08C1                     STR_1:	
   440  08C1  3444               	retlw	68	;'D'
   441  08C2  3461               	retlw	97	;'a'
   442  08C3  3474               	retlw	116	;'t'
   443  08C4  3461               	retlw	97	;'a'
   444  08C5  3420               	retlw	32	;' '
   445  08C6  3457               	retlw	87	;'W'
   446  08C7  3472               	retlw	114	;'r'
   447  08C8  346F               	retlw	111	;'o'
   448  08C9  3474               	retlw	116	;'t'
   449  08CA  3465               	retlw	101	;'e'
   450  08CB  3400               	retlw	0
   451                           psect	stringtext
   452                           	
   453  08CC                     STR_2:	
   454  08CC  3444               	retlw	68	;'D'
   455  08CD  3461               	retlw	97	;'a'
   456  08CE  3474               	retlw	116	;'t'
   457  08CF  3461               	retlw	97	;'a'
   458  08D0  3420               	retlw	32	;' '
   459  08D1  3452               	retlw	82	;'R'
   460  08D2  3445               	retlw	69	;'E'
   461  08D3  3441               	retlw	65	;'A'
   462  08D4  3444               	retlw	68	;'D'
   463  08D5  3400               	retlw	0
   464                           psect	stringtext
   465                           	
   466  08D6                     STR_8:	
   467  08D6  3433               	retlw	51	;'3'
   468  08D7  342E               	retlw	46	;'.'
   469  08D8  3452               	retlw	82	;'R'
   470  08D9  3445               	retlw	69	;'E'
   471  08DA  3453               	retlw	83	;'S'
   472  08DB  3445               	retlw	69	;'E'
   473  08DC  3454               	retlw	84	;'T'
   474  08DD  3400               	retlw	0
   475                           psect	stringtext
   476                           	
   477  08DE                     STR_19:	
   478  08DE  3430               	retlw	48	;'0'
   479  08DF  3430               	retlw	48	;'0'
   480  08E0  3430               	retlw	48	;'0'
   481  08E1  3430               	retlw	48	;'0'
   482  08E2  3400               	retlw	0
   483                           psect	stringtext
   484                           	
   485  08E3                     STR_27:	
   486  08E3  3431               	retlw	49	;'1'
   487  08E4  3430               	retlw	48	;'0'
   488  08E5  3430               	retlw	48	;'0'
   489  08E6  3430               	retlw	48	;'0'
   490  08E7  3400               	retlw	0
   491                           psect	stringtext
   492                           	
   493  08E8                     STR_23:	
   494  08E8  3430               	retlw	48	;'0'
   495  08E9  3431               	retlw	49	;'1'
   496  08EA  3430               	retlw	48	;'0'
   497  08EB  3430               	retlw	48	;'0'
   498  08EC  3400               	retlw	0
   499                           psect	stringtext
   500                           	
   501  08ED                     STR_31:	
   502  08ED  3431               	retlw	49	;'1'
   503  08EE  3431               	retlw	49	;'1'
   504  08EF  3430               	retlw	48	;'0'
   505  08F0  3430               	retlw	48	;'0'
   506  08F1  3400               	retlw	0
   507                           psect	stringtext
   508                           	
   509  08F2                     STR_21:	
   510  08F2  3430               	retlw	48	;'0'
   511  08F3  3430               	retlw	48	;'0'
   512  08F4  3431               	retlw	49	;'1'
   513  08F5  3430               	retlw	48	;'0'
   514  08F6  3400               	retlw	0
   515                           psect	stringtext
   516                           	
   517  08F7                     STR_29:	
   518  08F7  3431               	retlw	49	;'1'
   519  08F8  3430               	retlw	48	;'0'
   520  08F9  3431               	retlw	49	;'1'
   521  08FA  3430               	retlw	48	;'0'
   522  08FB  3400               	retlw	0
   523                           psect	stringtext
   524                           	
   525  08FC                     STR_25:	
   526  08FC  3430               	retlw	48	;'0'
   527  08FD  3431               	retlw	49	;'1'
   528  08FE  3431               	retlw	49	;'1'
   529  08FF  3430               	retlw	48	;'0'
   530  0900  3400               	retlw	0
   531                           psect	stringtext
   532                           	
   533  0901                     STR_33:	
   534  0901  3431               	retlw	49	;'1'
   535  0902  3431               	retlw	49	;'1'
   536  0903  3431               	retlw	49	;'1'
   537  0904  3430               	retlw	48	;'0'
   538  0905  3400               	retlw	0
   539                           psect	stringtext
   540                           	
   541  0906                     STR_20:	
   542  0906  3430               	retlw	48	;'0'
   543  0907  3430               	retlw	48	;'0'
   544  0908  3430               	retlw	48	;'0'
   545  0909  3431               	retlw	49	;'1'
   546  090A  3400               	retlw	0
   547                           psect	stringtext
   548                           	
   549  090B                     STR_28:	
   550  090B  3431               	retlw	49	;'1'
   551  090C  3430               	retlw	48	;'0'
   552  090D  3430               	retlw	48	;'0'
   553  090E  3431               	retlw	49	;'1'
   554  090F  3400               	retlw	0
   555                           psect	stringtext
   556                           	
   557  0910                     STR_24:	
   558  0910  3430               	retlw	48	;'0'
   559  0911  3431               	retlw	49	;'1'
   560  0912  3430               	retlw	48	;'0'
   561  0913  3431               	retlw	49	;'1'
   562  0914  3400               	retlw	0
   563                           psect	stringtext
   564                           	
   565  0915                     STR_32:	
   566  0915  3431               	retlw	49	;'1'
   567  0916  3431               	retlw	49	;'1'
   568  0917  3430               	retlw	48	;'0'
   569  0918  3431               	retlw	49	;'1'
   570  0919  3400               	retlw	0
   571                           psect	stringtext
   572                           	
   573  091A                     STR_22:	
   574  091A  3430               	retlw	48	;'0'
   575  091B  3430               	retlw	48	;'0'
   576  091C  3431               	retlw	49	;'1'
   577  091D  3431               	retlw	49	;'1'
   578  091E  3400               	retlw	0
   579                           psect	stringtext
   580                           	
   581  091F                     STR_30:	
   582  091F  3431               	retlw	49	;'1'
   583  0920  3430               	retlw	48	;'0'
   584  0921  3431               	retlw	49	;'1'
   585  0922  3431               	retlw	49	;'1'
   586  0923  3400               	retlw	0
   587                           psect	stringtext
   588                           	
   589  0924                     STR_26:	
   590  0924  3430               	retlw	48	;'0'
   591  0925  3431               	retlw	49	;'1'
   592  0926  3431               	retlw	49	;'1'
   593  0927  3431               	retlw	49	;'1'
   594  0928  3400               	retlw	0
   595                           psect	stringtext
   596                           	
   597  0929                     STR_34:	
   598  0929  3431               	retlw	49	;'1'
   599  092A  3431               	retlw	49	;'1'
   600  092B  3431               	retlw	49	;'1'
   601  092C  3431               	retlw	49	;'1'
   602  092D  3400               	retlw	0
   603                           psect	stringtext
   604                           	
   605  092E                     STR_12:	
   606  092E  342D               	retlw	45	;'-'
   607  092F  342D               	retlw	45	;'-'
   608  0930  342D               	retlw	45	;'-'
   609  0931  3400               	retlw	0
   610                           psect	stringtext
   611  08DF                     STR_4	equ	STR_19+1
   612  092E                     STR_15	equ	STR_12+0
   613  092E                     STR_18	equ	STR_12+0
   614  086D                     STR_11	equ	STR_10+19
   615  086D                     STR_14	equ	STR_10+19
   616  086D                     STR_17	equ	STR_10+19
   617                           	file	"prev1.as"
   618                           	line	#
   619                           psect cinit,class=CODE,delta=2
   620                           global start_initialization
   621  0589                     start_initialization:
   622                           
   623                           psect	bssBANK0,class=BANK0,space=1
   624                           global __pbssBANK0
   625  005F                     __pbssBANK0:
   626  005F                     _dev:
   627  005F                            ds      2
   628                           
   629  0061                     _done_init:
   630  0061                            ds      2
   631                           
   632  0063                     _f1:
   633  0063                            ds      2
   634                           
   635  0065                     _f2:
   636  0065                            ds      2
   637                           
   638  0067                     _f3:
   639  0067                            ds      2
   640                           
   641  0069                     _pdev:
   642  0069                            ds      2
   643                           
   644  006B                     _retm:
   645  006B                            ds      2
   646                           
   647  006D                     read_log@F1910:
   648  006D                            ds      1
   649                           
   650                           psect	dataBANK0,class=BANK0,space=1
   651                           global __pdataBANK0
   652  004B                     __pdataBANK0:
   653                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   654                           	line	132
   655  004B                     _lo:
   656  004B                            ds      5
   657                           
   658                           psect	dataBANK0
   659                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   660                           	line	128
   661  0050                     _logic_d1:
   662  0050                            ds      5
   663                           
   664                           psect	dataBANK0
   665                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   666                           	line	129
   667  0055                     _logic_d2:
   668  0055                            ds      5
   669                           
   670                           psect	dataBANK0
   671                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   672                           	line	130
   673  005A                     _logic_d3:
   674  005A                            ds      5
   675                           
   676                           psect	bssBANK1,class=BANK1,space=1
   677                           global __pbssBANK1
   678  00A0                     __pbssBANK1:
   679  00A0                     getlogicseq@F1867:
   680  00A0                            ds      16
   681                           
   682                           psect	dataBANK1,class=BANK1,space=1
   683                           global __pdataBANK1
   684  00B0                     __pdataBANK1:
   685                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   686                           	line	131
   687  00B0                     _logic_d4:
   688  00B0                            ds      5
   689                           
   690                           psect	dataBANK1
   691                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   692                           	line	133
   693  00B5                     _plo:
   694  00B5                            ds      5
   695                           
   696                           psect clrtext,class=CODE,delta=2
   697                           global clear_ram
   698                           ;	Called with FSR containing the base address, and
   699                           ;	W with the last address+1
   700  047B                     clear_ram:
   701  047B  0064               	clrwdt			;clear the watchdog before getting into this loop
   702  047C                     clrloop:
   703  047C  0180               	clrf	indf		;clear RAM location pointed to by FSR
   704  047D  0A84               	incf	fsr,f		;increment pointer
   705  047E  0604               	xorwf	fsr,w		;XOR with final address
   706  047F  1903               	btfsc	status,2	;have we reached the end yet?
   707  0480  3400               	retlw	0		;all done for this memory range, return
   708  0481  0604               	xorwf	fsr,w		;XOR again to restore value
   709  0482  2C7C               	goto	clrloop		;do the next byte
   710                           
   711                           ; Clear objects allocated to BANK0
   712                           psect cinit,class=CODE,delta=2
   713  0589  1383               	bcf	status, 7	;select IRP bank0
   714  058A  305F               	movlw	low(__pbssBANK0)
   715  058B  0084               	movwf	fsr
   716  058C  306E               	movlw	low((__pbssBANK0)+0Fh)
   717  058D  120A  118A  247B   	fcall	clear_ram
              120A  118A         
   718                           ; Clear objects allocated to BANK1
   719                           psect cinit,class=CODE,delta=2
   720  0592  30A0               	movlw	low(__pbssBANK1)
   721  0593  0084               	movwf	fsr
   722  0594  30B0               	movlw	low((__pbssBANK1)+010h)
   723  0595  120A  118A  247B   	fcall	clear_ram
              120A  118A         
   724                           global btemp
   725                           psect inittext,class=CODE,delta=2
   726                           global init_fetch,btemp
   727                           ;	Called with low address in FSR and high address in W
   728  0497                     init_fetch:
   729  0497  087E               	movf btemp,w
   730  0498  008A               	movwf pclath
   731  0499  087F               	movf btemp+1,w
   732  049A  0082               	movwf pc
   733                           global init_ram
   734                           ;Called with:
   735                           ;	high address of idata address in btemp 
   736                           ;	low address of idata address in btemp+1 
   737                           ;	low address of data in FSR
   738                           ;	high address + 1 of data in btemp-1
   739  049B                     init_ram:
   740  049B  2497  120A  118A   	fcall init_fetch
   741  049E  0080               	movwf indf,f
   742  049F  0A84               	incf fsr,f
   743  04A0  0804               	movf fsr,w
   744  04A1  067D               	xorwf btemp-1,w
   745  04A2  1903               	btfsc status,2
   746  04A3  3400               	retlw 0
   747  04A4  0AFF               	incf btemp+1,f
   748  04A5  1903               	btfsc status,2
   749  04A6  0AFE               	incf btemp,f
   750  04A7  2C9B               	goto init_ram
   751                           ; Initialize objects allocated to BANK1
   752                           psect cinit,class=CODE,delta=2
   753                           global init_ram, __pidataBANK1
   754  059A  30BA               	movlw low(__pdataBANK1+10)
   755  059B  00FD               	movwf btemp-1,f
   756  059C  3004               	movlw high(__pidataBANK1)
   757  059D  00FE               	movwf btemp,f
   758  059E  308D               	movlw low(__pidataBANK1)
   759  059F  00FF               	movwf btemp+1,f
   760  05A0  30B0               	movlw low(__pdataBANK1)
   761  05A1  0084               	movwf fsr,f
   762  05A2  120A  118A  249B   	fcall init_ram
              120A  118A         
   763                           ; Initialize objects allocated to BANK0
   764                           psect cinit,class=CODE,delta=2
   765                           global init_ram, __pidataBANK0
   766  05A7  305F               	movlw low(__pdataBANK0+20)
   767  05A8  00FD               	movwf btemp-1,f
   768  05A9  3004               	movlw high(__pidataBANK0)
   769  05AA  00FE               	movwf btemp,f
   770  05AB  30BC               	movlw low(__pidataBANK0)
   771  05AC  00FF               	movwf btemp+1,f
   772  05AD  304B               	movlw low(__pdataBANK0)
   773  05AE  0084               	movwf fsr,f
   774  05AF  120A  118A  249B   	fcall init_ram
              120A  118A         
   775                           psect cinit,class=CODE,delta=2
   776                           global end_of_initialization
   777                           
   778                           ;End of C runtime variable initialization code
   779                           
   780  05B4                     end_of_initialization:
   781  05B4  0183               clrf status
   782  05B5  120A  118A  2E1C   ljmp _main	;jump to C main() function
   783                           psect	cstackCOMMON,class=COMMON,space=1
   784                           global __pcstackCOMMON
   785  0070                     __pcstackCOMMON:
   786                           	global	?_initlcd
   787  0070                     ?_initlcd:	; 0 bytes @ 0x0
   788                           	global	?_initkeypad
   789  0070                     ?_initkeypad:	; 0 bytes @ 0x0
   790                           	global	??_initkeypad
   791  0070                     ??_initkeypad:	; 0 bytes @ 0x0
   792                           	global	?_write_eep
   793  0070                     ?_write_eep:	; 0 bytes @ 0x0
   794                           	global	??_read_eep
   795  0070                     ??_read_eep:	; 0 bytes @ 0x0
   796                           	global	?_delay
   797  0070                     ?_delay:	; 0 bytes @ 0x0
   798                           	global	?_setLCD
   799  0070                     ?_setLCD:	; 0 bytes @ 0x0
   800                           	global	?_clearlcd
   801  0070                     ?_clearlcd:	; 0 bytes @ 0x0
   802                           	global	?_read_eep
   803  0070                     ?_read_eep:	; 1 bytes @ 0x0
   804                           	global	?_main
   805  0070                     ?_main:	; 2 bytes @ 0x0
   806                           	global	write_eep@d
   807  0070                     write_eep@d:	; 1 bytes @ 0x0
   808                           	global	delay@x
   809  0070                     delay@x:	; 2 bytes @ 0x0
   810                           	global	setLCD@number
   811  0070                     setLCD@number:	; 2 bytes @ 0x0
   812  0070                     	ds	1
   813                           	global	??_write_eep
   814  0071                     ??_write_eep:	; 0 bytes @ 0x1
   815                           	global	read_eep@a
   816  0071                     read_eep@a:	; 1 bytes @ 0x1
   817  0071                     	ds	1
   818                           	global	??_delay
   819  0072                     ??_delay:	; 0 bytes @ 0x2
   820                           	global	??_setLCD
   821  0072                     ??_setLCD:	; 0 bytes @ 0x2
   822                           	global	read_eep@d
   823  0072                     read_eep@d:	; 1 bytes @ 0x2
   824                           	global	write_eep@a
   825  0072                     write_eep@a:	; 1 bytes @ 0x2
   826  0072                     	ds	6
   827                           	global	?_dat
   828  0078                     ?_dat:	; 0 bytes @ 0x8
   829                           	global	?_cmd
   830  0078                     ?_cmd:	; 0 bytes @ 0x8
   831                           	global	cmd@Command
   832  0078                     cmd@Command:	; 2 bytes @ 0x8
   833                           	global	dat@Command
   834  0078                     dat@Command:	; 2 bytes @ 0x8
   835  0078                     	ds	2
   836                           	global	??_initlcd
   837  007A                     ??_initlcd:	; 0 bytes @ 0xA
   838                           	global	??_write
   839  007A                     ??_write:	; 0 bytes @ 0xA
   840                           	global	??_dat
   841  007A                     ??_dat:	; 0 bytes @ 0xA
   842                           	global	??_cmd
   843  007A                     ??_cmd:	; 0 bytes @ 0xA
   844                           	global	??_clearlcd
   845  007A                     ??_clearlcd:	; 0 bytes @ 0xA
   846  007A                     	ds	2
   847                           	global	write@i
   848  007C                     write@i:	; 2 bytes @ 0xC
   849  007C                     	ds	2
   850                           psect	cstackBANK0,class=BANK0,space=1
   851                           global __pcstackBANK0
   852  0020                     __pcstackBANK0:
   853                           	global	setLCD@vbool
   854  0020                     setLCD@vbool:	; 32 bytes @ 0x0
   855  0020                     	ds	32
   856                           	global	setLCD@i
   857  0040                     setLCD@i:	; 2 bytes @ 0x20
   858  0040                     	ds	2
   859                           	global	?_write
   860  0042                     ?_write:	; 0 bytes @ 0x22
   861                           	global	write@str
   862  0042                     write@str:	; 2 bytes @ 0x22
   863  0042                     	ds	2
   864                           	global	write@line
   865  0044                     write@line:	; 2 bytes @ 0x24
   866  0044                     	ds	2
   867                           	global	write@erase
   868  0046                     write@erase:	; 2 bytes @ 0x26
   869  0046                     	ds	2
   870                           	global	??_main
   871  0048                     ??_main:	; 0 bytes @ 0x28
   872  0048                     	ds	2
   873                           	global	main@x
   874  004A                     main@x:	; 1 bytes @ 0x2A
   875  004A                     	ds	1
   876 ;;Data sizes: Strings 281, constant 7, data 30, bss 31, persistent 0 stack 0
   877 ;;Auto spaces:   Size  Autos    Used
   878 ;; COMMON          14     14      14
   879 ;; BANK0           80     43      78
   880 ;; BANK1           80      0      26
   881 ;; BANK3           96      0       0
   882 ;; BANK2           96      0       0
   883                           
   884 ;;
   885 ;; Pointer list with targets:
   886                           
   887 ;; sp__read_log	PTR unsigned char  size(1) Largest target is 1
   888 ;;		 -> read_log@logic(COMMON[1]), 
   889 ;;
   890 ;; write@str	PTR unsigned char  size(2) Largest target is 38
   891 ;;		 -> STR_18(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), getlogicseq@str(BANK0[32]), 
   892 ;;		 -> STR_9(CODE[27]), STR_8(CODE[8]), STR_7(CODE[15]), STR_6(CODE[38]), 
   893 ;;		 -> logic_d3(BANK0[5]), logic_d2(BANK0[5]), logic_d1(BANK0[5]), STR_5(CODE[17]), 
   894 ;;		 -> lo(BANK0[5]), STR_3(CODE[11]), STR_2(CODE[10]), STR_1(CODE[11]), 
   895 ;;
   896 ;; sp__strcat	PTR unsigned char  size(1) Largest target is 5
   897 ;;		 -> logic_d3(BANK0[5]), logic_d2(BANK0[5]), logic_d1(BANK0[5]), 
   898 ;;
   899 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 32
   900 ;;		 -> getlogicseq@str(BANK0[32]), logic_d3(BANK0[5]), logic_d2(BANK0[5]), logic_d1(BANK0[5]), 
   901 ;;		 -> lo(BANK0[5]), plo(BANK1[5]), 
   902 ;;
   903                           
   904                           
   905 ;;
   906 ;; Critical Paths under _main in COMMON
   907 ;;
   908 ;;   _main->_write
   909 ;;   _write->_cmd
   910 ;;   _write->_dat
   911 ;;   _clearlcd->_cmd
   912 ;;   _initlcd->_cmd
   913 ;;   _cmd->_setLCD
   914 ;;   _dat->_setLCD
   915 ;;
   916 ;; Critical Paths under _main in BANK0
   917 ;;
   918 ;;   _main->_write
   919 ;;   _cmd->_setLCD
   920 ;;   _dat->_setLCD
   921 ;;
   922 ;; Critical Paths under _main in BANK1
   923 ;;
   924 ;;   None.
   925 ;;
   926 ;; Critical Paths under _main in BANK3
   927 ;;
   928 ;;   None.
   929 ;;
   930 ;; Critical Paths under _main in BANK2
   931 ;;
   932 ;;   None.
   933                           
   934 ;;
   935 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   936 ;;
   937                           
   938 ;;
   939 ;;Call Graph Tables:
   940 ;;
   941 ;; ---------------------------------------------------------------------------------
   942 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   943 ;; ---------------------------------------------------------------------------------
   944 ;; (0) _main                                                 3     3      0    2220
   945 ;;                                             40 BANK0      3     3      0
   946 ;;                            _initlcd
   947 ;;                         _initkeypad
   948 ;;                          _write_eep
   949 ;;                           _read_eep
   950 ;;                              _write
   951 ;;                              _delay
   952 ;;                                _dat
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (1) _write                                               10     4      6    1226
   955 ;;                                             10 COMMON     4     4      0
   956 ;;                                             34 BANK0      6     0      6
   957 ;;                           _clearlcd
   958 ;;                                _cmd
   959 ;;                                _dat
   960 ;; ---------------------------------------------------------------------------------
   961 ;; (2) _clearlcd                                             0     0      0     364
   962 ;;                                _cmd
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (1) _initlcd                                              0     0      0     364
   965 ;;                                _cmd
   966 ;; ---------------------------------------------------------------------------------
   967 ;; (2) _cmd                                                  2     0      2     364
   968 ;;                                              8 COMMON     2     0      2
   969 ;;                             _setLCD
   970 ;;                              _delay
   971 ;; ---------------------------------------------------------------------------------
   972 ;; (1) _dat                                                  2     0      2     364
   973 ;;                                              8 COMMON     2     0      2
   974 ;;                             _setLCD
   975 ;;                              _delay
   976 ;; ---------------------------------------------------------------------------------
   977 ;; (3) _setLCD                                              42    40      2     320
   978 ;;                                              0 COMMON     8     6      2
   979 ;;                                              0 BANK0     34    34      0
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (2) _delay                                                2     0      2      22
   982 ;;                                              0 COMMON     2     0      2
   983 ;; ---------------------------------------------------------------------------------
   984 ;; (1) _read_eep                                             3     3      0      45
   985 ;;                                              0 COMMON     3     3      0
   986 ;; ---------------------------------------------------------------------------------
   987 ;; (1) _write_eep                                            3     2      1     176
   988 ;;                                              0 COMMON     3     2      1
   989 ;;                          _write_eep
   990 ;; ---------------------------------------------------------------------------------
   991 ;; (1) _initkeypad                                           0     0      0       0
   992 ;; ---------------------------------------------------------------------------------
   993 ;; Estimated maximum stack depth 3
   994 ;; ---------------------------------------------------------------------------------
   995                           
   996 ;; Call Graph Graphs:
   997                           
   998 ;; _main (ROOT)
   999 ;;   _initlcd
  1000 ;;     _cmd
  1001 ;;       _setLCD
  1002 ;;       _delay
  1003 ;;   _initkeypad
  1004 ;;   _write_eep
  1005 ;;   _read_eep
  1006 ;;   _write
  1007 ;;     _clearlcd
  1008 ;;       _cmd
  1009 ;;         _setLCD
  1010 ;;         _delay
  1011 ;;     _cmd
  1012 ;;       _setLCD
  1013 ;;       _delay
  1014 ;;     _dat
  1015 ;;       _setLCD
  1016 ;;       _delay
  1017 ;;   _delay
  1018 ;;   _dat
  1019 ;;     _setLCD
  1020 ;;     _delay
  1021 ;;
  1022                           
  1023 ;; Address spaces:
  1024                           
  1025 ;;Name               Size   Autos  Total    Cost      Usage
  1026 ;;BANK3               60      0       0       9        0.0%
  1027 ;;BITBANK3            60      0       0       8        0.0%
  1028 ;;SFR3                 0      0       0       4        0.0%
  1029 ;;BITSFR3              0      0       0       4        0.0%
  1030 ;;BANK2               60      0       0      11        0.0%
  1031 ;;BITBANK2            60      0       0      10        0.0%
  1032 ;;SFR2                 0      0       0       5        0.0%
  1033 ;;BITSFR2              0      0       0       5        0.0%
  1034 ;;SFR1                 0      0       0       2        0.0%
  1035 ;;BITSFR1              0      0       0       2        0.0%
  1036 ;;BANK1               50      0      1A       7       32.5%
  1037 ;;BITBANK1            50      0       0       6        0.0%
  1038 ;;CODE                 0      0       0       0        0.0%
  1039 ;;DATA                 0      0      7B      12        0.0%
  1040 ;;ABS                  0      0      76       3        0.0%
  1041 ;;NULL                 0      0       0       0        0.0%
  1042 ;;STACK                0      0       5       2        0.0%
  1043 ;;BANK0               50     2B      4E       5       97.5%
  1044 ;;BITBANK0            50      0       0       4        0.0%
  1045 ;;SFR0                 0      0       0       1        0.0%
  1046 ;;BITSFR0              0      0       0       1        0.0%
  1047 ;;COMMON               E      E       E       1      100.0%
  1048 ;;BITCOMMON            E      0       0       0        0.0%
  1049 ;;EEDATA             100      0       0       0        0.0%
  1050                           
  1051                           	global	_main
  1052                           psect	maintext,global,class=CODE,delta=2
  1053                           global __pmaintext
  1054  061C                     __pmaintext:
  1055                           
  1056 ;; *************** function _main *****************
  1057 ;; Defined at:
  1058 ;;		line 91 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  x               1   42[BANK0 ] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  2  1084[COMMON] int 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 17F/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         0       1       0       0       0
  1074 ;;      Temps:          0       2       0       0       0
  1075 ;;      Totals:         0       3       0       0       0
  1076 ;;Total ram usage:        3 bytes
  1077 ;; Hardware stack levels required when called:    5
  1078 ;; This function calls:
  1079 ;;		_initlcd
  1080 ;;		_initkeypad
  1081 ;;		_write_eep
  1082 ;;		_read_eep
  1083 ;;		_write
  1084 ;;		_delay
  1085 ;;		_dat
  1086 ;; This function is called by:
  1087 ;;		Startup code after reset
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           psect	maintext
  1091                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1092                           	line	91
  1093                           	global	__size_of_main
  1094  008A                     	__size_of_main	equ	__end_of_main-_main
  1095                           	
  1096  061C                     _main:	
  1097                           	opt	stack 3
  1098                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1099                           	line	95
  1100                           	
  1101  061C                     l4074:	
  1102                           ;prev11.c: 95: TRISB = 0b00001111;
  1103  061C  300F               	movlw	(0Fh)
  1104  061D  1683               	bsf	status, 5	;RP0=1, select bank1
  1105  061E  1303               	bcf	status, 6	;RP1=0, select bank1
  1106  061F  0086               	movwf	(134)^080h	;volatile
  1107                           	line	97
  1108                           	
  1109  0620                     l4076:	
  1110                           ;prev11.c: 97: initlcd();
  1111  0620  120A  118A  255F   	fcall	_initlcd
              120A  118A         
  1112                           	line	98
  1113                           	
  1114  0625                     l4078:	
  1115                           ;prev11.c: 98: initkeypad();
  1116  0625  120A  118A  2473   	fcall	_initkeypad
              120A  118A         
  1117                           	line	100
  1118                           	
  1119  062A                     l4080:	
  1120                           ;prev11.c: 100: write_eep(adr[0],'X');
  1121  062A  3058               	movlw	(058h)
  1122  062B  1283               	bcf	status, 5	;RP0=0, select bank0
  1123  062C  1303               	bcf	status, 6	;RP1=0, select bank0
  1124  062D  00C8               	movwf	(??_main+0)+0
  1125  062E  0848               	movf	(??_main+0)+0,w
  1126  062F  00F0               	movwf	(?_write_eep)
  1127  0630  3012               	movlw	low(_adr|8000h)
  1128  0631  0084               	movwf	fsr0
  1129  0632  3088               	movlw	high(_adr|8000h)
  1130  0633  00FF               	movwf	btemp+1
  1131  0634  120A  158A  2000   	fcall	stringtab
              120A  118A         
  1132  0639  120A  118A  2538   	fcall	_write_eep
              120A  118A         
  1133                           	line	101
  1134                           	
  1135  063E                     l4082:	
  1136                           ;prev11.c: 101: char x=read_eep(adr[0]);
  1137  063E  3012               	movlw	low(_adr|8000h)
  1138  063F  0084               	movwf	fsr0
  1139  0640  3088               	movlw	high(_adr|8000h)
  1140  0641  1283               	bcf	status, 5	;RP0=0, select bank0
  1141  0642  1303               	bcf	status, 6	;RP1=0, select bank0
  1142  0643  00FF               	movwf	btemp+1
  1143  0644  120A  158A  2000   	fcall	stringtab
              120A  118A         
  1144  0649  120A  118A  24D0   	fcall	_read_eep
              120A  118A         
  1145  064E  1283               	bcf	status, 5	;RP0=0, select bank0
  1146  064F  1303               	bcf	status, 6	;RP1=0, select bank0
  1147  0650  00C8               	movwf	(??_main+0)+0
  1148  0651  0848               	movf	(??_main+0)+0,w
  1149  0652  00CA               	movwf	(main@x)
  1150                           	line	102
  1151                           	
  1152  0653                     l4084:	
  1153                           ;prev11.c: 102: write("Data Wrote",1,1);
  1154  0653  30C1               	movlw	low(STR_1|8000h)
  1155  0654  00C2               	movwf	(?_write)
  1156  0655  3088               	movlw	high(STR_1|8000h)
  1157  0656  00C3               	movwf	((?_write))+1
  1158  0657  3001               	movlw	low(01h)
  1159  0658  00C4               	movwf	0+(?_write)+02h
  1160  0659  3000               	movlw	high(01h)
  1161  065A  00C5               	movwf	(0+(?_write)+02h)+1
  1162  065B  3001               	movlw	low(01h)
  1163  065C  00C6               	movwf	0+(?_write)+04h
  1164  065D  3000               	movlw	high(01h)
  1165  065E  00C7               	movwf	(0+(?_write)+04h)+1
  1166  065F  120A  118A  25B8   	fcall	_write
              120A  118A         
  1167                           	line	103
  1168                           	
  1169  0664                     l4086:	
  1170                           ;prev11.c: 103: delay(1000);
  1171  0664  30E8               	movlw	low(03E8h)
  1172  0665  00F0               	movwf	(?_delay)
  1173  0666  3003               	movlw	high(03E8h)
  1174  0667  00F1               	movwf	((?_delay))+1
  1175  0668  120A  118A  24A8   	fcall	_delay
              120A  118A         
  1176                           	line	105
  1177                           	
  1178  066D                     l4088:	
  1179                           ;prev11.c: 105: dat(x);
  1180  066D  1283               	bcf	status, 5	;RP0=0, select bank0
  1181  066E  1303               	bcf	status, 6	;RP1=0, select bank0
  1182  066F  084A               	movf	(main@x),w
  1183  0670  00C8               	movwf	(??_main+0)+0
  1184  0671  01C9               	clrf	(??_main+0)+0+1
  1185  0672  0848               	movf	0+(??_main+0)+0,w
  1186  0673  00F8               	movwf	(?_dat)
  1187  0674  0849               	movf	1+(??_main+0)+0,w
  1188  0675  00F9               	movwf	(?_dat+1)
  1189  0676  120A  118A  24EE   	fcall	_dat
              120A  118A         
  1190                           	line	106
  1191                           	
  1192  067B                     l4090:	
  1193                           ;prev11.c: 106: delay(5000);
  1194  067B  3088               	movlw	low(01388h)
  1195  067C  00F0               	movwf	(?_delay)
  1196  067D  3013               	movlw	high(01388h)
  1197  067E  00F1               	movwf	((?_delay))+1
  1198  067F  120A  118A  24A8   	fcall	_delay
              120A  118A         
  1199                           	line	107
  1200                           	
  1201  0684                     l4092:	
  1202                           ;prev11.c: 107: write("Data READ",1,1);
  1203  0684  30CC               	movlw	low(STR_2|8000h)
  1204  0685  1283               	bcf	status, 5	;RP0=0, select bank0
  1205  0686  1303               	bcf	status, 6	;RP1=0, select bank0
  1206  0687  00C2               	movwf	(?_write)
  1207  0688  3088               	movlw	high(STR_2|8000h)
  1208  0689  00C3               	movwf	((?_write))+1
  1209  068A  3001               	movlw	low(01h)
  1210  068B  00C4               	movwf	0+(?_write)+02h
  1211  068C  3000               	movlw	high(01h)
  1212  068D  00C5               	movwf	(0+(?_write)+02h)+1
  1213  068E  3001               	movlw	low(01h)
  1214  068F  00C6               	movwf	0+(?_write)+04h
  1215  0690  3000               	movlw	high(01h)
  1216  0691  00C7               	movwf	(0+(?_write)+04h)+1
  1217  0692  120A  118A  25B8   	fcall	_write
              120A  118A         
  1218                           	line	108
  1219                           	
  1220  0697                     l4094:	
  1221                           ;prev11.c: 108: delay(1000);
  1222  0697  30E8               	movlw	low(03E8h)
  1223  0698  00F0               	movwf	(?_delay)
  1224  0699  3003               	movlw	high(03E8h)
  1225  069A  00F1               	movwf	((?_delay))+1
  1226  069B  120A  118A  24A8   	fcall	_delay
              120A  118A         
  1227                           	line	110
  1228                           ;prev11.c: 110: while(0){
  1229  06A0  2EA3               	goto	l1088
  1230                           	
  1231  06A1                     l1086:	
  1232  06A1  2EA3               	goto	l1088
  1233                           	line	113
  1234                           	
  1235  06A2                     l1085:	
  1236  06A2  2EA3               	goto	l1088
  1237                           	line	110
  1238                           	
  1239  06A3                     l1087:	
  1240                           	line	119
  1241                           	
  1242  06A3                     l1088:	
  1243                           	global	start
  1244  06A3  120A  118A  2800   	ljmp	start
  1245                           	opt stack 0
  1246                           GLOBAL	__end_of_main
  1247  06A6                     	__end_of_main:
  1248 ;; =============== function _main ends ============
  1249                           
  1250                           	signat	_main,90
  1251                           	global	_write
  1252                           psect	text333,local,class=CODE,delta=2
  1253                           global __ptext333
  1254  05B8                     __ptext333:
  1255                           
  1256 ;; *************** function _write *****************
  1257 ;; Defined at:
  1258 ;;		line 611 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  str             2   34[BANK0 ] PTR unsigned char 
  1261 ;;		 -> STR_18(4), STR_15(4), STR_12(4), getlogicseq@str(32), 
  1262 ;;		 -> STR_9(27), STR_8(8), STR_7(15), STR_6(38), 
  1263 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), STR_5(17), 
  1264 ;;		 -> lo(5), STR_3(11), STR_2(10), STR_1(11), 
  1265 ;;  line            2   36[BANK0 ] int 
  1266 ;;  erase           2   38[BANK0 ] int 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  i               2   12[COMMON] int 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;		None               void
  1271 ;; Registers used:
  1272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       6       0       0       0
  1279 ;;      Locals:         2       0       0       0       0
  1280 ;;      Temps:          2       0       0       0       0
  1281 ;;      Totals:         4       6       0       0       0
  1282 ;;Total ram usage:       10 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    4
  1285 ;; This function calls:
  1286 ;;		_clearlcd
  1287 ;;		_cmd
  1288 ;;		_dat
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;;		_init_fun
  1292 ;;		_startswitch
  1293 ;;		_getlogicseq
  1294 ;;		_scroll
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           psect	text333
  1298                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1299                           	line	611
  1300                           	global	__size_of_write
  1301  0064                     	__size_of_write	equ	__end_of_write-_write
  1302                           	
  1303  05B8                     _write:	
  1304                           	opt	stack 3
  1305                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1306                           	line	612
  1307                           	
  1308  05B8                     l4056:	
  1309                           ;prev11.c: 612: if(erase==1)
  1310  05B8  3001               	movlw	01h
  1311  05B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1312  05BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1313  05BB  0646               	xorwf	(write@erase),w
  1314  05BC  0447               	iorwf	(write@erase+1),w
  1315  05BD  1D03               	skipz
  1316  05BE  2DC0               	goto	u4801
  1317  05BF  2DC1               	goto	u4800
  1318  05C0                     u4801:
  1319  05C0  2DC7               	goto	l4060
  1320  05C1                     u4800:
  1321                           	line	613
  1322                           	
  1323  05C1                     l4058:	
  1324                           ;prev11.c: 613: clearlcd();
  1325  05C1  120A  118A  2483   	fcall	_clearlcd
              120A  118A         
  1326  05C6  2DC7               	goto	l4060
  1327                           	
  1328  05C7                     l1243:	
  1329                           	line	615
  1330                           	
  1331  05C7                     l4060:	
  1332                           ;prev11.c: 615: if(line==2)
  1333  05C7  3002               	movlw	02h
  1334  05C8  1283               	bcf	status, 5	;RP0=0, select bank0
  1335  05C9  1303               	bcf	status, 6	;RP1=0, select bank0
  1336  05CA  0644               	xorwf	(write@line),w
  1337  05CB  0445               	iorwf	(write@line+1),w
  1338  05CC  1D03               	skipz
  1339  05CD  2DCF               	goto	u4811
  1340  05CE  2DD0               	goto	u4810
  1341  05CF                     u4811:
  1342  05CF  2DDA               	goto	l4064
  1343  05D0                     u4810:
  1344                           	line	616
  1345                           	
  1346  05D0                     l4062:	
  1347                           ;prev11.c: 616: cmd(0xC0);
  1348  05D0  30C0               	movlw	low(0C0h)
  1349  05D1  00F8               	movwf	(?_cmd)
  1350  05D2  3000               	movlw	high(0C0h)
  1351  05D3  00F9               	movwf	((?_cmd))+1
  1352  05D4  120A  118A  2513   	fcall	_cmd
              120A  118A         
  1353  05D9  2DE4               	goto	l4066
  1354                           	line	617
  1355                           	
  1356  05DA                     l1244:	
  1357                           	line	618
  1358                           	
  1359  05DA                     l4064:	
  1360                           ;prev11.c: 617: else
  1361                           ;prev11.c: 618: cmd(0x2);
  1362  05DA  3002               	movlw	low(02h)
  1363  05DB  00F8               	movwf	(?_cmd)
  1364  05DC  3000               	movlw	high(02h)
  1365  05DD  00F9               	movwf	((?_cmd))+1
  1366  05DE  120A  118A  2513   	fcall	_cmd
              120A  118A         
  1367  05E3  2DE4               	goto	l4066
  1368                           	
  1369  05E4                     l1245:	
  1370                           	line	620
  1371                           	
  1372  05E4                     l4066:	
  1373                           ;prev11.c: 620: int i=0;
  1374  05E4  01FC               	clrf	(write@i)
  1375  05E5  01FD               	clrf	(write@i+1)
  1376                           	line	621
  1377                           ;prev11.c: 621: while(str[i]!='\0')
  1378  05E6  2E07               	goto	l4072
  1379                           	
  1380  05E7                     l1247:	
  1381                           	line	623
  1382                           	
  1383  05E7                     l4068:	
  1384                           ;prev11.c: 622: {
  1385                           ;prev11.c: 623: dat(str[i]);
  1386  05E7  087C               	movf	(write@i),w
  1387  05E8  1283               	bcf	status, 5	;RP0=0, select bank0
  1388  05E9  1303               	bcf	status, 6	;RP1=0, select bank0
  1389  05EA  0742               	addwf	(write@str),w
  1390  05EB  0084               	movwf	fsr0
  1391  05EC  0843               	movf	(write@str+1),w
  1392  05ED  1803               	skipnc
  1393  05EE  0A43               	incf	(write@str+1),w
  1394  05EF  00FF               	movwf	btemp+1
  1395  05F0  120A  158A  2000   	fcall	stringtab
              120A  118A         
  1396  05F5  00FA               	movwf	(??_write+0)+0
  1397  05F6  01FB               	clrf	(??_write+0)+0+1
  1398  05F7  087A               	movf	0+(??_write+0)+0,w
  1399  05F8  00F8               	movwf	(?_dat)
  1400  05F9  087B               	movf	1+(??_write+0)+0,w
  1401  05FA  00F9               	movwf	(?_dat+1)
  1402  05FB  120A  118A  24EE   	fcall	_dat
              120A  118A         
  1403                           	line	624
  1404                           	
  1405  0600                     l4070:	
  1406                           ;prev11.c: 624: i++;
  1407  0600  3001               	movlw	low(01h)
  1408  0601  07FC               	addwf	(write@i),f
  1409  0602  1803               	skipnc
  1410  0603  0AFD               	incf	(write@i+1),f
  1411  0604  3000               	movlw	high(01h)
  1412  0605  07FD               	addwf	(write@i+1),f
  1413  0606  2E07               	goto	l4072
  1414                           	line	625
  1415                           	
  1416  0607                     l1246:	
  1417                           	line	621
  1418                           	
  1419  0607                     l4072:	
  1420  0607  087C               	movf	(write@i),w
  1421  0608  1283               	bcf	status, 5	;RP0=0, select bank0
  1422  0609  1303               	bcf	status, 6	;RP1=0, select bank0
  1423  060A  0742               	addwf	(write@str),w
  1424  060B  0084               	movwf	fsr0
  1425  060C  0843               	movf	(write@str+1),w
  1426  060D  1803               	skipnc
  1427  060E  0A43               	incf	(write@str+1),w
  1428  060F  00FF               	movwf	btemp+1
  1429  0610  120A  158A  2000   	fcall	stringtab
              120A  118A         
  1430  0615  3800               	iorlw	0
  1431  0616  1D03               	skipz
  1432  0617  2E19               	goto	u4821
  1433  0618  2E1A               	goto	u4820
  1434  0619                     u4821:
  1435  0619  2DE7               	goto	l4068
  1436  061A                     u4820:
  1437  061A  2E1B               	goto	l1249
  1438                           	
  1439  061B                     l1248:	
  1440                           	line	628
  1441                           	
  1442  061B                     l1249:	
  1443  061B  0008               	return
  1444                           	opt stack 0
  1445                           GLOBAL	__end_of_write
  1446  061C                     	__end_of_write:
  1447 ;; =============== function _write ends ============
  1448                           
  1449                           	signat	_write,12408
  1450                           	global	_clearlcd
  1451                           psect	text334,local,class=CODE,delta=2
  1452                           global __ptext334
  1453  0483                     __ptext334:
  1454                           
  1455 ;; *************** function _clearlcd *****************
  1456 ;; Defined at:
  1457 ;;		line 553 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;		None               void
  1464 ;; Registers used:
  1465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0
  1474 ;;      Totals:         0       0       0       0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    3
  1478 ;; This function calls:
  1479 ;;		_cmd
  1480 ;; This function is called by:
  1481 ;;		_write
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           psect	text334
  1485                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1486                           	line	553
  1487                           	global	__size_of_clearlcd
  1488  000A                     	__size_of_clearlcd	equ	__end_of_clearlcd-_clearlcd
  1489                           	
  1490  0483                     _clearlcd:	
  1491                           	opt	stack 3
  1492                           ; Regs used in _clearlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1493                           	line	554
  1494                           	
  1495  0483                     l4054:	
  1496                           ;prev11.c: 554: cmd(0x01);
  1497  0483  3001               	movlw	low(01h)
  1498  0484  00F8               	movwf	(?_cmd)
  1499  0485  3000               	movlw	high(01h)
  1500  0486  00F9               	movwf	((?_cmd))+1
  1501  0487  120A  118A  2513   	fcall	_cmd
              120A  118A         
  1502                           	line	555
  1503                           	
  1504  048C                     l1227:	
  1505  048C  0008               	return
  1506                           	opt stack 0
  1507                           GLOBAL	__end_of_clearlcd
  1508  048D                     	__end_of_clearlcd:
  1509 ;; =============== function _clearlcd ends ============
  1510                           
  1511                           	signat	_clearlcd,88
  1512                           	global	_initlcd
  1513                           psect	text335,local,class=CODE,delta=2
  1514                           global __ptext335
  1515  055F                     __ptext335:
  1516                           
  1517 ;; *************** function _initlcd *****************
  1518 ;; Defined at:
  1519 ;;		line 535 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;		None               void
  1526 ;; Registers used:
  1527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0
  1536 ;;      Totals:         0       0       0       0       0
  1537 ;;Total ram usage:        0 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    3
  1540 ;; This function calls:
  1541 ;;		_cmd
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           psect	text335
  1547                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1548                           	line	535
  1549                           	global	__size_of_initlcd
  1550  002A                     	__size_of_initlcd	equ	__end_of_initlcd-_initlcd
  1551                           	
  1552  055F                     _initlcd:	
  1553                           	opt	stack 4
  1554                           ; Regs used in _initlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1555                           	line	537
  1556                           	
  1557  055F                     l4042:	
  1558                           ;prev11.c: 537: TRISC=0b111110;
  1559  055F  303E               	movlw	(03Eh)
  1560  0560  1683               	bsf	status, 5	;RP0=1, select bank1
  1561  0561  1303               	bcf	status, 6	;RP1=0, select bank1
  1562  0562  0087               	movwf	(135)^080h	;volatile
  1563                           	line	539
  1564                           	
  1565  0563                     l4044:	
  1566                           ;prev11.c: 539: TRISD=0x00;
  1567  0563  0188               	clrf	(136)^080h	;volatile
  1568                           	line	541
  1569                           	
  1570  0564                     l4046:	
  1571                           ;prev11.c: 541: cmd(0x38);
  1572  0564  3038               	movlw	low(038h)
  1573  0565  00F8               	movwf	(?_cmd)
  1574  0566  3000               	movlw	high(038h)
  1575  0567  00F9               	movwf	((?_cmd))+1
  1576  0568  120A  118A  2513   	fcall	_cmd
              120A  118A         
  1577                           	line	543
  1578                           	
  1579  056D                     l4048:	
  1580                           ;prev11.c: 543: cmd(0x0C);
  1581  056D  300C               	movlw	low(0Ch)
  1582  056E  00F8               	movwf	(?_cmd)
  1583  056F  3000               	movlw	high(0Ch)
  1584  0570  00F9               	movwf	((?_cmd))+1
  1585  0571  120A  118A  2513   	fcall	_cmd
              120A  118A         
  1586                           	line	545
  1587                           	
  1588  0576                     l4050:	
  1589                           ;prev11.c: 545: cmd(0x01);
  1590  0576  3001               	movlw	low(01h)
  1591  0577  00F8               	movwf	(?_cmd)
  1592  0578  3000               	movlw	high(01h)
  1593  0579  00F9               	movwf	((?_cmd))+1
  1594  057A  120A  118A  2513   	fcall	_cmd
              120A  118A         
  1595                           	line	547
  1596                           	
  1597  057F                     l4052:	
  1598                           ;prev11.c: 547: cmd(0x80);
  1599  057F  3080               	movlw	low(080h)
  1600  0580  00F8               	movwf	(?_cmd)
  1601  0581  3000               	movlw	high(080h)
  1602  0582  00F9               	movwf	((?_cmd))+1
  1603  0583  120A  118A  2513   	fcall	_cmd
              120A  118A         
  1604                           	line	551
  1605                           	
  1606  0588                     l1224:	
  1607  0588  0008               	return
  1608                           	opt stack 0
  1609                           GLOBAL	__end_of_initlcd
  1610  0589                     	__end_of_initlcd:
  1611 ;; =============== function _initlcd ends ============
  1612                           
  1613                           	signat	_initlcd,88
  1614                           	global	_cmd
  1615                           psect	text336,local,class=CODE,delta=2
  1616                           global __ptext336
  1617  0513                     __ptext336:
  1618                           
  1619 ;; *************** function _cmd *****************
  1620 ;; Defined at:
  1621 ;;		line 557 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  Command         2    8[COMMON] unsigned int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;		None               void
  1628 ;; Registers used:
  1629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         2       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0
  1638 ;;      Totals:         2       0       0       0       0
  1639 ;;Total ram usage:        2 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    2
  1642 ;; This function calls:
  1643 ;;		_setLCD
  1644 ;;		_delay
  1645 ;; This function is called by:
  1646 ;;		_initlcd
  1647 ;;		_clearlcd
  1648 ;;		_write
  1649 ;;		_scroll
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           psect	text336
  1653                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1654                           	line	557
  1655                           	global	__size_of_cmd
  1656  0025                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  1657                           	
  1658  0513                     _cmd:	
  1659                           	opt	stack 4
  1660                           ; Regs used in _cmd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1661                           	line	559
  1662                           	
  1663  0513                     l4030:	
  1664                           ;prev11.c: 559: setLCD(Command);
  1665  0513  0879               	movf	(cmd@Command+1),w
  1666  0514  01F1               	clrf	(?_setLCD+1)
  1667  0515  07F1               	addwf	(?_setLCD+1)
  1668  0516  0878               	movf	(cmd@Command),w
  1669  0517  01F0               	clrf	(?_setLCD)
  1670  0518  07F0               	addwf	(?_setLCD)
  1671                           
  1672  0519  120A  118A  26A6   	fcall	_setLCD
              120A  118A         
  1673                           	line	560
  1674                           	
  1675  051E                     l4032:	
  1676                           ;prev11.c: 560: RC0=0;
  1677  051E  1283               	bcf	status, 5	;RP0=0, select bank0
  1678  051F  1303               	bcf	status, 6	;RP1=0, select bank0
  1679  0520  1007               	bcf	(56/8),(56)&7
  1680                           	line	561
  1681                           	
  1682  0521                     l4034:	
  1683                           ;prev11.c: 561: RB5=1;
  1684  0521  1686               	bsf	(53/8),(53)&7
  1685                           	line	562
  1686                           	
  1687  0522                     l4036:	
  1688                           ;prev11.c: 562: delay(20);
  1689  0522  3014               	movlw	low(014h)
  1690  0523  00F0               	movwf	(?_delay)
  1691  0524  3000               	movlw	high(014h)
  1692  0525  00F1               	movwf	((?_delay))+1
  1693  0526  120A  118A  24A8   	fcall	_delay
              120A  118A         
  1694                           	line	563
  1695                           	
  1696  052B                     l4038:	
  1697                           ;prev11.c: 563: RB5=0;
  1698  052B  1283               	bcf	status, 5	;RP0=0, select bank0
  1699  052C  1303               	bcf	status, 6	;RP1=0, select bank0
  1700  052D  1286               	bcf	(53/8),(53)&7
  1701                           	line	564
  1702                           	
  1703  052E                     l4040:	
  1704                           ;prev11.c: 564: delay(20);
  1705  052E  3014               	movlw	low(014h)
  1706  052F  00F0               	movwf	(?_delay)
  1707  0530  3000               	movlw	high(014h)
  1708  0531  00F1               	movwf	((?_delay))+1
  1709  0532  120A  118A  24A8   	fcall	_delay
              120A  118A         
  1710                           	line	566
  1711                           	
  1712  0537                     l1230:	
  1713  0537  0008               	return
  1714                           	opt stack 0
  1715                           GLOBAL	__end_of_cmd
  1716  0538                     	__end_of_cmd:
  1717 ;; =============== function _cmd ends ============
  1718                           
  1719                           	signat	_cmd,4216
  1720                           	global	_dat
  1721                           psect	text337,local,class=CODE,delta=2
  1722                           global __ptext337
  1723  04EE                     __ptext337:
  1724                           
  1725 ;; *************** function _dat *****************
  1726 ;; Defined at:
  1727 ;;		line 569 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  Command         2    8[COMMON] unsigned int 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;		None               void
  1734 ;; Registers used:
  1735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         2       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0
  1744 ;;      Totals:         2       0       0       0       0
  1745 ;;Total ram usage:        2 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    2
  1748 ;; This function calls:
  1749 ;;		_setLCD
  1750 ;;		_delay
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;;		_write
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           psect	text337
  1757                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1758                           	line	569
  1759                           	global	__size_of_dat
  1760  0025                     	__size_of_dat	equ	__end_of_dat-_dat
  1761                           	
  1762  04EE                     _dat:	
  1763                           	opt	stack 5
  1764                           ; Regs used in _dat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1765                           	line	570
  1766                           	
  1767  04EE                     l4018:	
  1768                           ;prev11.c: 570: setLCD(Command);
  1769  04EE  0879               	movf	(dat@Command+1),w
  1770  04EF  01F1               	clrf	(?_setLCD+1)
  1771  04F0  07F1               	addwf	(?_setLCD+1)
  1772  04F1  0878               	movf	(dat@Command),w
  1773  04F2  01F0               	clrf	(?_setLCD)
  1774  04F3  07F0               	addwf	(?_setLCD)
  1775                           
  1776  04F4  120A  118A  26A6   	fcall	_setLCD
              120A  118A         
  1777                           	line	572
  1778                           	
  1779  04F9                     l4020:	
  1780                           ;prev11.c: 572: RC0=1;
  1781  04F9  1283               	bcf	status, 5	;RP0=0, select bank0
  1782  04FA  1303               	bcf	status, 6	;RP1=0, select bank0
  1783  04FB  1407               	bsf	(56/8),(56)&7
  1784                           	line	574
  1785                           	
  1786  04FC                     l4022:	
  1787                           ;prev11.c: 574: RB5=1;
  1788  04FC  1686               	bsf	(53/8),(53)&7
  1789                           	line	576
  1790                           	
  1791  04FD                     l4024:	
  1792                           ;prev11.c: 576: delay(20);
  1793  04FD  3014               	movlw	low(014h)
  1794  04FE  00F0               	movwf	(?_delay)
  1795  04FF  3000               	movlw	high(014h)
  1796  0500  00F1               	movwf	((?_delay))+1
  1797  0501  120A  118A  24A8   	fcall	_delay
              120A  118A         
  1798                           	line	578
  1799                           	
  1800  0506                     l4026:	
  1801                           ;prev11.c: 578: RB5=0;
  1802  0506  1283               	bcf	status, 5	;RP0=0, select bank0
  1803  0507  1303               	bcf	status, 6	;RP1=0, select bank0
  1804  0508  1286               	bcf	(53/8),(53)&7
  1805                           	line	580
  1806                           	
  1807  0509                     l4028:	
  1808                           ;prev11.c: 580: delay(20);
  1809  0509  3014               	movlw	low(014h)
  1810  050A  00F0               	movwf	(?_delay)
  1811  050B  3000               	movlw	high(014h)
  1812  050C  00F1               	movwf	((?_delay))+1
  1813  050D  120A  118A  24A8   	fcall	_delay
              120A  118A         
  1814                           	line	586
  1815                           	
  1816  0512                     l1233:	
  1817  0512  0008               	return
  1818                           	opt stack 0
  1819                           GLOBAL	__end_of_dat
  1820  0513                     	__end_of_dat:
  1821 ;; =============== function _dat ends ============
  1822                           
  1823                           	signat	_dat,4216
  1824                           	global	_setLCD
  1825                           psect	text338,local,class=CODE,delta=2
  1826                           global __ptext338
  1827  06A6                     __ptext338:
  1828                           
  1829 ;; *************** function _setLCD *****************
  1830 ;; Defined at:
  1831 ;;		line 588 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  number          2    0[COMMON] int 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  vbool          32    0[BANK0 ] int [16]
  1836 ;;  i               2   32[BANK0 ] int 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;		None               void
  1839 ;; Registers used:
  1840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1846 ;;      Params:         2       0       0       0       0
  1847 ;;      Locals:         0      34       0       0       0
  1848 ;;      Temps:          6       0       0       0       0
  1849 ;;      Totals:         8      34       0       0       0
  1850 ;;Total ram usage:       42 bytes
  1851 ;; Hardware stack levels used:    2
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_cmd
  1856 ;;		_dat
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           psect	text338
  1860                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1861                           	line	588
  1862                           	global	__size_of_setLCD
  1863  015A                     	__size_of_setLCD	equ	__end_of_setLCD-_setLCD
  1864                           	
  1865  06A6                     _setLCD:	
  1866                           	opt	stack 5
  1867                           ; Regs used in _setLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1868                           	line	593
  1869                           	
  1870  06A6                     l3892:	
  1871                           ;prev11.c: 589: const int size=8*sizeof(int);
  1872                           ;prev11.c: 590: int vbool[8*sizeof(int)];
  1873                           ;prev11.c: 591: int i;;
  1874                           ;prev11.c: 593: for (i = 0; i <size; i++)
  1875  06A6  1283               	bcf	status, 5	;RP0=0, select bank0
  1876  06A7  1303               	bcf	status, 6	;RP1=0, select bank0
  1877  06A8  01C0               	clrf	(setLCD@i)
  1878  06A9  01C1               	clrf	(setLCD@i+1)
  1879                           	
  1880  06AA                     l3894:	
  1881  06AA  3017               	movlw	low(setLCD@size|8000h)
  1882  06AB  0084               	movwf	fsr0
  1883  06AC  3088               	movlw	high(setLCD@size|8000h)
  1884  06AD  00FF               	movwf	btemp+1
  1885  06AE  120A  158A  2000   	fcall	stringtab
              120A  118A         
  1886  06B3  00F2               	movwf	(??_setLCD+0)+0
  1887  06B4  120A  158A  2000   	fcall	stringtab
              120A  118A         
  1888  06B9  00F3               	movwf	(??_setLCD+0)+0+1
  1889  06BA  0841               	movf	(setLCD@i+1),w
  1890  06BB  3A80               	xorlw	80h
  1891  06BC  00F4               	movwf	(??_setLCD+2)+0
  1892  06BD  0873               	movf	1+(??_setLCD+0)+0,w
  1893  06BE  3A80               	xorlw	80h
  1894  06BF  0274               	subwf	(??_setLCD+2)+0,w
  1895  06C0  1D03               	skipz
  1896  06C1  2EC4               	goto	u4345
  1897  06C2  0872               	movf	0+(??_setLCD+0)+0,w
  1898  06C3  0240               	subwf	(setLCD@i),w
  1899  06C4                     u4345:
  1900                           
  1901  06C4  1C03               	skipc
  1902  06C5  2EC7               	goto	u4341
  1903  06C6  2EC8               	goto	u4340
  1904  06C7                     u4341:
  1905  06C7  2ECA               	goto	l3898
  1906  06C8                     u4340:
  1907  06C8  2F0D               	goto	l3904
  1908                           	
  1909  06C9                     l3896:	
  1910  06C9  2F0D               	goto	l3904
  1911                           	line	594
  1912                           	
  1913  06CA                     l1238:	
  1914                           	line	595
  1915                           	
  1916  06CA                     l3898:	
  1917                           ;prev11.c: 594: {
  1918                           ;prev11.c: 595: vbool[i] = number<<i < 0;
  1919  06CA  1283               	bcf	status, 5	;RP0=0, select bank0
  1920  06CB  1303               	bcf	status, 6	;RP1=0, select bank0
  1921  06CC  0A40               	incf	(setLCD@i),w
  1922  06CD  00F2               	movwf	(??_setLCD+0)+0
  1923  06CE  0871               	movf	(setLCD@number+1),w
  1924  06CF  00F4               	movwf	(??_setLCD+1)+0+1
  1925  06D0  0870               	movf	(setLCD@number),w
  1926  06D1  00F3               	movwf	(??_setLCD+1)+0
  1927  06D2  2ED6               	goto	u4354
  1928  06D3                     u4355:
  1929  06D3  1003               	clrc
  1930  06D4  0DF3               	rlf	(??_setLCD+1)+0,f
  1931  06D5  0DF4               	rlf	(??_setLCD+1)+1,f
  1932  06D6                     u4354:
  1933  06D6  0BF2               	decfsz	(??_setLCD+0)+0,f
  1934  06D7  2ED3               	goto	u4355
  1935  06D8  3000               	movlw	0
  1936  06D9  1BF4               	btfsc	1+(??_setLCD+1)+0,7
  1937  06DA  3001               	movlw	1
  1938  06DB  00F5               	movwf	(??_setLCD+3)+0
  1939  06DC  01F6               	clrf	(??_setLCD+3)+0+1
  1940  06DD  0840               	movf	(setLCD@i),w
  1941  06DE  00F7               	movwf	(??_setLCD+5)+0
  1942  06DF  0777               	addwf	(??_setLCD+5)+0,w
  1943  06E0  3E20               	addlw	setLCD@vbool&0ffh
  1944  06E1  0084               	movwf	fsr0
  1945  06E2  0875               	movf	0+(??_setLCD+3)+0,w
  1946  06E3  1383               	bcf	status, 7	;select IRP bank0
  1947  06E4  0080               	movwf	indf
  1948  06E5  0A84               	incf	fsr0,f
  1949  06E6  0876               	movf	1+(??_setLCD+3)+0,w
  1950  06E7  0080               	movwf	indf
  1951                           	line	593
  1952                           	
  1953  06E8                     l3900:	
  1954  06E8  3001               	movlw	low(01h)
  1955  06E9  07C0               	addwf	(setLCD@i),f
  1956  06EA  1803               	skipnc
  1957  06EB  0AC1               	incf	(setLCD@i+1),f
  1958  06EC  3000               	movlw	high(01h)
  1959  06ED  07C1               	addwf	(setLCD@i+1),f
  1960                           	
  1961  06EE                     l3902:	
  1962  06EE  3017               	movlw	low(setLCD@size|8000h)
  1963  06EF  0084               	movwf	fsr0
  1964  06F0  3088               	movlw	high(setLCD@size|8000h)
  1965  06F1  00FF               	movwf	btemp+1
  1966  06F2  120A  158A  2000   	fcall	stringtab
              120A  118A         
  1967  06F7  00F2               	movwf	(??_setLCD+0)+0
  1968  06F8  120A  158A  2000   	fcall	stringtab
              120A  118A         
  1969  06FD  00F3               	movwf	(??_setLCD+0)+0+1
  1970  06FE  0841               	movf	(setLCD@i+1),w
  1971  06FF  3A80               	xorlw	80h
  1972  0700  00F4               	movwf	(??_setLCD+2)+0
  1973  0701  0873               	movf	1+(??_setLCD+0)+0,w
  1974  0702  3A80               	xorlw	80h
  1975  0703  0274               	subwf	(??_setLCD+2)+0,w
  1976  0704  1D03               	skipz
  1977  0705  2F08               	goto	u4365
  1978  0706  0872               	movf	0+(??_setLCD+0)+0,w
  1979  0707  0240               	subwf	(setLCD@i),w
  1980  0708                     u4365:
  1981                           
  1982  0708  1C03               	skipc
  1983  0709  2F0B               	goto	u4361
  1984  070A  2F0C               	goto	u4360
  1985  070B                     u4361:
  1986  070B  2ECA               	goto	l3898
  1987  070C                     u4360:
  1988  070C  2F0D               	goto	l3904
  1989                           	
  1990  070D                     l1239:	
  1991                           	line	598
  1992                           	
  1993  070D                     l3904:	
  1994                           ;prev11.c: 596: }
  1995                           ;prev11.c: 598: RD0=vbool[size-1];
  1996  070D  3017               	movlw	low(setLCD@size|8000h)
  1997  070E  0084               	movwf	fsr0
  1998  070F  3088               	movlw	high(setLCD@size|8000h)
  1999  0710  1283               	bcf	status, 5	;RP0=0, select bank0
  2000  0711  1303               	bcf	status, 6	;RP1=0, select bank0
  2001  0712  00FF               	movwf	btemp+1
  2002  0713  120A  158A  2000   	fcall	stringtab
              120A  118A         
  2003  0718  00F2               	movwf	(??_setLCD+0)+0
  2004  0719  0772               	addwf	(??_setLCD+0)+0,w
  2005  071A  3EFE               	addlw	0FEh
  2006  071B  3E20               	addlw	setLCD@vbool&0ffh
  2007  071C  0084               	movwf	fsr0
  2008  071D  1383               	bcf	status, 7	;select IRP bank0
  2009  071E  0800               	movf	indf,w
  2010  071F  00F3               	movwf	(??_setLCD+1)+0+0
  2011  0720  0A84               	incf	fsr0,f
  2012  0721  0800               	movf	indf,w
  2013  0722  00F4               	movwf	(??_setLCD+1)+0+1
  2014  0723  1873               	btfsc	0+(??_setLCD+1)+0,0
  2015  0724  2F26               	goto	u4371
  2016  0725  2F2A               	goto	u4370
  2017                           	
  2018  0726                     u4371:
  2019  0726  1283               	bcf	status, 5	;RP0=0, select bank0
  2020  0727  1303               	bcf	status, 6	;RP1=0, select bank0
  2021  0728  1408               	bsf	(64/8),(64)&7
  2022  0729  2F2D               	goto	u4384
  2023  072A                     u4370:
  2024  072A  1283               	bcf	status, 5	;RP0=0, select bank0
  2025  072B  1303               	bcf	status, 6	;RP1=0, select bank0
  2026  072C  1008               	bcf	(64/8),(64)&7
  2027  072D                     u4384:
  2028                           	line	599
  2029                           ;prev11.c: 599: RD1=vbool[size-2];
  2030  072D  3017               	movlw	low(setLCD@size|8000h)
  2031  072E  0084               	movwf	fsr0
  2032  072F  3088               	movlw	high(setLCD@size|8000h)
  2033  0730  00FF               	movwf	btemp+1
  2034  0731  120A  158A  2000   	fcall	stringtab
              120A  118A         
  2035  0736  00F2               	movwf	(??_setLCD+0)+0
  2036  0737  0772               	addwf	(??_setLCD+0)+0,w
  2037  0738  3EFC               	addlw	0FCh
  2038  0739  3E20               	addlw	setLCD@vbool&0ffh
  2039  073A  0084               	movwf	fsr0
  2040  073B  1383               	bcf	status, 7	;select IRP bank0
  2041  073C  0800               	movf	indf,w
  2042  073D  00F3               	movwf	(??_setLCD+1)+0+0
  2043  073E  0A84               	incf	fsr0,f
  2044  073F  0800               	movf	indf,w
  2045  0740  00F4               	movwf	(??_setLCD+1)+0+1
  2046  0741  1873               	btfsc	0+(??_setLCD+1)+0,0
  2047  0742  2F44               	goto	u4391
  2048  0743  2F48               	goto	u4390
  2049                           	
  2050  0744                     u4391:
  2051  0744  1283               	bcf	status, 5	;RP0=0, select bank0
  2052  0745  1303               	bcf	status, 6	;RP1=0, select bank0
  2053  0746  1488               	bsf	(65/8),(65)&7
  2054  0747  2F4B               	goto	u4404
  2055  0748                     u4390:
  2056  0748  1283               	bcf	status, 5	;RP0=0, select bank0
  2057  0749  1303               	bcf	status, 6	;RP1=0, select bank0
  2058  074A  1088               	bcf	(65/8),(65)&7
  2059  074B                     u4404:
  2060                           	line	600
  2061                           ;prev11.c: 600: RD2=vbool[size-3];
  2062  074B  3017               	movlw	low(setLCD@size|8000h)
  2063  074C  0084               	movwf	fsr0
  2064  074D  3088               	movlw	high(setLCD@size|8000h)
  2065  074E  00FF               	movwf	btemp+1
  2066  074F  120A  158A  2000   	fcall	stringtab
              120A  118A         
  2067  0754  00F2               	movwf	(??_setLCD+0)+0
  2068  0755  0772               	addwf	(??_setLCD+0)+0,w
  2069  0756  3EFA               	addlw	0FAh
  2070  0757  3E20               	addlw	setLCD@vbool&0ffh
  2071  0758  0084               	movwf	fsr0
  2072  0759  1383               	bcf	status, 7	;select IRP bank0
  2073  075A  0800               	movf	indf,w
  2074  075B  00F3               	movwf	(??_setLCD+1)+0+0
  2075  075C  0A84               	incf	fsr0,f
  2076  075D  0800               	movf	indf,w
  2077  075E  00F4               	movwf	(??_setLCD+1)+0+1
  2078  075F  1873               	btfsc	0+(??_setLCD+1)+0,0
  2079  0760  2F62               	goto	u4411
  2080  0761  2F66               	goto	u4410
  2081                           	
  2082  0762                     u4411:
  2083  0762  1283               	bcf	status, 5	;RP0=0, select bank0
  2084  0763  1303               	bcf	status, 6	;RP1=0, select bank0
  2085  0764  1508               	bsf	(66/8),(66)&7
  2086  0765  2F69               	goto	u4424
  2087  0766                     u4410:
  2088  0766  1283               	bcf	status, 5	;RP0=0, select bank0
  2089  0767  1303               	bcf	status, 6	;RP1=0, select bank0
  2090  0768  1108               	bcf	(66/8),(66)&7
  2091  0769                     u4424:
  2092                           	line	601
  2093                           ;prev11.c: 601: RD3=vbool[size-4];
  2094  0769  3017               	movlw	low(setLCD@size|8000h)
  2095  076A  0084               	movwf	fsr0
  2096  076B  3088               	movlw	high(setLCD@size|8000h)
  2097  076C  00FF               	movwf	btemp+1
  2098  076D  120A  158A  2000   	fcall	stringtab
              120A  118A         
  2099  0772  00F2               	movwf	(??_setLCD+0)+0
  2100  0773  0772               	addwf	(??_setLCD+0)+0,w
  2101  0774  3EF8               	addlw	0F8h
  2102  0775  3E20               	addlw	setLCD@vbool&0ffh
  2103  0776  0084               	movwf	fsr0
  2104  0777  1383               	bcf	status, 7	;select IRP bank0
  2105  0778  0800               	movf	indf,w
  2106  0779  00F3               	movwf	(??_setLCD+1)+0+0
  2107  077A  0A84               	incf	fsr0,f
  2108  077B  0800               	movf	indf,w
  2109  077C  00F4               	movwf	(??_setLCD+1)+0+1
  2110  077D  1873               	btfsc	0+(??_setLCD+1)+0,0
  2111  077E  2F80               	goto	u4431
  2112  077F  2F84               	goto	u4430
  2113                           	
  2114  0780                     u4431:
  2115  0780  1283               	bcf	status, 5	;RP0=0, select bank0
  2116  0781  1303               	bcf	status, 6	;RP1=0, select bank0
  2117  0782  1588               	bsf	(67/8),(67)&7
  2118  0783  2F87               	goto	u4444
  2119  0784                     u4430:
  2120  0784  1283               	bcf	status, 5	;RP0=0, select bank0
  2121  0785  1303               	bcf	status, 6	;RP1=0, select bank0
  2122  0786  1188               	bcf	(67/8),(67)&7
  2123  0787                     u4444:
  2124                           	line	602
  2125                           ;prev11.c: 602: RD4=vbool[size-5];
  2126  0787  3017               	movlw	low(setLCD@size|8000h)
  2127  0788  0084               	movwf	fsr0
  2128  0789  3088               	movlw	high(setLCD@size|8000h)
  2129  078A  00FF               	movwf	btemp+1
  2130  078B  120A  158A  2000   	fcall	stringtab
              120A  118A         
  2131  0790  00F2               	movwf	(??_setLCD+0)+0
  2132  0791  0772               	addwf	(??_setLCD+0)+0,w
  2133  0792  3EF6               	addlw	0F6h
  2134  0793  3E20               	addlw	setLCD@vbool&0ffh
  2135  0794  0084               	movwf	fsr0
  2136  0795  1383               	bcf	status, 7	;select IRP bank0
  2137  0796  0800               	movf	indf,w
  2138  0797  00F3               	movwf	(??_setLCD+1)+0+0
  2139  0798  0A84               	incf	fsr0,f
  2140  0799  0800               	movf	indf,w
  2141  079A  00F4               	movwf	(??_setLCD+1)+0+1
  2142  079B  1873               	btfsc	0+(??_setLCD+1)+0,0
  2143  079C  2F9E               	goto	u4451
  2144  079D  2FA2               	goto	u4450
  2145                           	
  2146  079E                     u4451:
  2147  079E  1283               	bcf	status, 5	;RP0=0, select bank0
  2148  079F  1303               	bcf	status, 6	;RP1=0, select bank0
  2149  07A0  1608               	bsf	(68/8),(68)&7
  2150  07A1  2FA5               	goto	u4464
  2151  07A2                     u4450:
  2152  07A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2153  07A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2154  07A4  1208               	bcf	(68/8),(68)&7
  2155  07A5                     u4464:
  2156                           	line	603
  2157                           ;prev11.c: 603: RD5=vbool[size-6];
  2158  07A5  3017               	movlw	low(setLCD@size|8000h)
  2159  07A6  0084               	movwf	fsr0
  2160  07A7  3088               	movlw	high(setLCD@size|8000h)
  2161  07A8  00FF               	movwf	btemp+1
  2162  07A9  120A  158A  2000   	fcall	stringtab
              120A  118A         
  2163  07AE  00F2               	movwf	(??_setLCD+0)+0
  2164  07AF  0772               	addwf	(??_setLCD+0)+0,w
  2165  07B0  3EF4               	addlw	0F4h
  2166  07B1  3E20               	addlw	setLCD@vbool&0ffh
  2167  07B2  0084               	movwf	fsr0
  2168  07B3  1383               	bcf	status, 7	;select IRP bank0
  2169  07B4  0800               	movf	indf,w
  2170  07B5  00F3               	movwf	(??_setLCD+1)+0+0
  2171  07B6  0A84               	incf	fsr0,f
  2172  07B7  0800               	movf	indf,w
  2173  07B8  00F4               	movwf	(??_setLCD+1)+0+1
  2174  07B9  1873               	btfsc	0+(??_setLCD+1)+0,0
  2175  07BA  2FBC               	goto	u4471
  2176  07BB  2FC0               	goto	u4470
  2177                           	
  2178  07BC                     u4471:
  2179  07BC  1283               	bcf	status, 5	;RP0=0, select bank0
  2180  07BD  1303               	bcf	status, 6	;RP1=0, select bank0
  2181  07BE  1688               	bsf	(69/8),(69)&7
  2182  07BF  2FC3               	goto	u4484
  2183  07C0                     u4470:
  2184  07C0  1283               	bcf	status, 5	;RP0=0, select bank0
  2185  07C1  1303               	bcf	status, 6	;RP1=0, select bank0
  2186  07C2  1288               	bcf	(69/8),(69)&7
  2187  07C3                     u4484:
  2188                           	line	604
  2189                           ;prev11.c: 604: RD6=vbool[size-7];
  2190  07C3  3017               	movlw	low(setLCD@size|8000h)
  2191  07C4  0084               	movwf	fsr0
  2192  07C5  3088               	movlw	high(setLCD@size|8000h)
  2193  07C6  00FF               	movwf	btemp+1
  2194  07C7  120A  158A  2000   	fcall	stringtab
              120A  118A         
  2195  07CC  00F2               	movwf	(??_setLCD+0)+0
  2196  07CD  0772               	addwf	(??_setLCD+0)+0,w
  2197  07CE  3EF2               	addlw	0F2h
  2198  07CF  3E20               	addlw	setLCD@vbool&0ffh
  2199  07D0  0084               	movwf	fsr0
  2200  07D1  1383               	bcf	status, 7	;select IRP bank0
  2201  07D2  0800               	movf	indf,w
  2202  07D3  00F3               	movwf	(??_setLCD+1)+0+0
  2203  07D4  0A84               	incf	fsr0,f
  2204  07D5  0800               	movf	indf,w
  2205  07D6  00F4               	movwf	(??_setLCD+1)+0+1
  2206  07D7  1873               	btfsc	0+(??_setLCD+1)+0,0
  2207  07D8  2FDA               	goto	u4491
  2208  07D9  2FDE               	goto	u4490
  2209                           	
  2210  07DA                     u4491:
  2211  07DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2212  07DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2213  07DC  1708               	bsf	(70/8),(70)&7
  2214  07DD  2FE1               	goto	u4504
  2215  07DE                     u4490:
  2216  07DE  1283               	bcf	status, 5	;RP0=0, select bank0
  2217  07DF  1303               	bcf	status, 6	;RP1=0, select bank0
  2218  07E0  1308               	bcf	(70/8),(70)&7
  2219  07E1                     u4504:
  2220                           	line	605
  2221                           ;prev11.c: 605: RD7=vbool[size-8];
  2222  07E1  3017               	movlw	low(setLCD@size|8000h)
  2223  07E2  0084               	movwf	fsr0
  2224  07E3  3088               	movlw	high(setLCD@size|8000h)
  2225  07E4  00FF               	movwf	btemp+1
  2226  07E5  120A  158A  2000   	fcall	stringtab
              120A  118A         
  2227  07EA  00F2               	movwf	(??_setLCD+0)+0
  2228  07EB  0772               	addwf	(??_setLCD+0)+0,w
  2229  07EC  3EF0               	addlw	0F0h
  2230  07ED  3E20               	addlw	setLCD@vbool&0ffh
  2231  07EE  0084               	movwf	fsr0
  2232  07EF  1383               	bcf	status, 7	;select IRP bank0
  2233  07F0  0800               	movf	indf,w
  2234  07F1  00F3               	movwf	(??_setLCD+1)+0+0
  2235  07F2  0A84               	incf	fsr0,f
  2236  07F3  0800               	movf	indf,w
  2237  07F4  00F4               	movwf	(??_setLCD+1)+0+1
  2238  07F5  1873               	btfsc	0+(??_setLCD+1)+0,0
  2239  07F6  2FF8               	goto	u4511
  2240  07F7  2FFC               	goto	u4510
  2241                           	
  2242  07F8                     u4511:
  2243  07F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2244  07F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2245  07FA  1788               	bsf	(71/8),(71)&7
  2246  07FB  2FFF               	goto	u4524
  2247  07FC                     u4510:
  2248  07FC  1283               	bcf	status, 5	;RP0=0, select bank0
  2249  07FD  1303               	bcf	status, 6	;RP1=0, select bank0
  2250  07FE  1388               	bcf	(71/8),(71)&7
  2251  07FF                     u4524:
  2252                           	line	609
  2253                           	
  2254  07FF                     l1240:	
  2255  07FF  0008               	return
  2256                           	opt stack 0
  2257                           GLOBAL	__end_of_setLCD
  2258  0800                     	__end_of_setLCD:
  2259 ;; =============== function _setLCD ends ============
  2260                           
  2261                           	signat	_setLCD,4216
  2262                           	global	_delay
  2263                           psect	text339,local,class=CODE,delta=2
  2264                           global __ptext339
  2265  04A8                     __ptext339:
  2266                           
  2267 ;; *************** function _delay *****************
  2268 ;; Defined at:
  2269 ;;		line 502 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  x               2    0[COMMON] unsigned int 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;		None               void
  2276 ;; Registers used:
  2277 ;;		wreg
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         2       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         2       0       0       0       0
  2287 ;;Total ram usage:        2 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;;		_cmd
  2294 ;;		_dat
  2295 ;;		_getlogicseq
  2296 ;;		_scroll
  2297 ;;		_actrow
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           psect	text339
  2301                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  2302                           	line	502
  2303                           	global	__size_of_delay
  2304  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  2305                           	
  2306  04A8                     _delay:	
  2307                           	opt	stack 6
  2308                           ; Regs used in _delay: [wreg]
  2309                           	line	503
  2310                           	
  2311  04A8                     l3324:	
  2312                           ;prev11.c: 503: while(x-->0);
  2313  04A8  2CAA               	goto	l3326
  2314                           	
  2315  04A9                     l1209:	
  2316  04A9  2CAA               	goto	l3326
  2317                           	
  2318  04AA                     l1208:	
  2319                           	
  2320  04AA                     l3326:	
  2321  04AA  3001               	movlw	low(01h)
  2322  04AB  02F0               	subwf	(delay@x),f
  2323  04AC  3000               	movlw	high(01h)
  2324  04AD  1C03               	skipc
  2325  04AE  03F1               	decf	(delay@x+1),f
  2326  04AF  02F1               	subwf	(delay@x+1),f
  2327  04B0  30FF               	movlw	high(0FFFFh)
  2328  04B1  0671               	xorwf	((delay@x+1)),w
  2329  04B2  1D03               	skipz
  2330  04B3  2CB6               	goto	u3405
  2331  04B4  30FF               	movlw	low(0FFFFh)
  2332  04B5  0670               	xorwf	((delay@x)),w
  2333  04B6                     u3405:
  2334                           
  2335  04B6  1D03               	skipz
  2336  04B7  2CB9               	goto	u3401
  2337  04B8  2CBA               	goto	u3400
  2338  04B9                     u3401:
  2339  04B9  2CAA               	goto	l3326
  2340  04BA                     u3400:
  2341  04BA  2CBB               	goto	l1211
  2342                           	
  2343  04BB                     l1210:	
  2344                           	line	504
  2345                           	
  2346  04BB                     l1211:	
  2347  04BB  0008               	return
  2348                           	opt stack 0
  2349                           GLOBAL	__end_of_delay
  2350  04BC                     	__end_of_delay:
  2351 ;; =============== function _delay ends ============
  2352                           
  2353                           	signat	_delay,4216
  2354                           	global	_read_eep
  2355                           psect	text340,local,class=CODE,delta=2
  2356                           global __ptext340
  2357  04D0                     __ptext340:
  2358                           
  2359 ;; *************** function _read_eep *****************
  2360 ;; Defined at:
  2361 ;;		line 787 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  a               1    wreg     unsigned char 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  a               1    1[COMMON] unsigned char 
  2366 ;;  d               1    2[COMMON] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      unsigned char 
  2369 ;; Registers used:
  2370 ;;		wreg
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2376 ;;      Params:         0       0       0       0       0
  2377 ;;      Locals:         2       0       0       0       0
  2378 ;;      Temps:          1       0       0       0       0
  2379 ;;      Totals:         3       0       0       0       0
  2380 ;;Total ram usage:        3 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_main
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           psect	text340
  2389                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  2390                           	line	787
  2391                           	global	__size_of_read_eep
  2392  001E                     	__size_of_read_eep	equ	__end_of_read_eep-_read_eep
  2393                           	
  2394  04D0                     _read_eep:	
  2395                           	opt	stack 7
  2396                           ; Regs used in _read_eep: [wreg]
  2397                           ;read_eep@a stored from wreg
  2398                           	line	790
  2399  04D0  00F1               	movwf	(read_eep@a)
  2400                           	
  2401  04D1                     l3308:	
  2402                           ;prev11.c: 789: char d;
  2403                           ;prev11.c: 790: EEPGD=0;
  2404  04D1  1683               	bsf	status, 5	;RP0=1, select bank3
  2405  04D2  1703               	bsf	status, 6	;RP1=1, select bank3
  2406  04D3  138C               	bcf	(3175/8)^0180h,(3175)&7
  2407                           	line	791
  2408                           	
  2409  04D4                     l3310:	
  2410                           ;prev11.c: 791: EEADR=a;
  2411  04D4  0871               	movf	(read_eep@a),w
  2412  04D5  1283               	bcf	status, 5	;RP0=0, select bank2
  2413  04D6  1703               	bsf	status, 6	;RP1=1, select bank2
  2414  04D7  008D               	movwf	(269)^0100h	;volatile
  2415                           	line	792
  2416                           	
  2417  04D8                     l3312:	
  2418                           ;prev11.c: 792: WREN=0;
  2419  04D8  1683               	bsf	status, 5	;RP0=1, select bank3
  2420  04D9  1703               	bsf	status, 6	;RP1=1, select bank3
  2421  04DA  110C               	bcf	(3170/8)^0180h,(3170)&7
  2422                           	line	793
  2423                           	
  2424  04DB                     l3314:	
  2425                           ;prev11.c: 793: RD=1;
  2426  04DB  140C               	bsf	(3168/8)^0180h,(3168)&7
  2427                           	line	794
  2428                           ;prev11.c: 794: while(RD==1)
  2429  04DC  2CE4               	goto	l3318
  2430                           	
  2431  04DD                     l1320:	
  2432                           	line	795
  2433                           	
  2434  04DD                     l3316:	
  2435                           ;prev11.c: 795: d=EEDAT;
  2436  04DD  1283               	bcf	status, 5	;RP0=0, select bank2
  2437  04DE  1703               	bsf	status, 6	;RP1=1, select bank2
  2438  04DF  080C               	movf	(268)^0100h,w	;volatile
  2439  04E0  00F0               	movwf	(??_read_eep+0)+0
  2440  04E1  0870               	movf	(??_read_eep+0)+0,w
  2441  04E2  00F2               	movwf	(read_eep@d)
  2442  04E3  2CE4               	goto	l3318
  2443                           	
  2444  04E4                     l1319:	
  2445                           	line	794
  2446                           	
  2447  04E4                     l3318:	
  2448  04E4  1683               	bsf	status, 5	;RP0=1, select bank3
  2449  04E5  1703               	bsf	status, 6	;RP1=1, select bank3
  2450  04E6  180C               	btfsc	(3168/8)^0180h,(3168)&7
  2451  04E7  2CE9               	goto	u3391
  2452  04E8  2CEA               	goto	u3390
  2453  04E9                     u3391:
  2454  04E9  2CDD               	goto	l3316
  2455  04EA                     u3390:
  2456  04EA  2CEB               	goto	l3320
  2457                           	
  2458  04EB                     l1321:	
  2459                           	line	797
  2460                           	
  2461  04EB                     l3320:	
  2462                           ;prev11.c: 797: return d;
  2463  04EB  0872               	movf	(read_eep@d),w
  2464  04EC  2CED               	goto	l1322
  2465                           	
  2466  04ED                     l3322:	
  2467                           	line	799
  2468                           	
  2469  04ED                     l1322:	
  2470  04ED  0008               	return
  2471                           	opt stack 0
  2472                           GLOBAL	__end_of_read_eep
  2473  04EE                     	__end_of_read_eep:
  2474 ;; =============== function _read_eep ends ============
  2475                           
  2476                           	signat	_read_eep,4217
  2477                           	global	_write_eep
  2478                           psect	text341,local,class=CODE,delta=2
  2479                           global __ptext341
  2480  0538                     __ptext341:
  2481                           
  2482 ;; *************** function _write_eep *****************
  2483 ;; Defined at:
  2484 ;;		line 811 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  a               1    wreg     unsigned char 
  2487 ;;  d               1    0[COMMON] unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  a               1    2[COMMON] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;		None               void
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0, pclath, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2499 ;;      Params:         1       0       0       0       0
  2500 ;;      Locals:         1       0       0       0       0
  2501 ;;      Temps:          1       0       0       0       0
  2502 ;;      Totals:         3       0       0       0       0
  2503 ;;Total ram usage:        3 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; This function calls:
  2506 ;;		_write_eep
  2507 ;; This function is called by:
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           psect	text341
  2512                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  2513                           	line	811
  2514                           	global	__size_of_write_eep
  2515  0027                     	__size_of_write_eep	equ	__end_of_write_eep-_write_eep
  2516                           	
  2517  0538                     _write_eep:	
  2518                           	opt	stack 7
  2519                           ; Regs used in _write_eep: [wreg+status,2+status,0+pclath+cstack]
  2520                           ;write_eep@a stored from wreg
  2521                           	line	813
  2522  0538  00F2               	movwf	(write_eep@a)
  2523                           	
  2524  0539                     l3296:	
  2525                           ;prev11.c: 813: EEPGD=0;
  2526  0539  1683               	bsf	status, 5	;RP0=1, select bank3
  2527  053A  1703               	bsf	status, 6	;RP1=1, select bank3
  2528  053B  138C               	bcf	(3175/8)^0180h,(3175)&7
  2529                           	line	814
  2530                           	
  2531  053C                     l3298:	
  2532                           ;prev11.c: 814: EEADR=a;
  2533  053C  0872               	movf	(write_eep@a),w
  2534  053D  1283               	bcf	status, 5	;RP0=0, select bank2
  2535  053E  1703               	bsf	status, 6	;RP1=1, select bank2
  2536  053F  008D               	movwf	(269)^0100h	;volatile
  2537                           	line	815
  2538                           ;prev11.c: 815: EEDAT=d;
  2539  0540  0870               	movf	(write_eep@d),w
  2540  0541  008C               	movwf	(268)^0100h	;volatile
  2541                           	line	817
  2542                           	
  2543  0542                     l3300:	
  2544                           ;prev11.c: 817: WREN=1;
  2545  0542  1683               	bsf	status, 5	;RP0=1, select bank3
  2546  0543  1703               	bsf	status, 6	;RP1=1, select bank3
  2547  0544  150C               	bsf	(3170/8)^0180h,(3170)&7
  2548                           	line	818
  2549                           	
  2550  0545                     l3302:	
  2551                           ;prev11.c: 818: WRERR=0;
  2552  0545  118C               	bcf	(3171/8)^0180h,(3171)&7
  2553                           	line	821
  2554                           ;prev11.c: 821: EECON2=0x55;
  2555  0546  3055               	movlw	(055h)
  2556  0547  008D               	movwf	(397)^0180h	;volatile
  2557                           	line	822
  2558                           ;prev11.c: 822: EECON2=0xAA;
  2559  0548  30AA               	movlw	(0AAh)
  2560  0549  008D               	movwf	(397)^0180h	;volatile
  2561                           	line	824
  2562                           	
  2563  054A                     l3304:	
  2564                           ;prev11.c: 824: WR=1;
  2565  054A  148C               	bsf	(3169/8)^0180h,(3169)&7
  2566                           	line	825
  2567                           ;prev11.c: 825: while(WR==1)
  2568  054B  2D4D               	goto	l1328
  2569                           	
  2570  054C                     l1329:	
  2571                           	line	826
  2572                           ;prev11.c: 826: WREN=0;
  2573  054C  110C               	bcf	(3170/8)^0180h,(3170)&7
  2574                           	
  2575  054D                     l1328:	
  2576                           	line	825
  2577  054D  188C               	btfsc	(3169/8)^0180h,(3169)&7
  2578  054E  2D50               	goto	u3371
  2579  054F  2D51               	goto	u3370
  2580  0550                     u3371:
  2581  0550  2D4C               	goto	l1329
  2582  0551                     u3370:
  2583                           	
  2584  0551                     l1330:	
  2585                           	line	828
  2586                           ;prev11.c: 828: if(WRERR==1)
  2587  0551  1D8C               	btfss	(3171/8)^0180h,(3171)&7
  2588  0552  2D54               	goto	u3381
  2589  0553  2D55               	goto	u3380
  2590  0554                     u3381:
  2591  0554  2D5E               	goto	l1332
  2592  0555                     u3380:
  2593                           	line	829
  2594                           	
  2595  0555                     l3306:	
  2596                           ;prev11.c: 829: write_eep(a,d);
  2597  0555  0870               	movf	(write_eep@d),w
  2598  0556  00F1               	movwf	(??_write_eep+0)+0
  2599  0557  0871               	movf	(??_write_eep+0)+0,w
  2600  0558  00F0               	movwf	(?_write_eep)
  2601  0559  0872               	movf	(write_eep@a),w
  2602  055A  2538  120A  118A   	fcall	_write_eep
  2603  055D  2D5E               	goto	l1332
  2604                           	
  2605  055E                     l1331:	
  2606                           	line	830
  2607                           	
  2608  055E                     l1332:	
  2609  055E  0008               	return
  2610                           	opt stack 0
  2611                           GLOBAL	__end_of_write_eep
  2612  055F                     	__end_of_write_eep:
  2613 ;; =============== function _write_eep ends ============
  2614                           
  2615                           	signat	_write_eep,8312
  2616                           	global	_initkeypad
  2617                           psect	text342,local,class=CODE,delta=2
  2618                           global __ptext342
  2619  0473                     __ptext342:
  2620                           
  2621 ;; *************** function _initkeypad *****************
  2622 ;; Defined at:
  2623 ;;		line 686 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;		None               void
  2630 ;; Registers used:
  2631 ;;		wreg, status,2
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0
  2640 ;;      Totals:         0       0       0       0       0
  2641 ;;Total ram usage:        0 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           psect	text342
  2650                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  2651                           	line	686
  2652                           	global	__size_of_initkeypad
  2653  0008                     	__size_of_initkeypad	equ	__end_of_initkeypad-_initkeypad
  2654                           	
  2655  0473                     _initkeypad:	
  2656                           	opt	stack 7
  2657                           ; Regs used in _initkeypad: [wreg+status,2]
  2658                           	line	687
  2659                           	
  2660  0473                     l3292:	
  2661                           ;prev11.c: 687: PORTB = 0;
  2662  0473  1283               	bcf	status, 5	;RP0=0, select bank0
  2663  0474  1303               	bcf	status, 6	;RP1=0, select bank0
  2664  0475  0186               	clrf	(6)	;volatile
  2665                           	line	688
  2666                           	
  2667  0476                     l3294:	
  2668                           ;prev11.c: 688: TRISB = 0b11000000;
  2669  0476  30C0               	movlw	(0C0h)
  2670  0477  1683               	bsf	status, 5	;RP0=1, select bank1
  2671  0478  1303               	bcf	status, 6	;RP1=0, select bank1
  2672  0479  0086               	movwf	(134)^080h	;volatile
  2673                           	line	690
  2674                           	
  2675  047A                     l1267:	
  2676  047A  0008               	return
  2677                           	opt stack 0
  2678                           GLOBAL	__end_of_initkeypad
  2679  047B                     	__end_of_initkeypad:
  2680 ;; =============== function _initkeypad ends ============
  2681                           
  2682                           	signat	_initkeypad,88
  2683                           psect	text343,local,class=CODE,delta=2
  2684                           global __ptext343
  2685  0000                     __ptext343:
  2686                           	global	btemp
  2687  007E                     	btemp set 07Eh
  2688                           
  2689                           	DABS	1,126,2	;btemp
  2690                           	global	wtemp0
  2691  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Sun Jul 30 21:22:51 2017

                   pc 0002                    _RD 0C60                    _f1 0063                    _f2 0065  
                  _f3 0067                    _WR 0C61                    _lo 004B                    fsr 0004  
                 _RB0 0030                   _RB1 0031                   _RC0 0038                   _RB2 0032  
                 _RC1 0039                   _RB3 0033                   _RD0 0040                   _RC2 003A  
                 _RD1 0041                   _RC3 003B                   _RB5 0035                   _RD2 0042  
                 _RC4 003C                   _RB6 0036                   _RD3 0043                   _RC5 003D  
                 _RB7 0037                   _RD4 0044                   _RD5 0045                   _RD6 0046  
                 _RD7 0047                   _adr 0812                   _dat 04EE                   _cmd 0513  
                 _dev 005F                   _plo 00B5                   fsr0 0004                   indf 0000  
                l1210 04BB                  l1211 04BB                  l1230 0537                  l1320 04DD  
                l1208 04AA                  l1240 07FF                  l1224 0588                  l1321 04EB  
                l1209 04A9                  l1233 0512                  l1330 0551                  l1322 04ED  
                l1331 055E                  l1227 048C                  l1243 05C7                  l1332 055E  
                l1244 05DA                  l1245 05E4                  l1085 06A2                  l1238 06CA  
                l1246 0607                  l1086 06A1                  ?_dat 0078                  l1319 04E4  
                l1239 070D                  l1247 05E7                  l1087 06A3                  l1328 054D  
                l1248 061B                  l1088 06A3                  l1329 054C                  l1249 061B  
                ?_cmd 0078                  l1267 047A                  l3300 0542                  l4020 04F9  
                l3302 0545                  l3310 04D4                  l4022 04FC                  l4030 0513  
                l3304 054A                  l3320 04EB                  l3312 04D8                  l4024 04FD  
                l4040 052E                  l4032 051E                  l3306 0555                  l3322 04ED  
                l3314 04DB                  l4026 0506                  l4018 04EE                  l4034 0521  
                l4050 0576                  l4042 055F                  l3316 04DD                  l3308 04D1  
                l3324 04A8                  l4028 0509                  l4036 0522                  l4052 057F  
                l4044 0563                  l4060 05C7                  l3318 04E4                  l3326 04AA  
                l4038 052B                  l4046 0564                  l4054 0483                  l4070 0600  
                l4062 05D0                  l4048 056D                  l4072 0607                  l4064 05DA  
                l4056 05B8                  l4080 062A                  l4066 05E4                  l4058 05C1  
                l4090 067B                  l4082 063E                  l4074 061C                  l3292 0473  
                l4068 05E7                  l4092 0684                  l4084 0653                  l4076 0620  
                l3294 0476                  l4094 0697                  l4086 0664                  l4078 0625  
                l3296 0539                  l4088 066D                  l3298 053C                  l3900 06E8  
                l3902 06EE                  l3904 070D                  l3892 06A6                  l3894 06AA  
                l3896 06C9                  l3898 06CA                  STR_1 08C1                  STR_2 08CC  
                STR_3 08B6                  STR_5 0896                  STR_6 0819                  STR_7 08A7  
                STR_8 08D6                  STR_9 083F                  u3400 04BA                  u3401 04B9  
                u3405 04B6                  u3370 0551                  u4410 0766                  u3371 0550  
                u4411 0762                  u3380 0555                  u4404 074B                  u4340 06C8  
                u3381 0554                  u4341 06C7                  u3390 04EA                  u4510 07FC  
                u4430 0784                  u3391 04E9                  u4511 07F8                  u4431 0780  
                u4504 07E1                  u4424 0769                  u4360 070C                  u4361 070B  
                u4345 06C4                  u4450 07A2                  u4370 072A                  u4354 06D6  
                u4451 079E                  u4371 0726                  u4355 06D3                  u4524 07FF  
                u4444 0787                  u4365 0708                  u4470 07C0                  u4390 0748  
                u4471 07BC                  u4391 0744                  u4464 07A5                  u4384 072D  
                u4800 05C1                  u4801 05C0                  u4490 07DE                  u4810 05D0  
                u4491 07DA                  u4811 05CF                  u4484 07C3                  u4820 061A  
                u4821 0619                  _WREN 0C62                  _main 061C                  _pdev 0069  
                _retm 006B                  btemp 007E                  start 0000                 ??_dat 007A  
               ??_cmd 007A                 ?_main 0070                 _EEADR 010D                 STR_10 085A  
               _EEDAT 010C                 STR_12 092E                 STR_20 0906                 STR_21 08F2  
               STR_13 086E                 STR_30 091F                 STR_22 091A                 STR_31 08ED  
               STR_23 08E8                 STR_32 0915                 STR_24 0910                 STR_16 0882  
               STR_33 0901                 STR_25 08FC                 STR_34 0929                 STR_26 0924  
               STR_27 08E3                 STR_19 08DE                 STR_28 090B                 STR_29 08F7  
               _EEPGD 0C67                 _PORTA 0005                 _PORTB 0006                 _TRISA 0085  
               _TRISB 0086                 _TRISC 0087                 _TRISD 0088                 _WRERR 0C63  
               _delay 04A8       __end_of_initlcd 0589                 main@x 004A                 _write 05B8  
               pclath 000A                 status 0003                 wtemp0 007E          __end_of_main 06A6  
              ??_main 0048                ?_delay 0070                _EECON2 018D                ?_write 0042  
    __end_of_clearlcd 048D           setLCD@vbool 0020                _setLCD 06A6      __end_of_read_eep 04EE  
              delay@x 0070                clrloop 047C             ??_initlcd 007A                write@i 007C  
      __pcstackCOMMON 0070          __pidataBANK0 04BC          __pidataBANK1 048D         __end_of_delay 04BC  
       __end_of_write 061C               ??_delay 0072               ??_write 007A            __pbssBANK0 005F  
          __pbssBANK1 00A0            dat@Command 0078            __pmaintext 061C            cmd@Command 0078  
             ?_setLCD 0070             ?_clearlcd 0070             ?_read_eep 0070    __size_of_write_eep 0027  
     __size_of_setLCD 015A            _initkeypad 0473          setLCD@number 0070          __size_of_dat 0025  
        __size_of_cmd 0025               _initlcd 055F            ??_clearlcd 007A  end_of_initialization 05B4  
             setLCD@i 0040               init_ram 049B            ??_read_eep 0070          __pstringtext 0800  
   __end_of_write_eep 055F           ?_initkeypad 0070        __end_of_setLCD 0800   start_initialization 0589  
         __end_of_dat 0513           __end_of_cmd 0538            setLCD@size 0817           __pdataBANK0 004B  
         __pdataBANK1 00B0              ??_setLCD 0072         __pcstackBANK0 0020     __size_of_clearlcd 000A  
 __size_of_initkeypad 0008     __size_of_read_eep 001E             __ptext340 04D0             __ptext341 0538  
           __ptext333 05B8             __ptext342 0473             __ptext334 0483             __ptext343 0000  
           __ptext335 055F             __ptext336 0513             __ptext337 04EE             __ptext338 06A6  
           __ptext339 04A8             _done_init 0061              ?_initlcd 0070        __size_of_delay 0014  
      __size_of_write 0064           __stringbase 0812             _write_eep 0538             init_fetch 0497  
           read_eep@a 0071             read_eep@d 0072          ??_initkeypad 0070      __size_of_initlcd 002A  
            _clearlcd 0483            ?_write_eep 0070      getlogicseq@F1867 00A0         __size_of_main 008A  
            _read_eep 04D0              _logic_d1 0050              _logic_d2 0055              _logic_d3 005A  
            _logic_d4 00B0    __end_of_initkeypad 047B              clear_ram 047B            write@erase 0046  
          write_eep@a 0072            write_eep@d 0070         read_log@F1910 006D             stringcode 080A  
           write@line 0044              stringtab 0800              write@str 0042           ??_write_eep 0071  
