

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Tue Aug 08 07:20:54 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_initlcd
    43                           	FNCALL	_main,_initkeypad
    44                           	FNCALL	_main,_getlogicseq
    45                           	FNCALL	_getlogicseq,_scroll
    46                           	FNCALL	_getlogicseq,_write
    47                           	FNCALL	_getlogicseq,_scan
    48                           	FNCALL	_getlogicseq,_buzz
    49                           	FNCALL	_getlogicseq,_startswitch
    50                           	FNCALL	_getlogicseq,_delay
    51                           	FNCALL	_getlogicseq,_strcpy
    52                           	FNCALL	_getlogicseq,_itoaa
    53                           	FNCALL	_getlogicseq,_strcat
    54                           	FNCALL	_startswitch,_init_fun
    55                           	FNCALL	_startswitch,_strcpy
    56                           	FNCALL	_startswitch,_write
    57                           	FNCALL	_startswitch,_strcmp
    58                           	FNCALL	_startswitch,_check
    59                           	FNCALL	_scroll,_write
    60                           	FNCALL	_scroll,_delay
    61                           	FNCALL	_scroll,_cmd
    62                           	FNCALL	_init_fun,_write
    63                           	FNCALL	_write,_clearlcd
    64                           	FNCALL	_write,_cmd
    65                           	FNCALL	_write,_dat
    66                           	FNCALL	_clearlcd,_cmd
    67                           	FNCALL	_scan,_actrow
    68                           	FNCALL	_initlcd,_cmd
    69                           	FNCALL	_actrow,_resetout
    70                           	FNCALL	_actrow,_delay
    71                           	FNCALL	_dat,_setLCD
    72                           	FNCALL	_dat,_delay
    73                           	FNCALL	_cmd,_setLCD
    74                           	FNCALL	_cmd,_delay
    75                           	FNCALL	_itoaa,___wmul
    76                           	FNCALL	_itoaa,___awdiv
    77                           	FNCALL	_itoaa,___awmod
    78                           	FNROOT	_main
    79                           	global	_logic_d4
    80                           	global	_lo
    81                           	global	_logic_d3
    82                           	global	_plo
    83                           	global	_logic_d1
    84                           	global	_logic_d2
    85                           psect	idataBANK3,class=CODE,space=0,delta=2
    86                           global __pidataBANK3
    87  0B1B                     __pidataBANK3:
    88                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
    89                           	line	138
    90                           
    91                           ;initializer for _logic_d4
    92  0B1B  3431               	retlw	031h
    93  0B1C  3430               	retlw	030h
    94  0B1D  3430               	retlw	030h
    95  0B1E  3400               	retlw	0
    96  0B1F  3400               	retlw	0
    97                           psect	idataBANK0,class=CODE,space=0,delta=2
    98                           global __pidataBANK0
    99  0AEB                     __pidataBANK0:
   100                           	line	139
   101                           
   102                           ;initializer for _lo
   103  0AEB  3430               	retlw	030h
   104  0AEC  3430               	retlw	030h
   105  0AED  3430               	retlw	030h
   106  0AEE  3430               	retlw	030h
   107  0AEF  3400               	retlw	0
   108                           psect	idataBANK3
   109                           	line	137
   110                           
   111                           ;initializer for _logic_d3
   112  0B20  3430               	retlw	030h
   113  0B21  3431               	retlw	031h
   114  0B22  3430               	retlw	030h
   115  0B23  3400               	retlw	0
   116  0B24  3400               	retlw	0
   117                           	line	140
   118                           
   119                           ;initializer for _plo
   120  0B25  3430               	retlw	030h
   121  0B26  3430               	retlw	030h
   122  0B27  3430               	retlw	030h
   123  0B28  3430               	retlw	030h
   124  0B29  3400               	retlw	0
   125                           psect	idataBANK1,class=CODE,space=0,delta=2
   126                           global __pidataBANK1
   127  0B11                     __pidataBANK1:
   128                           	line	135
   129                           
   130                           ;initializer for _logic_d1
   131  0B11  3431               	retlw	031h
   132  0B12  3430               	retlw	030h
   133  0B13  3430               	retlw	030h
   134  0B14  3400               	retlw	0
   135  0B15  3400               	retlw	0
   136                           	line	136
   137                           
   138                           ;initializer for _logic_d2
   139  0B16  3430               	retlw	030h
   140  0B17  3431               	retlw	031h
   141  0B18  3430               	retlw	030h
   142  0B19  3400               	retlw	0
   143  0B1A  3400               	retlw	0
   144                           	global	_adr
   145                           psect	stringtext,class=STRCODE,delta=2,reloc=256
   146                           global __pstringtext
   147  0800                     __pstringtext:
   148                           ;	global	stringtab,__stringbase
   149  0800                     stringtab:
   150                           ;	String table - string pointers are 2 bytes each
   151  0800  1BFF               	btfsc	(btemp+1),7
   152  0801  280A               	ljmp	stringcode
   153  0802  1383               	bcf	status,7
   154  0803  187F               	btfsc	(btemp+1),0
   155  0804  1783               	bsf	status,7
   156  0805  0800               	movf	indf,w
   157  0806  0A84               	incf fsr
   158  0807  1903               skipnz
   159  0808  0AFF               incf btemp+1
   160  0809  0008               	return
   161  080A                     stringcode:
   162  080A  087F               	movf btemp+1,w
   163  080B  397F               andlw 7Fh
   164  080C  008A               movwf	pclath
   165  080D  0804               	movf	fsr,w
   166  080E  0A84               incf fsr
   167  080F  1903               skipnz
   168  0810  0AFF               incf btemp+1
   169  0811  0082               	movwf pc
   170  0812                     __stringbase:
   171                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   172                           	line	15
   173  0812                     _adr:
   174  0812  3400               	retlw	0
   175  0813  3404               	retlw	04h
   176  0814  3408               	retlw	08h
   177  0815  340C               	retlw	0Ch
   178  0816  340F               	retlw	0Fh
   179                           	global	setLCD@size
   180                           psect	stringtext
   181                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   182                           	line	599
   183  0817                     setLCD@size:
   184  0817  3410               	retlw	010h
   185  0818  3400               	retlw	0
   186                           
   187                           	global	_adr
   188                           	global	setLCD@size
   189                           	global	_dev
   190                           	global	_done_init
   191                           	global	_pdev
   192                           	global	read_log@F1911
   193                           	global	getlogicseq@F1868
   194                           	global	_f1
   195                           	global	_f2
   196                           	global	_f3
   197                           	global	_retm
   198                           	global	_PORTB
   199  0006                     _PORTB	set	6
   200                           	global	_RA0
   201  0028                     _RA0	set	40
   202                           	global	_RA1
   203  0029                     _RA1	set	41
   204                           	global	_RA2
   205  002A                     _RA2	set	42
   206                           	global	_RB0
   207  0030                     _RB0	set	48
   208                           	global	_RB1
   209  0031                     _RB1	set	49
   210                           	global	_RB2
   211  0032                     _RB2	set	50
   212                           	global	_RB3
   213  0033                     _RB3	set	51
   214                           	global	_RB5
   215  0035                     _RB5	set	53
   216                           	global	_RB6
   217  0036                     _RB6	set	54
   218                           	global	_RB7
   219  0037                     _RB7	set	55
   220                           	global	_RC0
   221  0038                     _RC0	set	56
   222                           	global	_RC1
   223  0039                     _RC1	set	57
   224                           	global	_RC2
   225  003A                     _RC2	set	58
   226                           	global	_RC3
   227  003B                     _RC3	set	59
   228                           	global	_RC4
   229  003C                     _RC4	set	60
   230                           	global	_RC5
   231  003D                     _RC5	set	61
   232                           	global	_RC6
   233  003E                     _RC6	set	62
   234                           	global	_RD0
   235  0040                     _RD0	set	64
   236                           	global	_RD1
   237  0041                     _RD1	set	65
   238                           	global	_RD2
   239  0042                     _RD2	set	66
   240                           	global	_RD3
   241  0043                     _RD3	set	67
   242                           	global	_RD4
   243  0044                     _RD4	set	68
   244                           	global	_RD5
   245  0045                     _RD5	set	69
   246                           	global	_RD6
   247  0046                     _RD6	set	70
   248                           	global	_RD7
   249  0047                     _RD7	set	71
   250                           	global	_TRISA
   251  0085                     _TRISA	set	133
   252                           	global	_TRISB
   253  0086                     _TRISB	set	134
   254                           	global	_TRISC
   255  0087                     _TRISC	set	135
   256                           	global	_TRISD
   257  0088                     _TRISD	set	136
   258                           	global	_EEADR
   259  010D                     _EEADR	set	269
   260                           	global	_EEDAT
   261  010C                     _EEDAT	set	268
   262                           	global	_ANSEL
   263  0188                     _ANSEL	set	392
   264                           	global	_EECON2
   265  018D                     _EECON2	set	397
   266                           	global	_EEPGD
   267  0C67                     _EEPGD	set	3175
   268                           	global	_RD
   269  0C60                     _RD	set	3168
   270                           	global	_WR
   271  0C61                     _WR	set	3169
   272                           	global	_WREN
   273  0C62                     _WREN	set	3170
   274                           	global	_WRERR
   275  0C63                     _WRERR	set	3171
   276                           	
   277  0819                     STR_4:	
   278  0819  3457               	retlw	87	;'W'
   279  081A  3445               	retlw	69	;'E'
   280  081B  344C               	retlw	76	;'L'
   281  081C  3443               	retlw	67	;'C'
   282  081D  344F               	retlw	79	;'O'
   283  081E  344D               	retlw	77	;'M'
   284  081F  3445               	retlw	69	;'E'
   285  0820  3420               	retlw	32	;' '
   286  0821  3421               	retlw	33	;'!'
   287  0822  3420               	retlw	32	;' '
   288  0823  3454               	retlw	84	;'T'
   289  0824  344F               	retlw	79	;'O'
   290  0825  3420               	retlw	32	;' '
   291  0826  3450               	retlw	80	;'P'
   292  0827  3452               	retlw	82	;'R'
   293  0828  344F               	retlw	79	;'O'
   294  0829  3447               	retlw	71	;'G'
   295  082A  3452               	retlw	82	;'R'
   296  082B  3441               	retlw	65	;'A'
   297  082C  344D               	retlw	77	;'M'
   298  082D  3441               	retlw	65	;'A'
   299  082E  3442               	retlw	66	;'B'
   300  082F  344C               	retlw	76	;'L'
   301  0830  3445               	retlw	69	;'E'
   302  0831  3420               	retlw	32	;' '
   303  0832  3448               	retlw	72	;'H'
   304  0833  344F               	retlw	79	;'O'
   305  0834  344D               	retlw	77	;'M'
   306  0835  3445               	retlw	69	;'E'
   307  0836  3420               	retlw	32	;' '
   308  0837  3441               	retlw	65	;'A'
   309  0838  3455               	retlw	85	;'U'
   310  0839  3454               	retlw	84	;'T'
   311  083A  344D               	retlw	77	;'M'
   312  083B  3441               	retlw	65	;'A'
   313  083C  3454               	retlw	84	;'T'
   314  083D  344E               	retlw	78	;'N'
   315  083E  3400               	retlw	0
   316                           psect	stringtext
   317                           	
   318  083F                     STR_7:	
   319  083F  3450               	retlw	80	;'P'
   320  0840  3472               	retlw	114	;'r'
   321  0841  3465               	retlw	101	;'e'
   322  0842  3473               	retlw	115	;'s'
   323  0843  3473               	retlw	115	;'s'
   324  0844  3420               	retlw	32	;' '
   325  0845  3432               	retlw	50	;'2'
   326  0846  342E               	retlw	46	;'.'
   327  0847  3420               	retlw	32	;' '
   328  0848  342D               	retlw	45	;'-'
   329  0849  3420               	retlw	32	;' '
   330  084A  3453               	retlw	83	;'S'
   331  084B  346B               	retlw	107	;'k'
   332  084C  3469               	retlw	105	;'i'
   333  084D  3470               	retlw	112	;'p'
   334  084E  3420               	retlw	32	;' '
   335  084F  3466               	retlw	102	;'f'
   336  0850  346F               	retlw	111	;'o'
   337  0851  3472               	retlw	114	;'r'
   338  0852  3420               	retlw	32	;' '
   339  0853  3444               	retlw	68	;'D'
   340  0854  3465               	retlw	101	;'e'
   341  0855  3476               	retlw	118	;'v'
   342  0856  3469               	retlw	105	;'i'
   343  0857  3463               	retlw	99	;'c'
   344  0858  3465               	retlw	101	;'e'
   345  0859  3400               	retlw	0
   346                           psect	stringtext
   347                           	
   348  085A                     STR_8:	
   349  085A  3445               	retlw	69	;'E'
   350  085B  346E               	retlw	110	;'n'
   351  085C  3474               	retlw	116	;'t'
   352  085D  3465               	retlw	101	;'e'
   353  085E  3472               	retlw	114	;'r'
   354  085F  3420               	retlw	32	;' '
   355  0860  344C               	retlw	76	;'L'
   356  0861  346F               	retlw	111	;'o'
   357  0862  3467               	retlw	103	;'g'
   358  0863  3469               	retlw	105	;'i'
   359  0864  3463               	retlw	99	;'c'
   360  0865  3420               	retlw	32	;' '
   361  0866  3444               	retlw	68	;'D'
   362  0867  3445               	retlw	69	;'E'
   363  0868  3456               	retlw	86	;'V'
   364  0869  3431               	retlw	49	;'1'
   365  086A  343A               	retlw	58	;':'
   366  086B  3420               	retlw	32	;' '
   367  086C  3420               	retlw	32	;' '
   368  086D  3400               	retlw	0
   369                           psect	stringtext
   370                           	
   371  086E                     STR_11:	
   372  086E  3445               	retlw	69	;'E'
   373  086F  346E               	retlw	110	;'n'
   374  0870  3474               	retlw	116	;'t'
   375  0871  3465               	retlw	101	;'e'
   376  0872  3472               	retlw	114	;'r'
   377  0873  3420               	retlw	32	;' '
   378  0874  344C               	retlw	76	;'L'
   379  0875  346F               	retlw	111	;'o'
   380  0876  3467               	retlw	103	;'g'
   381  0877  3469               	retlw	105	;'i'
   382  0878  3463               	retlw	99	;'c'
   383  0879  3420               	retlw	32	;' '
   384  087A  3444               	retlw	68	;'D'
   385  087B  3445               	retlw	69	;'E'
   386  087C  3456               	retlw	86	;'V'
   387  087D  3432               	retlw	50	;'2'
   388  087E  343A               	retlw	58	;':'
   389  087F  3420               	retlw	32	;' '
   390  0880  3420               	retlw	32	;' '
   391  0881  3400               	retlw	0
   392                           psect	stringtext
   393                           	
   394  0882                     STR_14:	
   395  0882  3445               	retlw	69	;'E'
   396  0883  346E               	retlw	110	;'n'
   397  0884  3474               	retlw	116	;'t'
   398  0885  3465               	retlw	101	;'e'
   399  0886  3472               	retlw	114	;'r'
   400  0887  3420               	retlw	32	;' '
   401  0888  344C               	retlw	76	;'L'
   402  0889  346F               	retlw	111	;'o'
   403  088A  3467               	retlw	103	;'g'
   404  088B  3469               	retlw	105	;'i'
   405  088C  3463               	retlw	99	;'c'
   406  088D  3420               	retlw	32	;' '
   407  088E  3444               	retlw	68	;'D'
   408  088F  3445               	retlw	69	;'E'
   409  0890  3456               	retlw	86	;'V'
   410  0891  3433               	retlw	51	;'3'
   411  0892  343A               	retlw	58	;':'
   412  0893  3420               	retlw	32	;' '
   413  0894  3420               	retlw	32	;' '
   414  0895  3400               	retlw	0
   415                           psect	stringtext
   416                           	
   417  0896                     STR_3:	
   418  0896  3450               	retlw	80	;'P'
   419  0897  3472               	retlw	114	;'r'
   420  0898  3465               	retlw	101	;'e'
   421  0899  3473               	retlw	115	;'s'
   422  089A  3473               	retlw	115	;'s'
   423  089B  3420               	retlw	32	;' '
   424  089C  3432               	retlw	50	;'2'
   425  089D  3420               	retlw	32	;' '
   426  089E  3474               	retlw	116	;'t'
   427  089F  346F               	retlw	111	;'o'
   428  08A0  3420               	retlw	32	;' '
   429  08A1  3452               	retlw	82	;'R'
   430  08A2  3445               	retlw	69	;'E'
   431  08A3  3450               	retlw	80	;'P'
   432  08A4  3452               	retlw	82	;'R'
   433  08A5  3447               	retlw	71	;'G'
   434  08A6  3400               	retlw	0
   435                           psect	stringtext
   436                           	
   437  08A7                     STR_5:	
   438  08A7  3431               	retlw	49	;'1'
   439  08A8  342E               	retlw	46	;'.'
   440  08A9  3453               	retlw	83	;'S'
   441  08AA  3457               	retlw	87	;'W'
   442  08AB  3454               	retlw	84	;'T'
   443  08AC  3420               	retlw	32	;' '
   444  08AD  3420               	retlw	32	;' '
   445  08AE  3432               	retlw	50	;'2'
   446  08AF  342E               	retlw	46	;'.'
   447  08B0  3452               	retlw	82	;'R'
   448  08B1  3445               	retlw	69	;'E'
   449  08B2  3450               	retlw	80	;'P'
   450  08B3  3452               	retlw	82	;'R'
   451  08B4  3447               	retlw	71	;'G'
   452  08B5  3400               	retlw	0
   453                           psect	stringtext
   454                           	
   455  08B6                     STR_1:	
   456  08B6  3453               	retlw	83	;'S'
   457  08B7  3465               	retlw	101	;'e'
   458  08B8  346E               	retlw	110	;'n'
   459  08B9  3473               	retlw	115	;'s'
   460  08BA  3469               	retlw	105	;'i'
   461  08BB  346E               	retlw	110	;'n'
   462  08BC  3467               	retlw	103	;'g'
   463  08BD  342E               	retlw	46	;'.'
   464  08BE  342E               	retlw	46	;'.'
   465  08BF  342E               	retlw	46	;'.'
   466  08C0  3400               	retlw	0
   467                           psect	stringtext
   468                           	
   469  08C1                     STR_6:	
   470  08C1  3433               	retlw	51	;'3'
   471  08C2  342E               	retlw	46	;'.'
   472  08C3  3452               	retlw	82	;'R'
   473  08C4  3445               	retlw	69	;'E'
   474  08C5  3453               	retlw	83	;'S'
   475  08C6  3445               	retlw	69	;'E'
   476  08C7  3454               	retlw	84	;'T'
   477  08C8  3400               	retlw	0
   478                           psect	stringtext
   479                           	
   480  08C9                     STR_17:	
   481  08C9  3430               	retlw	48	;'0'
   482  08CA  3430               	retlw	48	;'0'
   483  08CB  3430               	retlw	48	;'0'
   484  08CC  3430               	retlw	48	;'0'
   485  08CD  3400               	retlw	0
   486                           psect	stringtext
   487                           	
   488  08CE                     STR_25:	
   489  08CE  3431               	retlw	49	;'1'
   490  08CF  3430               	retlw	48	;'0'
   491  08D0  3430               	retlw	48	;'0'
   492  08D1  3430               	retlw	48	;'0'
   493  08D2  3400               	retlw	0
   494                           psect	stringtext
   495                           	
   496  08D3                     STR_21:	
   497  08D3  3430               	retlw	48	;'0'
   498  08D4  3431               	retlw	49	;'1'
   499  08D5  3430               	retlw	48	;'0'
   500  08D6  3430               	retlw	48	;'0'
   501  08D7  3400               	retlw	0
   502                           psect	stringtext
   503                           	
   504  08D8                     STR_29:	
   505  08D8  3431               	retlw	49	;'1'
   506  08D9  3431               	retlw	49	;'1'
   507  08DA  3430               	retlw	48	;'0'
   508  08DB  3430               	retlw	48	;'0'
   509  08DC  3400               	retlw	0
   510                           psect	stringtext
   511                           	
   512  08DD                     STR_19:	
   513  08DD  3430               	retlw	48	;'0'
   514  08DE  3430               	retlw	48	;'0'
   515  08DF  3431               	retlw	49	;'1'
   516  08E0  3430               	retlw	48	;'0'
   517  08E1  3400               	retlw	0
   518                           psect	stringtext
   519                           	
   520  08E2                     STR_27:	
   521  08E2  3431               	retlw	49	;'1'
   522  08E3  3430               	retlw	48	;'0'
   523  08E4  3431               	retlw	49	;'1'
   524  08E5  3430               	retlw	48	;'0'
   525  08E6  3400               	retlw	0
   526                           psect	stringtext
   527                           	
   528  08E7                     STR_23:	
   529  08E7  3430               	retlw	48	;'0'
   530  08E8  3431               	retlw	49	;'1'
   531  08E9  3431               	retlw	49	;'1'
   532  08EA  3430               	retlw	48	;'0'
   533  08EB  3400               	retlw	0
   534                           psect	stringtext
   535                           	
   536  08EC                     STR_31:	
   537  08EC  3431               	retlw	49	;'1'
   538  08ED  3431               	retlw	49	;'1'
   539  08EE  3431               	retlw	49	;'1'
   540  08EF  3430               	retlw	48	;'0'
   541  08F0  3400               	retlw	0
   542                           psect	stringtext
   543                           	
   544  08F1                     STR_18:	
   545  08F1  3430               	retlw	48	;'0'
   546  08F2  3430               	retlw	48	;'0'
   547  08F3  3430               	retlw	48	;'0'
   548  08F4  3431               	retlw	49	;'1'
   549  08F5  3400               	retlw	0
   550                           psect	stringtext
   551                           	
   552  08F6                     STR_26:	
   553  08F6  3431               	retlw	49	;'1'
   554  08F7  3430               	retlw	48	;'0'
   555  08F8  3430               	retlw	48	;'0'
   556  08F9  3431               	retlw	49	;'1'
   557  08FA  3400               	retlw	0
   558                           psect	stringtext
   559                           	
   560  08FB                     STR_22:	
   561  08FB  3430               	retlw	48	;'0'
   562  08FC  3431               	retlw	49	;'1'
   563  08FD  3430               	retlw	48	;'0'
   564  08FE  3431               	retlw	49	;'1'
   565  08FF  3400               	retlw	0
   566                           psect	stringtext
   567                           	
   568  0900                     STR_30:	
   569  0900  3431               	retlw	49	;'1'
   570  0901  3431               	retlw	49	;'1'
   571  0902  3430               	retlw	48	;'0'
   572  0903  3431               	retlw	49	;'1'
   573  0904  3400               	retlw	0
   574                           psect	stringtext
   575                           	
   576  0905                     STR_20:	
   577  0905  3430               	retlw	48	;'0'
   578  0906  3430               	retlw	48	;'0'
   579  0907  3431               	retlw	49	;'1'
   580  0908  3431               	retlw	49	;'1'
   581  0909  3400               	retlw	0
   582                           psect	stringtext
   583                           	
   584  090A                     STR_28:	
   585  090A  3431               	retlw	49	;'1'
   586  090B  3430               	retlw	48	;'0'
   587  090C  3431               	retlw	49	;'1'
   588  090D  3431               	retlw	49	;'1'
   589  090E  3400               	retlw	0
   590                           psect	stringtext
   591                           	
   592  090F                     STR_24:	
   593  090F  3430               	retlw	48	;'0'
   594  0910  3431               	retlw	49	;'1'
   595  0911  3431               	retlw	49	;'1'
   596  0912  3431               	retlw	49	;'1'
   597  0913  3400               	retlw	0
   598                           psect	stringtext
   599                           	
   600  0914                     STR_32:	
   601  0914  3431               	retlw	49	;'1'
   602  0915  3431               	retlw	49	;'1'
   603  0916  3431               	retlw	49	;'1'
   604  0917  3431               	retlw	49	;'1'
   605  0918  3400               	retlw	0
   606                           psect	stringtext
   607                           	
   608  0919                     STR_10:	
   609  0919  342D               	retlw	45	;'-'
   610  091A  342D               	retlw	45	;'-'
   611  091B  342D               	retlw	45	;'-'
   612  091C  3400               	retlw	0
   613                           psect	stringtext
   614  08CA                     STR_2	equ	STR_17+1
   615  0919                     STR_13	equ	STR_10+0
   616  0919                     STR_16	equ	STR_10+0
   617  086D                     STR_9	equ	STR_8+19
   618  086D                     STR_12	equ	STR_8+19
   619  086D                     STR_15	equ	STR_8+19
   620                           	file	"prev1.as"
   621                           	line	#
   622                           psect cinit,class=CODE,delta=2
   623                           global start_initialization
   624  0CE1                     start_initialization:
   625                           
   626                           psect	bssBANK0,class=BANK0,space=1
   627                           global __pbssBANK0
   628  0061                     __pbssBANK0:
   629  0061                     _dev:
   630  0061                            ds      2
   631                           
   632  0063                     _done_init:
   633  0063                            ds      2
   634                           
   635  0065                     _pdev:
   636  0065                            ds      2
   637                           
   638  0067                     read_log@F1911:
   639  0067                            ds      1
   640                           
   641                           psect	dataBANK0,class=BANK0,space=1
   642                           global __pdataBANK0
   643  0068                     __pdataBANK0:
   644                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   645                           	line	139
   646  0068                     _lo:
   647  0068                            ds      5
   648                           
   649                           psect	bssBANK1,class=BANK1,space=1
   650                           global __pbssBANK1
   651  00E4                     __pbssBANK1:
   652  00E4                     _f1:
   653  00E4                            ds      2
   654                           
   655  00E6                     _f2:
   656  00E6                            ds      2
   657                           
   658  00E8                     _f3:
   659  00E8                            ds      2
   660                           
   661  00EA                     _retm:
   662  00EA                            ds      2
   663                           
   664                           psect	dataBANK1,class=BANK1,space=1
   665                           global __pdataBANK1
   666  00DA                     __pdataBANK1:
   667                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   668                           	line	135
   669  00DA                     _logic_d1:
   670  00DA                            ds      5
   671                           
   672                           psect	dataBANK1
   673                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   674                           	line	136
   675  00DF                     _logic_d2:
   676  00DF                            ds      5
   677                           
   678                           psect	bssBANK3,class=BANK3,space=1
   679                           global __pbssBANK3
   680  0190                     __pbssBANK3:
   681  0190                     getlogicseq@F1868:
   682  0190                            ds      16
   683                           
   684                           psect	dataBANK3,class=BANK3,space=1
   685                           global __pdataBANK3
   686  01A0                     __pdataBANK3:
   687                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   688                           	line	138
   689  01A0                     _logic_d4:
   690  01A0                            ds      5
   691                           
   692                           psect	dataBANK3
   693                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   694                           	line	137
   695  01A5                     _logic_d3:
   696  01A5                            ds      5
   697                           
   698                           psect	dataBANK3
   699                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   700                           	line	140
   701  01AA                     _plo:
   702  01AA                            ds      5
   703                           
   704                           psect clrtext,class=CODE,delta=2
   705                           global clear_ram
   706                           ;	Called with FSR containing the base address, and
   707                           ;	W with the last address+1
   708  0AFF                     clear_ram:
   709  0AFF  0064               	clrwdt			;clear the watchdog before getting into this loop
   710  0B00                     clrloop:
   711  0B00  0180               	clrf	indf		;clear RAM location pointed to by FSR
   712  0B01  0A84               	incf	fsr,f		;increment pointer
   713  0B02  0604               	xorwf	fsr,w		;XOR with final address
   714  0B03  1903               	btfsc	status,2	;have we reached the end yet?
   715  0B04  3400               	retlw	0		;all done for this memory range, return
   716  0B05  0604               	xorwf	fsr,w		;XOR again to restore value
   717  0B06  2B00               	goto	clrloop		;do the next byte
   718                           
   719                           ; Clear objects allocated to BANK0
   720                           psect cinit,class=CODE,delta=2
   721  0CE1  01E1               	clrf	((__pbssBANK0)+0)&07Fh
   722  0CE2  01E2               	clrf	((__pbssBANK0)+1)&07Fh
   723  0CE3  01E3               	clrf	((__pbssBANK0)+2)&07Fh
   724  0CE4  01E4               	clrf	((__pbssBANK0)+3)&07Fh
   725  0CE5  01E5               	clrf	((__pbssBANK0)+4)&07Fh
   726  0CE6  01E6               	clrf	((__pbssBANK0)+5)&07Fh
   727  0CE7  01E7               	clrf	((__pbssBANK0)+6)&07Fh
   728                           ; Clear objects allocated to BANK1
   729                           psect cinit,class=CODE,delta=2
   730  0CE8  1383               	bcf	status, 7	;select IRP bank0
   731  0CE9  30E4               	movlw	low(__pbssBANK1)
   732  0CEA  0084               	movwf	fsr
   733  0CEB  30EC               	movlw	low((__pbssBANK1)+08h)
   734  0CEC  120A  158A  22FF   	fcall	clear_ram
              120A  158A         
   735                           ; Clear objects allocated to BANK3
   736                           psect cinit,class=CODE,delta=2
   737  0CF1  1783               	bsf	status, 7	;select IRP bank2
   738  0CF2  3090               	movlw	low(__pbssBANK3)
   739  0CF3  0084               	movwf	fsr
   740  0CF4  30A0               	movlw	low((__pbssBANK3)+010h)
   741  0CF5  120A  158A  22FF   	fcall	clear_ram
              120A  158A         
   742                           global btemp
   743                           psect inittext,class=CODE,delta=2
   744                           global init_fetch,btemp
   745                           ;	Called with low address in FSR and high address in W
   746  0B3A                     init_fetch:
   747  0B3A  087E               	movf btemp,w
   748  0B3B  008A               	movwf pclath
   749  0B3C  087F               	movf btemp+1,w
   750  0B3D  0082               	movwf pc
   751                           global init_ram
   752                           ;Called with:
   753                           ;	high address of idata address in btemp 
   754                           ;	low address of idata address in btemp+1 
   755                           ;	low address of data in FSR
   756                           ;	high address + 1 of data in btemp-1
   757  0B3E                     init_ram:
   758  0B3E  233A  120A  158A   	fcall init_fetch
   759  0B41  0080               	movwf indf,f
   760  0B42  0A84               	incf fsr,f
   761  0B43  0804               	movf fsr,w
   762  0B44  067D               	xorwf btemp-1,w
   763  0B45  1903               	btfsc status,2
   764  0B46  3400               	retlw 0
   765  0B47  0AFF               	incf btemp+1,f
   766  0B48  1903               	btfsc status,2
   767  0B49  0AFE               	incf btemp,f
   768  0B4A  2B3E               	goto init_ram
   769                           ; Initialize objects allocated to BANK3
   770                           psect cinit,class=CODE,delta=2
   771                           global init_ram, __pidataBANK3
   772  0CFA  30AF               	movlw low(__pdataBANK3+15)
   773  0CFB  00FD               	movwf btemp-1,f
   774  0CFC  300B               	movlw high(__pidataBANK3)
   775  0CFD  00FE               	movwf btemp,f
   776  0CFE  301B               	movlw low(__pidataBANK3)
   777  0CFF  00FF               	movwf btemp+1,f
   778  0D00  30A0               	movlw low(__pdataBANK3)
   779  0D01  0084               	movwf fsr,f
   780  0D02  120A  158A  233E   	fcall init_ram
              120A  158A         
   781                           ; Initialize objects allocated to BANK1
   782                           psect cinit,class=CODE,delta=2
   783                           global init_ram, __pidataBANK1
   784  0D07  1383               	bcf	status, 7	;select IRP bank0
   785  0D08  30E4               	movlw low(__pdataBANK1+10)
   786  0D09  00FD               	movwf btemp-1,f
   787  0D0A  300B               	movlw high(__pidataBANK1)
   788  0D0B  00FE               	movwf btemp,f
   789  0D0C  3011               	movlw low(__pidataBANK1)
   790  0D0D  00FF               	movwf btemp+1,f
   791  0D0E  30DA               	movlw low(__pdataBANK1)
   792  0D0F  0084               	movwf fsr,f
   793  0D10  120A  158A  233E   	fcall init_ram
              120A  158A         
   794                           ; Initialize objects allocated to BANK0
   795                           psect cinit,class=CODE,delta=2
   796                           global init_ram, __pidataBANK0
   797  0D15  306D               	movlw low(__pdataBANK0+5)
   798  0D16  00FD               	movwf btemp-1,f
   799  0D17  300A               	movlw high(__pidataBANK0)
   800  0D18  00FE               	movwf btemp,f
   801  0D19  30EB               	movlw low(__pidataBANK0)
   802  0D1A  00FF               	movwf btemp+1,f
   803  0D1B  3068               	movlw low(__pdataBANK0)
   804  0D1C  0084               	movwf fsr,f
   805  0D1D  120A  158A  233E   	fcall init_ram
              120A  158A         
   806                           psect cinit,class=CODE,delta=2
   807                           global end_of_initialization
   808                           
   809                           ;End of C runtime variable initialization code
   810                           
   811  0D22                     end_of_initialization:
   812  0D22  0183               clrf status
   813  0D23  120A  158A  2B5F   ljmp _main	;jump to C main() function
   814                           psect	cstackBANK1,class=BANK1,space=1
   815                           global __pcstackBANK1
   816  00A0                     __pcstackBANK1:
   817                           	global	getlogicseq@str
   818  00A0                     getlogicseq@str:	; 32 bytes @ 0x0
   819  00A0                     	ds	32
   820                           	global	getlogicseq@bf
   821  00C0                     getlogicseq@bf:	; 2 bytes @ 0x20
   822  00C0                     	ds	2
   823                           	global	getlogicseq@snum
   824  00C2                     getlogicseq@snum:	; 16 bytes @ 0x22
   825  00C2                     	ds	16
   826                           	global	getlogicseq@nf
   827  00D2                     getlogicseq@nf:	; 2 bytes @ 0x32
   828  00D2                     	ds	2
   829                           	global	getlogicseq@wf
   830  00D4                     getlogicseq@wf:	; 2 bytes @ 0x34
   831  00D4                     	ds	2
   832                           	global	getlogicseq@ccount
   833  00D6                     getlogicseq@ccount:	; 2 bytes @ 0x36
   834  00D6                     	ds	2
   835                           	global	getlogicseq@num
   836  00D8                     getlogicseq@num:	; 2 bytes @ 0x38
   837  00D8                     	ds	2
   838                           psect	cstackCOMMON,class=COMMON,space=1
   839                           global __pcstackCOMMON
   840  0070                     __pcstackCOMMON:
   841                           	global	?_initlcd
   842  0070                     ?_initlcd:	; 0 bytes @ 0x0
   843                           	global	?_initkeypad
   844  0070                     ?_initkeypad:	; 0 bytes @ 0x0
   845                           	global	??_initkeypad
   846  0070                     ??_initkeypad:	; 0 bytes @ 0x0
   847                           	global	?_getlogicseq
   848  0070                     ?_getlogicseq:	; 0 bytes @ 0x0
   849                           	global	?_delay
   850  0070                     ?_delay:	; 0 bytes @ 0x0
   851                           	global	?_setLCD
   852  0070                     ?_setLCD:	; 0 bytes @ 0x0
   853                           	global	?_buzz
   854  0070                     ?_buzz:	; 0 bytes @ 0x0
   855                           	global	?_init_fun
   856  0070                     ?_init_fun:	; 0 bytes @ 0x0
   857                           	global	?_startswitch
   858  0070                     ?_startswitch:	; 0 bytes @ 0x0
   859                           	global	?_clearlcd
   860  0070                     ?_clearlcd:	; 0 bytes @ 0x0
   861                           	global	?_resetout
   862  0070                     ?_resetout:	; 0 bytes @ 0x0
   863                           	global	??_resetout
   864  0070                     ??_resetout:	; 0 bytes @ 0x0
   865                           	global	?_strcpy
   866  0070                     ?_strcpy:	; 2 bytes @ 0x0
   867                           	global	?_strcmp
   868  0070                     ?_strcmp:	; 2 bytes @ 0x0
   869                           	global	?_strcat
   870  0070                     ?_strcat:	; 2 bytes @ 0x0
   871                           	global	?_main
   872  0070                     ?_main:	; 2 bytes @ 0x0
   873                           	global	?_check
   874  0070                     ?_check:	; 2 bytes @ 0x0
   875                           	global	?___wmul
   876  0070                     ?___wmul:	; 2 bytes @ 0x0
   877                           	global	?___awdiv
   878  0070                     ?___awdiv:	; 2 bytes @ 0x0
   879                           	global	?___awmod
   880  0070                     ?___awmod:	; 2 bytes @ 0x0
   881                           	global	buzz@val
   882  0070                     buzz@val:	; 2 bytes @ 0x0
   883                           	global	check@logic
   884  0070                     check@logic:	; 2 bytes @ 0x0
   885                           	global	delay@x
   886  0070                     delay@x:	; 2 bytes @ 0x0
   887                           	global	setLCD@number
   888  0070                     setLCD@number:	; 2 bytes @ 0x0
   889                           	global	strcat@to
   890  0070                     strcat@to:	; 2 bytes @ 0x0
   891                           	global	strcmp@s2
   892  0070                     strcmp@s2:	; 2 bytes @ 0x0
   893                           	global	strcpy@to
   894  0070                     strcpy@to:	; 2 bytes @ 0x0
   895                           	global	___wmul@multiplier
   896  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   897                           	global	___awdiv@divisor
   898  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   899                           	global	___awmod@divisor
   900  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   901  0070                     	ds	2
   902                           	global	??_strcmp
   903  0072                     ??_strcmp:	; 0 bytes @ 0x2
   904                           	global	??_delay
   905  0072                     ??_delay:	; 0 bytes @ 0x2
   906                           	global	??_setLCD
   907  0072                     ??_setLCD:	; 0 bytes @ 0x2
   908                           	global	?_actrow
   909  0072                     ?_actrow:	; 0 bytes @ 0x2
   910                           	global	??_buzz
   911  0072                     ??_buzz:	; 0 bytes @ 0x2
   912                           	global	??_check
   913  0072                     ??_check:	; 0 bytes @ 0x2
   914                           	global	strcat@from
   915  0072                     strcat@from:	; 1 bytes @ 0x2
   916                           	global	actrow@n
   917  0072                     actrow@n:	; 2 bytes @ 0x2
   918                           	global	strcpy@from
   919  0072                     strcpy@from:	; 2 bytes @ 0x2
   920                           	global	___wmul@multiplicand
   921  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   922                           	global	___awdiv@dividend
   923  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   924                           	global	___awmod@dividend
   925  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   926  0072                     	ds	1
   927                           	global	??_strcat
   928  0073                     ??_strcat:	; 0 bytes @ 0x3
   929  0073                     	ds	1
   930                           	global	??_strcpy
   931  0074                     ??_strcpy:	; 0 bytes @ 0x4
   932                           	global	??_actrow
   933  0074                     ??_actrow:	; 0 bytes @ 0x4
   934                           	global	??___wmul
   935  0074                     ??___wmul:	; 0 bytes @ 0x4
   936                           	global	??___awdiv
   937  0074                     ??___awdiv:	; 0 bytes @ 0x4
   938                           	global	??___awmod
   939  0074                     ??___awmod:	; 0 bytes @ 0x4
   940                           	global	?_scan
   941  0074                     ?_scan:	; 2 bytes @ 0x4
   942                           	global	___wmul@product
   943  0074                     ___wmul@product:	; 2 bytes @ 0x4
   944  0074                     	ds	1
   945                           	global	check@input
   946  0075                     check@input:	; 1 bytes @ 0x5
   947                           	global	___awdiv@counter
   948  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   949                           	global	___awmod@counter
   950  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   951  0075                     	ds	1
   952                           	global	??_scan
   953  0076                     ??_scan:	; 0 bytes @ 0x6
   954                           	global	strcmp@r
   955  0076                     strcmp@r:	; 1 bytes @ 0x6
   956                           	global	___awdiv@sign
   957  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   958                           	global	___awmod@sign
   959  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   960                           	global	check@i
   961  0076                     check@i:	; 2 bytes @ 0x6
   962                           	global	strcat@cp
   963  0076                     strcat@cp:	; 2 bytes @ 0x6
   964  0076                     	ds	1
   965                           	global	strcmp@s1
   966  0077                     strcmp@s1:	; 1 bytes @ 0x7
   967                           	global	___awdiv@quotient
   968  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   969  0077                     	ds	1
   970                           	global	?_cmd
   971  0078                     ?_cmd:	; 0 bytes @ 0x8
   972                           	global	?_dat
   973  0078                     ?_dat:	; 0 bytes @ 0x8
   974                           	global	cmd@Command
   975  0078                     cmd@Command:	; 2 bytes @ 0x8
   976                           	global	dat@Command
   977  0078                     dat@Command:	; 2 bytes @ 0x8
   978  0078                     	ds	1
   979                           	global	?_itoaa
   980  0079                     ?_itoaa:	; 2 bytes @ 0x9
   981                           	global	itoaa@value
   982  0079                     itoaa@value:	; 2 bytes @ 0x9
   983                           	global	strcpy@cp
   984  0079                     strcpy@cp:	; 2 bytes @ 0x9
   985  0079                     	ds	1
   986                           	global	??_initlcd
   987  007A                     ??_initlcd:	; 0 bytes @ 0xA
   988                           	global	??_write
   989  007A                     ??_write:	; 0 bytes @ 0xA
   990                           	global	??_cmd
   991  007A                     ??_cmd:	; 0 bytes @ 0xA
   992                           	global	??_clearlcd
   993  007A                     ??_clearlcd:	; 0 bytes @ 0xA
   994                           	global	??_dat
   995  007A                     ??_dat:	; 0 bytes @ 0xA
   996  007A                     	ds	1
   997                           	global	itoaa@ptr
   998  007B                     itoaa@ptr:	; 1 bytes @ 0xB
   999  007B                     	ds	1
  1000                           	global	??_itoaa
  1001  007C                     ??_itoaa:	; 0 bytes @ 0xC
  1002                           	global	write@i
  1003  007C                     write@i:	; 2 bytes @ 0xC
  1004  007C                     	ds	2
  1005                           	global	??_main
  1006  007E                     ??_main:	; 0 bytes @ 0xE
  1007                           	global	??_init_fun
  1008  007E                     ??_init_fun:	; 0 bytes @ 0xE
  1009                           psect	cstackBANK0,class=BANK0,space=1
  1010                           global __pcstackBANK0
  1011  0020                     __pcstackBANK0:
  1012                           	global	itoaa@count
  1013  0020                     itoaa@count:	; 2 bytes @ 0x0
  1014                           	global	setLCD@vbool
  1015  0020                     setLCD@vbool:	; 32 bytes @ 0x0
  1016  0020                     	ds	2
  1017                           	global	itoaa@temp
  1018  0022                     itoaa@temp:	; 2 bytes @ 0x2
  1019  0022                     	ds	30
  1020                           	global	setLCD@i
  1021  0040                     setLCD@i:	; 2 bytes @ 0x20
  1022  0040                     	ds	2
  1023                           	global	?_write
  1024  0042                     ?_write:	; 0 bytes @ 0x22
  1025                           	global	write@str
  1026  0042                     write@str:	; 2 bytes @ 0x22
  1027  0042                     	ds	2
  1028                           	global	write@line
  1029  0044                     write@line:	; 2 bytes @ 0x24
  1030  0044                     	ds	2
  1031                           	global	write@erase
  1032  0046                     write@erase:	; 2 bytes @ 0x26
  1033  0046                     	ds	2
  1034                           	global	?_scroll
  1035  0048                     ?_scroll:	; 0 bytes @ 0x28
  1036                           	global	??_startswitch
  1037  0048                     ??_startswitch:	; 0 bytes @ 0x28
  1038                           	global	scroll@str
  1039  0048                     scroll@str:	; 2 bytes @ 0x28
  1040  0048                     	ds	2
  1041                           	global	scroll@loops
  1042  004A                     scroll@loops:	; 2 bytes @ 0x2A
  1043  004A                     	ds	2
  1044                           	global	??_scroll
  1045  004C                     ??_scroll:	; 0 bytes @ 0x2C
  1046  004C                     	ds	3
  1047                           	global	scroll@st
  1048  004F                     scroll@st:	; 2 bytes @ 0x2F
  1049  004F                     	ds	2
  1050                           	global	scroll@en
  1051  0051                     scroll@en:	; 2 bytes @ 0x31
  1052  0051                     	ds	2
  1053                           	global	scroll@startat
  1054  0053                     scroll@startat:	; 2 bytes @ 0x33
  1055  0053                     	ds	2
  1056                           	global	scroll@endat
  1057  0055                     scroll@endat:	; 2 bytes @ 0x35
  1058  0055                     	ds	2
  1059                           	global	scroll@loopn
  1060  0057                     scroll@loopn:	; 2 bytes @ 0x37
  1061  0057                     	ds	2
  1062                           	global	scroll@len
  1063  0059                     scroll@len:	; 2 bytes @ 0x39
  1064  0059                     	ds	2
  1065                           	global	scroll@i
  1066  005B                     scroll@i:	; 2 bytes @ 0x3B
  1067  005B                     	ds	2
  1068                           	global	??_getlogicseq
  1069  005D                     ??_getlogicseq:	; 0 bytes @ 0x3D
  1070  005D                     	ds	4
  1071 ;;Data sizes: Strings 260, constant 7, data 30, bss 31, persistent 0 stack 0
  1072 ;;Auto spaces:   Size  Autos    Used
  1073 ;; COMMON          14     14      14
  1074 ;; BANK0           80     65      77
  1075 ;; BANK1           80     58      76
  1076 ;; BANK3           96      0      31
  1077 ;; BANK2           96      0       0
  1078                           
  1079 ;;
  1080 ;; Pointer list with targets:
  1081                           
  1082 ;; ?___awmod	int  size(1) Largest target is 0
  1083 ;;
  1084 ;; ?___awdiv	int  size(1) Largest target is 0
  1085 ;;
  1086 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1087 ;;
  1088 ;; ?_strcat	PTR unsigned char  size(2) Largest target is 5
  1089 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1090 ;;
  1091 ;; ?_itoaa	int  size(1) Largest target is 0
  1092 ;;
  1093 ;; ?_strcmp	int  size(1) Largest target is 0
  1094 ;;
  1095 ;; ?_strcpy	PTR unsigned char  size(2) Largest target is 32
  1096 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1097 ;;		 -> lo(BANK0[5]), plo(BANK3[5]), 
  1098 ;;
  1099 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 20
  1100 ;;		 -> STR_15(CODE[1]), STR_14(CODE[20]), STR_12(CODE[1]), STR_11(CODE[20]), 
  1101 ;;		 -> STR_9(CODE[1]), STR_8(CODE[20]), STR_2(CODE[4]), lo(BANK0[5]), 
  1102 ;;
  1103 ;; strcpy@to	PTR unsigned char  size(2) Largest target is 32
  1104 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1105 ;;		 -> lo(BANK0[5]), plo(BANK3[5]), 
  1106 ;;
  1107 ;; strcpy@cp	PTR unsigned char  size(2) Largest target is 32
  1108 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1109 ;;		 -> lo(BANK0[5]), plo(BANK3[5]), 
  1110 ;;
  1111 ;; strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
  1112 ;;		 -> STR_32(CODE[5]), STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[5]), 
  1113 ;;		 -> STR_28(CODE[5]), STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[5]), 
  1114 ;;		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[5]), 
  1115 ;;		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), 
  1116 ;;		 -> plo(BANK3[5]), 
  1117 ;;
  1118 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
  1119 ;;		 -> lo(BANK0[5]), 
  1120 ;;
  1121 ;; strcat@from	PTR const unsigned char  size(1) Largest target is 16
  1122 ;;		 -> getlogicseq@snum(BANK1[16]), 
  1123 ;;
  1124 ;; strcat@to	PTR unsigned char  size(2) Largest target is 5
  1125 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1126 ;;
  1127 ;; strcat@cp	PTR unsigned char  size(2) Largest target is 5
  1128 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1129 ;;
  1130 ;; sp__read_log	PTR unsigned char  size(1) Largest target is 1
  1131 ;;		 -> read_log@logic(COMMON[1]), 
  1132 ;;
  1133 ;; scroll@str	PTR unsigned char  size(2) Largest target is 38
  1134 ;;		 -> STR_4(CODE[38]), 
  1135 ;;
  1136 ;; write@str	PTR unsigned char  size(2) Largest target is 38
  1137 ;;		 -> STR_16(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), getlogicseq@str(BANK1[32]), 
  1138 ;;		 -> STR_7(CODE[27]), STR_6(CODE[8]), STR_5(CODE[15]), STR_4(CODE[38]), 
  1139 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), STR_3(CODE[17]), 
  1140 ;;		 -> lo(BANK0[5]), STR_1(CODE[11]), 
  1141 ;;
  1142 ;; itoaa@ptr	PTR unsigned char  size(1) Largest target is 16
  1143 ;;		 -> getlogicseq@snum(BANK1[16]), 
  1144 ;;
  1145 ;; sp__strcat	PTR unsigned char  size(2) Largest target is 5
  1146 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1147 ;;
  1148 ;; sp__strcpy	PTR unsigned char  size(2) Largest target is 32
  1149 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1150 ;;		 -> lo(BANK0[5]), plo(BANK3[5]), 
  1151 ;;
  1152 ;; check@logic	PTR unsigned char  size(2) Largest target is 5
  1153 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1154 ;;
  1155 ;; check@input	PTR unsigned char  size(1) Largest target is 5
  1156 ;;		 -> lo(BANK0[5]), 
  1157 ;;
  1158                           
  1159                           
  1160 ;;
  1161 ;; Critical Paths under _main in COMMON
  1162 ;;
  1163 ;;   _getlogicseq->_write
  1164 ;;   _startswitch->_write
  1165 ;;   _scroll->_write
  1166 ;;   _init_fun->_write
  1167 ;;   _write->_cmd
  1168 ;;   _write->_dat
  1169 ;;   _clearlcd->_cmd
  1170 ;;   _scan->_actrow
  1171 ;;   _initlcd->_cmd
  1172 ;;   _actrow->_delay
  1173 ;;   _dat->_setLCD
  1174 ;;   _cmd->_setLCD
  1175 ;;   _itoaa->___awdiv
  1176 ;;
  1177 ;; Critical Paths under _main in BANK0
  1178 ;;
  1179 ;;   _main->_getlogicseq
  1180 ;;   _getlogicseq->_scroll
  1181 ;;   _startswitch->_write
  1182 ;;   _scroll->_write
  1183 ;;   _init_fun->_write
  1184 ;;   _dat->_setLCD
  1185 ;;   _cmd->_setLCD
  1186 ;;
  1187 ;; Critical Paths under _main in BANK1
  1188 ;;
  1189 ;;   _main->_getlogicseq
  1190 ;;
  1191 ;; Critical Paths under _main in BANK3
  1192 ;;
  1193 ;;   None.
  1194 ;;
  1195 ;; Critical Paths under _main in BANK2
  1196 ;;
  1197 ;;   None.
  1198                           
  1199 ;;
  1200 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1201 ;;
  1202                           
  1203 ;;
  1204 ;;Call Graph Tables:
  1205 ;;
  1206 ;; ---------------------------------------------------------------------------------
  1207 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1208 ;; ---------------------------------------------------------------------------------
  1209 ;; (0) _main                                                 0     0      0    8549
  1210 ;;                            _initlcd
  1211 ;;                         _initkeypad
  1212 ;;                        _getlogicseq
  1213 ;; ---------------------------------------------------------------------------------
  1214 ;; (1) _getlogicseq                                         62    62      0    8185
  1215 ;;                                             61 BANK0      4     4      0
  1216 ;;                                              0 BANK1     58    58      0
  1217 ;;                             _scroll
  1218 ;;                              _write
  1219 ;;                               _scan
  1220 ;;                               _buzz
  1221 ;;                        _startswitch
  1222 ;;                              _delay
  1223 ;;                             _strcpy
  1224 ;;                              _itoaa
  1225 ;;                             _strcat
  1226 ;; ---------------------------------------------------------------------------------
  1227 ;; (2) _startswitch                                          2     2      0    2749
  1228 ;;                                             40 BANK0      2     2      0
  1229 ;;                           _init_fun
  1230 ;;                             _strcpy
  1231 ;;                              _write
  1232 ;;                             _strcmp
  1233 ;;                              _check
  1234 ;; ---------------------------------------------------------------------------------
  1235 ;; (2) _scroll                                              53    49      4    1820
  1236 ;;                                             40 BANK0     21    17      4
  1237 ;;                              _write
  1238 ;;                              _delay
  1239 ;;                                _cmd
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (3) _init_fun                                             0     0      0    1226
  1242 ;;                              _write
  1243 ;; ---------------------------------------------------------------------------------
  1244 ;; (3) _write                                               10     4      6    1226
  1245 ;;                                             10 COMMON     4     4      0
  1246 ;;                                             34 BANK0      6     0      6
  1247 ;;                           _clearlcd
  1248 ;;                                _cmd
  1249 ;;                                _dat
  1250 ;; ---------------------------------------------------------------------------------
  1251 ;; (4) _clearlcd                                             0     0      0     364
  1252 ;;                                _cmd
  1253 ;; ---------------------------------------------------------------------------------
  1254 ;; (2) _scan                                                 2     0      2     110
  1255 ;;                                              4 COMMON     2     0      2
  1256 ;;                             _actrow
  1257 ;; ---------------------------------------------------------------------------------
  1258 ;; (1) _initlcd                                              0     0      0     364
  1259 ;;                                _cmd
  1260 ;; ---------------------------------------------------------------------------------
  1261 ;; (3) _actrow                                               2     0      2     110
  1262 ;;                                              2 COMMON     2     0      2
  1263 ;;                           _resetout
  1264 ;;                              _delay
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (4) _dat                                                  2     0      2     364
  1267 ;;                                              8 COMMON     2     0      2
  1268 ;;                             _setLCD
  1269 ;;                              _delay
  1270 ;; ---------------------------------------------------------------------------------
  1271 ;; (4) _cmd                                                  2     0      2     364
  1272 ;;                                              8 COMMON     2     0      2
  1273 ;;                             _setLCD
  1274 ;;                              _delay
  1275 ;; ---------------------------------------------------------------------------------
  1276 ;; (2) _itoaa                                                8     5      3    1078
  1277 ;;                                              9 COMMON     4     1      3
  1278 ;;                                              0 BANK0      4     4      0
  1279 ;;                             ___wmul
  1280 ;;                            ___awdiv
  1281 ;;                            ___awmod
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; (3) ___awmod                                              7     3      4     296
  1284 ;;                                              0 COMMON     7     3      4
  1285 ;; ---------------------------------------------------------------------------------
  1286 ;; (3) ___awdiv                                              9     5      4     300
  1287 ;;                                              0 COMMON     9     5      4
  1288 ;; ---------------------------------------------------------------------------------
  1289 ;; (3) ___wmul                                               6     2      4      92
  1290 ;;                                              0 COMMON     6     2      4
  1291 ;; ---------------------------------------------------------------------------------
  1292 ;; (4) _resetout                                             0     0      0       0
  1293 ;; ---------------------------------------------------------------------------------
  1294 ;; (6) _setLCD                                              42    40      2     320
  1295 ;;                                              0 COMMON     8     6      2
  1296 ;;                                              0 BANK0     34    34      0
  1297 ;; ---------------------------------------------------------------------------------
  1298 ;; (2) _strcat                                               8     5      3      96
  1299 ;;                                              0 COMMON     8     5      3
  1300 ;; ---------------------------------------------------------------------------------
  1301 ;; (2) _delay                                                2     0      2      22
  1302 ;;                                              0 COMMON     2     0      2
  1303 ;; ---------------------------------------------------------------------------------
  1304 ;; (4) _strcmp                                               8     6      2      89
  1305 ;;                                              0 COMMON     8     6      2
  1306 ;; ---------------------------------------------------------------------------------
  1307 ;; (3) _strcpy                                              11     7      4      73
  1308 ;;                                              0 COMMON    11     7      4
  1309 ;; ---------------------------------------------------------------------------------
  1310 ;; (3) _check                                                8     6      2     135
  1311 ;;                                              0 COMMON     8     6      2
  1312 ;; ---------------------------------------------------------------------------------
  1313 ;; (1) _initkeypad                                           0     0      0       0
  1314 ;; ---------------------------------------------------------------------------------
  1315 ;; (2) _buzz                                                 2     0      2      22
  1316 ;;                                              0 COMMON     2     0      2
  1317 ;; ---------------------------------------------------------------------------------
  1318 ;; Estimated maximum stack depth 6
  1319 ;; ---------------------------------------------------------------------------------
  1320                           
  1321 ;; Call Graph Graphs:
  1322                           
  1323 ;; _main (ROOT)
  1324 ;;   _initlcd
  1325 ;;     _cmd
  1326 ;;       _setLCD
  1327 ;;       _delay
  1328 ;;   _initkeypad
  1329 ;;   _getlogicseq
  1330 ;;     _scroll
  1331 ;;       _write
  1332 ;;         _clearlcd
  1333 ;;           _cmd
  1334 ;;             _setLCD
  1335 ;;             _delay
  1336 ;;         _cmd
  1337 ;;           _setLCD
  1338 ;;           _delay
  1339 ;;         _dat
  1340 ;;           _setLCD
  1341 ;;           _delay
  1342 ;;       _delay
  1343 ;;       _cmd
  1344 ;;         _setLCD
  1345 ;;         _delay
  1346 ;;     _write
  1347 ;;       _clearlcd
  1348 ;;         _cmd
  1349 ;;           _setLCD
  1350 ;;           _delay
  1351 ;;       _cmd
  1352 ;;         _setLCD
  1353 ;;         _delay
  1354 ;;       _dat
  1355 ;;         _setLCD
  1356 ;;         _delay
  1357 ;;     _scan
  1358 ;;       _actrow
  1359 ;;         _resetout
  1360 ;;         _delay
  1361 ;;     _buzz
  1362 ;;     _startswitch
  1363 ;;       _init_fun
  1364 ;;         _write
  1365 ;;           _clearlcd
  1366 ;;             _cmd
  1367 ;;               _setLCD
  1368 ;;               _delay
  1369 ;;           _cmd
  1370 ;;             _setLCD
  1371 ;;             _delay
  1372 ;;           _dat
  1373 ;;             _setLCD
  1374 ;;             _delay
  1375 ;;       _strcpy
  1376 ;;       _write
  1377 ;;         _clearlcd
  1378 ;;           _cmd
  1379 ;;             _setLCD
  1380 ;;             _delay
  1381 ;;         _cmd
  1382 ;;           _setLCD
  1383 ;;           _delay
  1384 ;;         _dat
  1385 ;;           _setLCD
  1386 ;;           _delay
  1387 ;;       _strcmp
  1388 ;;       _check
  1389 ;;     _delay
  1390 ;;     _strcpy
  1391 ;;     _itoaa
  1392 ;;       ___wmul
  1393 ;;       ___awdiv
  1394 ;;       ___awmod
  1395 ;;     _strcat
  1396 ;;
  1397                           
  1398 ;; Address spaces:
  1399                           
  1400 ;;Name               Size   Autos  Total    Cost      Usage
  1401 ;;BANK3               60      0      1F       9       32.3%
  1402 ;;BITBANK3            60      0       0       8        0.0%
  1403 ;;SFR3                 0      0       0       4        0.0%
  1404 ;;BITSFR3              0      0       0       4        0.0%
  1405 ;;BANK2               60      0       0      11        0.0%
  1406 ;;BITBANK2            60      0       0      10        0.0%
  1407 ;;SFR2                 0      0       0       5        0.0%
  1408 ;;BITSFR2              0      0       0       5        0.0%
  1409 ;;SFR1                 0      0       0       2        0.0%
  1410 ;;BITSFR1              0      0       0       2        0.0%
  1411 ;;BANK1               50     3A      4C       7       95.0%
  1412 ;;BITBANK1            50      0       0       6        0.0%
  1413 ;;CODE                 0      0       0       0        0.0%
  1414 ;;DATA                 0      0      CE      12        0.0%
  1415 ;;ABS                  0      0      C6       3        0.0%
  1416 ;;NULL                 0      0       0       0        0.0%
  1417 ;;STACK                0      0       8       2        0.0%
  1418 ;;BANK0               50     41      4D       5       96.3%
  1419 ;;BITBANK0            50      0       0       4        0.0%
  1420 ;;SFR0                 0      0       0       1        0.0%
  1421 ;;BITSFR0              0      0       0       1        0.0%
  1422 ;;COMMON               E      E       E       1      100.0%
  1423 ;;BITCOMMON            E      0       0       0        0.0%
  1424 ;;EEDATA             100      0       0       0        0.0%
  1425                           
  1426                           	global	_main
  1427                           psect	maintext,global,class=CODE,delta=2
  1428                           global __pmaintext
  1429  0B5F                     __pmaintext:
  1430                           
  1431 ;; *************** function _main *****************
  1432 ;; Defined at:
  1433 ;;		line 99 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  2  1085[COMMON] int 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 17F/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels required when called:    8
  1453 ;; This function calls:
  1454 ;;		_initlcd
  1455 ;;		_initkeypad
  1456 ;;		_getlogicseq
  1457 ;; This function is called by:
  1458 ;;		Startup code after reset
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           psect	maintext
  1462                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1463                           	line	99
  1464                           	global	__size_of_main
  1465  0019                     	__size_of_main	equ	__end_of_main-_main
  1466                           	
  1467  0B5F                     _main:	
  1468                           	opt	stack 0
  1469                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1470                           	line	103
  1471                           	
  1472  0B5F                     l4021:	
  1473                           ;prev11.c: 103: TRISB = 0b00001111;
  1474  0B5F  300F               	movlw	(0Fh)
  1475  0B60  1683               	bsf	status, 5	;RP0=1, select bank1
  1476  0B61  1303               	bcf	status, 6	;RP1=0, select bank1
  1477  0B62  0086               	movwf	(134)^080h	;volatile
  1478                           	line	105
  1479                           	
  1480  0B63                     l4023:	
  1481                           ;prev11.c: 105: initlcd();
  1482  0B63  120A  158A  2414   	fcall	_initlcd
              120A  158A         
  1483                           	line	106
  1484                           	
  1485  0B68                     l4025:	
  1486                           ;prev11.c: 106: initkeypad();
  1487  0B68  120A  158A  22F7   	fcall	_initkeypad
              120A  158A         
  1488  0B6D  2B6E               	goto	l4027
  1489                           	line	117
  1490                           ;prev11.c: 117: while(1){
  1491                           	
  1492  0B6E                     l1086:	
  1493                           	line	119
  1494                           	
  1495  0B6E                     l4027:	
  1496                           ;prev11.c: 119: getlogicseq();
  1497  0B6E  120A  118A  2413   	fcall	_getlogicseq
              120A  158A         
  1498  0B73  2B6E               	goto	l4027
  1499                           	line	120
  1500                           	
  1501  0B74                     l1087:	
  1502                           	line	117
  1503  0B74  2B6E               	goto	l4027
  1504                           	
  1505  0B75                     l1088:	
  1506                           	line	126
  1507                           	
  1508  0B75                     l1089:	
  1509                           	global	start
  1510  0B75  120A  118A  2800   	ljmp	start
  1511                           	opt stack 0
  1512                           GLOBAL	__end_of_main
  1513  0B78                     	__end_of_main:
  1514 ;; =============== function _main ends ============
  1515                           
  1516                           	signat	_main,90
  1517                           	global	_getlogicseq
  1518                           psect	text570,local,class=CODE,delta=2
  1519                           global __ptext570
  1520  0413                     __ptext570:
  1521                           
  1522 ;; *************** function _getlogicseq *****************
  1523 ;; Defined at:
  1524 ;;		line 224 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  str            32    0[BANK1 ] unsigned char [32]
  1529 ;;  snum           16   34[BANK1 ] unsigned char [16]
  1530 ;;  num             2   56[BANK1 ] int 
  1531 ;;  ccount          2   54[BANK1 ] int 
  1532 ;;  wf              2   52[BANK1 ] int 
  1533 ;;  nf              2   50[BANK1 ] int 
  1534 ;;  bf              2   32[BANK1 ] int 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;		None               void
  1537 ;; Registers used:
  1538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         0       0       0       0       0
  1545 ;;      Locals:         0       0      58       0       0
  1546 ;;      Temps:          0       4       0       0       0
  1547 ;;      Totals:         0       4      58       0       0
  1548 ;;Total ram usage:       62 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    7
  1551 ;; This function calls:
  1552 ;;		_scroll
  1553 ;;		_write
  1554 ;;		_scan
  1555 ;;		_buzz
  1556 ;;		_startswitch
  1557 ;;		_delay
  1558 ;;		_strcpy
  1559 ;;		_itoaa
  1560 ;;		_strcat
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           psect	text570
  1566                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1567                           	line	224
  1568                           	global	__size_of_getlogicseq
  1569  03ED                     	__size_of_getlogicseq	equ	__end_of_getlogicseq-_getlogicseq
  1570                           	
  1571  0413                     _getlogicseq:	
  1572                           	opt	stack 0
  1573                           ; Regs used in _getlogicseq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1574                           	line	227
  1575                           	
  1576  0413                     l3825:	
  1577                           ;prev11.c: 227: scroll("WELCOME ! TO PROGRAMABLE HOME AUTMATN",0);
  1578  0413  3019               	movlw	low(STR_4|8000h)
  1579  0414  1283               	bcf	status, 5	;RP0=0, select bank0
  1580  0415  1303               	bcf	status, 6	;RP1=0, select bank0
  1581  0416  00C8               	movwf	(?_scroll)
  1582  0417  3088               	movlw	high(STR_4|8000h)
  1583  0418  00C9               	movwf	((?_scroll))+1
  1584  0419  3000               	movlw	low(0)
  1585  041A  00CA               	movwf	0+(?_scroll)+02h
  1586  041B  3000               	movlw	high(0)
  1587  041C  00CB               	movwf	(0+(?_scroll)+02h)+1
  1588  041D  120A  158A  2645   	fcall	_scroll
              120A  118A         
  1589                           	line	232
  1590                           	
  1591  0422                     l3827:	
  1592                           ;prev11.c: 231: int num ;
  1593                           ;prev11.c: 232: char snum[16]="";
  1594  0422  30C2               	movlw	(getlogicseq@snum)&0ffh
  1595  0423  0084               	movwf	fsr0
  1596  0424  3090               	movlw	low(getlogicseq@F1868)
  1597  0425  1283               	bcf	status, 5	;RP0=0, select bank0
  1598  0426  1303               	bcf	status, 6	;RP1=0, select bank0
  1599  0427  00DD               	movwf	(??_getlogicseq+0)+0
  1600  0428  0804               	movf	fsr0,w
  1601  0429  00DE               	movwf	((??_getlogicseq+0)+0+1)
  1602  042A  3010               	movlw	16
  1603  042B  00DF               	movwf	((??_getlogicseq+0)+0+2)
  1604  042C                     u4670:
  1605  042C  085D               	movf	(??_getlogicseq+0)+0,w
  1606  042D  0084               	movwf	fsr0
  1607  042E  1783               	bsf	status, 7	;select IRP bank3
  1608                           	
  1609  042F  0800               	movf	indf,w
  1610  0430  00E0               	movwf	((??_getlogicseq+0)+0+3)
  1611  0431  0ADD               	incf	(??_getlogicseq+0)+0,f
  1612  0432  085E               	movf	((??_getlogicseq+0)+0+1),w
  1613  0433  0084               	movwf	fsr0
  1614  0434  1383               	bcf	status, 7	;select IRP bank1
  1615                           	
  1616  0435  0860               	movf	((??_getlogicseq+0)+0+3),w
  1617  0436  0080               	movwf	indf
  1618  0437  0ADE               	incf	((??_getlogicseq+0)+0+1),f
  1619  0438  0BDF               	decfsz	((??_getlogicseq+0)+0+2),f
  1620  0439  2C2C               	goto	u4670
  1621                           	line	233
  1622                           	
  1623  043A                     l3829:	
  1624                           ;prev11.c: 233: int wf=0;
  1625  043A  1683               	bsf	status, 5	;RP0=1, select bank1
  1626  043B  1303               	bcf	status, 6	;RP1=0, select bank1
  1627  043C  01D4               	clrf	(getlogicseq@wf)^080h
  1628  043D  01D5               	clrf	(getlogicseq@wf+1)^080h
  1629                           	line	234
  1630                           	
  1631  043E                     l3831:	
  1632                           ;prev11.c: 234: int nf=0;
  1633  043E  01D2               	clrf	(getlogicseq@nf)^080h
  1634  043F  01D3               	clrf	(getlogicseq@nf+1)^080h
  1635                           	line	235
  1636                           	
  1637  0440                     l3833:	
  1638                           ;prev11.c: 235: int bf=0;
  1639  0440  01C0               	clrf	(getlogicseq@bf)^080h
  1640  0441  01C1               	clrf	(getlogicseq@bf+1)^080h
  1641                           	line	236
  1642                           	
  1643  0442                     l3835:	
  1644                           ;prev11.c: 236: int ccount=0;
  1645  0442  01D6               	clrf	(getlogicseq@ccount)^080h
  1646  0443  01D7               	clrf	(getlogicseq@ccount+1)^080h
  1647                           	line	240
  1648                           	
  1649  0444                     l3837:	
  1650                           ;prev11.c: 237: char str[32];
  1651                           ;prev11.c: 240: write("1.SWT  2.REPRG",1,1);
  1652  0444  30A7               	movlw	low(STR_5|8000h)
  1653  0445  1283               	bcf	status, 5	;RP0=0, select bank0
  1654  0446  1303               	bcf	status, 6	;RP1=0, select bank0
  1655  0447  00C2               	movwf	(?_write)
  1656  0448  3088               	movlw	high(STR_5|8000h)
  1657  0449  00C3               	movwf	((?_write))+1
  1658  044A  3001               	movlw	low(01h)
  1659  044B  00C4               	movwf	0+(?_write)+02h
  1660  044C  3000               	movlw	high(01h)
  1661  044D  00C5               	movwf	(0+(?_write)+02h)+1
  1662  044E  3001               	movlw	low(01h)
  1663  044F  00C6               	movwf	0+(?_write)+04h
  1664  0450  3000               	movlw	high(01h)
  1665  0451  00C7               	movwf	(0+(?_write)+04h)+1
  1666  0452  120A  158A  257B   	fcall	_write
              120A  118A         
  1667                           	line	241
  1668                           	
  1669  0457                     l3839:	
  1670                           ;prev11.c: 241: write("3.RESET",2,0);
  1671  0457  30C1               	movlw	low(STR_6|8000h)
  1672  0458  1283               	bcf	status, 5	;RP0=0, select bank0
  1673  0459  1303               	bcf	status, 6	;RP1=0, select bank0
  1674  045A  00C2               	movwf	(?_write)
  1675  045B  3088               	movlw	high(STR_6|8000h)
  1676  045C  00C3               	movwf	((?_write))+1
  1677  045D  3002               	movlw	low(02h)
  1678  045E  00C4               	movwf	0+(?_write)+02h
  1679  045F  3000               	movlw	high(02h)
  1680  0460  00C5               	movwf	(0+(?_write)+02h)+1
  1681  0461  3000               	movlw	low(0)
  1682  0462  00C6               	movwf	0+(?_write)+04h
  1683  0463  3000               	movlw	high(0)
  1684  0464  00C7               	movwf	(0+(?_write)+04h)+1
  1685  0465  120A  158A  257B   	fcall	_write
              120A  118A         
  1686  046A  2C6B               	goto	l3841
  1687                           	line	242
  1688                           ;prev11.c: 242: while(1)
  1689                           	
  1690  046B                     l1117:	
  1691                           	line	244
  1692                           	
  1693  046B                     l3841:	
  1694                           ;prev11.c: 243: {
  1695                           ;prev11.c: 244: if(retm==1)
  1696  046B  3001               	movlw	01h
  1697  046C  1683               	bsf	status, 5	;RP0=1, select bank1
  1698  046D  1303               	bcf	status, 6	;RP1=0, select bank1
  1699  046E  066A               	xorwf	(_retm)^080h,w
  1700  046F  046B               	iorwf	(_retm+1)^080h,w
  1701  0470  1D03               	skipz
  1702  0471  2C73               	goto	u4681
  1703  0472  2C74               	goto	u4680
  1704  0473                     u4681:
  1705  0473  2C7E               	goto	l3847
  1706  0474                     u4680:
  1707                           	line	247
  1708                           	
  1709  0474                     l3843:	
  1710                           ;prev11.c: 245: {
  1711                           ;prev11.c: 247: retm=0;
  1712  0474  01EA               	clrf	(_retm)^080h
  1713  0475  01EB               	clrf	(_retm+1)^080h
  1714                           	line	248
  1715                           ;prev11.c: 248: f1=0; f2=0; f3=0;
  1716  0476  01E4               	clrf	(_f1)^080h
  1717  0477  01E5               	clrf	(_f1+1)^080h
  1718  0478  01E6               	clrf	(_f2)^080h
  1719  0479  01E7               	clrf	(_f2+1)^080h
  1720  047A  01E8               	clrf	(_f3)^080h
  1721  047B  01E9               	clrf	(_f3+1)^080h
  1722  047C  2FFF               	goto	l1119
  1723                           	line	249
  1724                           	
  1725  047D                     l3845:	
  1726                           ;prev11.c: 249: return;
  1727  047D  2FFF               	goto	l1119
  1728                           	line	250
  1729                           	
  1730  047E                     l1118:	
  1731                           	line	251
  1732                           	
  1733  047E                     l3847:	
  1734                           ;prev11.c: 250: }
  1735                           ;prev11.c: 251: num=scan();
  1736  047E  120A  158A  2718   	fcall	_scan
              120A  118A         
  1737  0483  0875               	movf	(1+(?_scan)),w
  1738  0484  1683               	bsf	status, 5	;RP0=1, select bank1
  1739  0485  1303               	bcf	status, 6	;RP1=0, select bank1
  1740  0486  01D9               	clrf	(getlogicseq@num+1)^080h
  1741  0487  07D9               	addwf	(getlogicseq@num+1)^080h
  1742  0488  0874               	movf	(0+(?_scan)),w
  1743  0489  01D8               	clrf	(getlogicseq@num)^080h
  1744  048A  07D8               	addwf	(getlogicseq@num)^080h
  1745                           
  1746                           	line	252
  1747                           ;prev11.c: 252: buzz(num);
  1748  048B  0859               	movf	(getlogicseq@num+1)^080h,w
  1749  048C  01F1               	clrf	(?_buzz+1)
  1750  048D  07F1               	addwf	(?_buzz+1)
  1751  048E  0858               	movf	(getlogicseq@num)^080h,w
  1752  048F  01F0               	clrf	(?_buzz)
  1753  0490  07F0               	addwf	(?_buzz)
  1754                           
  1755  0491  120A  158A  232A   	fcall	_buzz
              120A  118A         
  1756                           	line	253
  1757                           	
  1758  0496                     l3849:	
  1759                           ;prev11.c: 253: if(num==1)
  1760  0496  3001               	movlw	01h
  1761  0497  1683               	bsf	status, 5	;RP0=1, select bank1
  1762  0498  1303               	bcf	status, 6	;RP1=0, select bank1
  1763  0499  0658               	xorwf	(getlogicseq@num)^080h,w
  1764  049A  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1765  049B  1D03               	skipz
  1766  049C  2C9E               	goto	u4691
  1767  049D  2C9F               	goto	u4690
  1768  049E                     u4691:
  1769  049E  2CA7               	goto	l1120
  1770  049F                     u4690:
  1771                           	line	255
  1772                           	
  1773  049F                     l3851:	
  1774                           ;prev11.c: 254: {
  1775                           ;prev11.c: 255: f1=1;
  1776  049F  3001               	movlw	low(01h)
  1777  04A0  00E4               	movwf	(_f1)^080h
  1778  04A1  3000               	movlw	high(01h)
  1779  04A2  00E5               	movwf	((_f1)^080h)+1
  1780                           	line	256
  1781                           	
  1782  04A3                     l3853:	
  1783                           ;prev11.c: 256: f2=0;
  1784  04A3  01E6               	clrf	(_f2)^080h
  1785  04A4  01E7               	clrf	(_f2+1)^080h
  1786                           	line	257
  1787                           	
  1788  04A5                     l3855:	
  1789                           ;prev11.c: 257: f3=0;
  1790  04A5  01E8               	clrf	(_f3)^080h
  1791  04A6  01E9               	clrf	(_f3+1)^080h
  1792                           	line	258
  1793                           	
  1794  04A7                     l1120:	
  1795                           	line	259
  1796                           ;prev11.c: 258: }
  1797                           ;prev11.c: 259: if(num==2)
  1798  04A7  3002               	movlw	02h
  1799  04A8  0658               	xorwf	(getlogicseq@num)^080h,w
  1800  04A9  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1801  04AA  1D03               	skipz
  1802  04AB  2CAD               	goto	u4701
  1803  04AC  2CAE               	goto	u4700
  1804  04AD                     u4701:
  1805  04AD  2CB6               	goto	l1121
  1806  04AE                     u4700:
  1807                           	line	261
  1808                           	
  1809  04AE                     l3857:	
  1810                           ;prev11.c: 260: {
  1811                           ;prev11.c: 261: f1=0;
  1812  04AE  01E4               	clrf	(_f1)^080h
  1813  04AF  01E5               	clrf	(_f1+1)^080h
  1814                           	line	262
  1815                           	
  1816  04B0                     l3859:	
  1817                           ;prev11.c: 262: f2=1;
  1818  04B0  3001               	movlw	low(01h)
  1819  04B1  00E6               	movwf	(_f2)^080h
  1820  04B2  3000               	movlw	high(01h)
  1821  04B3  00E7               	movwf	((_f2)^080h)+1
  1822                           	line	263
  1823                           	
  1824  04B4                     l3861:	
  1825                           ;prev11.c: 263: f3=0;
  1826  04B4  01E8               	clrf	(_f3)^080h
  1827  04B5  01E9               	clrf	(_f3+1)^080h
  1828                           	line	264
  1829                           	
  1830  04B6                     l1121:	
  1831                           	line	265
  1832                           ;prev11.c: 264: }
  1833                           ;prev11.c: 265: if(num==3)
  1834  04B6  3003               	movlw	03h
  1835  04B7  0658               	xorwf	(getlogicseq@num)^080h,w
  1836  04B8  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1837  04B9  1D03               	skipz
  1838  04BA  2CBC               	goto	u4711
  1839  04BB  2CBD               	goto	u4710
  1840  04BC                     u4711:
  1841  04BC  2CCA               	goto	l3869
  1842  04BD                     u4710:
  1843                           	line	267
  1844                           	
  1845  04BD                     l3863:	
  1846                           ;prev11.c: 266: {
  1847                           ;prev11.c: 267: f1=0;
  1848  04BD  01E4               	clrf	(_f1)^080h
  1849  04BE  01E5               	clrf	(_f1+1)^080h
  1850                           	line	268
  1851                           ;prev11.c: 268: f2=0;
  1852  04BF  01E6               	clrf	(_f2)^080h
  1853  04C0  01E7               	clrf	(_f2+1)^080h
  1854                           	line	269
  1855                           	
  1856  04C1                     l3865:	
  1857                           ;prev11.c: 269: f3=1;
  1858  04C1  3001               	movlw	low(01h)
  1859  04C2  00E8               	movwf	(_f3)^080h
  1860  04C3  3000               	movlw	high(01h)
  1861  04C4  00E9               	movwf	((_f3)^080h)+1
  1862                           	line	270
  1863                           	
  1864  04C5                     l3867:	
  1865                           ;prev11.c: 270: retm=1;
  1866  04C5  3001               	movlw	low(01h)
  1867  04C6  00EA               	movwf	(_retm)^080h
  1868  04C7  3000               	movlw	high(01h)
  1869  04C8  00EB               	movwf	((_retm)^080h)+1
  1870  04C9  2CCA               	goto	l3869
  1871                           	line	271
  1872                           	
  1873  04CA                     l1122:	
  1874                           	line	273
  1875                           	
  1876  04CA                     l3869:	
  1877                           ;prev11.c: 271: }
  1878                           ;prev11.c: 273: if(f1){
  1879  04CA  0865               	movf	(_f1+1)^080h,w
  1880  04CB  0464               	iorwf	(_f1)^080h,w
  1881  04CC  1903               	skipnz
  1882  04CD  2CCF               	goto	u4721
  1883  04CE  2CD0               	goto	u4720
  1884  04CF                     u4721:
  1885  04CF  2CD6               	goto	l3873
  1886  04D0                     u4720:
  1887                           	line	274
  1888                           	
  1889  04D0                     l3871:	
  1890                           ;prev11.c: 274: startswitch();
  1891  04D0  120A  118A  21A4   	fcall	_startswitch
              120A  118A         
  1892                           	line	275
  1893                           ;prev11.c: 275: }
  1894  04D5  2C6B               	goto	l3841
  1895                           	line	276
  1896                           	
  1897  04D6                     l1123:	
  1898                           	
  1899  04D6                     l3873:	
  1900                           ;prev11.c: 276: else if(f2){ f1=0; f2=0; f3=0;
  1901  04D6  1683               	bsf	status, 5	;RP0=1, select bank1
  1902  04D7  1303               	bcf	status, 6	;RP1=0, select bank1
  1903  04D8  0867               	movf	(_f2+1)^080h,w
  1904  04D9  0466               	iorwf	(_f2)^080h,w
  1905  04DA  1903               	skipnz
  1906  04DB  2CDD               	goto	u4731
  1907  04DC  2CDE               	goto	u4730
  1908  04DD                     u4731:
  1909  04DD  2CE6               	goto	l3879
  1910  04DE                     u4730:
  1911                           	
  1912  04DE                     l3875:	
  1913  04DE  01E4               	clrf	(_f1)^080h
  1914  04DF  01E5               	clrf	(_f1+1)^080h
  1915  04E0  01E6               	clrf	(_f2)^080h
  1916  04E1  01E7               	clrf	(_f2+1)^080h
  1917  04E2  01E8               	clrf	(_f3)^080h
  1918  04E3  01E9               	clrf	(_f3+1)^080h
  1919                           	line	277
  1920                           ;prev11.c: 277: goto START_SEQ;
  1921  04E4  2CFC               	goto	l3885
  1922                           	line	278
  1923                           	
  1924  04E5                     l3877:	
  1925                           ;prev11.c: 278: }
  1926  04E5  2C6B               	goto	l3841
  1927                           	line	279
  1928                           	
  1929  04E6                     l1125:	
  1930                           	
  1931  04E6                     l3879:	
  1932                           ;prev11.c: 279: else if(f3){ f1=0; f2=0; f3=0;
  1933  04E6  0869               	movf	(_f3+1)^080h,w
  1934  04E7  0468               	iorwf	(_f3)^080h,w
  1935  04E8  1903               	skipnz
  1936  04E9  2CEB               	goto	u4741
  1937  04EA  2CEC               	goto	u4740
  1938  04EB                     u4741:
  1939  04EB  2C6B               	goto	l3841
  1940  04EC                     u4740:
  1941                           	
  1942  04EC                     l3881:	
  1943  04EC  01E4               	clrf	(_f1)^080h
  1944  04ED  01E5               	clrf	(_f1+1)^080h
  1945  04EE  01E6               	clrf	(_f2)^080h
  1946  04EF  01E7               	clrf	(_f2+1)^080h
  1947  04F0  01E8               	clrf	(_f3)^080h
  1948  04F1  01E9               	clrf	(_f3+1)^080h
  1949                           	line	280
  1950                           	
  1951  04F2                     l3883:	
  1952                           ;prev11.c: 280: retm=1;
  1953  04F2  3001               	movlw	low(01h)
  1954  04F3  00EA               	movwf	(_retm)^080h
  1955  04F4  3000               	movlw	high(01h)
  1956  04F5  00EB               	movwf	((_retm)^080h)+1
  1957  04F6  2C6B               	goto	l3841
  1958                           	line	282
  1959                           	
  1960  04F7                     l1128:	
  1961  04F7  2C6B               	goto	l3841
  1962                           	line	283
  1963                           	
  1964  04F8                     l1127:	
  1965  04F8  2C6B               	goto	l3841
  1966                           	
  1967  04F9                     l1124:	
  1968  04F9  2C6B               	goto	l3841
  1969                           	
  1970  04FA                     l1129:	
  1971                           	line	242
  1972  04FA  2C6B               	goto	l3841
  1973                           	
  1974  04FB                     l1130:	
  1975  04FB  2CFC               	goto	l3885
  1976                           	line	286
  1977                           ;prev11.c: 282: }
  1978                           ;prev11.c: 283: }
  1979                           ;prev11.c: 286: START_SEQ:
  1980                           	
  1981  04FC                     l1126:	
  1982                           	line	287
  1983                           	
  1984  04FC                     l3885:	
  1985                           ;prev11.c: 287: write("Press 2. - Skip for Device",1,1);
  1986  04FC  303F               	movlw	low(STR_7|8000h)
  1987  04FD  1283               	bcf	status, 5	;RP0=0, select bank0
  1988  04FE  1303               	bcf	status, 6	;RP1=0, select bank0
  1989  04FF  00C2               	movwf	(?_write)
  1990  0500  3088               	movlw	high(STR_7|8000h)
  1991  0501  00C3               	movwf	((?_write))+1
  1992  0502  3001               	movlw	low(01h)
  1993  0503  00C4               	movwf	0+(?_write)+02h
  1994  0504  3000               	movlw	high(01h)
  1995  0505  00C5               	movwf	(0+(?_write)+02h)+1
  1996  0506  3001               	movlw	low(01h)
  1997  0507  00C6               	movwf	0+(?_write)+04h
  1998  0508  3000               	movlw	high(01h)
  1999  0509  00C7               	movwf	(0+(?_write)+04h)+1
  2000  050A  120A  158A  257B   	fcall	_write
              120A  118A         
  2001                           	line	288
  2002                           	
  2003  050F                     l3887:	
  2004                           ;prev11.c: 288: delay(5000);
  2005  050F  3088               	movlw	low(01388h)
  2006  0510  00F0               	movwf	(?_delay)
  2007  0511  3013               	movlw	high(01388h)
  2008  0512  00F1               	movwf	((?_delay))+1
  2009  0513  120A  158A  234B   	fcall	_delay
              120A  118A         
  2010                           	line	290
  2011                           	
  2012  0518                     l3889:	
  2013                           ;prev11.c: 290: wf=0;ccount=0;
  2014  0518  1683               	bsf	status, 5	;RP0=1, select bank1
  2015  0519  1303               	bcf	status, 6	;RP1=0, select bank1
  2016  051A  01D4               	clrf	(getlogicseq@wf)^080h
  2017  051B  01D5               	clrf	(getlogicseq@wf+1)^080h
  2018                           	
  2019  051C                     l3891:	
  2020  051C  01D6               	clrf	(getlogicseq@ccount)^080h
  2021  051D  01D7               	clrf	(getlogicseq@ccount+1)^080h
  2022                           	line	291
  2023                           	
  2024  051E                     l3893:	
  2025                           ;prev11.c: 291: strcpy(str,"Enter Logic DEV1:  ");
  2026  051E  30A0               	movlw	(getlogicseq@str&0ffh)
  2027  051F  00F0               	movwf	(?_strcpy)
  2028  0520  3000               	movlw	(0x1/2)
  2029  0521  00F1               	movwf	(?_strcpy+1)
  2030  0522  305A               	movlw	low(STR_8|8000h)
  2031  0523  00F2               	movwf	0+(?_strcpy)+02h
  2032  0524  3088               	movlw	high(STR_8|8000h)
  2033  0525  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2034  0526  120A  158A  243E   	fcall	_strcpy
              120A  118A         
  2035                           	line	292
  2036                           	
  2037  052B                     l3895:	
  2038                           ;prev11.c: 292: write(str,1,1);
  2039  052B  30A0               	movlw	(getlogicseq@str&0ffh)
  2040  052C  1283               	bcf	status, 5	;RP0=0, select bank0
  2041  052D  1303               	bcf	status, 6	;RP1=0, select bank0
  2042  052E  00C2               	movwf	(?_write)
  2043  052F  3000               	movlw	(0x1/2)
  2044  0530  00C3               	movwf	(?_write+1)
  2045  0531  3001               	movlw	low(01h)
  2046  0532  00C4               	movwf	0+(?_write)+02h
  2047  0533  3000               	movlw	high(01h)
  2048  0534  00C5               	movwf	(0+(?_write)+02h)+1
  2049  0535  3001               	movlw	low(01h)
  2050  0536  00C6               	movwf	0+(?_write)+04h
  2051  0537  3000               	movlw	high(01h)
  2052  0538  00C7               	movwf	(0+(?_write)+04h)+1
  2053  0539  120A  158A  257B   	fcall	_write
              120A  118A         
  2054                           	line	293
  2055                           	
  2056  053E                     l3897:	
  2057                           ;prev11.c: 293: write(logic_d1,2,0);
  2058  053E  30DA               	movlw	(_logic_d1&0ffh)
  2059  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  2060  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  2061  0541  00C2               	movwf	(?_write)
  2062  0542  3000               	movlw	(0x1/2)
  2063  0543  00C3               	movwf	(?_write+1)
  2064  0544  3002               	movlw	low(02h)
  2065  0545  00C4               	movwf	0+(?_write)+02h
  2066  0546  3000               	movlw	high(02h)
  2067  0547  00C5               	movwf	(0+(?_write)+02h)+1
  2068  0548  3000               	movlw	low(0)
  2069  0549  00C6               	movwf	0+(?_write)+04h
  2070  054A  3000               	movlw	high(0)
  2071  054B  00C7               	movwf	(0+(?_write)+04h)+1
  2072  054C  120A  158A  257B   	fcall	_write
              120A  118A         
  2073                           	line	295
  2074                           ;prev11.c: 295: while(1)
  2075                           	
  2076  0551                     l1131:	
  2077                           	line	297
  2078                           ;prev11.c: 296: {
  2079                           ;prev11.c: 297: num=scan();
  2080  0551  120A  158A  2718   	fcall	_scan
              120A  118A         
  2081  0556  0875               	movf	(1+(?_scan)),w
  2082  0557  1683               	bsf	status, 5	;RP0=1, select bank1
  2083  0558  1303               	bcf	status, 6	;RP1=0, select bank1
  2084  0559  01D9               	clrf	(getlogicseq@num+1)^080h
  2085  055A  07D9               	addwf	(getlogicseq@num+1)^080h
  2086  055B  0874               	movf	(0+(?_scan)),w
  2087  055C  01D8               	clrf	(getlogicseq@num)^080h
  2088  055D  07D8               	addwf	(getlogicseq@num)^080h
  2089                           
  2090                           	line	298
  2091                           	
  2092  055E                     l3899:	
  2093                           ;prev11.c: 298: if(num==1||num==0){
  2094  055E  3001               	movlw	01h
  2095  055F  0658               	xorwf	(getlogicseq@num)^080h,w
  2096  0560  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2097  0561  1903               	skipnz
  2098  0562  2D64               	goto	u4751
  2099  0563  2D65               	goto	u4750
  2100  0564                     u4751:
  2101  0564  2D6C               	goto	l3903
  2102  0565                     u4750:
  2103                           	
  2104  0565                     l3901:	
  2105  0565  0859               	movf	((getlogicseq@num+1)^080h),w
  2106  0566  0458               	iorwf	((getlogicseq@num)^080h),w
  2107  0567  1D03               	skipz
  2108  0568  2D6A               	goto	u4761
  2109  0569  2D6B               	goto	u4760
  2110  056A                     u4761:
  2111  056A  2DDB               	goto	l3917
  2112  056B                     u4760:
  2113  056B  2D6C               	goto	l3903
  2114                           	
  2115  056C                     l1134:	
  2116                           	line	299
  2117                           	
  2118  056C                     l3903:	
  2119                           ;prev11.c: 299: if(wf==0)
  2120  056C  0855               	movf	((getlogicseq@wf+1)^080h),w
  2121  056D  0454               	iorwf	((getlogicseq@wf)^080h),w
  2122  056E  1D03               	skipz
  2123  056F  2D71               	goto	u4771
  2124  0570  2D72               	goto	u4770
  2125  0571                     u4771:
  2126  0571  2DDE               	goto	l3919
  2127  0572                     u4770:
  2128                           	line	301
  2129                           	
  2130  0572                     l3905:	
  2131                           ;prev11.c: 300: {
  2132                           ;prev11.c: 301: if(ccount==0)
  2133  0572  0857               	movf	((getlogicseq@ccount+1)^080h),w
  2134  0573  0456               	iorwf	((getlogicseq@ccount)^080h),w
  2135  0574  1D03               	skipz
  2136  0575  2D77               	goto	u4781
  2137  0576  2D78               	goto	u4780
  2138  0577                     u4781:
  2139  0577  2D85               	goto	l1136
  2140  0578                     u4780:
  2141                           	line	302
  2142                           	
  2143  0578                     l3907:	
  2144                           ;prev11.c: 302: strcpy(logic_d1,"");
  2145  0578  30DA               	movlw	(_logic_d1&0ffh)
  2146  0579  00F0               	movwf	(?_strcpy)
  2147  057A  3000               	movlw	(0x1/2)
  2148  057B  00F1               	movwf	(?_strcpy+1)
  2149  057C  306D               	movlw	low(STR_9|8000h)
  2150  057D  00F2               	movwf	0+(?_strcpy)+02h
  2151  057E  3088               	movlw	high(STR_9|8000h)
  2152  057F  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2153  0580  120A  158A  243E   	fcall	_strcpy
              120A  118A         
  2154                           	
  2155  0585                     l1136:	
  2156                           	line	303
  2157                           ;prev11.c: 303: write("---",2,0);
  2158  0585  3019               	movlw	low(STR_10|8000h)
  2159  0586  1283               	bcf	status, 5	;RP0=0, select bank0
  2160  0587  1303               	bcf	status, 6	;RP1=0, select bank0
  2161  0588  00C2               	movwf	(?_write)
  2162  0589  3089               	movlw	high(STR_10|8000h)
  2163  058A  00C3               	movwf	((?_write))+1
  2164  058B  3002               	movlw	low(02h)
  2165  058C  00C4               	movwf	0+(?_write)+02h
  2166  058D  3000               	movlw	high(02h)
  2167  058E  00C5               	movwf	(0+(?_write)+02h)+1
  2168  058F  3000               	movlw	low(0)
  2169  0590  00C6               	movwf	0+(?_write)+04h
  2170  0591  3000               	movlw	high(0)
  2171  0592  00C7               	movwf	(0+(?_write)+04h)+1
  2172  0593  120A  158A  257B   	fcall	_write
              120A  118A         
  2173                           	line	304
  2174                           ;prev11.c: 304: itoaa(num, snum);
  2175  0598  1683               	bsf	status, 5	;RP0=1, select bank1
  2176  0599  1303               	bcf	status, 6	;RP1=0, select bank1
  2177  059A  0859               	movf	(getlogicseq@num+1)^080h,w
  2178  059B  01FA               	clrf	(?_itoaa+1)
  2179  059C  07FA               	addwf	(?_itoaa+1)
  2180  059D  0858               	movf	(getlogicseq@num)^080h,w
  2181  059E  01F9               	clrf	(?_itoaa)
  2182  059F  07F9               	addwf	(?_itoaa)
  2183                           
  2184  05A0  30C2               	movlw	(getlogicseq@snum)&0ffh
  2185  05A1  1283               	bcf	status, 5	;RP0=0, select bank0
  2186  05A2  1303               	bcf	status, 6	;RP1=0, select bank0
  2187  05A3  00DD               	movwf	(??_getlogicseq+0)+0
  2188  05A4  085D               	movf	(??_getlogicseq+0)+0,w
  2189  05A5  00FB               	movwf	0+(?_itoaa)+02h
  2190  05A6  120A  118A  20B9   	fcall	_itoaa
              120A  118A         
  2191                           	line	305
  2192                           	
  2193  05AB                     l3909:	
  2194                           ;prev11.c: 305: strcat(logic_d1,snum);
  2195  05AB  30DA               	movlw	(_logic_d1&0ffh)
  2196  05AC  00F0               	movwf	(?_strcat)
  2197  05AD  3000               	movlw	(0x1/2)
  2198  05AE  00F1               	movwf	(?_strcat+1)
  2199  05AF  30C2               	movlw	(getlogicseq@snum)&0ffh
  2200  05B0  1283               	bcf	status, 5	;RP0=0, select bank0
  2201  05B1  1303               	bcf	status, 6	;RP1=0, select bank0
  2202  05B2  00DD               	movwf	(??_getlogicseq+0)+0
  2203  05B3  085D               	movf	(??_getlogicseq+0)+0,w
  2204  05B4  00F2               	movwf	0+(?_strcat)+02h
  2205  05B5  120A  158A  2470   	fcall	_strcat
              120A  118A         
  2206                           	line	306
  2207                           	
  2208  05BA                     l3911:	
  2209                           ;prev11.c: 306: write( logic_d1,2,0); ;
  2210  05BA  30DA               	movlw	(_logic_d1&0ffh)
  2211  05BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2212  05BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2213  05BD  00C2               	movwf	(?_write)
  2214  05BE  3000               	movlw	(0x1/2)
  2215  05BF  00C3               	movwf	(?_write+1)
  2216  05C0  3002               	movlw	low(02h)
  2217  05C1  00C4               	movwf	0+(?_write)+02h
  2218  05C2  3000               	movlw	high(02h)
  2219  05C3  00C5               	movwf	(0+(?_write)+02h)+1
  2220  05C4  3000               	movlw	low(0)
  2221  05C5  00C6               	movwf	0+(?_write)+04h
  2222  05C6  3000               	movlw	high(0)
  2223  05C7  00C7               	movwf	(0+(?_write)+04h)+1
  2224  05C8  120A  158A  257B   	fcall	_write
              120A  118A         
  2225                           	line	307
  2226                           	
  2227  05CD                     l3913:	
  2228                           ;prev11.c: 307: wf=1;
  2229  05CD  3001               	movlw	low(01h)
  2230  05CE  1683               	bsf	status, 5	;RP0=1, select bank1
  2231  05CF  1303               	bcf	status, 6	;RP1=0, select bank1
  2232  05D0  00D4               	movwf	(getlogicseq@wf)^080h
  2233  05D1  3000               	movlw	high(01h)
  2234  05D2  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2235                           	line	308
  2236                           	
  2237  05D3                     l3915:	
  2238                           ;prev11.c: 308: ccount++;
  2239  05D3  3001               	movlw	low(01h)
  2240  05D4  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2241  05D5  1803               	skipnc
  2242  05D6  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2243  05D7  3000               	movlw	high(01h)
  2244  05D8  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2245  05D9  2DDE               	goto	l3919
  2246                           	line	309
  2247                           	
  2248  05DA                     l1135:	
  2249                           	line	310
  2250                           ;prev11.c: 309: }
  2251                           ;prev11.c: 310: }
  2252  05DA  2DDE               	goto	l3919
  2253                           	line	311
  2254                           	
  2255  05DB                     l1132:	
  2256                           	line	312
  2257                           	
  2258  05DB                     l3917:	
  2259                           ;prev11.c: 311: else{
  2260                           ;prev11.c: 312: wf=0;
  2261  05DB  01D4               	clrf	(getlogicseq@wf)^080h
  2262  05DC  01D5               	clrf	(getlogicseq@wf+1)^080h
  2263  05DD  2DDE               	goto	l3919
  2264                           	line	313
  2265                           	
  2266  05DE                     l1137:	
  2267                           	line	314
  2268                           	
  2269  05DE                     l3919:	
  2270                           ;prev11.c: 313: }
  2271                           ;prev11.c: 314: if(ccount>=3)
  2272  05DE  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2273  05DF  3A80               	xorlw	80h
  2274  05E0  00FF               	movwf	btemp+1
  2275  05E1  3080               	movlw	(high(03h))^80h
  2276  05E2  027F               	subwf	btemp+1,w
  2277  05E3  1D03               	skipz
  2278  05E4  2DE7               	goto	u4795
  2279  05E5  3003               	movlw	low(03h)
  2280  05E6  0256               	subwf	(getlogicseq@ccount)^080h,w
  2281  05E7                     u4795:
  2282                           
  2283  05E7  1C03               	skipc
  2284  05E8  2DEA               	goto	u4791
  2285  05E9  2DEB               	goto	u4790
  2286  05EA                     u4791:
  2287  05EA  2DED               	goto	l3923
  2288  05EB                     u4790:
  2289  05EB  2E0F               	goto	l3933
  2290                           	line	315
  2291                           	
  2292  05EC                     l3921:	
  2293                           ;prev11.c: 315: break;
  2294  05EC  2E0F               	goto	l3933
  2295                           	
  2296  05ED                     l1138:	
  2297                           	line	318
  2298                           	
  2299  05ED                     l3923:	
  2300                           ;prev11.c: 318: if(num==2)
  2301  05ED  3002               	movlw	02h
  2302  05EE  1683               	bsf	status, 5	;RP0=1, select bank1
  2303  05EF  1303               	bcf	status, 6	;RP1=0, select bank1
  2304  05F0  0658               	xorwf	(getlogicseq@num)^080h,w
  2305  05F1  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2306  05F2  1D03               	skipz
  2307  05F3  2DF5               	goto	u4801
  2308  05F4  2DF6               	goto	u4800
  2309  05F5                     u4801:
  2310  05F5  2E02               	goto	l3929
  2311  05F6                     u4800:
  2312                           	line	320
  2313                           	
  2314  05F6                     l3925:	
  2315                           ;prev11.c: 319: {
  2316                           ;prev11.c: 320: if(nf==0){
  2317  05F6  0853               	movf	((getlogicseq@nf+1)^080h),w
  2318  05F7  0452               	iorwf	((getlogicseq@nf)^080h),w
  2319  05F8  1D03               	skipz
  2320  05F9  2DFB               	goto	u4811
  2321  05FA  2DFC               	goto	u4810
  2322  05FB                     u4811:
  2323  05FB  2D51               	goto	l1131
  2324  05FC                     u4810:
  2325                           	line	321
  2326                           	
  2327  05FC                     l3927:	
  2328                           ;prev11.c: 321: nf=1;
  2329  05FC  3001               	movlw	low(01h)
  2330  05FD  00D2               	movwf	(getlogicseq@nf)^080h
  2331  05FE  3000               	movlw	high(01h)
  2332  05FF  00D3               	movwf	((getlogicseq@nf)^080h)+1
  2333                           	line	322
  2334                           ;prev11.c: 322: break;
  2335  0600  2E0F               	goto	l3933
  2336                           	line	323
  2337                           	
  2338  0601                     l1141:	
  2339                           	line	324
  2340                           ;prev11.c: 323: }
  2341                           ;prev11.c: 324: }
  2342  0601  2D51               	goto	l1131
  2343                           	line	325
  2344                           	
  2345  0602                     l1140:	
  2346                           	
  2347  0602                     l3929:	
  2348                           ;prev11.c: 325: else if(num==99){
  2349  0602  3063               	movlw	063h
  2350  0603  0658               	xorwf	(getlogicseq@num)^080h,w
  2351  0604  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2352  0605  1D03               	skipz
  2353  0606  2E08               	goto	u4821
  2354  0607  2E09               	goto	u4820
  2355  0608                     u4821:
  2356  0608  2D51               	goto	l1131
  2357  0609                     u4820:
  2358                           	line	326
  2359                           	
  2360  0609                     l3931:	
  2361                           ;prev11.c: 326: nf=0;
  2362  0609  01D2               	clrf	(getlogicseq@nf)^080h
  2363  060A  01D3               	clrf	(getlogicseq@nf+1)^080h
  2364  060B  2D51               	goto	l1131
  2365                           	line	327
  2366                           	
  2367  060C                     l1143:	
  2368  060C  2D51               	goto	l1131
  2369                           	line	328
  2370                           	
  2371  060D                     l1142:	
  2372  060D  2D51               	goto	l1131
  2373                           	
  2374  060E                     l1144:	
  2375                           	line	295
  2376  060E  2D51               	goto	l1131
  2377                           	
  2378  060F                     l1139:	
  2379                           	line	331
  2380                           	
  2381  060F                     l3933:	
  2382                           ;prev11.c: 327: }
  2383                           ;prev11.c: 328: }
  2384                           ;prev11.c: 331: wf=0;ccount=0;
  2385  060F  1683               	bsf	status, 5	;RP0=1, select bank1
  2386  0610  1303               	bcf	status, 6	;RP1=0, select bank1
  2387  0611  01D4               	clrf	(getlogicseq@wf)^080h
  2388  0612  01D5               	clrf	(getlogicseq@wf+1)^080h
  2389  0613  01D6               	clrf	(getlogicseq@ccount)^080h
  2390  0614  01D7               	clrf	(getlogicseq@ccount+1)^080h
  2391                           	line	332
  2392                           	
  2393  0615                     l3935:	
  2394                           ;prev11.c: 332: strcpy(str,"Enter Logic DEV2:  ");
  2395  0615  30A0               	movlw	(getlogicseq@str&0ffh)
  2396  0616  00F0               	movwf	(?_strcpy)
  2397  0617  3000               	movlw	(0x1/2)
  2398  0618  00F1               	movwf	(?_strcpy+1)
  2399  0619  306E               	movlw	low(STR_11|8000h)
  2400  061A  00F2               	movwf	0+(?_strcpy)+02h
  2401  061B  3088               	movlw	high(STR_11|8000h)
  2402  061C  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2403  061D  120A  158A  243E   	fcall	_strcpy
              120A  118A         
  2404                           	line	333
  2405                           	
  2406  0622                     l3937:	
  2407                           ;prev11.c: 333: write(str,1,1);
  2408  0622  30A0               	movlw	(getlogicseq@str&0ffh)
  2409  0623  1283               	bcf	status, 5	;RP0=0, select bank0
  2410  0624  1303               	bcf	status, 6	;RP1=0, select bank0
  2411  0625  00C2               	movwf	(?_write)
  2412  0626  3000               	movlw	(0x1/2)
  2413  0627  00C3               	movwf	(?_write+1)
  2414  0628  3001               	movlw	low(01h)
  2415  0629  00C4               	movwf	0+(?_write)+02h
  2416  062A  3000               	movlw	high(01h)
  2417  062B  00C5               	movwf	(0+(?_write)+02h)+1
  2418  062C  3001               	movlw	low(01h)
  2419  062D  00C6               	movwf	0+(?_write)+04h
  2420  062E  3000               	movlw	high(01h)
  2421  062F  00C7               	movwf	(0+(?_write)+04h)+1
  2422  0630  120A  158A  257B   	fcall	_write
              120A  118A         
  2423                           	line	334
  2424                           	
  2425  0635                     l3939:	
  2426                           ;prev11.c: 334: write(logic_d2,2,0);
  2427  0635  30DF               	movlw	(_logic_d2&0ffh)
  2428  0636  1283               	bcf	status, 5	;RP0=0, select bank0
  2429  0637  1303               	bcf	status, 6	;RP1=0, select bank0
  2430  0638  00C2               	movwf	(?_write)
  2431  0639  3000               	movlw	(0x1/2)
  2432  063A  00C3               	movwf	(?_write+1)
  2433  063B  3002               	movlw	low(02h)
  2434  063C  00C4               	movwf	0+(?_write)+02h
  2435  063D  3000               	movlw	high(02h)
  2436  063E  00C5               	movwf	(0+(?_write)+02h)+1
  2437  063F  3000               	movlw	low(0)
  2438  0640  00C6               	movwf	0+(?_write)+04h
  2439  0641  3000               	movlw	high(0)
  2440  0642  00C7               	movwf	(0+(?_write)+04h)+1
  2441  0643  120A  158A  257B   	fcall	_write
              120A  118A         
  2442  0648  2E49               	goto	l3941
  2443                           	line	336
  2444                           ;prev11.c: 336: while(1)
  2445                           	
  2446  0649                     l1145:	
  2447                           	line	338
  2448                           	
  2449  0649                     l3941:	
  2450                           ;prev11.c: 337: {
  2451                           ;prev11.c: 338: num=scan();
  2452  0649  120A  158A  2718   	fcall	_scan
              120A  118A         
  2453  064E  0875               	movf	(1+(?_scan)),w
  2454  064F  1683               	bsf	status, 5	;RP0=1, select bank1
  2455  0650  1303               	bcf	status, 6	;RP1=0, select bank1
  2456  0651  01D9               	clrf	(getlogicseq@num+1)^080h
  2457  0652  07D9               	addwf	(getlogicseq@num+1)^080h
  2458  0653  0874               	movf	(0+(?_scan)),w
  2459  0654  01D8               	clrf	(getlogicseq@num)^080h
  2460  0655  07D8               	addwf	(getlogicseq@num)^080h
  2461                           
  2462                           	line	339
  2463                           	
  2464  0656                     l3943:	
  2465                           ;prev11.c: 339: if(num==1||num==0){
  2466  0656  3001               	movlw	01h
  2467  0657  0658               	xorwf	(getlogicseq@num)^080h,w
  2468  0658  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2469  0659  1903               	skipnz
  2470  065A  2E5C               	goto	u4831
  2471  065B  2E5D               	goto	u4830
  2472  065C                     u4831:
  2473  065C  2E64               	goto	l3947
  2474  065D                     u4830:
  2475                           	
  2476  065D                     l3945:	
  2477  065D  0859               	movf	((getlogicseq@num+1)^080h),w
  2478  065E  0458               	iorwf	((getlogicseq@num)^080h),w
  2479  065F  1D03               	skipz
  2480  0660  2E62               	goto	u4841
  2481  0661  2E63               	goto	u4840
  2482  0662                     u4841:
  2483  0662  2ED3               	goto	l3961
  2484  0663                     u4840:
  2485  0663  2E64               	goto	l3947
  2486                           	
  2487  0664                     l1148:	
  2488                           	line	340
  2489                           	
  2490  0664                     l3947:	
  2491                           ;prev11.c: 340: if(wf==0)
  2492  0664  0855               	movf	((getlogicseq@wf+1)^080h),w
  2493  0665  0454               	iorwf	((getlogicseq@wf)^080h),w
  2494  0666  1D03               	skipz
  2495  0667  2E69               	goto	u4851
  2496  0668  2E6A               	goto	u4850
  2497  0669                     u4851:
  2498  0669  2ED6               	goto	l3963
  2499  066A                     u4850:
  2500                           	line	341
  2501                           	
  2502  066A                     l3949:	
  2503                           ;prev11.c: 341: { if(ccount==0)
  2504  066A  0857               	movf	((getlogicseq@ccount+1)^080h),w
  2505  066B  0456               	iorwf	((getlogicseq@ccount)^080h),w
  2506  066C  1D03               	skipz
  2507  066D  2E6F               	goto	u4861
  2508  066E  2E70               	goto	u4860
  2509  066F                     u4861:
  2510  066F  2E7D               	goto	l1150
  2511  0670                     u4860:
  2512                           	line	342
  2513                           	
  2514  0670                     l3951:	
  2515                           ;prev11.c: 342: strcpy(logic_d2,"");
  2516  0670  30DF               	movlw	(_logic_d2&0ffh)
  2517  0671  00F0               	movwf	(?_strcpy)
  2518  0672  3000               	movlw	(0x1/2)
  2519  0673  00F1               	movwf	(?_strcpy+1)
  2520  0674  306D               	movlw	low(STR_12|8000h)
  2521  0675  00F2               	movwf	0+(?_strcpy)+02h
  2522  0676  3088               	movlw	high(STR_12|8000h)
  2523  0677  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2524  0678  120A  158A  243E   	fcall	_strcpy
              120A  118A         
  2525                           	
  2526  067D                     l1150:	
  2527                           	line	343
  2528                           ;prev11.c: 343: write("---",2,0);
  2529  067D  3019               	movlw	low(STR_13|8000h)
  2530  067E  1283               	bcf	status, 5	;RP0=0, select bank0
  2531  067F  1303               	bcf	status, 6	;RP1=0, select bank0
  2532  0680  00C2               	movwf	(?_write)
  2533  0681  3089               	movlw	high(STR_13|8000h)
  2534  0682  00C3               	movwf	((?_write))+1
  2535  0683  3002               	movlw	low(02h)
  2536  0684  00C4               	movwf	0+(?_write)+02h
  2537  0685  3000               	movlw	high(02h)
  2538  0686  00C5               	movwf	(0+(?_write)+02h)+1
  2539  0687  3000               	movlw	low(0)
  2540  0688  00C6               	movwf	0+(?_write)+04h
  2541  0689  3000               	movlw	high(0)
  2542  068A  00C7               	movwf	(0+(?_write)+04h)+1
  2543  068B  120A  158A  257B   	fcall	_write
              120A  118A         
  2544                           	line	344
  2545                           ;prev11.c: 344: itoaa(num, snum);
  2546  0690  1683               	bsf	status, 5	;RP0=1, select bank1
  2547  0691  1303               	bcf	status, 6	;RP1=0, select bank1
  2548  0692  0859               	movf	(getlogicseq@num+1)^080h,w
  2549  0693  01FA               	clrf	(?_itoaa+1)
  2550  0694  07FA               	addwf	(?_itoaa+1)
  2551  0695  0858               	movf	(getlogicseq@num)^080h,w
  2552  0696  01F9               	clrf	(?_itoaa)
  2553  0697  07F9               	addwf	(?_itoaa)
  2554                           
  2555  0698  30C2               	movlw	(getlogicseq@snum)&0ffh
  2556  0699  1283               	bcf	status, 5	;RP0=0, select bank0
  2557  069A  1303               	bcf	status, 6	;RP1=0, select bank0
  2558  069B  00DD               	movwf	(??_getlogicseq+0)+0
  2559  069C  085D               	movf	(??_getlogicseq+0)+0,w
  2560  069D  00FB               	movwf	0+(?_itoaa)+02h
  2561  069E  120A  118A  20B9   	fcall	_itoaa
              120A  118A         
  2562                           	line	345
  2563                           	
  2564  06A3                     l3953:	
  2565                           ;prev11.c: 345: strcat(logic_d2,snum);
  2566  06A3  30DF               	movlw	(_logic_d2&0ffh)
  2567  06A4  00F0               	movwf	(?_strcat)
  2568  06A5  3000               	movlw	(0x1/2)
  2569  06A6  00F1               	movwf	(?_strcat+1)
  2570  06A7  30C2               	movlw	(getlogicseq@snum)&0ffh
  2571  06A8  1283               	bcf	status, 5	;RP0=0, select bank0
  2572  06A9  1303               	bcf	status, 6	;RP1=0, select bank0
  2573  06AA  00DD               	movwf	(??_getlogicseq+0)+0
  2574  06AB  085D               	movf	(??_getlogicseq+0)+0,w
  2575  06AC  00F2               	movwf	0+(?_strcat)+02h
  2576  06AD  120A  158A  2470   	fcall	_strcat
              120A  118A         
  2577                           	line	346
  2578                           	
  2579  06B2                     l3955:	
  2580                           ;prev11.c: 346: write( logic_d2,2,0); ;
  2581  06B2  30DF               	movlw	(_logic_d2&0ffh)
  2582  06B3  1283               	bcf	status, 5	;RP0=0, select bank0
  2583  06B4  1303               	bcf	status, 6	;RP1=0, select bank0
  2584  06B5  00C2               	movwf	(?_write)
  2585  06B6  3000               	movlw	(0x1/2)
  2586  06B7  00C3               	movwf	(?_write+1)
  2587  06B8  3002               	movlw	low(02h)
  2588  06B9  00C4               	movwf	0+(?_write)+02h
  2589  06BA  3000               	movlw	high(02h)
  2590  06BB  00C5               	movwf	(0+(?_write)+02h)+1
  2591  06BC  3000               	movlw	low(0)
  2592  06BD  00C6               	movwf	0+(?_write)+04h
  2593  06BE  3000               	movlw	high(0)
  2594  06BF  00C7               	movwf	(0+(?_write)+04h)+1
  2595  06C0  120A  158A  257B   	fcall	_write
              120A  118A         
  2596                           	line	347
  2597                           	
  2598  06C5                     l3957:	
  2599                           ;prev11.c: 347: wf=1;
  2600  06C5  3001               	movlw	low(01h)
  2601  06C6  1683               	bsf	status, 5	;RP0=1, select bank1
  2602  06C7  1303               	bcf	status, 6	;RP1=0, select bank1
  2603  06C8  00D4               	movwf	(getlogicseq@wf)^080h
  2604  06C9  3000               	movlw	high(01h)
  2605  06CA  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2606                           	line	348
  2607                           	
  2608  06CB                     l3959:	
  2609                           ;prev11.c: 348: ccount++;
  2610  06CB  3001               	movlw	low(01h)
  2611  06CC  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2612  06CD  1803               	skipnc
  2613  06CE  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2614  06CF  3000               	movlw	high(01h)
  2615  06D0  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2616  06D1  2ED6               	goto	l3963
  2617                           	line	349
  2618                           	
  2619  06D2                     l1149:	
  2620                           	line	350
  2621                           ;prev11.c: 349: }
  2622                           ;prev11.c: 350: }
  2623  06D2  2ED6               	goto	l3963
  2624                           	line	351
  2625                           	
  2626  06D3                     l1146:	
  2627                           	line	352
  2628                           	
  2629  06D3                     l3961:	
  2630                           ;prev11.c: 351: else{
  2631                           ;prev11.c: 352: wf=0;
  2632  06D3  01D4               	clrf	(getlogicseq@wf)^080h
  2633  06D4  01D5               	clrf	(getlogicseq@wf+1)^080h
  2634  06D5  2ED6               	goto	l3963
  2635                           	line	353
  2636                           	
  2637  06D6                     l1151:	
  2638                           	line	354
  2639                           	
  2640  06D6                     l3963:	
  2641                           ;prev11.c: 353: }
  2642                           ;prev11.c: 354: if(ccount>=3)
  2643  06D6  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2644  06D7  3A80               	xorlw	80h
  2645  06D8  00FF               	movwf	btemp+1
  2646  06D9  3080               	movlw	(high(03h))^80h
  2647  06DA  027F               	subwf	btemp+1,w
  2648  06DB  1D03               	skipz
  2649  06DC  2EDF               	goto	u4875
  2650  06DD  3003               	movlw	low(03h)
  2651  06DE  0256               	subwf	(getlogicseq@ccount)^080h,w
  2652  06DF                     u4875:
  2653                           
  2654  06DF  1C03               	skipc
  2655  06E0  2EE2               	goto	u4871
  2656  06E1  2EE3               	goto	u4870
  2657  06E2                     u4871:
  2658  06E2  2EE5               	goto	l3967
  2659  06E3                     u4870:
  2660  06E3  2F07               	goto	l3977
  2661                           	line	355
  2662                           	
  2663  06E4                     l3965:	
  2664                           ;prev11.c: 355: break;
  2665  06E4  2F07               	goto	l3977
  2666                           	
  2667  06E5                     l1152:	
  2668                           	line	357
  2669                           	
  2670  06E5                     l3967:	
  2671                           ;prev11.c: 357: if(num==2)
  2672  06E5  3002               	movlw	02h
  2673  06E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2674  06E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2675  06E8  0658               	xorwf	(getlogicseq@num)^080h,w
  2676  06E9  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2677  06EA  1D03               	skipz
  2678  06EB  2EED               	goto	u4881
  2679  06EC  2EEE               	goto	u4880
  2680  06ED                     u4881:
  2681  06ED  2EFA               	goto	l3973
  2682  06EE                     u4880:
  2683                           	line	359
  2684                           	
  2685  06EE                     l3969:	
  2686                           ;prev11.c: 358: {
  2687                           ;prev11.c: 359: if(nf==0){
  2688  06EE  0853               	movf	((getlogicseq@nf+1)^080h),w
  2689  06EF  0452               	iorwf	((getlogicseq@nf)^080h),w
  2690  06F0  1D03               	skipz
  2691  06F1  2EF3               	goto	u4891
  2692  06F2  2EF4               	goto	u4890
  2693  06F3                     u4891:
  2694  06F3  2E49               	goto	l3941
  2695  06F4                     u4890:
  2696                           	line	360
  2697                           	
  2698  06F4                     l3971:	
  2699                           ;prev11.c: 360: nf=1;
  2700  06F4  3001               	movlw	low(01h)
  2701  06F5  00D2               	movwf	(getlogicseq@nf)^080h
  2702  06F6  3000               	movlw	high(01h)
  2703  06F7  00D3               	movwf	((getlogicseq@nf)^080h)+1
  2704                           	line	361
  2705                           ;prev11.c: 361: break;
  2706  06F8  2F07               	goto	l3977
  2707                           	line	362
  2708                           	
  2709  06F9                     l1155:	
  2710                           	line	363
  2711                           ;prev11.c: 362: }
  2712                           ;prev11.c: 363: }
  2713  06F9  2E49               	goto	l3941
  2714                           	line	364
  2715                           	
  2716  06FA                     l1154:	
  2717                           	
  2718  06FA                     l3973:	
  2719                           ;prev11.c: 364: else if(num==99){
  2720  06FA  3063               	movlw	063h
  2721  06FB  0658               	xorwf	(getlogicseq@num)^080h,w
  2722  06FC  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2723  06FD  1D03               	skipz
  2724  06FE  2F00               	goto	u4901
  2725  06FF  2F01               	goto	u4900
  2726  0700                     u4901:
  2727  0700  2E49               	goto	l3941
  2728  0701                     u4900:
  2729                           	line	365
  2730                           	
  2731  0701                     l3975:	
  2732                           ;prev11.c: 365: nf=0;
  2733  0701  01D2               	clrf	(getlogicseq@nf)^080h
  2734  0702  01D3               	clrf	(getlogicseq@nf+1)^080h
  2735  0703  2E49               	goto	l3941
  2736                           	line	366
  2737                           	
  2738  0704                     l1157:	
  2739  0704  2E49               	goto	l3941
  2740                           	line	367
  2741                           	
  2742  0705                     l1156:	
  2743  0705  2E49               	goto	l3941
  2744                           	
  2745  0706                     l1158:	
  2746                           	line	336
  2747  0706  2E49               	goto	l3941
  2748                           	
  2749  0707                     l1153:	
  2750                           	line	370
  2751                           	
  2752  0707                     l3977:	
  2753                           ;prev11.c: 366: }
  2754                           ;prev11.c: 367: }
  2755                           ;prev11.c: 370: wf=0;ccount=0;
  2756  0707  1683               	bsf	status, 5	;RP0=1, select bank1
  2757  0708  1303               	bcf	status, 6	;RP1=0, select bank1
  2758  0709  01D4               	clrf	(getlogicseq@wf)^080h
  2759  070A  01D5               	clrf	(getlogicseq@wf+1)^080h
  2760  070B  01D6               	clrf	(getlogicseq@ccount)^080h
  2761  070C  01D7               	clrf	(getlogicseq@ccount+1)^080h
  2762                           	line	371
  2763                           	
  2764  070D                     l3979:	
  2765                           ;prev11.c: 371: strcpy(str,"Enter Logic DEV3:  ");
  2766  070D  30A0               	movlw	(getlogicseq@str&0ffh)
  2767  070E  00F0               	movwf	(?_strcpy)
  2768  070F  3000               	movlw	(0x1/2)
  2769  0710  00F1               	movwf	(?_strcpy+1)
  2770  0711  3082               	movlw	low(STR_14|8000h)
  2771  0712  00F2               	movwf	0+(?_strcpy)+02h
  2772  0713  3088               	movlw	high(STR_14|8000h)
  2773  0714  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2774  0715  120A  158A  243E   	fcall	_strcpy
              120A  118A         
  2775                           	line	372
  2776                           	
  2777  071A                     l3981:	
  2778                           ;prev11.c: 372: write(str,1,1);
  2779  071A  30A0               	movlw	(getlogicseq@str&0ffh)
  2780  071B  1283               	bcf	status, 5	;RP0=0, select bank0
  2781  071C  1303               	bcf	status, 6	;RP1=0, select bank0
  2782  071D  00C2               	movwf	(?_write)
  2783  071E  3000               	movlw	(0x1/2)
  2784  071F  00C3               	movwf	(?_write+1)
  2785  0720  3001               	movlw	low(01h)
  2786  0721  00C4               	movwf	0+(?_write)+02h
  2787  0722  3000               	movlw	high(01h)
  2788  0723  00C5               	movwf	(0+(?_write)+02h)+1
  2789  0724  3001               	movlw	low(01h)
  2790  0725  00C6               	movwf	0+(?_write)+04h
  2791  0726  3000               	movlw	high(01h)
  2792  0727  00C7               	movwf	(0+(?_write)+04h)+1
  2793  0728  120A  158A  257B   	fcall	_write
              120A  118A         
  2794                           	line	373
  2795                           	
  2796  072D                     l3983:	
  2797                           ;prev11.c: 373: write(logic_d3,2,0);
  2798  072D  30A5               	movlw	(_logic_d3&0ffh)
  2799  072E  1283               	bcf	status, 5	;RP0=0, select bank0
  2800  072F  1303               	bcf	status, 6	;RP1=0, select bank0
  2801  0730  00C2               	movwf	(?_write)
  2802  0731  3001               	movlw	(0x3/2)
  2803  0732  00C3               	movwf	(?_write+1)
  2804  0733  3002               	movlw	low(02h)
  2805  0734  00C4               	movwf	0+(?_write)+02h
  2806  0735  3000               	movlw	high(02h)
  2807  0736  00C5               	movwf	(0+(?_write)+02h)+1
  2808  0737  3000               	movlw	low(0)
  2809  0738  00C6               	movwf	0+(?_write)+04h
  2810  0739  3000               	movlw	high(0)
  2811  073A  00C7               	movwf	(0+(?_write)+04h)+1
  2812  073B  120A  158A  257B   	fcall	_write
              120A  118A         
  2813  0740  2F41               	goto	l3985
  2814                           	line	375
  2815                           ;prev11.c: 375: while(1)
  2816                           	
  2817  0741                     l1159:	
  2818                           	line	377
  2819                           	
  2820  0741                     l3985:	
  2821                           ;prev11.c: 376: {
  2822                           ;prev11.c: 377: num=scan();
  2823  0741  120A  158A  2718   	fcall	_scan
              120A  118A         
  2824  0746  0875               	movf	(1+(?_scan)),w
  2825  0747  1683               	bsf	status, 5	;RP0=1, select bank1
  2826  0748  1303               	bcf	status, 6	;RP1=0, select bank1
  2827  0749  01D9               	clrf	(getlogicseq@num+1)^080h
  2828  074A  07D9               	addwf	(getlogicseq@num+1)^080h
  2829  074B  0874               	movf	(0+(?_scan)),w
  2830  074C  01D8               	clrf	(getlogicseq@num)^080h
  2831  074D  07D8               	addwf	(getlogicseq@num)^080h
  2832                           
  2833                           	line	378
  2834                           	
  2835  074E                     l3987:	
  2836                           ;prev11.c: 378: if(num==1||num==0){
  2837  074E  3001               	movlw	01h
  2838  074F  0658               	xorwf	(getlogicseq@num)^080h,w
  2839  0750  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2840  0751  1903               	skipnz
  2841  0752  2F54               	goto	u4911
  2842  0753  2F55               	goto	u4910
  2843  0754                     u4911:
  2844  0754  2F5C               	goto	l3991
  2845  0755                     u4910:
  2846                           	
  2847  0755                     l3989:	
  2848  0755  0859               	movf	((getlogicseq@num+1)^080h),w
  2849  0756  0458               	iorwf	((getlogicseq@num)^080h),w
  2850  0757  1D03               	skipz
  2851  0758  2F5A               	goto	u4921
  2852  0759  2F5B               	goto	u4920
  2853  075A                     u4921:
  2854  075A  2FCB               	goto	l4005
  2855  075B                     u4920:
  2856  075B  2F5C               	goto	l3991
  2857                           	
  2858  075C                     l1162:	
  2859                           	line	379
  2860                           	
  2861  075C                     l3991:	
  2862                           ;prev11.c: 379: if(wf==0)
  2863  075C  0855               	movf	((getlogicseq@wf+1)^080h),w
  2864  075D  0454               	iorwf	((getlogicseq@wf)^080h),w
  2865  075E  1D03               	skipz
  2866  075F  2F61               	goto	u4931
  2867  0760  2F62               	goto	u4930
  2868  0761                     u4931:
  2869  0761  2FCE               	goto	l4007
  2870  0762                     u4930:
  2871                           	line	380
  2872                           	
  2873  0762                     l3993:	
  2874                           ;prev11.c: 380: { if(ccount==0)
  2875  0762  0857               	movf	((getlogicseq@ccount+1)^080h),w
  2876  0763  0456               	iorwf	((getlogicseq@ccount)^080h),w
  2877  0764  1D03               	skipz
  2878  0765  2F67               	goto	u4941
  2879  0766  2F68               	goto	u4940
  2880  0767                     u4941:
  2881  0767  2F75               	goto	l1164
  2882  0768                     u4940:
  2883                           	line	381
  2884                           	
  2885  0768                     l3995:	
  2886                           ;prev11.c: 381: strcpy(logic_d3,"");
  2887  0768  30A5               	movlw	(_logic_d3&0ffh)
  2888  0769  00F0               	movwf	(?_strcpy)
  2889  076A  3001               	movlw	(0x3/2)
  2890  076B  00F1               	movwf	(?_strcpy+1)
  2891  076C  306D               	movlw	low(STR_15|8000h)
  2892  076D  00F2               	movwf	0+(?_strcpy)+02h
  2893  076E  3088               	movlw	high(STR_15|8000h)
  2894  076F  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2895  0770  120A  158A  243E   	fcall	_strcpy
              120A  118A         
  2896                           	
  2897  0775                     l1164:	
  2898                           	line	382
  2899                           ;prev11.c: 382: write("---",2,0);
  2900  0775  3019               	movlw	low(STR_16|8000h)
  2901  0776  1283               	bcf	status, 5	;RP0=0, select bank0
  2902  0777  1303               	bcf	status, 6	;RP1=0, select bank0
  2903  0778  00C2               	movwf	(?_write)
  2904  0779  3089               	movlw	high(STR_16|8000h)
  2905  077A  00C3               	movwf	((?_write))+1
  2906  077B  3002               	movlw	low(02h)
  2907  077C  00C4               	movwf	0+(?_write)+02h
  2908  077D  3000               	movlw	high(02h)
  2909  077E  00C5               	movwf	(0+(?_write)+02h)+1
  2910  077F  3000               	movlw	low(0)
  2911  0780  00C6               	movwf	0+(?_write)+04h
  2912  0781  3000               	movlw	high(0)
  2913  0782  00C7               	movwf	(0+(?_write)+04h)+1
  2914  0783  120A  158A  257B   	fcall	_write
              120A  118A         
  2915                           	line	383
  2916                           ;prev11.c: 383: itoaa(num, snum);
  2917  0788  1683               	bsf	status, 5	;RP0=1, select bank1
  2918  0789  1303               	bcf	status, 6	;RP1=0, select bank1
  2919  078A  0859               	movf	(getlogicseq@num+1)^080h,w
  2920  078B  01FA               	clrf	(?_itoaa+1)
  2921  078C  07FA               	addwf	(?_itoaa+1)
  2922  078D  0858               	movf	(getlogicseq@num)^080h,w
  2923  078E  01F9               	clrf	(?_itoaa)
  2924  078F  07F9               	addwf	(?_itoaa)
  2925                           
  2926  0790  30C2               	movlw	(getlogicseq@snum)&0ffh
  2927  0791  1283               	bcf	status, 5	;RP0=0, select bank0
  2928  0792  1303               	bcf	status, 6	;RP1=0, select bank0
  2929  0793  00DD               	movwf	(??_getlogicseq+0)+0
  2930  0794  085D               	movf	(??_getlogicseq+0)+0,w
  2931  0795  00FB               	movwf	0+(?_itoaa)+02h
  2932  0796  120A  118A  20B9   	fcall	_itoaa
              120A  118A         
  2933                           	line	384
  2934                           	
  2935  079B                     l3997:	
  2936                           ;prev11.c: 384: strcat(logic_d3,snum);
  2937  079B  30A5               	movlw	(_logic_d3&0ffh)
  2938  079C  00F0               	movwf	(?_strcat)
  2939  079D  3001               	movlw	(0x3/2)
  2940  079E  00F1               	movwf	(?_strcat+1)
  2941  079F  30C2               	movlw	(getlogicseq@snum)&0ffh
  2942  07A0  1283               	bcf	status, 5	;RP0=0, select bank0
  2943  07A1  1303               	bcf	status, 6	;RP1=0, select bank0
  2944  07A2  00DD               	movwf	(??_getlogicseq+0)+0
  2945  07A3  085D               	movf	(??_getlogicseq+0)+0,w
  2946  07A4  00F2               	movwf	0+(?_strcat)+02h
  2947  07A5  120A  158A  2470   	fcall	_strcat
              120A  118A         
  2948                           	line	385
  2949                           	
  2950  07AA                     l3999:	
  2951                           ;prev11.c: 385: write( logic_d3,2,0); ;
  2952  07AA  30A5               	movlw	(_logic_d3&0ffh)
  2953  07AB  1283               	bcf	status, 5	;RP0=0, select bank0
  2954  07AC  1303               	bcf	status, 6	;RP1=0, select bank0
  2955  07AD  00C2               	movwf	(?_write)
  2956  07AE  3001               	movlw	(0x3/2)
  2957  07AF  00C3               	movwf	(?_write+1)
  2958  07B0  3002               	movlw	low(02h)
  2959  07B1  00C4               	movwf	0+(?_write)+02h
  2960  07B2  3000               	movlw	high(02h)
  2961  07B3  00C5               	movwf	(0+(?_write)+02h)+1
  2962  07B4  3000               	movlw	low(0)
  2963  07B5  00C6               	movwf	0+(?_write)+04h
  2964  07B6  3000               	movlw	high(0)
  2965  07B7  00C7               	movwf	(0+(?_write)+04h)+1
  2966  07B8  120A  158A  257B   	fcall	_write
              120A  118A         
  2967                           	line	386
  2968                           	
  2969  07BD                     l4001:	
  2970                           ;prev11.c: 386: wf=1;
  2971  07BD  3001               	movlw	low(01h)
  2972  07BE  1683               	bsf	status, 5	;RP0=1, select bank1
  2973  07BF  1303               	bcf	status, 6	;RP1=0, select bank1
  2974  07C0  00D4               	movwf	(getlogicseq@wf)^080h
  2975  07C1  3000               	movlw	high(01h)
  2976  07C2  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2977                           	line	387
  2978                           	
  2979  07C3                     l4003:	
  2980                           ;prev11.c: 387: ccount++;
  2981  07C3  3001               	movlw	low(01h)
  2982  07C4  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2983  07C5  1803               	skipnc
  2984  07C6  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2985  07C7  3000               	movlw	high(01h)
  2986  07C8  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2987  07C9  2FCE               	goto	l4007
  2988                           	line	388
  2989                           	
  2990  07CA                     l1163:	
  2991                           	line	389
  2992                           ;prev11.c: 388: }
  2993                           ;prev11.c: 389: }
  2994  07CA  2FCE               	goto	l4007
  2995                           	line	390
  2996                           	
  2997  07CB                     l1160:	
  2998                           	line	391
  2999                           	
  3000  07CB                     l4005:	
  3001                           ;prev11.c: 390: else{
  3002                           ;prev11.c: 391: wf=0;
  3003  07CB  01D4               	clrf	(getlogicseq@wf)^080h
  3004  07CC  01D5               	clrf	(getlogicseq@wf+1)^080h
  3005  07CD  2FCE               	goto	l4007
  3006                           	line	392
  3007                           	
  3008  07CE                     l1165:	
  3009                           	line	393
  3010                           	
  3011  07CE                     l4007:	
  3012                           ;prev11.c: 392: }
  3013                           ;prev11.c: 393: if(ccount>=3)
  3014  07CE  0857               	movf	(getlogicseq@ccount+1)^080h,w
  3015  07CF  3A80               	xorlw	80h
  3016  07D0  00FF               	movwf	btemp+1
  3017  07D1  3080               	movlw	(high(03h))^80h
  3018  07D2  027F               	subwf	btemp+1,w
  3019  07D3  1D03               	skipz
  3020  07D4  2FD7               	goto	u4955
  3021  07D5  3003               	movlw	low(03h)
  3022  07D6  0256               	subwf	(getlogicseq@ccount)^080h,w
  3023  07D7                     u4955:
  3024                           
  3025  07D7  1C03               	skipc
  3026  07D8  2FDA               	goto	u4951
  3027  07D9  2FDB               	goto	u4950
  3028  07DA                     u4951:
  3029  07DA  2FDD               	goto	l4011
  3030  07DB                     u4950:
  3031  07DB  2FFF               	goto	l1119
  3032                           	line	394
  3033                           	
  3034  07DC                     l4009:	
  3035                           ;prev11.c: 394: break;
  3036  07DC  2FFF               	goto	l1119
  3037                           	
  3038  07DD                     l1166:	
  3039                           	line	396
  3040                           	
  3041  07DD                     l4011:	
  3042                           ;prev11.c: 396: if(num==2)
  3043  07DD  3002               	movlw	02h
  3044  07DE  1683               	bsf	status, 5	;RP0=1, select bank1
  3045  07DF  1303               	bcf	status, 6	;RP1=0, select bank1
  3046  07E0  0658               	xorwf	(getlogicseq@num)^080h,w
  3047  07E1  0459               	iorwf	(getlogicseq@num+1)^080h,w
  3048  07E2  1D03               	skipz
  3049  07E3  2FE5               	goto	u4961
  3050  07E4  2FE6               	goto	u4960
  3051  07E5                     u4961:
  3052  07E5  2FF2               	goto	l4017
  3053  07E6                     u4960:
  3054                           	line	398
  3055                           	
  3056  07E6                     l4013:	
  3057                           ;prev11.c: 397: {
  3058                           ;prev11.c: 398: if(nf==0){
  3059  07E6  0853               	movf	((getlogicseq@nf+1)^080h),w
  3060  07E7  0452               	iorwf	((getlogicseq@nf)^080h),w
  3061  07E8  1D03               	skipz
  3062  07E9  2FEB               	goto	u4971
  3063  07EA  2FEC               	goto	u4970
  3064  07EB                     u4971:
  3065  07EB  2F41               	goto	l3985
  3066  07EC                     u4970:
  3067                           	line	399
  3068                           	
  3069  07EC                     l4015:	
  3070                           ;prev11.c: 399: nf=1;
  3071  07EC  3001               	movlw	low(01h)
  3072  07ED  00D2               	movwf	(getlogicseq@nf)^080h
  3073  07EE  3000               	movlw	high(01h)
  3074  07EF  00D3               	movwf	((getlogicseq@nf)^080h)+1
  3075                           	line	400
  3076                           ;prev11.c: 400: break;
  3077  07F0  2FFF               	goto	l1119
  3078                           	line	401
  3079                           	
  3080  07F1                     l1169:	
  3081                           	line	402
  3082                           ;prev11.c: 401: }
  3083                           ;prev11.c: 402: }
  3084  07F1  2F41               	goto	l3985
  3085                           	line	403
  3086                           	
  3087  07F2                     l1168:	
  3088                           	
  3089  07F2                     l4017:	
  3090                           ;prev11.c: 403: else if(num==99){
  3091  07F2  3063               	movlw	063h
  3092  07F3  0658               	xorwf	(getlogicseq@num)^080h,w
  3093  07F4  0459               	iorwf	(getlogicseq@num+1)^080h,w
  3094  07F5  1D03               	skipz
  3095  07F6  2FF8               	goto	u4981
  3096  07F7  2FF9               	goto	u4980
  3097  07F8                     u4981:
  3098  07F8  2F41               	goto	l3985
  3099  07F9                     u4980:
  3100                           	line	404
  3101                           	
  3102  07F9                     l4019:	
  3103                           ;prev11.c: 404: nf=0;
  3104  07F9  01D2               	clrf	(getlogicseq@nf)^080h
  3105  07FA  01D3               	clrf	(getlogicseq@nf+1)^080h
  3106  07FB  2F41               	goto	l3985
  3107                           	line	405
  3108                           	
  3109  07FC                     l1171:	
  3110  07FC  2F41               	goto	l3985
  3111                           	line	406
  3112                           	
  3113  07FD                     l1170:	
  3114  07FD  2F41               	goto	l3985
  3115                           	
  3116  07FE                     l1172:	
  3117                           	line	375
  3118  07FE  2F41               	goto	l3985
  3119                           	
  3120  07FF                     l1167:	
  3121                           	line	452
  3122                           	
  3123  07FF                     l1119:	
  3124  07FF  0008               	return
  3125                           	opt stack 0
  3126                           GLOBAL	__end_of_getlogicseq
  3127  0800                     	__end_of_getlogicseq:
  3128 ;; =============== function _getlogicseq ends ============
  3129                           
  3130                           	signat	_getlogicseq,88
  3131                           	global	_startswitch
  3132                           psect	text571,local,class=CODE,delta=2
  3133                           global __ptext571
  3134  01A4                     __ptext571:
  3135                           
  3136 ;; *************** function _startswitch *****************
  3137 ;; Defined at:
  3138 ;;		line 169 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;		None               void
  3145 ;; Registers used:
  3146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0
  3154 ;;      Temps:          0       2       0       0       0
  3155 ;;      Totals:         0       2       0       0       0
  3156 ;;Total ram usage:        2 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    6
  3159 ;; This function calls:
  3160 ;;		_init_fun
  3161 ;;		_strcpy
  3162 ;;		_write
  3163 ;;		_strcmp
  3164 ;;		_check
  3165 ;; This function is called by:
  3166 ;;		_getlogicseq
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           psect	text571
  3170                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3171                           	line	169
  3172                           	global	__size_of_startswitch
  3173  0115                     	__size_of_startswitch	equ	__end_of_startswitch-_startswitch
  3174                           	
  3175  01A4                     _startswitch:	
  3176                           	opt	stack 0
  3177                           ; Regs used in _startswitch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3178                           	line	170
  3179                           	
  3180  01A4                     l3777:	
  3181                           ;prev11.c: 170: init_fun();
  3182  01A4  120A  158A  23C2   	fcall	_init_fun
              120A  118A         
  3183                           	line	173
  3184                           ;prev11.c: 173: strcpy(plo,lo);
  3185  01A9  30AA               	movlw	(_plo&0ffh)
  3186  01AA  00F0               	movwf	(?_strcpy)
  3187  01AB  3001               	movlw	(0x3/2)
  3188  01AC  00F1               	movwf	(?_strcpy+1)
  3189  01AD  3068               	movlw	(_lo&0ffh)
  3190  01AE  00F2               	movwf	0+(?_strcpy)+02h
  3191  01AF  3000               	movlw	(0x0/2)
  3192  01B0  00F3               	movwf	1+(?_strcpy)+02h
  3193  01B1  120A  158A  243E   	fcall	_strcpy
              120A  118A         
  3194                           	line	174
  3195                           ;prev11.c: 174: strcpy(lo,"000");;
  3196  01B6  3068               	movlw	(_lo&0ffh)
  3197  01B7  00F0               	movwf	(?_strcpy)
  3198  01B8  3000               	movlw	(0x0/2)
  3199  01B9  00F1               	movwf	(?_strcpy+1)
  3200  01BA  30CA               	movlw	low(STR_2|8000h)
  3201  01BB  00F2               	movwf	0+(?_strcpy)+02h
  3202  01BC  3088               	movlw	high(STR_2|8000h)
  3203  01BD  00F3               	movwf	(0+(?_strcpy)+02h)+1
  3204  01BE  120A  158A  243E   	fcall	_strcpy
              120A  118A         
  3205                           	line	175
  3206                           	
  3207  01C3                     l3779:	
  3208                           ;prev11.c: 175: if(RA0==1)
  3209  01C3  1283               	bcf	status, 5	;RP0=0, select bank0
  3210  01C4  1303               	bcf	status, 6	;RP1=0, select bank0
  3211  01C5  1C05               	btfss	(40/8),(40)&7
  3212  01C6  29C8               	goto	u4521
  3213  01C7  29C9               	goto	u4520
  3214  01C8                     u4521:
  3215  01C8  29CE               	goto	l3783
  3216  01C9                     u4520:
  3217                           	line	176
  3218                           	
  3219  01C9                     l3781:	
  3220                           ;prev11.c: 176: lo[0]='1';
  3221  01C9  3031               	movlw	(031h)
  3222  01CA  00C8               	movwf	(??_startswitch+0)+0
  3223  01CB  0848               	movf	(??_startswitch+0)+0,w
  3224  01CC  00E8               	movwf	(_lo)
  3225  01CD  29CE               	goto	l3783
  3226                           	
  3227  01CE                     l1102:	
  3228                           	line	177
  3229                           	
  3230  01CE                     l3783:	
  3231                           ;prev11.c: 177: if(RA1==1)
  3232  01CE  1C85               	btfss	(41/8),(41)&7
  3233  01CF  29D1               	goto	u4531
  3234  01D0  29D2               	goto	u4530
  3235  01D1                     u4531:
  3236  01D1  29D7               	goto	l3787
  3237  01D2                     u4530:
  3238                           	line	178
  3239                           	
  3240  01D2                     l3785:	
  3241                           ;prev11.c: 178: lo[1]='1';
  3242  01D2  3031               	movlw	(031h)
  3243  01D3  00C8               	movwf	(??_startswitch+0)+0
  3244  01D4  0848               	movf	(??_startswitch+0)+0,w
  3245  01D5  00E9               	movwf	0+(_lo)+01h
  3246  01D6  29D7               	goto	l3787
  3247                           	
  3248  01D7                     l1103:	
  3249                           	line	179
  3250                           	
  3251  01D7                     l3787:	
  3252                           ;prev11.c: 179: if(RA2==1)
  3253  01D7  1D05               	btfss	(42/8),(42)&7
  3254  01D8  29DA               	goto	u4541
  3255  01D9  29DB               	goto	u4540
  3256  01DA                     u4541:
  3257  01DA  29E0               	goto	l3791
  3258  01DB                     u4540:
  3259                           	line	180
  3260                           	
  3261  01DB                     l3789:	
  3262                           ;prev11.c: 180: lo[2]='1';
  3263  01DB  3031               	movlw	(031h)
  3264  01DC  00C8               	movwf	(??_startswitch+0)+0
  3265  01DD  0848               	movf	(??_startswitch+0)+0,w
  3266  01DE  00EA               	movwf	0+(_lo)+02h
  3267  01DF  29E0               	goto	l3791
  3268                           	
  3269  01E0                     l1104:	
  3270                           	line	183
  3271                           	
  3272  01E0                     l3791:	
  3273                           ;prev11.c: 183: pdev=dev;
  3274  01E0  0862               	movf	(_dev+1),w
  3275  01E1  01E6               	clrf	(_pdev+1)
  3276  01E2  07E6               	addwf	(_pdev+1)
  3277  01E3  0861               	movf	(_dev),w
  3278  01E4  01E5               	clrf	(_pdev)
  3279  01E5  07E5               	addwf	(_pdev)
  3280                           
  3281                           	line	184
  3282                           	
  3283  01E6                     l3793:	
  3284                           ;prev11.c: 184: dev=0b0000;
  3285  01E6  01E1               	clrf	(_dev)
  3286  01E7  01E2               	clrf	(_dev+1)
  3287                           	line	185
  3288                           	
  3289  01E8                     l3795:	
  3290                           ;prev11.c: 185: write("Press 2 to REPRG",2,0);
  3291  01E8  3096               	movlw	low(STR_3|8000h)
  3292  01E9  00C2               	movwf	(?_write)
  3293  01EA  3088               	movlw	high(STR_3|8000h)
  3294  01EB  00C3               	movwf	((?_write))+1
  3295  01EC  3002               	movlw	low(02h)
  3296  01ED  00C4               	movwf	0+(?_write)+02h
  3297  01EE  3000               	movlw	high(02h)
  3298  01EF  00C5               	movwf	(0+(?_write)+02h)+1
  3299  01F0  3000               	movlw	low(0)
  3300  01F1  00C6               	movwf	0+(?_write)+04h
  3301  01F2  3000               	movlw	high(0)
  3302  01F3  00C7               	movwf	(0+(?_write)+04h)+1
  3303  01F4  120A  158A  257B   	fcall	_write
              120A  118A         
  3304                           	line	187
  3305                           	
  3306  01F9                     l3797:	
  3307                           ;prev11.c: 187: if(strcmp(lo,plo)!=0)
  3308  01F9  30AA               	movlw	(_plo&0ffh)
  3309  01FA  00F0               	movwf	(?_strcmp)
  3310  01FB  3001               	movlw	(0x3/2)
  3311  01FC  00F1               	movwf	(?_strcmp+1)
  3312  01FD  3068               	movlw	(_lo)&0ffh
  3313  01FE  120A  158A  24A8   	fcall	_strcmp
              120A  118A         
  3314  0203  0871               	movf	(1+(?_strcmp)),w
  3315  0204  0470               	iorwf	(0+(?_strcmp)),w
  3316  0205  1903               	skipnz
  3317  0206  2A08               	goto	u4551
  3318  0207  2A09               	goto	u4550
  3319  0208                     u4551:
  3320  0208  2AB8               	goto	l1112
  3321  0209                     u4550:
  3322                           	line	190
  3323                           	
  3324  0209                     l3799:	
  3325                           ;prev11.c: 188: {
  3326                           ;prev11.c: 190: write(lo,1,1);
  3327  0209  3068               	movlw	(_lo&0ffh)
  3328  020A  1283               	bcf	status, 5	;RP0=0, select bank0
  3329  020B  1303               	bcf	status, 6	;RP1=0, select bank0
  3330  020C  00C2               	movwf	(?_write)
  3331  020D  3000               	movlw	(0x0/2)
  3332  020E  00C3               	movwf	(?_write+1)
  3333  020F  3001               	movlw	low(01h)
  3334  0210  00C4               	movwf	0+(?_write)+02h
  3335  0211  3000               	movlw	high(01h)
  3336  0212  00C5               	movwf	(0+(?_write)+02h)+1
  3337  0213  3001               	movlw	low(01h)
  3338  0214  00C6               	movwf	0+(?_write)+04h
  3339  0215  3000               	movlw	high(01h)
  3340  0216  00C7               	movwf	(0+(?_write)+04h)+1
  3341  0217  120A  158A  257B   	fcall	_write
              120A  118A         
  3342                           	line	194
  3343                           ;prev11.c: 194: if(check(lo,logic_d1))
  3344  021C  30DA               	movlw	(_logic_d1&0ffh)
  3345  021D  00F0               	movwf	(?_check)
  3346  021E  3000               	movlw	(0x1/2)
  3347  021F  00F1               	movwf	(?_check+1)
  3348  0220  3068               	movlw	(_lo)&0ffh
  3349  0221  120A  158A  2526   	fcall	_check
              120A  118A         
  3350  0226  0871               	movf	(1+(?_check)),w
  3351  0227  0470               	iorwf	(0+(?_check)),w
  3352  0228  1903               	skipnz
  3353  0229  2A2B               	goto	u4561
  3354  022A  2A2C               	goto	u4560
  3355  022B                     u4561:
  3356  022B  2A35               	goto	l3803
  3357  022C                     u4560:
  3358                           	line	195
  3359                           	
  3360  022C                     l3801:	
  3361                           ;prev11.c: 195: dev=dev|0b0001;
  3362  022C  3001               	movlw	low(01h)
  3363  022D  1283               	bcf	status, 5	;RP0=0, select bank0
  3364  022E  1303               	bcf	status, 6	;RP1=0, select bank0
  3365  022F  0461               	iorwf	(_dev),w
  3366  0230  00E1               	movwf	(_dev)
  3367  0231  3000               	movlw	high(01h)
  3368  0232  0462               	iorwf	(_dev+1),w
  3369  0233  00E2               	movwf	1+(_dev)
  3370  0234  2A3E               	goto	l3805
  3371                           	line	196
  3372                           	
  3373  0235                     l1106:	
  3374                           	line	197
  3375                           	
  3376  0235                     l3803:	
  3377                           ;prev11.c: 196: else
  3378                           ;prev11.c: 197: dev=dev&0b0110;
  3379  0235  3006               	movlw	low(06h)
  3380  0236  1283               	bcf	status, 5	;RP0=0, select bank0
  3381  0237  1303               	bcf	status, 6	;RP1=0, select bank0
  3382  0238  0561               	andwf	(_dev),w
  3383  0239  00E1               	movwf	(_dev)
  3384  023A  3000               	movlw	high(06h)
  3385  023B  0562               	andwf	(_dev+1),w
  3386  023C  00E2               	movwf	1+(_dev)
  3387  023D  2A3E               	goto	l3805
  3388                           	
  3389  023E                     l1107:	
  3390                           	line	199
  3391                           	
  3392  023E                     l3805:	
  3393                           ;prev11.c: 199: if(check(lo,logic_d2))
  3394  023E  30DF               	movlw	(_logic_d2&0ffh)
  3395  023F  00F0               	movwf	(?_check)
  3396  0240  3000               	movlw	(0x1/2)
  3397  0241  00F1               	movwf	(?_check+1)
  3398  0242  3068               	movlw	(_lo)&0ffh
  3399  0243  120A  158A  2526   	fcall	_check
              120A  118A         
  3400  0248  0871               	movf	(1+(?_check)),w
  3401  0249  0470               	iorwf	(0+(?_check)),w
  3402  024A  1903               	skipnz
  3403  024B  2A4D               	goto	u4571
  3404  024C  2A4E               	goto	u4570
  3405  024D                     u4571:
  3406  024D  2A57               	goto	l3809
  3407  024E                     u4570:
  3408                           	line	200
  3409                           	
  3410  024E                     l3807:	
  3411                           ;prev11.c: 200: dev=dev|0b0010;
  3412  024E  3002               	movlw	low(02h)
  3413  024F  1283               	bcf	status, 5	;RP0=0, select bank0
  3414  0250  1303               	bcf	status, 6	;RP1=0, select bank0
  3415  0251  0461               	iorwf	(_dev),w
  3416  0252  00E1               	movwf	(_dev)
  3417  0253  3000               	movlw	high(02h)
  3418  0254  0462               	iorwf	(_dev+1),w
  3419  0255  00E2               	movwf	1+(_dev)
  3420  0256  2A60               	goto	l3811
  3421                           	line	201
  3422                           	
  3423  0257                     l1108:	
  3424                           	line	202
  3425                           	
  3426  0257                     l3809:	
  3427                           ;prev11.c: 201: else
  3428                           ;prev11.c: 202: dev=dev&0b0101;
  3429  0257  3005               	movlw	low(05h)
  3430  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  3431  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  3432  025A  0561               	andwf	(_dev),w
  3433  025B  00E1               	movwf	(_dev)
  3434  025C  3000               	movlw	high(05h)
  3435  025D  0562               	andwf	(_dev+1),w
  3436  025E  00E2               	movwf	1+(_dev)
  3437  025F  2A60               	goto	l3811
  3438                           	
  3439  0260                     l1109:	
  3440                           	line	205
  3441                           	
  3442  0260                     l3811:	
  3443                           ;prev11.c: 205: if(check(lo,logic_d3))
  3444  0260  30A5               	movlw	(_logic_d3&0ffh)
  3445  0261  00F0               	movwf	(?_check)
  3446  0262  3001               	movlw	(0x3/2)
  3447  0263  00F1               	movwf	(?_check+1)
  3448  0264  3068               	movlw	(_lo)&0ffh
  3449  0265  120A  158A  2526   	fcall	_check
              120A  118A         
  3450  026A  0871               	movf	(1+(?_check)),w
  3451  026B  0470               	iorwf	(0+(?_check)),w
  3452  026C  1903               	skipnz
  3453  026D  2A6F               	goto	u4581
  3454  026E  2A70               	goto	u4580
  3455  026F                     u4581:
  3456  026F  2A79               	goto	l3815
  3457  0270                     u4580:
  3458                           	line	206
  3459                           	
  3460  0270                     l3813:	
  3461                           ;prev11.c: 206: dev=dev|0b0100;
  3462  0270  3004               	movlw	low(04h)
  3463  0271  1283               	bcf	status, 5	;RP0=0, select bank0
  3464  0272  1303               	bcf	status, 6	;RP1=0, select bank0
  3465  0273  0461               	iorwf	(_dev),w
  3466  0274  00E1               	movwf	(_dev)
  3467  0275  3000               	movlw	high(04h)
  3468  0276  0462               	iorwf	(_dev+1),w
  3469  0277  00E2               	movwf	1+(_dev)
  3470  0278  2A82               	goto	l3817
  3471                           	line	207
  3472                           	
  3473  0279                     l1110:	
  3474                           	line	208
  3475                           	
  3476  0279                     l3815:	
  3477                           ;prev11.c: 207: else
  3478                           ;prev11.c: 208: dev=dev&0b0011;
  3479  0279  3003               	movlw	low(03h)
  3480  027A  1283               	bcf	status, 5	;RP0=0, select bank0
  3481  027B  1303               	bcf	status, 6	;RP1=0, select bank0
  3482  027C  0561               	andwf	(_dev),w
  3483  027D  00E1               	movwf	(_dev)
  3484  027E  3000               	movlw	high(03h)
  3485  027F  0562               	andwf	(_dev+1),w
  3486  0280  00E2               	movwf	1+(_dev)
  3487  0281  2A82               	goto	l3817
  3488                           	
  3489  0282                     l1111:	
  3490                           	line	213
  3491                           	
  3492  0282                     l3817:	
  3493                           ;prev11.c: 213: RC4=dev&0b0001;
  3494  0282  1861               	btfsc	(_dev),0
  3495  0283  2A85               	goto	u4591
  3496  0284  2A89               	goto	u4590
  3497                           	
  3498  0285                     u4591:
  3499  0285  1283               	bcf	status, 5	;RP0=0, select bank0
  3500  0286  1303               	bcf	status, 6	;RP1=0, select bank0
  3501  0287  1607               	bsf	(60/8),(60)&7
  3502  0288  2A8C               	goto	u4604
  3503  0289                     u4590:
  3504  0289  1283               	bcf	status, 5	;RP0=0, select bank0
  3505  028A  1303               	bcf	status, 6	;RP1=0, select bank0
  3506  028B  1207               	bcf	(60/8),(60)&7
  3507  028C                     u4604:
  3508                           	line	214
  3509                           	
  3510  028C                     l3819:	
  3511                           ;prev11.c: 214: RC5=(dev>>1)&0b0001;
  3512  028C  0862               	movf	(_dev+1),w
  3513  028D  00C9               	movwf	(??_startswitch+0)+0+1
  3514  028E  0861               	movf	(_dev),w
  3515  028F  00C8               	movwf	(??_startswitch+0)+0
  3516  0290  3001               	movlw	01h
  3517  0291  00FF               	movwf	btemp+1
  3518  0292                     u4615:
  3519  0292  0D49               	rlf	(??_startswitch+0)+1,w
  3520  0293  0CC9               	rrf	(??_startswitch+0)+1,f
  3521  0294  0CC8               	rrf	(??_startswitch+0)+0,f
  3522  0295  0BFF               	decfsz	btemp+1,f
  3523  0296  2A92               	goto	u4615
  3524  0297  1848               	btfsc	0+(??_startswitch+0)+0,0
  3525  0298  2A9A               	goto	u4621
  3526  0299  2A9E               	goto	u4620
  3527                           	
  3528  029A                     u4621:
  3529  029A  1283               	bcf	status, 5	;RP0=0, select bank0
  3530  029B  1303               	bcf	status, 6	;RP1=0, select bank0
  3531  029C  1687               	bsf	(61/8),(61)&7
  3532  029D  2AA1               	goto	u4634
  3533  029E                     u4620:
  3534  029E  1283               	bcf	status, 5	;RP0=0, select bank0
  3535  029F  1303               	bcf	status, 6	;RP1=0, select bank0
  3536  02A0  1287               	bcf	(61/8),(61)&7
  3537  02A1                     u4634:
  3538                           	line	215
  3539                           	
  3540  02A1                     l3821:	
  3541                           ;prev11.c: 215: RC6=(dev>>2)&0b0001;
  3542  02A1  0862               	movf	(_dev+1),w
  3543  02A2  00C9               	movwf	(??_startswitch+0)+0+1
  3544  02A3  0861               	movf	(_dev),w
  3545  02A4  00C8               	movwf	(??_startswitch+0)+0
  3546  02A5  3002               	movlw	02h
  3547  02A6  00FF               	movwf	btemp+1
  3548  02A7                     u4645:
  3549  02A7  0D49               	rlf	(??_startswitch+0)+1,w
  3550  02A8  0CC9               	rrf	(??_startswitch+0)+1,f
  3551  02A9  0CC8               	rrf	(??_startswitch+0)+0,f
  3552  02AA  0BFF               	decfsz	btemp+1,f
  3553  02AB  2AA7               	goto	u4645
  3554  02AC  1848               	btfsc	0+(??_startswitch+0)+0,0
  3555  02AD  2AAF               	goto	u4651
  3556  02AE  2AB3               	goto	u4650
  3557                           	
  3558  02AF                     u4651:
  3559  02AF  1283               	bcf	status, 5	;RP0=0, select bank0
  3560  02B0  1303               	bcf	status, 6	;RP1=0, select bank0
  3561  02B1  1707               	bsf	(62/8),(62)&7
  3562  02B2  2AB6               	goto	u4664
  3563  02B3                     u4650:
  3564  02B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3565  02B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3566  02B5  1307               	bcf	(62/8),(62)&7
  3567  02B6                     u4664:
  3568  02B6  2AB8               	goto	l1112
  3569                           	line	216
  3570                           	
  3571  02B7                     l1105:	
  3572  02B7  2AB8               	goto	l1112
  3573                           	line	217
  3574                           	
  3575  02B8                     l3823:	
  3576                           	line	219
  3577                           ;prev11.c: 216: }
  3578                           ;prev11.c: 217: return;
  3579                           	
  3580  02B8                     l1112:	
  3581  02B8  0008               	return
  3582                           	opt stack 0
  3583                           GLOBAL	__end_of_startswitch
  3584  02B9                     	__end_of_startswitch:
  3585 ;; =============== function _startswitch ends ============
  3586                           
  3587                           	signat	_startswitch,88
  3588                           	global	_scroll
  3589                           psect	text572,local,class=CODE,delta=2
  3590                           global __ptext572
  3591  0E45                     __ptext572:
  3592                           
  3593 ;; *************** function _scroll *****************
  3594 ;; Defined at:
  3595 ;;		line 642 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  str             2   40[BANK0 ] PTR unsigned char 
  3598 ;;		 -> STR_4(38), 
  3599 ;;  loops           2   42[BANK0 ] int 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  dest           32    0        unsigned char [32]
  3602 ;;  endat           2   53[BANK0 ] int 
  3603 ;;  startat         2   51[BANK0 ] int 
  3604 ;;  i               2   59[BANK0 ] int 
  3605 ;;  len             2   57[BANK0 ] int 
  3606 ;;  loopn           2   55[BANK0 ] int 
  3607 ;;  en              2   49[BANK0 ] int 
  3608 ;;  st              2   47[BANK0 ] int 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;		None               void
  3611 ;; Registers used:
  3612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         0       4       0       0       0
  3619 ;;      Locals:         0      14       0       0       0
  3620 ;;      Temps:          0       3       0       0       0
  3621 ;;      Totals:         0      21       0       0       0
  3622 ;;Total ram usage:       21 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    5
  3625 ;; This function calls:
  3626 ;;		_write
  3627 ;;		_delay
  3628 ;;		_cmd
  3629 ;; This function is called by:
  3630 ;;		_getlogicseq
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           psect	text572
  3634                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3635                           	line	642
  3636                           	global	__size_of_scroll
  3637  00D3                     	__size_of_scroll	equ	__end_of_scroll-_scroll
  3638                           	
  3639  0E45                     _scroll:	
  3640                           	opt	stack 1
  3641                           ; Regs used in _scroll: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3642                           	line	644
  3643                           	
  3644  0E45                     l3737:	
  3645                           ;prev11.c: 644: write(str,1,0); ;
  3646  0E45  1283               	bcf	status, 5	;RP0=0, select bank0
  3647  0E46  1303               	bcf	status, 6	;RP1=0, select bank0
  3648  0E47  0849               	movf	(scroll@str+1),w
  3649  0E48  01C3               	clrf	(?_write+1)
  3650  0E49  07C3               	addwf	(?_write+1)
  3651  0E4A  0848               	movf	(scroll@str),w
  3652  0E4B  01C2               	clrf	(?_write)
  3653  0E4C  07C2               	addwf	(?_write)
  3654                           
  3655  0E4D  3001               	movlw	low(01h)
  3656  0E4E  00C4               	movwf	0+(?_write)+02h
  3657  0E4F  3000               	movlw	high(01h)
  3658  0E50  00C5               	movwf	(0+(?_write)+02h)+1
  3659  0E51  3000               	movlw	low(0)
  3660  0E52  00C6               	movwf	0+(?_write)+04h
  3661  0E53  3000               	movlw	high(0)
  3662  0E54  00C7               	movwf	(0+(?_write)+04h)+1
  3663  0E55  120A  158A  257B   	fcall	_write
              120A  158A         
  3664                           	line	645
  3665                           	
  3666  0E5A                     l3739:	
  3667                           ;prev11.c: 645: int loopn=0;
  3668  0E5A  1283               	bcf	status, 5	;RP0=0, select bank0
  3669  0E5B  1303               	bcf	status, 6	;RP1=0, select bank0
  3670  0E5C  01D7               	clrf	(scroll@loopn)
  3671  0E5D  01D8               	clrf	(scroll@loopn+1)
  3672                           	line	647
  3673                           	
  3674  0E5E                     l3741:	
  3675                           ;prev11.c: 646: int i;
  3676                           ;prev11.c: 647: int len=0;;
  3677  0E5E  01D9               	clrf	(scroll@len)
  3678  0E5F  01DA               	clrf	(scroll@len+1)
  3679                           	line	648
  3680                           	
  3681  0E60                     l3743:	
  3682                           ;prev11.c: 648: int st=0;
  3683  0E60  01CF               	clrf	(scroll@st)
  3684  0E61  01D0               	clrf	(scroll@st+1)
  3685                           	line	650
  3686                           ;prev11.c: 649: int en;
  3687                           ;prev11.c: 650: while(str[i]!='\0')
  3688  0E62  2E70               	goto	l3747
  3689                           	
  3690  0E63                     l1254:	
  3691                           	line	651
  3692                           	
  3693  0E63                     l3745:	
  3694                           ;prev11.c: 651: { i++;
  3695  0E63  3001               	movlw	low(01h)
  3696  0E64  07DB               	addwf	(scroll@i),f
  3697  0E65  1803               	skipnc
  3698  0E66  0ADC               	incf	(scroll@i+1),f
  3699  0E67  3000               	movlw	high(01h)
  3700  0E68  07DC               	addwf	(scroll@i+1),f
  3701                           	line	652
  3702                           ;prev11.c: 652: len++;
  3703  0E69  3001               	movlw	low(01h)
  3704  0E6A  07D9               	addwf	(scroll@len),f
  3705  0E6B  1803               	skipnc
  3706  0E6C  0ADA               	incf	(scroll@len+1),f
  3707  0E6D  3000               	movlw	high(01h)
  3708  0E6E  07DA               	addwf	(scroll@len+1),f
  3709  0E6F  2E70               	goto	l3747
  3710                           	line	653
  3711                           	
  3712  0E70                     l1253:	
  3713                           	line	650
  3714                           	
  3715  0E70                     l3747:	
  3716  0E70  085B               	movf	(scroll@i),w
  3717  0E71  0748               	addwf	(scroll@str),w
  3718  0E72  0084               	movwf	fsr0
  3719  0E73  0849               	movf	(scroll@str+1),w
  3720  0E74  1803               	skipnc
  3721  0E75  0A49               	incf	(scroll@str+1),w
  3722  0E76  00FF               	movwf	btemp+1
  3723  0E77  120A  158A  2000   	fcall	stringtab
              120A  158A         
  3724  0E7C  3800               	iorlw	0
  3725  0E7D  1D03               	skipz
  3726  0E7E  2E80               	goto	u4471
  3727  0E7F  2E81               	goto	u4470
  3728  0E80                     u4471:
  3729  0E80  2E63               	goto	l3745
  3730  0E81                     u4470:
  3731  0E81  2E82               	goto	l3749
  3732                           	
  3733  0E82                     l1255:	
  3734                           	line	654
  3735                           	
  3736  0E82                     l3749:	
  3737                           ;prev11.c: 653: }
  3738                           ;prev11.c: 654: en=len-1;
  3739  0E82  0859               	movf	(scroll@len),w
  3740  0E83  3EFF               	addlw	low(-1)
  3741  0E84  00D1               	movwf	(scroll@en)
  3742  0E85  085A               	movf	(scroll@len+1),w
  3743  0E86  1803               	skipnc
  3744  0E87  3E01               	addlw	1
  3745  0E88  3EFF               	addlw	high(-1)
  3746  0E89  00D2               	movwf	1+(scroll@en)
  3747                           	line	656
  3748                           	
  3749  0E8A                     l3751:	
  3750                           ;prev11.c: 656: if(len>32)
  3751  0E8A  085A               	movf	(scroll@len+1),w
  3752  0E8B  3A80               	xorlw	80h
  3753  0E8C  00FF               	movwf	btemp+1
  3754  0E8D  3080               	movlw	(high(021h))^80h
  3755  0E8E  027F               	subwf	btemp+1,w
  3756  0E8F  1D03               	skipz
  3757  0E90  2E93               	goto	u4485
  3758  0E91  3021               	movlw	low(021h)
  3759  0E92  0259               	subwf	(scroll@len),w
  3760  0E93                     u4485:
  3761                           
  3762  0E93  1C03               	skipc
  3763  0E94  2E96               	goto	u4481
  3764  0E95  2E97               	goto	u4480
  3765  0E96                     u4481:
  3766  0E96  2F17               	goto	l1265
  3767  0E97                     u4480:
  3768                           	line	660
  3769                           	
  3770  0E97                     l3753:	
  3771                           ;prev11.c: 657: {
  3772                           ;prev11.c: 659: char dest [32] ;
  3773                           ;prev11.c: 660: int startat=0;
  3774  0E97  1283               	bcf	status, 5	;RP0=0, select bank0
  3775  0E98  1303               	bcf	status, 6	;RP1=0, select bank0
  3776  0E99  01D3               	clrf	(scroll@startat)
  3777  0E9A  01D4               	clrf	(scroll@startat+1)
  3778                           	line	661
  3779                           	
  3780  0E9B                     l3755:	
  3781                           ;prev11.c: 661: int endat=31;
  3782  0E9B  301F               	movlw	low(01Fh)
  3783  0E9C  00D5               	movwf	(scroll@endat)
  3784  0E9D  3000               	movlw	high(01Fh)
  3785  0E9E  00D6               	movwf	((scroll@endat))+1
  3786  0E9F  2EA0               	goto	l3757
  3787                           	line	662
  3788                           ;prev11.c: 662: START:
  3789                           	
  3790  0EA0                     l1257:	
  3791                           	line	663
  3792                           	
  3793  0EA0                     l3757:	
  3794                           ;prev11.c: 663: i=0;
  3795  0EA0  1283               	bcf	status, 5	;RP0=0, select bank0
  3796  0EA1  1303               	bcf	status, 6	;RP1=0, select bank0
  3797  0EA2  01DB               	clrf	(scroll@i)
  3798  0EA3  01DC               	clrf	(scroll@i+1)
  3799                           	line	664
  3800                           ;prev11.c: 664: while(i++<32)
  3801  0EA4  2EB8               	goto	l3763
  3802                           	
  3803  0EA5                     l1259:	
  3804                           	line	667
  3805                           	
  3806  0EA5                     l3759:	
  3807                           ;prev11.c: 665: {
  3808                           ;prev11.c: 667: delay(3000);
  3809  0EA5  30B8               	movlw	low(0BB8h)
  3810  0EA6  00F0               	movwf	(?_delay)
  3811  0EA7  300B               	movlw	high(0BB8h)
  3812  0EA8  00F1               	movwf	((?_delay))+1
  3813  0EA9  120A  158A  234B   	fcall	_delay
              120A  158A         
  3814                           	line	668
  3815                           	
  3816  0EAE                     l3761:	
  3817                           ;prev11.c: 668: cmd(0x1E);
  3818  0EAE  301E               	movlw	low(01Eh)
  3819  0EAF  00F8               	movwf	(?_cmd)
  3820  0EB0  3000               	movlw	high(01Eh)
  3821  0EB1  00F9               	movwf	((?_cmd))+1
  3822  0EB2  120A  158A  2378   	fcall	_cmd
              120A  158A         
  3823  0EB7  2EB8               	goto	l3763
  3824                           	line	671
  3825                           	
  3826  0EB8                     l1258:	
  3827                           	line	664
  3828                           	
  3829  0EB8                     l3763:	
  3830  0EB8  3001               	movlw	low(01h)
  3831  0EB9  1283               	bcf	status, 5	;RP0=0, select bank0
  3832  0EBA  1303               	bcf	status, 6	;RP1=0, select bank0
  3833  0EBB  07DB               	addwf	(scroll@i),f
  3834  0EBC  1803               	skipnc
  3835  0EBD  0ADC               	incf	(scroll@i+1),f
  3836  0EBE  3000               	movlw	high(01h)
  3837  0EBF  07DC               	addwf	(scroll@i+1),f
  3838  0EC0  085C               	movf	((scroll@i+1)),w
  3839  0EC1  3A80               	xorlw	80h
  3840  0EC2  00FF               	movwf	btemp+1
  3841  0EC3  3080               	movlw	(high(021h))^80h
  3842  0EC4  027F               	subwf	btemp+1,w
  3843  0EC5  1D03               	skipz
  3844  0EC6  2EC9               	goto	u4495
  3845  0EC7  3021               	movlw	low(021h)
  3846  0EC8  025B               	subwf	((scroll@i)),w
  3847  0EC9                     u4495:
  3848                           
  3849  0EC9  1C03               	skipc
  3850  0ECA  2ECC               	goto	u4491
  3851  0ECB  2ECD               	goto	u4490
  3852  0ECC                     u4491:
  3853  0ECC  2EA5               	goto	l3759
  3854  0ECD                     u4490:
  3855  0ECD  2ECE               	goto	l3765
  3856                           	
  3857  0ECE                     l1260:	
  3858                           	line	673
  3859                           	
  3860  0ECE                     l3765:	
  3861                           ;prev11.c: 671: }
  3862                           ;prev11.c: 673: i=0;
  3863  0ECE  1283               	bcf	status, 5	;RP0=0, select bank0
  3864  0ECF  1303               	bcf	status, 6	;RP1=0, select bank0
  3865  0ED0  01DB               	clrf	(scroll@i)
  3866  0ED1  01DC               	clrf	(scroll@i+1)
  3867                           	line	674
  3868                           ;prev11.c: 674: while(i++<32)
  3869  0ED2  2EE6               	goto	l3771
  3870                           	
  3871  0ED3                     l1262:	
  3872                           	line	677
  3873                           	
  3874  0ED3                     l3767:	
  3875                           ;prev11.c: 675: {
  3876                           ;prev11.c: 677: delay(3000);
  3877  0ED3  30B8               	movlw	low(0BB8h)
  3878  0ED4  00F0               	movwf	(?_delay)
  3879  0ED5  300B               	movlw	high(0BB8h)
  3880  0ED6  00F1               	movwf	((?_delay))+1
  3881  0ED7  120A  158A  234B   	fcall	_delay
              120A  158A         
  3882                           	line	678
  3883                           	
  3884  0EDC                     l3769:	
  3885                           ;prev11.c: 678: cmd(0x18);
  3886  0EDC  3018               	movlw	low(018h)
  3887  0EDD  00F8               	movwf	(?_cmd)
  3888  0EDE  3000               	movlw	high(018h)
  3889  0EDF  00F9               	movwf	((?_cmd))+1
  3890  0EE0  120A  158A  2378   	fcall	_cmd
              120A  158A         
  3891  0EE5  2EE6               	goto	l3771
  3892                           	line	681
  3893                           	
  3894  0EE6                     l1261:	
  3895                           	line	674
  3896                           	
  3897  0EE6                     l3771:	
  3898  0EE6  3001               	movlw	low(01h)
  3899  0EE7  1283               	bcf	status, 5	;RP0=0, select bank0
  3900  0EE8  1303               	bcf	status, 6	;RP1=0, select bank0
  3901  0EE9  07DB               	addwf	(scroll@i),f
  3902  0EEA  1803               	skipnc
  3903  0EEB  0ADC               	incf	(scroll@i+1),f
  3904  0EEC  3000               	movlw	high(01h)
  3905  0EED  07DC               	addwf	(scroll@i+1),f
  3906  0EEE  085C               	movf	((scroll@i+1)),w
  3907  0EEF  3A80               	xorlw	80h
  3908  0EF0  00FF               	movwf	btemp+1
  3909  0EF1  3080               	movlw	(high(021h))^80h
  3910  0EF2  027F               	subwf	btemp+1,w
  3911  0EF3  1D03               	skipz
  3912  0EF4  2EF7               	goto	u4505
  3913  0EF5  3021               	movlw	low(021h)
  3914  0EF6  025B               	subwf	((scroll@i)),w
  3915  0EF7                     u4505:
  3916                           
  3917  0EF7  1C03               	skipc
  3918  0EF8  2EFA               	goto	u4501
  3919  0EF9  2EFB               	goto	u4500
  3920  0EFA                     u4501:
  3921  0EFA  2ED3               	goto	l3767
  3922  0EFB                     u4500:
  3923  0EFB  2EFC               	goto	l3773
  3924                           	
  3925  0EFC                     l1263:	
  3926                           	line	682
  3927                           	
  3928  0EFC                     l3773:	
  3929                           ;prev11.c: 681: }
  3930                           ;prev11.c: 682: if(loopn++<loops)
  3931  0EFC  1283               	bcf	status, 5	;RP0=0, select bank0
  3932  0EFD  1303               	bcf	status, 6	;RP1=0, select bank0
  3933  0EFE  0858               	movf	(scroll@loopn+1),w
  3934  0EFF  00CD               	movwf	(??_scroll+0)+0+1
  3935  0F00  0857               	movf	(scroll@loopn),w
  3936  0F01  00CC               	movwf	(??_scroll+0)+0
  3937  0F02  3001               	movlw	(01h)
  3938  0F03  07D7               	addwf	(scroll@loopn),f
  3939  0F04  1803               	skipnc
  3940  0F05  0AD8               	incf	(scroll@loopn+1),f
  3941  0F06  084D               	movf	1+(??_scroll+0)+0,w
  3942  0F07  3A80               	xorlw	80h
  3943  0F08  00CE               	movwf	(??_scroll+2)+0
  3944  0F09  084B               	movf	(scroll@loops+1),w
  3945  0F0A  3A80               	xorlw	80h
  3946  0F0B  024E               	subwf	(??_scroll+2)+0,w
  3947  0F0C  1D03               	skipz
  3948  0F0D  2F10               	goto	u4515
  3949  0F0E  084A               	movf	(scroll@loops),w
  3950  0F0F  024C               	subwf	0+(??_scroll+0)+0,w
  3951  0F10                     u4515:
  3952                           
  3953  0F10  1803               	skipnc
  3954  0F11  2F13               	goto	u4511
  3955  0F12  2F14               	goto	u4510
  3956  0F13                     u4511:
  3957  0F13  2F17               	goto	l1265
  3958  0F14                     u4510:
  3959  0F14  2EA0               	goto	l3757
  3960                           	line	683
  3961                           	
  3962  0F15                     l3775:	
  3963                           ;prev11.c: 683: goto START;
  3964  0F15  2EA0               	goto	l3757
  3965                           	
  3966  0F16                     l1264:	
  3967  0F16  2F17               	goto	l1265
  3968                           	line	684
  3969                           	
  3970  0F17                     l1256:	
  3971                           	line	689
  3972                           	
  3973  0F17                     l1265:	
  3974  0F17  0008               	return
  3975                           	opt stack 0
  3976                           GLOBAL	__end_of_scroll
  3977  0F18                     	__end_of_scroll:
  3978 ;; =============== function _scroll ends ============
  3979                           
  3980                           	signat	_scroll,8312
  3981                           	global	_init_fun
  3982                           psect	text573,local,class=CODE,delta=2
  3983                           global __ptext573
  3984  0BC2                     __ptext573:
  3985                           
  3986 ;; *************** function _init_fun *****************
  3987 ;; Defined at:
  3988 ;;		line 158 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;		None
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;		None               void
  3995 ;; Registers used:
  3996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4002 ;;      Params:         0       0       0       0       0
  4003 ;;      Locals:         0       0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0
  4005 ;;      Totals:         0       0       0       0       0
  4006 ;;Total ram usage:        0 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    5
  4009 ;; This function calls:
  4010 ;;		_write
  4011 ;; This function is called by:
  4012 ;;		_startswitch
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           psect	text573
  4016                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4017                           	line	158
  4018                           	global	__size_of_init_fun
  4019  0028                     	__size_of_init_fun	equ	__end_of_init_fun-_init_fun
  4020                           	
  4021  0BC2                     _init_fun:	
  4022                           	opt	stack 0
  4023                           ; Regs used in _init_fun: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4024                           	line	159
  4025                           	
  4026  0BC2                     l3727:	
  4027                           ;prev11.c: 159: if(done_init==0)
  4028  0BC2  1283               	bcf	status, 5	;RP0=0, select bank0
  4029  0BC3  1303               	bcf	status, 6	;RP1=0, select bank0
  4030  0BC4  0864               	movf	((_done_init+1)),w
  4031  0BC5  0463               	iorwf	((_done_init)),w
  4032  0BC6  1D03               	skipz
  4033  0BC7  2BC9               	goto	u4461
  4034  0BC8  2BCA               	goto	u4460
  4035  0BC9                     u4461:
  4036  0BC9  2BE9               	goto	l1099
  4037  0BCA                     u4460:
  4038                           	line	162
  4039                           	
  4040  0BCA                     l3729:	
  4041                           ;prev11.c: 160: {
  4042                           ;prev11.c: 162: TRISA=0x0F;
  4043  0BCA  300F               	movlw	(0Fh)
  4044  0BCB  1683               	bsf	status, 5	;RP0=1, select bank1
  4045  0BCC  1303               	bcf	status, 6	;RP1=0, select bank1
  4046  0BCD  0085               	movwf	(133)^080h	;volatile
  4047                           	line	163
  4048                           	
  4049  0BCE                     l3731:	
  4050                           ;prev11.c: 163: ANSEL=0x0;
  4051  0BCE  1683               	bsf	status, 5	;RP0=1, select bank3
  4052  0BCF  1703               	bsf	status, 6	;RP1=1, select bank3
  4053  0BD0  0188               	clrf	(392)^0180h	;volatile
  4054                           	line	164
  4055                           	
  4056  0BD1                     l3733:	
  4057                           ;prev11.c: 164: done_init=1;
  4058  0BD1  3001               	movlw	low(01h)
  4059  0BD2  1283               	bcf	status, 5	;RP0=0, select bank0
  4060  0BD3  1303               	bcf	status, 6	;RP1=0, select bank0
  4061  0BD4  00E3               	movwf	(_done_init)
  4062  0BD5  3000               	movlw	high(01h)
  4063  0BD6  00E4               	movwf	((_done_init))+1
  4064                           	line	165
  4065                           	
  4066  0BD7                     l3735:	
  4067                           ;prev11.c: 165: write("Sensing...",1,1);
  4068  0BD7  30B6               	movlw	low(STR_1|8000h)
  4069  0BD8  00C2               	movwf	(?_write)
  4070  0BD9  3088               	movlw	high(STR_1|8000h)
  4071  0BDA  00C3               	movwf	((?_write))+1
  4072  0BDB  3001               	movlw	low(01h)
  4073  0BDC  00C4               	movwf	0+(?_write)+02h
  4074  0BDD  3000               	movlw	high(01h)
  4075  0BDE  00C5               	movwf	(0+(?_write)+02h)+1
  4076  0BDF  3001               	movlw	low(01h)
  4077  0BE0  00C6               	movwf	0+(?_write)+04h
  4078  0BE1  3000               	movlw	high(01h)
  4079  0BE2  00C7               	movwf	(0+(?_write)+04h)+1
  4080  0BE3  120A  158A  257B   	fcall	_write
              120A  158A         
  4081  0BE8  2BE9               	goto	l1099
  4082                           	line	166
  4083                           	
  4084  0BE9                     l1098:	
  4085                           	line	167
  4086                           	
  4087  0BE9                     l1099:	
  4088  0BE9  0008               	return
  4089                           	opt stack 0
  4090                           GLOBAL	__end_of_init_fun
  4091  0BEA                     	__end_of_init_fun:
  4092 ;; =============== function _init_fun ends ============
  4093                           
  4094                           	signat	_init_fun,88
  4095                           	global	_write
  4096                           psect	text574,local,class=CODE,delta=2
  4097                           global __ptext574
  4098  0D7B                     __ptext574:
  4099                           
  4100 ;; *************** function _write *****************
  4101 ;; Defined at:
  4102 ;;		line 621 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  str             2   34[BANK0 ] PTR unsigned char 
  4105 ;;		 -> STR_16(4), STR_13(4), STR_10(4), getlogicseq@str(32), 
  4106 ;;		 -> STR_7(27), STR_6(8), STR_5(15), STR_4(38), 
  4107 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), STR_3(17), 
  4108 ;;		 -> lo(5), STR_1(11), 
  4109 ;;  line            2   36[BANK0 ] int 
  4110 ;;  erase           2   38[BANK0 ] int 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  i               2   12[COMMON] int 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;		None               void
  4115 ;; Registers used:
  4116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4122 ;;      Params:         0       6       0       0       0
  4123 ;;      Locals:         2       0       0       0       0
  4124 ;;      Temps:          2       0       0       0       0
  4125 ;;      Totals:         4       6       0       0       0
  4126 ;;Total ram usage:       10 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    4
  4129 ;; This function calls:
  4130 ;;		_clearlcd
  4131 ;;		_cmd
  4132 ;;		_dat
  4133 ;; This function is called by:
  4134 ;;		_init_fun
  4135 ;;		_startswitch
  4136 ;;		_getlogicseq
  4137 ;;		_scroll
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           psect	text574
  4141                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4142                           	line	621
  4143                           	global	__size_of_write
  4144  0064                     	__size_of_write	equ	__end_of_write-_write
  4145                           	
  4146  0D7B                     _write:	
  4147                           	opt	stack 1
  4148                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4149                           	line	622
  4150                           	
  4151  0D7B                     l3709:	
  4152                           ;prev11.c: 622: if(erase==1)
  4153  0D7B  3001               	movlw	01h
  4154  0D7C  1283               	bcf	status, 5	;RP0=0, select bank0
  4155  0D7D  1303               	bcf	status, 6	;RP1=0, select bank0
  4156  0D7E  0646               	xorwf	(write@erase),w
  4157  0D7F  0447               	iorwf	(write@erase+1),w
  4158  0D80  1D03               	skipz
  4159  0D81  2D83               	goto	u4431
  4160  0D82  2D84               	goto	u4430
  4161  0D83                     u4431:
  4162  0D83  2D8A               	goto	l3713
  4163  0D84                     u4430:
  4164                           	line	623
  4165                           	
  4166  0D84                     l3711:	
  4167                           ;prev11.c: 623: clearlcd();
  4168  0D84  120A  158A  2307   	fcall	_clearlcd
              120A  158A         
  4169  0D89  2D8A               	goto	l3713
  4170                           	
  4171  0D8A                     l1244:	
  4172                           	line	625
  4173                           	
  4174  0D8A                     l3713:	
  4175                           ;prev11.c: 625: if(line==2)
  4176  0D8A  3002               	movlw	02h
  4177  0D8B  1283               	bcf	status, 5	;RP0=0, select bank0
  4178  0D8C  1303               	bcf	status, 6	;RP1=0, select bank0
  4179  0D8D  0644               	xorwf	(write@line),w
  4180  0D8E  0445               	iorwf	(write@line+1),w
  4181  0D8F  1D03               	skipz
  4182  0D90  2D92               	goto	u4441
  4183  0D91  2D93               	goto	u4440
  4184  0D92                     u4441:
  4185  0D92  2D9D               	goto	l3717
  4186  0D93                     u4440:
  4187                           	line	626
  4188                           	
  4189  0D93                     l3715:	
  4190                           ;prev11.c: 626: cmd(0xC0);
  4191  0D93  30C0               	movlw	low(0C0h)
  4192  0D94  00F8               	movwf	(?_cmd)
  4193  0D95  3000               	movlw	high(0C0h)
  4194  0D96  00F9               	movwf	((?_cmd))+1
  4195  0D97  120A  158A  2378   	fcall	_cmd
              120A  158A         
  4196  0D9C  2DA7               	goto	l3719
  4197                           	line	627
  4198                           	
  4199  0D9D                     l1245:	
  4200                           	line	628
  4201                           	
  4202  0D9D                     l3717:	
  4203                           ;prev11.c: 627: else
  4204                           ;prev11.c: 628: cmd(0x2);
  4205  0D9D  3002               	movlw	low(02h)
  4206  0D9E  00F8               	movwf	(?_cmd)
  4207  0D9F  3000               	movlw	high(02h)
  4208  0DA0  00F9               	movwf	((?_cmd))+1
  4209  0DA1  120A  158A  2378   	fcall	_cmd
              120A  158A         
  4210  0DA6  2DA7               	goto	l3719
  4211                           	
  4212  0DA7                     l1246:	
  4213                           	line	630
  4214                           	
  4215  0DA7                     l3719:	
  4216                           ;prev11.c: 630: int i=0;
  4217  0DA7  01FC               	clrf	(write@i)
  4218  0DA8  01FD               	clrf	(write@i+1)
  4219                           	line	631
  4220                           ;prev11.c: 631: while(str[i]!='\0')
  4221  0DA9  2DCA               	goto	l3725
  4222                           	
  4223  0DAA                     l1248:	
  4224                           	line	633
  4225                           	
  4226  0DAA                     l3721:	
  4227                           ;prev11.c: 632: {
  4228                           ;prev11.c: 633: dat(str[i]);
  4229  0DAA  087C               	movf	(write@i),w
  4230  0DAB  1283               	bcf	status, 5	;RP0=0, select bank0
  4231  0DAC  1303               	bcf	status, 6	;RP1=0, select bank0
  4232  0DAD  0742               	addwf	(write@str),w
  4233  0DAE  0084               	movwf	fsr0
  4234  0DAF  0843               	movf	(write@str+1),w
  4235  0DB0  1803               	skipnc
  4236  0DB1  0A43               	incf	(write@str+1),w
  4237  0DB2  00FF               	movwf	btemp+1
  4238  0DB3  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4239  0DB8  00FA               	movwf	(??_write+0)+0
  4240  0DB9  01FB               	clrf	(??_write+0)+0+1
  4241  0DBA  087A               	movf	0+(??_write+0)+0,w
  4242  0DBB  00F8               	movwf	(?_dat)
  4243  0DBC  087B               	movf	1+(??_write+0)+0,w
  4244  0DBD  00F9               	movwf	(?_dat+1)
  4245  0DBE  120A  158A  239D   	fcall	_dat
              120A  158A         
  4246                           	line	634
  4247                           	
  4248  0DC3                     l3723:	
  4249                           ;prev11.c: 634: i++;
  4250  0DC3  3001               	movlw	low(01h)
  4251  0DC4  07FC               	addwf	(write@i),f
  4252  0DC5  1803               	skipnc
  4253  0DC6  0AFD               	incf	(write@i+1),f
  4254  0DC7  3000               	movlw	high(01h)
  4255  0DC8  07FD               	addwf	(write@i+1),f
  4256  0DC9  2DCA               	goto	l3725
  4257                           	line	635
  4258                           	
  4259  0DCA                     l1247:	
  4260                           	line	631
  4261                           	
  4262  0DCA                     l3725:	
  4263  0DCA  087C               	movf	(write@i),w
  4264  0DCB  1283               	bcf	status, 5	;RP0=0, select bank0
  4265  0DCC  1303               	bcf	status, 6	;RP1=0, select bank0
  4266  0DCD  0742               	addwf	(write@str),w
  4267  0DCE  0084               	movwf	fsr0
  4268  0DCF  0843               	movf	(write@str+1),w
  4269  0DD0  1803               	skipnc
  4270  0DD1  0A43               	incf	(write@str+1),w
  4271  0DD2  00FF               	movwf	btemp+1
  4272  0DD3  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4273  0DD8  3800               	iorlw	0
  4274  0DD9  1D03               	skipz
  4275  0DDA  2DDC               	goto	u4451
  4276  0DDB  2DDD               	goto	u4450
  4277  0DDC                     u4451:
  4278  0DDC  2DAA               	goto	l3721
  4279  0DDD                     u4450:
  4280  0DDD  2DDE               	goto	l1250
  4281                           	
  4282  0DDE                     l1249:	
  4283                           	line	638
  4284                           	
  4285  0DDE                     l1250:	
  4286  0DDE  0008               	return
  4287                           	opt stack 0
  4288                           GLOBAL	__end_of_write
  4289  0DDF                     	__end_of_write:
  4290 ;; =============== function _write ends ============
  4291                           
  4292                           	signat	_write,12408
  4293                           	global	_clearlcd
  4294                           psect	text575,local,class=CODE,delta=2
  4295                           global __ptext575
  4296  0B07                     __ptext575:
  4297                           
  4298 ;; *************** function _clearlcd *****************
  4299 ;; Defined at:
  4300 ;;		line 563 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;		None
  4305 ;; Return value:  Size  Location     Type
  4306 ;;		None               void
  4307 ;; Registers used:
  4308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4314 ;;      Params:         0       0       0       0       0
  4315 ;;      Locals:         0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0
  4317 ;;      Totals:         0       0       0       0       0
  4318 ;;Total ram usage:        0 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    3
  4321 ;; This function calls:
  4322 ;;		_cmd
  4323 ;; This function is called by:
  4324 ;;		_write
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           psect	text575
  4328                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4329                           	line	563
  4330                           	global	__size_of_clearlcd
  4331  000A                     	__size_of_clearlcd	equ	__end_of_clearlcd-_clearlcd
  4332                           	
  4333  0B07                     _clearlcd:	
  4334                           	opt	stack 1
  4335                           ; Regs used in _clearlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4336                           	line	564
  4337                           	
  4338  0B07                     l3707:	
  4339                           ;prev11.c: 564: cmd(0x01);
  4340  0B07  3001               	movlw	low(01h)
  4341  0B08  00F8               	movwf	(?_cmd)
  4342  0B09  3000               	movlw	high(01h)
  4343  0B0A  00F9               	movwf	((?_cmd))+1
  4344  0B0B  120A  158A  2378   	fcall	_cmd
              120A  158A         
  4345                           	line	565
  4346                           	
  4347  0B10                     l1228:	
  4348  0B10  0008               	return
  4349                           	opt stack 0
  4350                           GLOBAL	__end_of_clearlcd
  4351  0B11                     	__end_of_clearlcd:
  4352 ;; =============== function _clearlcd ends ============
  4353                           
  4354                           	signat	_clearlcd,88
  4355                           	global	_scan
  4356                           psect	text576,local,class=CODE,delta=2
  4357                           global __ptext576
  4358  0F18                     __ptext576:
  4359                           
  4360 ;; *************** function _scan *****************
  4361 ;; Defined at:
  4362 ;;		line 703 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  2    4[COMMON] int 
  4369 ;; Registers used:
  4370 ;;		wreg, status,2, status,0, pclath, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4376 ;;      Params:         2       0       0       0       0
  4377 ;;      Locals:         0       0       0       0       0
  4378 ;;      Temps:          0       0       0       0       0
  4379 ;;      Totals:         2       0       0       0       0
  4380 ;;Total ram usage:        2 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    2
  4383 ;; This function calls:
  4384 ;;		_actrow
  4385 ;; This function is called by:
  4386 ;;		_getlogicseq
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           psect	text576
  4390                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4391                           	line	703
  4392                           	global	__size_of_scan
  4393  00E8                     	__size_of_scan	equ	__end_of_scan-_scan
  4394                           	
  4395  0F18                     _scan:	
  4396                           	opt	stack 4
  4397                           ; Regs used in _scan: [wreg+status,2+status,0+pclath+cstack]
  4398                           	line	705
  4399                           	
  4400  0F18                     l3599:	
  4401                           ;prev11.c: 705: actrow(1) ;
  4402  0F18  3001               	movlw	low(01h)
  4403  0F19  00F2               	movwf	(?_actrow)
  4404  0F1A  3000               	movlw	high(01h)
  4405  0F1B  00F3               	movwf	((?_actrow))+1
  4406  0F1C  120A  118A  2007   	fcall	_actrow
              120A  158A         
  4407                           	line	706
  4408                           	
  4409  0F21                     l3601:	
  4410                           ;prev11.c: 706: if( RD6==1)
  4411  0F21  1283               	bcf	status, 5	;RP0=0, select bank0
  4412  0F22  1303               	bcf	status, 6	;RP1=0, select bank0
  4413  0F23  1F08               	btfss	(70/8),(70)&7
  4414  0F24  2F26               	goto	u4271
  4415  0F25  2F27               	goto	u4270
  4416  0F26                     u4271:
  4417  0F26  2F2C               	goto	l1271
  4418  0F27                     u4270:
  4419                           	line	707
  4420                           	
  4421  0F27                     l3603:	
  4422                           ;prev11.c: 707: return 0;
  4423  0F27  01F4               	clrf	(?_scan)
  4424  0F28  01F5               	clrf	(?_scan+1)
  4425  0F29  2FFF               	goto	l1272
  4426                           	
  4427  0F2A                     l3605:	
  4428  0F2A  2FFF               	goto	l1272
  4429                           	
  4430  0F2B                     l3607:	
  4431  0F2B  2F4F               	goto	l3625
  4432                           	line	708
  4433                           	
  4434  0F2C                     l1271:	
  4435                           ;prev11.c: 708: else if(RD7==1)
  4436  0F2C  1F88               	btfss	(71/8),(71)&7
  4437  0F2D  2F2F               	goto	u4281
  4438  0F2E  2F30               	goto	u4280
  4439  0F2F                     u4281:
  4440  0F2F  2F37               	goto	l1274
  4441  0F30                     u4280:
  4442                           	line	709
  4443                           	
  4444  0F30                     l3609:	
  4445                           ;prev11.c: 709: return 1;
  4446  0F30  3001               	movlw	low(01h)
  4447  0F31  00F4               	movwf	(?_scan)
  4448  0F32  3000               	movlw	high(01h)
  4449  0F33  00F5               	movwf	((?_scan))+1
  4450  0F34  2FFF               	goto	l1272
  4451                           	
  4452  0F35                     l3611:	
  4453  0F35  2FFF               	goto	l1272
  4454                           	
  4455  0F36                     l3613:	
  4456  0F36  2F4F               	goto	l3625
  4457                           	line	710
  4458                           	
  4459  0F37                     l1274:	
  4460                           ;prev11.c: 710: else if(RB6==1)
  4461  0F37  1F06               	btfss	(54/8),(54)&7
  4462  0F38  2F3A               	goto	u4291
  4463  0F39  2F3B               	goto	u4290
  4464  0F3A                     u4291:
  4465  0F3A  2F42               	goto	l1276
  4466  0F3B                     u4290:
  4467                           	line	711
  4468                           	
  4469  0F3B                     l3615:	
  4470                           ;prev11.c: 711: return 2;
  4471  0F3B  3002               	movlw	low(02h)
  4472  0F3C  00F4               	movwf	(?_scan)
  4473  0F3D  3000               	movlw	high(02h)
  4474  0F3E  00F5               	movwf	((?_scan))+1
  4475  0F3F  2FFF               	goto	l1272
  4476                           	
  4477  0F40                     l3617:	
  4478  0F40  2FFF               	goto	l1272
  4479                           	
  4480  0F41                     l3619:	
  4481  0F41  2F4F               	goto	l3625
  4482                           	line	712
  4483                           	
  4484  0F42                     l1276:	
  4485                           ;prev11.c: 712: else if(RB7==1)
  4486  0F42  1F86               	btfss	(55/8),(55)&7
  4487  0F43  2F45               	goto	u4301
  4488  0F44  2F46               	goto	u4300
  4489  0F45                     u4301:
  4490  0F45  2F4F               	goto	l3625
  4491  0F46                     u4300:
  4492                           	line	713
  4493                           	
  4494  0F46                     l3621:	
  4495                           ;prev11.c: 713: return 3;
  4496  0F46  3003               	movlw	low(03h)
  4497  0F47  00F4               	movwf	(?_scan)
  4498  0F48  3000               	movlw	high(03h)
  4499  0F49  00F5               	movwf	((?_scan))+1
  4500  0F4A  2FFF               	goto	l1272
  4501                           	
  4502  0F4B                     l3623:	
  4503  0F4B  2FFF               	goto	l1272
  4504                           	
  4505  0F4C                     l1278:	
  4506  0F4C  2F4F               	goto	l3625
  4507                           	line	715
  4508                           	
  4509  0F4D                     l1277:	
  4510  0F4D  2F4F               	goto	l3625
  4511                           	
  4512  0F4E                     l1275:	
  4513  0F4E  2F4F               	goto	l3625
  4514                           	
  4515  0F4F                     l1273:	
  4516                           	
  4517  0F4F                     l3625:	
  4518                           ;prev11.c: 715: actrow(2) ;
  4519  0F4F  3002               	movlw	low(02h)
  4520  0F50  00F2               	movwf	(?_actrow)
  4521  0F51  3000               	movlw	high(02h)
  4522  0F52  00F3               	movwf	((?_actrow))+1
  4523  0F53  120A  118A  2007   	fcall	_actrow
              120A  158A         
  4524                           	line	717
  4525                           	
  4526  0F58                     l3627:	
  4527                           ;prev11.c: 717: if( RD6==1)
  4528  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  4529  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  4530  0F5A  1F08               	btfss	(70/8),(70)&7
  4531  0F5B  2F5D               	goto	u4311
  4532  0F5C  2F5E               	goto	u4310
  4533  0F5D                     u4311:
  4534  0F5D  2F65               	goto	l1279
  4535  0F5E                     u4310:
  4536                           	line	718
  4537                           	
  4538  0F5E                     l3629:	
  4539                           ;prev11.c: 718: return 4;
  4540  0F5E  3004               	movlw	low(04h)
  4541  0F5F  00F4               	movwf	(?_scan)
  4542  0F60  3000               	movlw	high(04h)
  4543  0F61  00F5               	movwf	((?_scan))+1
  4544  0F62  2FFF               	goto	l1272
  4545                           	
  4546  0F63                     l3631:	
  4547  0F63  2FFF               	goto	l1272
  4548                           	
  4549  0F64                     l3633:	
  4550  0F64  2F88               	goto	l3651
  4551                           	line	719
  4552                           	
  4553  0F65                     l1279:	
  4554                           ;prev11.c: 719: else if(RD7==1)
  4555  0F65  1F88               	btfss	(71/8),(71)&7
  4556  0F66  2F68               	goto	u4321
  4557  0F67  2F69               	goto	u4320
  4558  0F68                     u4321:
  4559  0F68  2F70               	goto	l1281
  4560  0F69                     u4320:
  4561                           	line	720
  4562                           	
  4563  0F69                     l3635:	
  4564                           ;prev11.c: 720: return 5;
  4565  0F69  3005               	movlw	low(05h)
  4566  0F6A  00F4               	movwf	(?_scan)
  4567  0F6B  3000               	movlw	high(05h)
  4568  0F6C  00F5               	movwf	((?_scan))+1
  4569  0F6D  2FFF               	goto	l1272
  4570                           	
  4571  0F6E                     l3637:	
  4572  0F6E  2FFF               	goto	l1272
  4573                           	
  4574  0F6F                     l3639:	
  4575  0F6F  2F88               	goto	l3651
  4576                           	line	721
  4577                           	
  4578  0F70                     l1281:	
  4579                           ;prev11.c: 721: else if(RB6==1)
  4580  0F70  1F06               	btfss	(54/8),(54)&7
  4581  0F71  2F73               	goto	u4331
  4582  0F72  2F74               	goto	u4330
  4583  0F73                     u4331:
  4584  0F73  2F7B               	goto	l1283
  4585  0F74                     u4330:
  4586                           	line	722
  4587                           	
  4588  0F74                     l3641:	
  4589                           ;prev11.c: 722: return 6;
  4590  0F74  3006               	movlw	low(06h)
  4591  0F75  00F4               	movwf	(?_scan)
  4592  0F76  3000               	movlw	high(06h)
  4593  0F77  00F5               	movwf	((?_scan))+1
  4594  0F78  2FFF               	goto	l1272
  4595                           	
  4596  0F79                     l3643:	
  4597  0F79  2FFF               	goto	l1272
  4598                           	
  4599  0F7A                     l3645:	
  4600  0F7A  2F88               	goto	l3651
  4601                           	line	723
  4602                           	
  4603  0F7B                     l1283:	
  4604                           ;prev11.c: 723: else if(RB7==1)
  4605  0F7B  1F86               	btfss	(55/8),(55)&7
  4606  0F7C  2F7E               	goto	u4341
  4607  0F7D  2F7F               	goto	u4340
  4608  0F7E                     u4341:
  4609  0F7E  2F88               	goto	l3651
  4610  0F7F                     u4340:
  4611                           	line	724
  4612                           	
  4613  0F7F                     l3647:	
  4614                           ;prev11.c: 724: return 7;
  4615  0F7F  3007               	movlw	low(07h)
  4616  0F80  00F4               	movwf	(?_scan)
  4617  0F81  3000               	movlw	high(07h)
  4618  0F82  00F5               	movwf	((?_scan))+1
  4619  0F83  2FFF               	goto	l1272
  4620                           	
  4621  0F84                     l3649:	
  4622  0F84  2FFF               	goto	l1272
  4623                           	
  4624  0F85                     l1285:	
  4625  0F85  2F88               	goto	l3651
  4626                           	line	726
  4627                           	
  4628  0F86                     l1284:	
  4629  0F86  2F88               	goto	l3651
  4630                           	
  4631  0F87                     l1282:	
  4632  0F87  2F88               	goto	l3651
  4633                           	
  4634  0F88                     l1280:	
  4635                           	
  4636  0F88                     l3651:	
  4637                           ;prev11.c: 726: actrow(3) ;
  4638  0F88  3003               	movlw	low(03h)
  4639  0F89  00F2               	movwf	(?_actrow)
  4640  0F8A  3000               	movlw	high(03h)
  4641  0F8B  00F3               	movwf	((?_actrow))+1
  4642  0F8C  120A  118A  2007   	fcall	_actrow
              120A  158A         
  4643                           	line	728
  4644                           	
  4645  0F91                     l3653:	
  4646                           ;prev11.c: 728: if( RD6==1)
  4647  0F91  1283               	bcf	status, 5	;RP0=0, select bank0
  4648  0F92  1303               	bcf	status, 6	;RP1=0, select bank0
  4649  0F93  1F08               	btfss	(70/8),(70)&7
  4650  0F94  2F96               	goto	u4351
  4651  0F95  2F97               	goto	u4350
  4652  0F96                     u4351:
  4653  0F96  2F9E               	goto	l1286
  4654  0F97                     u4350:
  4655                           	line	729
  4656                           	
  4657  0F97                     l3655:	
  4658                           ;prev11.c: 729: return 8;
  4659  0F97  3008               	movlw	low(08h)
  4660  0F98  00F4               	movwf	(?_scan)
  4661  0F99  3000               	movlw	high(08h)
  4662  0F9A  00F5               	movwf	((?_scan))+1
  4663  0F9B  2FFF               	goto	l1272
  4664                           	
  4665  0F9C                     l3657:	
  4666  0F9C  2FFF               	goto	l1272
  4667                           	
  4668  0F9D                     l3659:	
  4669  0F9D  2FC1               	goto	l3677
  4670                           	line	730
  4671                           	
  4672  0F9E                     l1286:	
  4673                           ;prev11.c: 730: else if(RD7==1)
  4674  0F9E  1F88               	btfss	(71/8),(71)&7
  4675  0F9F  2FA1               	goto	u4361
  4676  0FA0  2FA2               	goto	u4360
  4677  0FA1                     u4361:
  4678  0FA1  2FA9               	goto	l1288
  4679  0FA2                     u4360:
  4680                           	line	731
  4681                           	
  4682  0FA2                     l3661:	
  4683                           ;prev11.c: 731: return 9;
  4684  0FA2  3009               	movlw	low(09h)
  4685  0FA3  00F4               	movwf	(?_scan)
  4686  0FA4  3000               	movlw	high(09h)
  4687  0FA5  00F5               	movwf	((?_scan))+1
  4688  0FA6  2FFF               	goto	l1272
  4689                           	
  4690  0FA7                     l3663:	
  4691  0FA7  2FFF               	goto	l1272
  4692                           	
  4693  0FA8                     l3665:	
  4694  0FA8  2FC1               	goto	l3677
  4695                           	line	732
  4696                           	
  4697  0FA9                     l1288:	
  4698                           ;prev11.c: 732: else if(RB6==1)
  4699  0FA9  1F06               	btfss	(54/8),(54)&7
  4700  0FAA  2FAC               	goto	u4371
  4701  0FAB  2FAD               	goto	u4370
  4702  0FAC                     u4371:
  4703  0FAC  2FB4               	goto	l1290
  4704  0FAD                     u4370:
  4705                           	line	733
  4706                           	
  4707  0FAD                     l3667:	
  4708                           ;prev11.c: 733: return 10;
  4709  0FAD  300A               	movlw	low(0Ah)
  4710  0FAE  00F4               	movwf	(?_scan)
  4711  0FAF  3000               	movlw	high(0Ah)
  4712  0FB0  00F5               	movwf	((?_scan))+1
  4713  0FB1  2FFF               	goto	l1272
  4714                           	
  4715  0FB2                     l3669:	
  4716  0FB2  2FFF               	goto	l1272
  4717                           	
  4718  0FB3                     l3671:	
  4719  0FB3  2FC1               	goto	l3677
  4720                           	line	734
  4721                           	
  4722  0FB4                     l1290:	
  4723                           ;prev11.c: 734: else if(RB7==1)
  4724  0FB4  1F86               	btfss	(55/8),(55)&7
  4725  0FB5  2FB7               	goto	u4381
  4726  0FB6  2FB8               	goto	u4380
  4727  0FB7                     u4381:
  4728  0FB7  2FC1               	goto	l3677
  4729  0FB8                     u4380:
  4730                           	line	735
  4731                           	
  4732  0FB8                     l3673:	
  4733                           ;prev11.c: 735: return 11;
  4734  0FB8  300B               	movlw	low(0Bh)
  4735  0FB9  00F4               	movwf	(?_scan)
  4736  0FBA  3000               	movlw	high(0Bh)
  4737  0FBB  00F5               	movwf	((?_scan))+1
  4738  0FBC  2FFF               	goto	l1272
  4739                           	
  4740  0FBD                     l3675:	
  4741  0FBD  2FFF               	goto	l1272
  4742                           	
  4743  0FBE                     l1292:	
  4744  0FBE  2FC1               	goto	l3677
  4745                           	line	738
  4746                           	
  4747  0FBF                     l1291:	
  4748  0FBF  2FC1               	goto	l3677
  4749                           	
  4750  0FC0                     l1289:	
  4751  0FC0  2FC1               	goto	l3677
  4752                           	
  4753  0FC1                     l1287:	
  4754                           	
  4755  0FC1                     l3677:	
  4756                           ;prev11.c: 738: actrow(4) ;
  4757  0FC1  3004               	movlw	low(04h)
  4758  0FC2  00F2               	movwf	(?_actrow)
  4759  0FC3  3000               	movlw	high(04h)
  4760  0FC4  00F3               	movwf	((?_actrow))+1
  4761  0FC5  120A  118A  2007   	fcall	_actrow
              120A  158A         
  4762                           	line	740
  4763                           	
  4764  0FCA                     l3679:	
  4765                           ;prev11.c: 740: if( RD6==1)
  4766  0FCA  1283               	bcf	status, 5	;RP0=0, select bank0
  4767  0FCB  1303               	bcf	status, 6	;RP1=0, select bank0
  4768  0FCC  1F08               	btfss	(70/8),(70)&7
  4769  0FCD  2FCF               	goto	u4391
  4770  0FCE  2FD0               	goto	u4390
  4771  0FCF                     u4391:
  4772  0FCF  2FD7               	goto	l1293
  4773  0FD0                     u4390:
  4774                           	line	741
  4775                           	
  4776  0FD0                     l3681:	
  4777                           ;prev11.c: 741: return 12;
  4778  0FD0  300C               	movlw	low(0Ch)
  4779  0FD1  00F4               	movwf	(?_scan)
  4780  0FD2  3000               	movlw	high(0Ch)
  4781  0FD3  00F5               	movwf	((?_scan))+1
  4782  0FD4  2FFF               	goto	l1272
  4783                           	
  4784  0FD5                     l3683:	
  4785  0FD5  2FFF               	goto	l1272
  4786                           	
  4787  0FD6                     l3685:	
  4788  0FD6  2FFA               	goto	l3703
  4789                           	line	742
  4790                           	
  4791  0FD7                     l1293:	
  4792                           ;prev11.c: 742: else if(RD7==1)
  4793  0FD7  1F88               	btfss	(71/8),(71)&7
  4794  0FD8  2FDA               	goto	u4401
  4795  0FD9  2FDB               	goto	u4400
  4796  0FDA                     u4401:
  4797  0FDA  2FE2               	goto	l1295
  4798  0FDB                     u4400:
  4799                           	line	743
  4800                           	
  4801  0FDB                     l3687:	
  4802                           ;prev11.c: 743: return 13;
  4803  0FDB  300D               	movlw	low(0Dh)
  4804  0FDC  00F4               	movwf	(?_scan)
  4805  0FDD  3000               	movlw	high(0Dh)
  4806  0FDE  00F5               	movwf	((?_scan))+1
  4807  0FDF  2FFF               	goto	l1272
  4808                           	
  4809  0FE0                     l3689:	
  4810  0FE0  2FFF               	goto	l1272
  4811                           	
  4812  0FE1                     l3691:	
  4813  0FE1  2FFA               	goto	l3703
  4814                           	line	744
  4815                           	
  4816  0FE2                     l1295:	
  4817                           ;prev11.c: 744: else if(RB6==1)
  4818  0FE2  1F06               	btfss	(54/8),(54)&7
  4819  0FE3  2FE5               	goto	u4411
  4820  0FE4  2FE6               	goto	u4410
  4821  0FE5                     u4411:
  4822  0FE5  2FED               	goto	l1297
  4823  0FE6                     u4410:
  4824                           	line	745
  4825                           	
  4826  0FE6                     l3693:	
  4827                           ;prev11.c: 745: return 14;
  4828  0FE6  300E               	movlw	low(0Eh)
  4829  0FE7  00F4               	movwf	(?_scan)
  4830  0FE8  3000               	movlw	high(0Eh)
  4831  0FE9  00F5               	movwf	((?_scan))+1
  4832  0FEA  2FFF               	goto	l1272
  4833                           	
  4834  0FEB                     l3695:	
  4835  0FEB  2FFF               	goto	l1272
  4836                           	
  4837  0FEC                     l3697:	
  4838  0FEC  2FFA               	goto	l3703
  4839                           	line	746
  4840                           	
  4841  0FED                     l1297:	
  4842                           ;prev11.c: 746: else if(RB7==1)
  4843  0FED  1F86               	btfss	(55/8),(55)&7
  4844  0FEE  2FF0               	goto	u4421
  4845  0FEF  2FF1               	goto	u4420
  4846  0FF0                     u4421:
  4847  0FF0  2FFA               	goto	l3703
  4848  0FF1                     u4420:
  4849                           	line	747
  4850                           	
  4851  0FF1                     l3699:	
  4852                           ;prev11.c: 747: return 15;
  4853  0FF1  300F               	movlw	low(0Fh)
  4854  0FF2  00F4               	movwf	(?_scan)
  4855  0FF3  3000               	movlw	high(0Fh)
  4856  0FF4  00F5               	movwf	((?_scan))+1
  4857  0FF5  2FFF               	goto	l1272
  4858                           	
  4859  0FF6                     l3701:	
  4860  0FF6  2FFF               	goto	l1272
  4861                           	
  4862  0FF7                     l1299:	
  4863  0FF7  2FFA               	goto	l3703
  4864                           	line	751
  4865                           	
  4866  0FF8                     l1298:	
  4867  0FF8  2FFA               	goto	l3703
  4868                           	
  4869  0FF9                     l1296:	
  4870  0FF9  2FFA               	goto	l3703
  4871                           	
  4872  0FFA                     l1294:	
  4873                           	
  4874  0FFA                     l3703:	
  4875                           ;prev11.c: 751: return 99;
  4876  0FFA  3063               	movlw	low(063h)
  4877  0FFB  00F4               	movwf	(?_scan)
  4878  0FFC  3000               	movlw	high(063h)
  4879  0FFD  00F5               	movwf	((?_scan))+1
  4880  0FFE  2FFF               	goto	l1272
  4881                           	
  4882  0FFF                     l3705:	
  4883                           	line	755
  4884                           	
  4885  0FFF                     l1272:	
  4886  0FFF  0008               	return
  4887                           	opt stack 0
  4888                           GLOBAL	__end_of_scan
  4889  1000                     	__end_of_scan:
  4890 ;; =============== function _scan ends ============
  4891                           
  4892                           	signat	_scan,90
  4893                           	global	_initlcd
  4894                           psect	text577,local,class=CODE,delta=2
  4895                           global __ptext577
  4896  0C14                     __ptext577:
  4897                           
  4898 ;; *************** function _initlcd *****************
  4899 ;; Defined at:
  4900 ;;		line 545 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;		None               void
  4907 ;; Registers used:
  4908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0
  4917 ;;      Totals:         0       0       0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    3
  4921 ;; This function calls:
  4922 ;;		_cmd
  4923 ;; This function is called by:
  4924 ;;		_main
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           psect	text577
  4928                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4929                           	line	545
  4930                           	global	__size_of_initlcd
  4931  002A                     	__size_of_initlcd	equ	__end_of_initlcd-_initlcd
  4932                           	
  4933  0C14                     _initlcd:	
  4934                           	opt	stack 4
  4935                           ; Regs used in _initlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4936                           	line	547
  4937                           	
  4938  0C14                     l3587:	
  4939                           ;prev11.c: 547: TRISC=0b0000000;
  4940  0C14  1683               	bsf	status, 5	;RP0=1, select bank1
  4941  0C15  1303               	bcf	status, 6	;RP1=0, select bank1
  4942  0C16  0187               	clrf	(135)^080h	;volatile
  4943                           	line	549
  4944                           	
  4945  0C17                     l3589:	
  4946                           ;prev11.c: 549: TRISD=0b11000000;
  4947  0C17  30C0               	movlw	(0C0h)
  4948  0C18  0088               	movwf	(136)^080h	;volatile
  4949                           	line	551
  4950                           	
  4951  0C19                     l3591:	
  4952                           ;prev11.c: 551: cmd(0x38);
  4953  0C19  3038               	movlw	low(038h)
  4954  0C1A  00F8               	movwf	(?_cmd)
  4955  0C1B  3000               	movlw	high(038h)
  4956  0C1C  00F9               	movwf	((?_cmd))+1
  4957  0C1D  120A  158A  2378   	fcall	_cmd
              120A  158A         
  4958                           	line	553
  4959                           	
  4960  0C22                     l3593:	
  4961                           ;prev11.c: 553: cmd(0x0C);
  4962  0C22  300C               	movlw	low(0Ch)
  4963  0C23  00F8               	movwf	(?_cmd)
  4964  0C24  3000               	movlw	high(0Ch)
  4965  0C25  00F9               	movwf	((?_cmd))+1
  4966  0C26  120A  158A  2378   	fcall	_cmd
              120A  158A         
  4967                           	line	555
  4968                           	
  4969  0C2B                     l3595:	
  4970                           ;prev11.c: 555: cmd(0x01);
  4971  0C2B  3001               	movlw	low(01h)
  4972  0C2C  00F8               	movwf	(?_cmd)
  4973  0C2D  3000               	movlw	high(01h)
  4974  0C2E  00F9               	movwf	((?_cmd))+1
  4975  0C2F  120A  158A  2378   	fcall	_cmd
              120A  158A         
  4976                           	line	557
  4977                           	
  4978  0C34                     l3597:	
  4979                           ;prev11.c: 557: cmd(0x80);
  4980  0C34  3080               	movlw	low(080h)
  4981  0C35  00F8               	movwf	(?_cmd)
  4982  0C36  3000               	movlw	high(080h)
  4983  0C37  00F9               	movwf	((?_cmd))+1
  4984  0C38  120A  158A  2378   	fcall	_cmd
              120A  158A         
  4985                           	line	561
  4986                           	
  4987  0C3D                     l1225:	
  4988  0C3D  0008               	return
  4989                           	opt stack 0
  4990                           GLOBAL	__end_of_initlcd
  4991  0C3E                     	__end_of_initlcd:
  4992 ;; =============== function _initlcd ends ============
  4993                           
  4994                           	signat	_initlcd,88
  4995                           	global	_actrow
  4996                           psect	text578,local,class=CODE,delta=2
  4997                           global __ptext578
  4998  0007                     __ptext578:
  4999                           
  5000 ;; *************** function _actrow *****************
  5001 ;; Defined at:
  5002 ;;		line 764 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;  n               2    2[COMMON] int 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;		None               void
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0, pclath, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5016 ;;      Params:         2       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0
  5019 ;;      Totals:         2       0       0       0       0
  5020 ;;Total ram usage:        2 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    1
  5023 ;; This function calls:
  5024 ;;		_resetout
  5025 ;;		_delay
  5026 ;; This function is called by:
  5027 ;;		_scan
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           psect	text578
  5031                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5032                           	line	764
  5033                           	global	__size_of_actrow
  5034  003E                     	__size_of_actrow	equ	__end_of_actrow-_actrow
  5035                           	
  5036  0007                     _actrow:	
  5037                           	opt	stack 4
  5038                           ; Regs used in _actrow: [wreg+status,2+status,0+pclath+cstack]
  5039                           	line	765
  5040                           	
  5041  0007                     l3567:	
  5042                           ;prev11.c: 765: resetout();
  5043  0007  120A  158A  22F0   	fcall	_resetout
              120A  118A         
  5044                           	line	767
  5045                           	
  5046  000C                     l3569:	
  5047                           ;prev11.c: 767: if(n==1)
  5048  000C  3001               	movlw	01h
  5049  000D  0672               	xorwf	(actrow@n),w
  5050  000E  0473               	iorwf	(actrow@n+1),w
  5051  000F  1D03               	skipz
  5052  0010  2812               	goto	u4231
  5053  0011  2813               	goto	u4230
  5054  0012                     u4231:
  5055  0012  2817               	goto	l3573
  5056  0013                     u4230:
  5057                           	line	769
  5058                           	
  5059  0013                     l3571:	
  5060                           ;prev11.c: 768: {
  5061                           ;prev11.c: 769: RB3=1;
  5062  0013  1283               	bcf	status, 5	;RP0=0, select bank0
  5063  0014  1303               	bcf	status, 6	;RP1=0, select bank0
  5064  0015  1586               	bsf	(51/8),(51)&7
  5065                           	line	770
  5066                           ;prev11.c: 770: }
  5067  0016  283B               	goto	l3585
  5068                           	line	771
  5069                           	
  5070  0017                     l1305:	
  5071                           	
  5072  0017                     l3573:	
  5073                           ;prev11.c: 771: else if(n==2)
  5074  0017  3002               	movlw	02h
  5075  0018  0672               	xorwf	(actrow@n),w
  5076  0019  0473               	iorwf	(actrow@n+1),w
  5077  001A  1D03               	skipz
  5078  001B  281D               	goto	u4241
  5079  001C  281E               	goto	u4240
  5080  001D                     u4241:
  5081  001D  2822               	goto	l3577
  5082  001E                     u4240:
  5083                           	line	773
  5084                           	
  5085  001E                     l3575:	
  5086                           ;prev11.c: 772: {
  5087                           ;prev11.c: 773: RB2=1;
  5088  001E  1283               	bcf	status, 5	;RP0=0, select bank0
  5089  001F  1303               	bcf	status, 6	;RP1=0, select bank0
  5090  0020  1506               	bsf	(50/8),(50)&7
  5091                           	line	774
  5092                           ;prev11.c: 774: }
  5093  0021  283B               	goto	l3585
  5094                           	line	775
  5095                           	
  5096  0022                     l1307:	
  5097                           	
  5098  0022                     l3577:	
  5099                           ;prev11.c: 775: else if(n==3)
  5100  0022  3003               	movlw	03h
  5101  0023  0672               	xorwf	(actrow@n),w
  5102  0024  0473               	iorwf	(actrow@n+1),w
  5103  0025  1D03               	skipz
  5104  0026  2828               	goto	u4251
  5105  0027  2829               	goto	u4250
  5106  0028                     u4251:
  5107  0028  282D               	goto	l3581
  5108  0029                     u4250:
  5109                           	line	777
  5110                           	
  5111  0029                     l3579:	
  5112                           ;prev11.c: 776: {
  5113                           ;prev11.c: 777: RB1=1;
  5114  0029  1283               	bcf	status, 5	;RP0=0, select bank0
  5115  002A  1303               	bcf	status, 6	;RP1=0, select bank0
  5116  002B  1486               	bsf	(49/8),(49)&7
  5117                           	line	778
  5118                           ;prev11.c: 778: }
  5119  002C  283B               	goto	l3585
  5120                           	line	779
  5121                           	
  5122  002D                     l1309:	
  5123                           	
  5124  002D                     l3581:	
  5125                           ;prev11.c: 779: else if(n==4)
  5126  002D  3004               	movlw	04h
  5127  002E  0672               	xorwf	(actrow@n),w
  5128  002F  0473               	iorwf	(actrow@n+1),w
  5129  0030  1D03               	skipz
  5130  0031  2833               	goto	u4261
  5131  0032  2834               	goto	u4260
  5132  0033                     u4261:
  5133  0033  283B               	goto	l3585
  5134  0034                     u4260:
  5135                           	line	781
  5136                           	
  5137  0034                     l3583:	
  5138                           ;prev11.c: 780: {
  5139                           ;prev11.c: 781: RB0=1;
  5140  0034  1283               	bcf	status, 5	;RP0=0, select bank0
  5141  0035  1303               	bcf	status, 6	;RP1=0, select bank0
  5142  0036  1406               	bsf	(48/8),(48)&7
  5143  0037  283B               	goto	l3585
  5144                           	line	782
  5145                           	
  5146  0038                     l1311:	
  5147  0038  283B               	goto	l3585
  5148                           	line	783
  5149                           	
  5150  0039                     l1310:	
  5151  0039  283B               	goto	l3585
  5152                           	
  5153  003A                     l1308:	
  5154  003A  283B               	goto	l3585
  5155                           	
  5156  003B                     l1306:	
  5157                           	
  5158  003B                     l3585:	
  5159                           ;prev11.c: 782: }
  5160                           ;prev11.c: 783: delay(200);
  5161  003B  30C8               	movlw	low(0C8h)
  5162  003C  00F0               	movwf	(?_delay)
  5163  003D  3000               	movlw	high(0C8h)
  5164  003E  00F1               	movwf	((?_delay))+1
  5165  003F  120A  158A  234B   	fcall	_delay
              120A  118A         
  5166                           	line	786
  5167                           	
  5168  0044                     l1312:	
  5169  0044  0008               	return
  5170                           	opt stack 0
  5171                           GLOBAL	__end_of_actrow
  5172  0045                     	__end_of_actrow:
  5173 ;; =============== function _actrow ends ============
  5174                           
  5175                           	signat	_actrow,4216
  5176                           	global	_dat
  5177                           psect	text579,local,class=CODE,delta=2
  5178                           global __ptext579
  5179  0B9D                     __ptext579:
  5180                           
  5181 ;; *************** function _dat *****************
  5182 ;; Defined at:
  5183 ;;		line 579 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  Command         2    8[COMMON] unsigned int 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;		None               void
  5190 ;; Registers used:
  5191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5197 ;;      Params:         2       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0
  5200 ;;      Totals:         2       0       0       0       0
  5201 ;;Total ram usage:        2 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    2
  5204 ;; This function calls:
  5205 ;;		_setLCD
  5206 ;;		_delay
  5207 ;; This function is called by:
  5208 ;;		_write
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           psect	text579
  5212                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5213                           	line	579
  5214                           	global	__size_of_dat
  5215  0025                     	__size_of_dat	equ	__end_of_dat-_dat
  5216                           	
  5217  0B9D                     _dat:	
  5218                           	opt	stack 2
  5219                           ; Regs used in _dat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5220                           	line	580
  5221                           	
  5222  0B9D                     l3555:	
  5223                           ;prev11.c: 580: setLCD(Command);
  5224  0B9D  0879               	movf	(dat@Command+1),w
  5225  0B9E  01F1               	clrf	(?_setLCD+1)
  5226  0B9F  07F1               	addwf	(?_setLCD+1)
  5227  0BA0  0878               	movf	(dat@Command),w
  5228  0BA1  01F0               	clrf	(?_setLCD)
  5229  0BA2  07F0               	addwf	(?_setLCD)
  5230                           
  5231  0BA3  120A  118A  22B9   	fcall	_setLCD
              120A  158A         
  5232                           	line	582
  5233                           	
  5234  0BA8                     l3557:	
  5235                           ;prev11.c: 582: RD5=1;
  5236  0BA8  1283               	bcf	status, 5	;RP0=0, select bank0
  5237  0BA9  1303               	bcf	status, 6	;RP1=0, select bank0
  5238  0BAA  1688               	bsf	(69/8),(69)&7
  5239                           	line	584
  5240                           	
  5241  0BAB                     l3559:	
  5242                           ;prev11.c: 584: RD4=1;
  5243  0BAB  1608               	bsf	(68/8),(68)&7
  5244                           	line	586
  5245                           	
  5246  0BAC                     l3561:	
  5247                           ;prev11.c: 586: delay(20);
  5248  0BAC  3014               	movlw	low(014h)
  5249  0BAD  00F0               	movwf	(?_delay)
  5250  0BAE  3000               	movlw	high(014h)
  5251  0BAF  00F1               	movwf	((?_delay))+1
  5252  0BB0  120A  158A  234B   	fcall	_delay
              120A  158A         
  5253                           	line	588
  5254                           	
  5255  0BB5                     l3563:	
  5256                           ;prev11.c: 588: RD4=0;
  5257  0BB5  1283               	bcf	status, 5	;RP0=0, select bank0
  5258  0BB6  1303               	bcf	status, 6	;RP1=0, select bank0
  5259  0BB7  1208               	bcf	(68/8),(68)&7
  5260                           	line	590
  5261                           	
  5262  0BB8                     l3565:	
  5263                           ;prev11.c: 590: delay(20);
  5264  0BB8  3014               	movlw	low(014h)
  5265  0BB9  00F0               	movwf	(?_delay)
  5266  0BBA  3000               	movlw	high(014h)
  5267  0BBB  00F1               	movwf	((?_delay))+1
  5268  0BBC  120A  158A  234B   	fcall	_delay
              120A  158A         
  5269                           	line	596
  5270                           	
  5271  0BC1                     l1234:	
  5272  0BC1  0008               	return
  5273                           	opt stack 0
  5274                           GLOBAL	__end_of_dat
  5275  0BC2                     	__end_of_dat:
  5276 ;; =============== function _dat ends ============
  5277                           
  5278                           	signat	_dat,4216
  5279                           	global	_cmd
  5280                           psect	text580,local,class=CODE,delta=2
  5281                           global __ptext580
  5282  0B78                     __ptext580:
  5283                           
  5284 ;; *************** function _cmd *****************
  5285 ;; Defined at:
  5286 ;;		line 567 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  Command         2    8[COMMON] unsigned int 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;		None               void
  5293 ;; Registers used:
  5294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5300 ;;      Params:         2       0       0       0       0
  5301 ;;      Locals:         0       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0
  5303 ;;      Totals:         2       0       0       0       0
  5304 ;;Total ram usage:        2 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    2
  5307 ;; This function calls:
  5308 ;;		_setLCD
  5309 ;;		_delay
  5310 ;; This function is called by:
  5311 ;;		_initlcd
  5312 ;;		_clearlcd
  5313 ;;		_write
  5314 ;;		_scroll
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           psect	text580
  5318                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5319                           	line	567
  5320                           	global	__size_of_cmd
  5321  0025                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  5322                           	
  5323  0B78                     _cmd:	
  5324                           	opt	stack 2
  5325                           ; Regs used in _cmd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5326                           	line	569
  5327                           	
  5328  0B78                     l3543:	
  5329                           ;prev11.c: 569: setLCD(Command);
  5330  0B78  0879               	movf	(cmd@Command+1),w
  5331  0B79  01F1               	clrf	(?_setLCD+1)
  5332  0B7A  07F1               	addwf	(?_setLCD+1)
  5333  0B7B  0878               	movf	(cmd@Command),w
  5334  0B7C  01F0               	clrf	(?_setLCD)
  5335  0B7D  07F0               	addwf	(?_setLCD)
  5336                           
  5337  0B7E  120A  118A  22B9   	fcall	_setLCD
              120A  158A         
  5338                           	line	570
  5339                           	
  5340  0B83                     l3545:	
  5341                           ;prev11.c: 570: RD5=0;
  5342  0B83  1283               	bcf	status, 5	;RP0=0, select bank0
  5343  0B84  1303               	bcf	status, 6	;RP1=0, select bank0
  5344  0B85  1288               	bcf	(69/8),(69)&7
  5345                           	line	571
  5346                           	
  5347  0B86                     l3547:	
  5348                           ;prev11.c: 571: RD4=1;
  5349  0B86  1608               	bsf	(68/8),(68)&7
  5350                           	line	572
  5351                           	
  5352  0B87                     l3549:	
  5353                           ;prev11.c: 572: delay(20);
  5354  0B87  3014               	movlw	low(014h)
  5355  0B88  00F0               	movwf	(?_delay)
  5356  0B89  3000               	movlw	high(014h)
  5357  0B8A  00F1               	movwf	((?_delay))+1
  5358  0B8B  120A  158A  234B   	fcall	_delay
              120A  158A         
  5359                           	line	573
  5360                           	
  5361  0B90                     l3551:	
  5362                           ;prev11.c: 573: RD4=0;
  5363  0B90  1283               	bcf	status, 5	;RP0=0, select bank0
  5364  0B91  1303               	bcf	status, 6	;RP1=0, select bank0
  5365  0B92  1208               	bcf	(68/8),(68)&7
  5366                           	line	574
  5367                           	
  5368  0B93                     l3553:	
  5369                           ;prev11.c: 574: delay(20);
  5370  0B93  3014               	movlw	low(014h)
  5371  0B94  00F0               	movwf	(?_delay)
  5372  0B95  3000               	movlw	high(014h)
  5373  0B96  00F1               	movwf	((?_delay))+1
  5374  0B97  120A  158A  234B   	fcall	_delay
              120A  158A         
  5375                           	line	576
  5376                           	
  5377  0B9C                     l1231:	
  5378  0B9C  0008               	return
  5379                           	opt stack 0
  5380                           GLOBAL	__end_of_cmd
  5381  0B9D                     	__end_of_cmd:
  5382 ;; =============== function _cmd ends ============
  5383                           
  5384                           	signat	_cmd,4216
  5385                           	global	_itoaa
  5386                           psect	text581,local,class=CODE,delta=2
  5387                           global __ptext581
  5388  00B9                     __ptext581:
  5389                           
  5390 ;; *************** function _itoaa *****************
  5391 ;; Defined at:
  5392 ;;		line 518 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  value           2    9[COMMON] int 
  5395 ;;  ptr             1   11[COMMON] PTR unsigned char 
  5396 ;;		 -> getlogicseq@snum(16), 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  temp            2    2[BANK0 ] int 
  5399 ;;  count           2    0[BANK0 ] int 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  2    9[COMMON] int 
  5402 ;; Registers used:
  5403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5409 ;;      Params:         3       0       0       0       0
  5410 ;;      Locals:         0       4       0       0       0
  5411 ;;      Temps:          1       0       0       0       0
  5412 ;;      Totals:         4       4       0       0       0
  5413 ;;Total ram usage:        8 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    1
  5416 ;; This function calls:
  5417 ;;		___wmul
  5418 ;;		___awdiv
  5419 ;;		___awmod
  5420 ;; This function is called by:
  5421 ;;		_getlogicseq
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           psect	text581
  5425                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5426                           	line	518
  5427                           	global	__size_of_itoaa
  5428  00EB                     	__size_of_itoaa	equ	__end_of_itoaa-_itoaa
  5429                           	
  5430  00B9                     _itoaa:	
  5431                           	opt	stack 5
  5432                           ; Regs used in _itoaa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5433                           	line	519
  5434                           	
  5435  00B9                     l3495:	
  5436                           ;prev11.c: 519: int count=0,temp;
  5437  00B9  1283               	bcf	status, 5	;RP0=0, select bank0
  5438  00BA  1303               	bcf	status, 6	;RP1=0, select bank0
  5439  00BB  01A0               	clrf	(itoaa@count)
  5440  00BC  01A1               	clrf	(itoaa@count+1)
  5441                           	line	520
  5442                           	
  5443  00BD                     l3497:	
  5444                           ;prev11.c: 520: if(ptr==(0))
  5445  00BD  08FB               	movf	(itoaa@ptr),f
  5446  00BE  1D03               	skipz
  5447  00BF  28C1               	goto	u4161
  5448  00C0  28C2               	goto	u4160
  5449  00C1                     u4161:
  5450  00C1  28C4               	goto	l3501
  5451  00C2                     u4160:
  5452  00C2  29A3               	goto	l1216
  5453                           	line	521
  5454                           	
  5455  00C3                     l3499:	
  5456                           ;prev11.c: 521: return 0;
  5457                           ;	Return value of _itoaa is never used
  5458  00C3  29A3               	goto	l1216
  5459                           	
  5460  00C4                     l1215:	
  5461                           	line	522
  5462                           	
  5463  00C4                     l3501:	
  5464                           ;prev11.c: 522: if(value==0)
  5465  00C4  087A               	movf	((itoaa@value+1)),w
  5466  00C5  0479               	iorwf	((itoaa@value)),w
  5467  00C6  1D03               	skipz
  5468  00C7  28C9               	goto	u4171
  5469  00C8  28CA               	goto	u4170
  5470  00C9                     u4171:
  5471  00C9  28D3               	goto	l1217
  5472  00CA                     u4170:
  5473                           	line	524
  5474                           	
  5475  00CA                     l3503:	
  5476                           ;prev11.c: 523: {
  5477                           ;prev11.c: 524: *ptr='0';
  5478  00CA  3030               	movlw	(030h)
  5479  00CB  00FC               	movwf	(??_itoaa+0)+0
  5480  00CC  087B               	movf	(itoaa@ptr),w
  5481  00CD  0084               	movwf	fsr0
  5482  00CE  087C               	movf	(??_itoaa+0)+0,w
  5483  00CF  1383               	bcf	status, 7	;select IRP bank0
  5484  00D0  0080               	movwf	indf
  5485  00D1  29A3               	goto	l1216
  5486                           	line	525
  5487                           	
  5488  00D2                     l3505:	
  5489                           ;prev11.c: 525: return 1;
  5490                           ;	Return value of _itoaa is never used
  5491  00D2  29A3               	goto	l1216
  5492                           	line	526
  5493                           	
  5494  00D3                     l1217:	
  5495                           	line	528
  5496                           ;prev11.c: 526: }
  5497                           ;prev11.c: 528: if(value<0)
  5498  00D3  1FFA               	btfss	(itoaa@value+1),7
  5499  00D4  28D6               	goto	u4181
  5500  00D5  28D7               	goto	u4180
  5501  00D6                     u4181:
  5502  00D6  2900               	goto	l3515
  5503  00D7                     u4180:
  5504                           	line	530
  5505                           	
  5506  00D7                     l3507:	
  5507                           ;prev11.c: 529: {
  5508                           ;prev11.c: 530: value*=(-1);
  5509  00D7  30FF               	movlw	low(-1)
  5510  00D8  00F0               	movwf	(?___wmul)
  5511  00D9  30FF               	movlw	high(-1)
  5512  00DA  00F1               	movwf	((?___wmul))+1
  5513  00DB  087A               	movf	(itoaa@value+1),w
  5514  00DC  01F3               	clrf	1+(?___wmul)+02h
  5515  00DD  07F3               	addwf	1+(?___wmul)+02h
  5516  00DE  0879               	movf	(itoaa@value),w
  5517  00DF  01F2               	clrf	0+(?___wmul)+02h
  5518  00E0  07F2               	addwf	0+(?___wmul)+02h
  5519                           
  5520  00E1  120A  158A  23EA   	fcall	___wmul
              120A  118A         
  5521  00E6  0871               	movf	(1+(?___wmul)),w
  5522  00E7  01FA               	clrf	(itoaa@value+1)
  5523  00E8  07FA               	addwf	(itoaa@value+1)
  5524  00E9  0870               	movf	(0+(?___wmul)),w
  5525  00EA  01F9               	clrf	(itoaa@value)
  5526  00EB  07F9               	addwf	(itoaa@value)
  5527                           
  5528                           	line	531
  5529                           	
  5530  00EC                     l3509:	
  5531                           ;prev11.c: 531: *ptr++='-';
  5532  00EC  302D               	movlw	(02Dh)
  5533  00ED  00FC               	movwf	(??_itoaa+0)+0
  5534  00EE  087B               	movf	(itoaa@ptr),w
  5535  00EF  0084               	movwf	fsr0
  5536  00F0  087C               	movf	(??_itoaa+0)+0,w
  5537  00F1  1383               	bcf	status, 7	;select IRP bank0
  5538  00F2  0080               	movwf	indf
  5539                           	
  5540  00F3                     l3511:	
  5541  00F3  3001               	movlw	(01h)
  5542  00F4  00FC               	movwf	(??_itoaa+0)+0
  5543  00F5  087C               	movf	(??_itoaa+0)+0,w
  5544  00F6  07FB               	addwf	(itoaa@ptr),f
  5545                           	line	532
  5546                           	
  5547  00F7                     l3513:	
  5548                           ;prev11.c: 532: count++;
  5549  00F7  3001               	movlw	low(01h)
  5550  00F8  1283               	bcf	status, 5	;RP0=0, select bank0
  5551  00F9  1303               	bcf	status, 6	;RP1=0, select bank0
  5552  00FA  07A0               	addwf	(itoaa@count),f
  5553  00FB  1803               	skipnc
  5554  00FC  0AA1               	incf	(itoaa@count+1),f
  5555  00FD  3000               	movlw	high(01h)
  5556  00FE  07A1               	addwf	(itoaa@count+1),f
  5557  00FF  2900               	goto	l3515
  5558                           	line	533
  5559                           	
  5560  0100                     l1218:	
  5561                           	line	534
  5562                           	
  5563  0100                     l3515:	
  5564                           ;prev11.c: 533: }
  5565                           ;prev11.c: 534: for(temp=value;temp>0;temp/=10,ptr++);
  5566  0100  087A               	movf	(itoaa@value+1),w
  5567  0101  01A3               	clrf	(itoaa@temp+1)
  5568  0102  07A3               	addwf	(itoaa@temp+1)
  5569  0103  0879               	movf	(itoaa@value),w
  5570  0104  01A2               	clrf	(itoaa@temp)
  5571  0105  07A2               	addwf	(itoaa@temp)
  5572                           
  5573                           	
  5574  0106                     l3517:	
  5575  0106  0823               	movf	(itoaa@temp+1),w
  5576  0107  3A80               	xorlw	80h
  5577  0108  00FF               	movwf	btemp+1
  5578  0109  3080               	movlw	(high(01h))^80h
  5579  010A  027F               	subwf	btemp+1,w
  5580  010B  1D03               	skipz
  5581  010C  290F               	goto	u4195
  5582  010D  3001               	movlw	low(01h)
  5583  010E  0222               	subwf	(itoaa@temp),w
  5584  010F                     u4195:
  5585                           
  5586  010F  1803               	skipnc
  5587  0110  2912               	goto	u4191
  5588  0111  2913               	goto	u4190
  5589  0112                     u4191:
  5590  0112  2915               	goto	l3521
  5591  0113                     u4190:
  5592  0113  2940               	goto	l3527
  5593                           	
  5594  0114                     l3519:	
  5595  0114  2940               	goto	l3527
  5596                           	
  5597  0115                     l1219:	
  5598                           	
  5599  0115                     l3521:	
  5600  0115  300A               	movlw	low(0Ah)
  5601  0116  00F0               	movwf	(?___awdiv)
  5602  0117  3000               	movlw	high(0Ah)
  5603  0118  00F1               	movwf	((?___awdiv))+1
  5604  0119  1283               	bcf	status, 5	;RP0=0, select bank0
  5605  011A  1303               	bcf	status, 6	;RP1=0, select bank0
  5606  011B  0823               	movf	(itoaa@temp+1),w
  5607  011C  01F3               	clrf	1+(?___awdiv)+02h
  5608  011D  07F3               	addwf	1+(?___awdiv)+02h
  5609  011E  0822               	movf	(itoaa@temp),w
  5610  011F  01F2               	clrf	0+(?___awdiv)+02h
  5611  0120  07F2               	addwf	0+(?___awdiv)+02h
  5612                           
  5613  0121  120A  118A  2045   	fcall	___awdiv
              120A  118A         
  5614  0126  0871               	movf	(1+(?___awdiv)),w
  5615  0127  1283               	bcf	status, 5	;RP0=0, select bank0
  5616  0128  1303               	bcf	status, 6	;RP1=0, select bank0
  5617  0129  01A3               	clrf	(itoaa@temp+1)
  5618  012A  07A3               	addwf	(itoaa@temp+1)
  5619  012B  0870               	movf	(0+(?___awdiv)),w
  5620  012C  01A2               	clrf	(itoaa@temp)
  5621  012D  07A2               	addwf	(itoaa@temp)
  5622                           
  5623                           	
  5624  012E                     l3523:	
  5625  012E  3001               	movlw	(01h)
  5626  012F  00FC               	movwf	(??_itoaa+0)+0
  5627  0130  087C               	movf	(??_itoaa+0)+0,w
  5628  0131  07FB               	addwf	(itoaa@ptr),f
  5629                           	
  5630  0132                     l3525:	
  5631  0132  0823               	movf	(itoaa@temp+1),w
  5632  0133  3A80               	xorlw	80h
  5633  0134  00FF               	movwf	btemp+1
  5634  0135  3080               	movlw	(high(01h))^80h
  5635  0136  027F               	subwf	btemp+1,w
  5636  0137  1D03               	skipz
  5637  0138  293B               	goto	u4205
  5638  0139  3001               	movlw	low(01h)
  5639  013A  0222               	subwf	(itoaa@temp),w
  5640  013B                     u4205:
  5641                           
  5642  013B  1803               	skipnc
  5643  013C  293E               	goto	u4201
  5644  013D  293F               	goto	u4200
  5645  013E                     u4201:
  5646  013E  2915               	goto	l3521
  5647  013F                     u4200:
  5648  013F  2940               	goto	l3527
  5649                           	
  5650  0140                     l1220:	
  5651                           	line	535
  5652                           	
  5653  0140                     l3527:	
  5654                           ;prev11.c: 535: *ptr='\0';
  5655  0140  087B               	movf	(itoaa@ptr),w
  5656  0141  0084               	movwf	fsr0
  5657  0142  1383               	bcf	status, 7	;select IRP bank0
  5658  0143  0180               	clrf	indf
  5659                           	line	536
  5660                           	
  5661  0144                     l3529:	
  5662                           ;prev11.c: 536: for(temp=value;temp>0;temp/=10)
  5663  0144  087A               	movf	(itoaa@value+1),w
  5664  0145  1283               	bcf	status, 5	;RP0=0, select bank0
  5665  0146  1303               	bcf	status, 6	;RP1=0, select bank0
  5666  0147  01A3               	clrf	(itoaa@temp+1)
  5667  0148  07A3               	addwf	(itoaa@temp+1)
  5668  0149  0879               	movf	(itoaa@value),w
  5669  014A  01A2               	clrf	(itoaa@temp)
  5670  014B  07A2               	addwf	(itoaa@temp)
  5671                           
  5672                           	
  5673  014C                     l3531:	
  5674  014C  0823               	movf	(itoaa@temp+1),w
  5675  014D  3A80               	xorlw	80h
  5676  014E  00FF               	movwf	btemp+1
  5677  014F  3080               	movlw	(high(01h))^80h
  5678  0150  027F               	subwf	btemp+1,w
  5679  0151  1D03               	skipz
  5680  0152  2955               	goto	u4215
  5681  0153  3001               	movlw	low(01h)
  5682  0154  0222               	subwf	(itoaa@temp),w
  5683  0155                     u4215:
  5684                           
  5685  0155  1803               	skipnc
  5686  0156  2958               	goto	u4211
  5687  0157  2959               	goto	u4210
  5688  0158                     u4211:
  5689  0158  295B               	goto	l3535
  5690  0159                     u4210:
  5691  0159  29A3               	goto	l1216
  5692                           	
  5693  015A                     l3533:	
  5694  015A  29A3               	goto	l1216
  5695                           	line	537
  5696                           	
  5697  015B                     l1221:	
  5698                           	line	538
  5699                           	
  5700  015B                     l3535:	
  5701                           ;prev11.c: 537: {
  5702                           ;prev11.c: 538: *--ptr=temp%10+'0';
  5703  015B  300A               	movlw	low(0Ah)
  5704  015C  00F0               	movwf	(?___awmod)
  5705  015D  3000               	movlw	high(0Ah)
  5706  015E  00F1               	movwf	((?___awmod))+1
  5707  015F  1283               	bcf	status, 5	;RP0=0, select bank0
  5708  0160  1303               	bcf	status, 6	;RP1=0, select bank0
  5709  0161  0823               	movf	(itoaa@temp+1),w
  5710  0162  01F3               	clrf	1+(?___awmod)+02h
  5711  0163  07F3               	addwf	1+(?___awmod)+02h
  5712  0164  0822               	movf	(itoaa@temp),w
  5713  0165  01F2               	clrf	0+(?___awmod)+02h
  5714  0166  07F2               	addwf	0+(?___awmod)+02h
  5715                           
  5716  0167  120A  158A  25DF   	fcall	___awmod
              120A  118A         
  5717  016C  0870               	movf	(0+(?___awmod)),w
  5718  016D  3E30               	addlw	030h
  5719  016E  00FC               	movwf	(??_itoaa+0)+0
  5720  016F  3001               	movlw	low(01h)
  5721  0170  02FB               	subwf	(itoaa@ptr),f
  5722  0171  087B               	movf	((itoaa@ptr)),w
  5723  0172  0084               	movwf	fsr0
  5724  0173  087C               	movf	(??_itoaa+0)+0,w
  5725  0174  1383               	bcf	status, 7	;select IRP bank0
  5726  0175  0080               	movwf	indf
  5727                           	line	539
  5728                           	
  5729  0176                     l3537:	
  5730                           ;prev11.c: 539: count++;
  5731  0176  3001               	movlw	low(01h)
  5732  0177  1283               	bcf	status, 5	;RP0=0, select bank0
  5733  0178  1303               	bcf	status, 6	;RP1=0, select bank0
  5734  0179  07A0               	addwf	(itoaa@count),f
  5735  017A  1803               	skipnc
  5736  017B  0AA1               	incf	(itoaa@count+1),f
  5737  017C  3000               	movlw	high(01h)
  5738  017D  07A1               	addwf	(itoaa@count+1),f
  5739                           	line	536
  5740                           	
  5741  017E                     l3539:	
  5742  017E  300A               	movlw	low(0Ah)
  5743  017F  00F0               	movwf	(?___awdiv)
  5744  0180  3000               	movlw	high(0Ah)
  5745  0181  00F1               	movwf	((?___awdiv))+1
  5746  0182  0823               	movf	(itoaa@temp+1),w
  5747  0183  01F3               	clrf	1+(?___awdiv)+02h
  5748  0184  07F3               	addwf	1+(?___awdiv)+02h
  5749  0185  0822               	movf	(itoaa@temp),w
  5750  0186  01F2               	clrf	0+(?___awdiv)+02h
  5751  0187  07F2               	addwf	0+(?___awdiv)+02h
  5752                           
  5753  0188  120A  118A  2045   	fcall	___awdiv
              120A  118A         
  5754  018D  0871               	movf	(1+(?___awdiv)),w
  5755  018E  1283               	bcf	status, 5	;RP0=0, select bank0
  5756  018F  1303               	bcf	status, 6	;RP1=0, select bank0
  5757  0190  01A3               	clrf	(itoaa@temp+1)
  5758  0191  07A3               	addwf	(itoaa@temp+1)
  5759  0192  0870               	movf	(0+(?___awdiv)),w
  5760  0193  01A2               	clrf	(itoaa@temp)
  5761  0194  07A2               	addwf	(itoaa@temp)
  5762                           
  5763                           	
  5764  0195                     l3541:	
  5765  0195  0823               	movf	(itoaa@temp+1),w
  5766  0196  3A80               	xorlw	80h
  5767  0197  00FF               	movwf	btemp+1
  5768  0198  3080               	movlw	(high(01h))^80h
  5769  0199  027F               	subwf	btemp+1,w
  5770  019A  1D03               	skipz
  5771  019B  299E               	goto	u4225
  5772  019C  3001               	movlw	low(01h)
  5773  019D  0222               	subwf	(itoaa@temp),w
  5774  019E                     u4225:
  5775                           
  5776  019E  1803               	skipnc
  5777  019F  29A1               	goto	u4221
  5778  01A0  29A2               	goto	u4220
  5779  01A1                     u4221:
  5780  01A1  295B               	goto	l3535
  5781  01A2                     u4220:
  5782  01A2  29A3               	goto	l1216
  5783                           	
  5784  01A3                     l1222:	
  5785                           	line	542
  5786                           ;prev11.c: 540: }
  5787                           ;prev11.c: 541: return count;
  5788                           ;	Return value of _itoaa is never used
  5789                           	
  5790  01A3                     l1216:	
  5791  01A3  0008               	return
  5792                           	opt stack 0
  5793                           GLOBAL	__end_of_itoaa
  5794  01A4                     	__end_of_itoaa:
  5795 ;; =============== function _itoaa ends ============
  5796                           
  5797                           	signat	_itoaa,8314
  5798                           	global	___awmod
  5799                           psect	text582,local,class=CODE,delta=2
  5800                           global __ptext582
  5801  0DDF                     __ptext582:
  5802                           
  5803 ;; *************** function ___awmod *****************
  5804 ;; Defined at:
  5805 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  divisor         2    0[COMMON] int 
  5808 ;;  dividend        2    2[COMMON] int 
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  sign            1    6[COMMON] unsigned char 
  5811 ;;  counter         1    5[COMMON] unsigned char 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  2    0[COMMON] int 
  5814 ;; Registers used:
  5815 ;;		wreg, status,2, status,0
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5821 ;;      Params:         4       0       0       0       0
  5822 ;;      Locals:         2       0       0       0       0
  5823 ;;      Temps:          1       0       0       0       0
  5824 ;;      Totals:         7       0       0       0       0
  5825 ;;Total ram usage:        7 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; This function calls:
  5828 ;;		Nothing
  5829 ;; This function is called by:
  5830 ;;		_itoaa
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           psect	text582
  5834                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  5835                           	line	5
  5836                           	global	__size_of___awmod
  5837  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  5838                           	
  5839  0DDF                     ___awmod:	
  5840                           	opt	stack 5
  5841                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5842                           	line	8
  5843                           	
  5844  0DDF                     l3461:	
  5845  0DDF  01F6               	clrf	(___awmod@sign)
  5846                           	line	9
  5847  0DE0  1FF3               	btfss	(___awmod@dividend+1),7
  5848  0DE1  2DE3               	goto	u4071
  5849  0DE2  2DE4               	goto	u4070
  5850  0DE3                     u4071:
  5851  0DE3  2DED               	goto	l3465
  5852  0DE4                     u4070:
  5853                           	line	10
  5854                           	
  5855  0DE4                     l3463:	
  5856  0DE4  09F2               	comf	(___awmod@dividend),f
  5857  0DE5  09F3               	comf	(___awmod@dividend+1),f
  5858  0DE6  0AF2               	incf	(___awmod@dividend),f
  5859  0DE7  1903               	skipnz
  5860  0DE8  0AF3               	incf	(___awmod@dividend+1),f
  5861                           	line	11
  5862  0DE9  01F6               	clrf	(___awmod@sign)
  5863  0DEA  1403               	bsf	status,0
  5864  0DEB  0DF6               	rlf	(___awmod@sign),f
  5865  0DEC  2DED               	goto	l3465
  5866                           	line	12
  5867                           	
  5868  0DED                     l1573:	
  5869                           	line	13
  5870                           	
  5871  0DED                     l3465:	
  5872  0DED  1FF1               	btfss	(___awmod@divisor+1),7
  5873  0DEE  2DF0               	goto	u4081
  5874  0DEF  2DF1               	goto	u4080
  5875  0DF0                     u4081:
  5876  0DF0  2DF7               	goto	l3469
  5877  0DF1                     u4080:
  5878                           	line	14
  5879                           	
  5880  0DF1                     l3467:	
  5881  0DF1  09F0               	comf	(___awmod@divisor),f
  5882  0DF2  09F1               	comf	(___awmod@divisor+1),f
  5883  0DF3  0AF0               	incf	(___awmod@divisor),f
  5884  0DF4  1903               	skipnz
  5885  0DF5  0AF1               	incf	(___awmod@divisor+1),f
  5886  0DF6  2DF7               	goto	l3469
  5887                           	
  5888  0DF7                     l1574:	
  5889                           	line	15
  5890                           	
  5891  0DF7                     l3469:	
  5892  0DF7  0871               	movf	(___awmod@divisor+1),w
  5893  0DF8  0470               	iorwf	(___awmod@divisor),w
  5894  0DF9  1903               	skipnz
  5895  0DFA  2DFC               	goto	u4091
  5896  0DFB  2DFD               	goto	u4090
  5897  0DFC                     u4091:
  5898  0DFC  2E33               	goto	l3487
  5899  0DFD                     u4090:
  5900                           	line	16
  5901                           	
  5902  0DFD                     l3471:	
  5903  0DFD  01F5               	clrf	(___awmod@counter)
  5904  0DFE  1403               	bsf	status,0
  5905  0DFF  0DF5               	rlf	(___awmod@counter),f
  5906                           	line	17
  5907  0E00  2E0D               	goto	l3477
  5908                           	
  5909  0E01                     l1577:	
  5910                           	line	18
  5911                           	
  5912  0E01                     l3473:	
  5913  0E01  3001               	movlw	01h
  5914                           	
  5915  0E02                     u4105:
  5916  0E02  1003               	clrc
  5917  0E03  0DF0               	rlf	(___awmod@divisor),f
  5918  0E04  0DF1               	rlf	(___awmod@divisor+1),f
  5919  0E05  3EFF               	addlw	-1
  5920  0E06  1D03               	skipz
  5921  0E07  2E02               	goto	u4105
  5922                           	line	19
  5923                           	
  5924  0E08                     l3475:	
  5925  0E08  3001               	movlw	(01h)
  5926  0E09  00F4               	movwf	(??___awmod+0)+0
  5927  0E0A  0874               	movf	(??___awmod+0)+0,w
  5928  0E0B  07F5               	addwf	(___awmod@counter),f
  5929  0E0C  2E0D               	goto	l3477
  5930                           	line	20
  5931                           	
  5932  0E0D                     l1576:	
  5933                           	line	17
  5934                           	
  5935  0E0D                     l3477:	
  5936  0E0D  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  5937  0E0E  2E10               	goto	u4111
  5938  0E0F  2E11               	goto	u4110
  5939  0E10                     u4111:
  5940  0E10  2E01               	goto	l3473
  5941  0E11                     u4110:
  5942  0E11  2E13               	goto	l3479
  5943                           	
  5944  0E12                     l1578:	
  5945  0E12  2E13               	goto	l3479
  5946                           	line	21
  5947                           	
  5948  0E13                     l1579:	
  5949                           	line	22
  5950                           	
  5951  0E13                     l3479:	
  5952  0E13  0871               	movf	(___awmod@divisor+1),w
  5953  0E14  0273               	subwf	(___awmod@dividend+1),w
  5954  0E15  1D03               	skipz
  5955  0E16  2E19               	goto	u4125
  5956  0E17  0870               	movf	(___awmod@divisor),w
  5957  0E18  0272               	subwf	(___awmod@dividend),w
  5958  0E19                     u4125:
  5959  0E19  1C03               	skipc
  5960  0E1A  2E1C               	goto	u4121
  5961  0E1B  2E1D               	goto	u4120
  5962  0E1C                     u4121:
  5963  0E1C  2E24               	goto	l3483
  5964  0E1D                     u4120:
  5965                           	line	23
  5966                           	
  5967  0E1D                     l3481:	
  5968  0E1D  0870               	movf	(___awmod@divisor),w
  5969  0E1E  02F2               	subwf	(___awmod@dividend),f
  5970  0E1F  0871               	movf	(___awmod@divisor+1),w
  5971  0E20  1C03               	skipc
  5972  0E21  03F3               	decf	(___awmod@dividend+1),f
  5973  0E22  02F3               	subwf	(___awmod@dividend+1),f
  5974  0E23  2E24               	goto	l3483
  5975                           	
  5976  0E24                     l1580:	
  5977                           	line	24
  5978                           	
  5979  0E24                     l3483:	
  5980  0E24  3001               	movlw	01h
  5981                           	
  5982  0E25                     u4135:
  5983  0E25  1003               	clrc
  5984  0E26  0CF1               	rrf	(___awmod@divisor+1),f
  5985  0E27  0CF0               	rrf	(___awmod@divisor),f
  5986  0E28  3EFF               	addlw	-1
  5987  0E29  1D03               	skipz
  5988  0E2A  2E25               	goto	u4135
  5989                           	line	25
  5990                           	
  5991  0E2B                     l3485:	
  5992  0E2B  3001               	movlw	low(01h)
  5993  0E2C  02F5               	subwf	(___awmod@counter),f
  5994  0E2D  1D03               	btfss	status,2
  5995  0E2E  2E30               	goto	u4141
  5996  0E2F  2E31               	goto	u4140
  5997  0E30                     u4141:
  5998  0E30  2E13               	goto	l3479
  5999  0E31                     u4140:
  6000  0E31  2E33               	goto	l3487
  6001                           	
  6002  0E32                     l1581:	
  6003  0E32  2E33               	goto	l3487
  6004                           	line	26
  6005                           	
  6006  0E33                     l1575:	
  6007                           	line	27
  6008                           	
  6009  0E33                     l3487:	
  6010  0E33  0876               	movf	(___awmod@sign),w
  6011  0E34  1D03               	skipz
  6012  0E35  2E37               	goto	u4150
  6013  0E36  2E3D               	goto	l3491
  6014  0E37                     u4150:
  6015                           	line	28
  6016                           	
  6017  0E37                     l3489:	
  6018  0E37  09F2               	comf	(___awmod@dividend),f
  6019  0E38  09F3               	comf	(___awmod@dividend+1),f
  6020  0E39  0AF2               	incf	(___awmod@dividend),f
  6021  0E3A  1903               	skipnz
  6022  0E3B  0AF3               	incf	(___awmod@dividend+1),f
  6023  0E3C  2E3D               	goto	l3491
  6024                           	
  6025  0E3D                     l1582:	
  6026                           	line	29
  6027                           	
  6028  0E3D                     l3491:	
  6029  0E3D  0873               	movf	(___awmod@dividend+1),w
  6030  0E3E  01F1               	clrf	(?___awmod+1)
  6031  0E3F  07F1               	addwf	(?___awmod+1)
  6032  0E40  0872               	movf	(___awmod@dividend),w
  6033  0E41  01F0               	clrf	(?___awmod)
  6034  0E42  07F0               	addwf	(?___awmod)
  6035                           
  6036  0E43  2E44               	goto	l1583
  6037                           	
  6038  0E44                     l3493:	
  6039                           	line	30
  6040                           	
  6041  0E44                     l1583:	
  6042  0E44  0008               	return
  6043                           	opt stack 0
  6044                           GLOBAL	__end_of___awmod
  6045  0E45                     	__end_of___awmod:
  6046 ;; =============== function ___awmod ends ============
  6047                           
  6048                           	signat	___awmod,8314
  6049                           	global	___awdiv
  6050                           psect	text583,local,class=CODE,delta=2
  6051                           global __ptext583
  6052  0045                     __ptext583:
  6053                           
  6054 ;; *************** function ___awdiv *****************
  6055 ;; Defined at:
  6056 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  divisor         2    0[COMMON] int 
  6059 ;;  dividend        2    2[COMMON] int 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  quotient        2    7[COMMON] int 
  6062 ;;  sign            1    6[COMMON] unsigned char 
  6063 ;;  counter         1    5[COMMON] unsigned char 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  2    0[COMMON] int 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6073 ;;      Params:         4       0       0       0       0
  6074 ;;      Locals:         4       0       0       0       0
  6075 ;;      Temps:          1       0       0       0       0
  6076 ;;      Totals:         9       0       0       0       0
  6077 ;;Total ram usage:        9 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_itoaa
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           psect	text583
  6086                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  6087                           	line	5
  6088                           	global	__size_of___awdiv
  6089  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  6090                           	
  6091  0045                     ___awdiv:	
  6092                           	opt	stack 5
  6093                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6094                           	line	9
  6095                           	
  6096  0045                     l3421:	
  6097  0045  01F6               	clrf	(___awdiv@sign)
  6098                           	line	10
  6099  0046  1FF1               	btfss	(___awdiv@divisor+1),7
  6100  0047  2849               	goto	u3971
  6101  0048  284A               	goto	u3970
  6102  0049                     u3971:
  6103  0049  2853               	goto	l3425
  6104  004A                     u3970:
  6105                           	line	11
  6106                           	
  6107  004A                     l3423:	
  6108  004A  09F0               	comf	(___awdiv@divisor),f
  6109  004B  09F1               	comf	(___awdiv@divisor+1),f
  6110  004C  0AF0               	incf	(___awdiv@divisor),f
  6111  004D  1903               	skipnz
  6112  004E  0AF1               	incf	(___awdiv@divisor+1),f
  6113                           	line	12
  6114  004F  01F6               	clrf	(___awdiv@sign)
  6115  0050  1403               	bsf	status,0
  6116  0051  0DF6               	rlf	(___awdiv@sign),f
  6117  0052  2853               	goto	l3425
  6118                           	line	13
  6119                           	
  6120  0053                     l1505:	
  6121                           	line	14
  6122                           	
  6123  0053                     l3425:	
  6124  0053  1FF3               	btfss	(___awdiv@dividend+1),7
  6125  0054  2856               	goto	u3981
  6126  0055  2857               	goto	u3980
  6127  0056                     u3981:
  6128  0056  2861               	goto	l3431
  6129  0057                     u3980:
  6130                           	line	15
  6131                           	
  6132  0057                     l3427:	
  6133  0057  09F2               	comf	(___awdiv@dividend),f
  6134  0058  09F3               	comf	(___awdiv@dividend+1),f
  6135  0059  0AF2               	incf	(___awdiv@dividend),f
  6136  005A  1903               	skipnz
  6137  005B  0AF3               	incf	(___awdiv@dividend+1),f
  6138                           	line	16
  6139                           	
  6140  005C                     l3429:	
  6141  005C  3001               	movlw	(01h)
  6142  005D  00F4               	movwf	(??___awdiv+0)+0
  6143  005E  0874               	movf	(??___awdiv+0)+0,w
  6144  005F  06F6               	xorwf	(___awdiv@sign),f
  6145  0060  2861               	goto	l3431
  6146                           	line	17
  6147                           	
  6148  0061                     l1506:	
  6149                           	line	18
  6150                           	
  6151  0061                     l3431:	
  6152  0061  01F7               	clrf	(___awdiv@quotient)
  6153  0062  01F8               	clrf	(___awdiv@quotient+1)
  6154                           	line	19
  6155                           	
  6156  0063                     l3433:	
  6157  0063  0871               	movf	(___awdiv@divisor+1),w
  6158  0064  0470               	iorwf	(___awdiv@divisor),w
  6159  0065  1903               	skipnz
  6160  0066  2868               	goto	u3991
  6161  0067  2869               	goto	u3990
  6162  0068                     u3991:
  6163  0068  28A7               	goto	l3453
  6164  0069                     u3990:
  6165                           	line	20
  6166                           	
  6167  0069                     l3435:	
  6168  0069  01F5               	clrf	(___awdiv@counter)
  6169  006A  1403               	bsf	status,0
  6170  006B  0DF5               	rlf	(___awdiv@counter),f
  6171                           	line	21
  6172  006C  2879               	goto	l3441
  6173                           	
  6174  006D                     l1509:	
  6175                           	line	22
  6176                           	
  6177  006D                     l3437:	
  6178  006D  3001               	movlw	01h
  6179                           	
  6180  006E                     u4005:
  6181  006E  1003               	clrc
  6182  006F  0DF0               	rlf	(___awdiv@divisor),f
  6183  0070  0DF1               	rlf	(___awdiv@divisor+1),f
  6184  0071  3EFF               	addlw	-1
  6185  0072  1D03               	skipz
  6186  0073  286E               	goto	u4005
  6187                           	line	23
  6188                           	
  6189  0074                     l3439:	
  6190  0074  3001               	movlw	(01h)
  6191  0075  00F4               	movwf	(??___awdiv+0)+0
  6192  0076  0874               	movf	(??___awdiv+0)+0,w
  6193  0077  07F5               	addwf	(___awdiv@counter),f
  6194  0078  2879               	goto	l3441
  6195                           	line	24
  6196                           	
  6197  0079                     l1508:	
  6198                           	line	21
  6199                           	
  6200  0079                     l3441:	
  6201  0079  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  6202  007A  287C               	goto	u4011
  6203  007B  287D               	goto	u4010
  6204  007C                     u4011:
  6205  007C  286D               	goto	l3437
  6206  007D                     u4010:
  6207  007D  287F               	goto	l3443
  6208                           	
  6209  007E                     l1510:	
  6210  007E  287F               	goto	l3443
  6211                           	line	25
  6212                           	
  6213  007F                     l1511:	
  6214                           	line	26
  6215                           	
  6216  007F                     l3443:	
  6217  007F  3001               	movlw	01h
  6218                           	
  6219  0080                     u4025:
  6220  0080  1003               	clrc
  6221  0081  0DF7               	rlf	(___awdiv@quotient),f
  6222  0082  0DF8               	rlf	(___awdiv@quotient+1),f
  6223  0083  3EFF               	addlw	-1
  6224  0084  1D03               	skipz
  6225  0085  2880               	goto	u4025
  6226                           	line	27
  6227  0086  0871               	movf	(___awdiv@divisor+1),w
  6228  0087  0273               	subwf	(___awdiv@dividend+1),w
  6229  0088  1D03               	skipz
  6230  0089  288C               	goto	u4035
  6231  008A  0870               	movf	(___awdiv@divisor),w
  6232  008B  0272               	subwf	(___awdiv@dividend),w
  6233  008C                     u4035:
  6234  008C  1C03               	skipc
  6235  008D  288F               	goto	u4031
  6236  008E  2890               	goto	u4030
  6237  008F                     u4031:
  6238  008F  2898               	goto	l3449
  6239  0090                     u4030:
  6240                           	line	28
  6241                           	
  6242  0090                     l3445:	
  6243  0090  0870               	movf	(___awdiv@divisor),w
  6244  0091  02F2               	subwf	(___awdiv@dividend),f
  6245  0092  0871               	movf	(___awdiv@divisor+1),w
  6246  0093  1C03               	skipc
  6247  0094  03F3               	decf	(___awdiv@dividend+1),f
  6248  0095  02F3               	subwf	(___awdiv@dividend+1),f
  6249                           	line	29
  6250                           	
  6251  0096                     l3447:	
  6252  0096  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  6253  0097  2898               	goto	l3449
  6254                           	line	30
  6255                           	
  6256  0098                     l1512:	
  6257                           	line	31
  6258                           	
  6259  0098                     l3449:	
  6260  0098  3001               	movlw	01h
  6261                           	
  6262  0099                     u4045:
  6263  0099  1003               	clrc
  6264  009A  0CF1               	rrf	(___awdiv@divisor+1),f
  6265  009B  0CF0               	rrf	(___awdiv@divisor),f
  6266  009C  3EFF               	addlw	-1
  6267  009D  1D03               	skipz
  6268  009E  2899               	goto	u4045
  6269                           	line	32
  6270                           	
  6271  009F                     l3451:	
  6272  009F  3001               	movlw	low(01h)
  6273  00A0  02F5               	subwf	(___awdiv@counter),f
  6274  00A1  1D03               	btfss	status,2
  6275  00A2  28A4               	goto	u4051
  6276  00A3  28A5               	goto	u4050
  6277  00A4                     u4051:
  6278  00A4  287F               	goto	l3443
  6279  00A5                     u4050:
  6280  00A5  28A7               	goto	l3453
  6281                           	
  6282  00A6                     l1513:	
  6283  00A6  28A7               	goto	l3453
  6284                           	line	33
  6285                           	
  6286  00A7                     l1507:	
  6287                           	line	34
  6288                           	
  6289  00A7                     l3453:	
  6290  00A7  0876               	movf	(___awdiv@sign),w
  6291  00A8  1D03               	skipz
  6292  00A9  28AB               	goto	u4060
  6293  00AA  28B1               	goto	l3457
  6294  00AB                     u4060:
  6295                           	line	35
  6296                           	
  6297  00AB                     l3455:	
  6298  00AB  09F7               	comf	(___awdiv@quotient),f
  6299  00AC  09F8               	comf	(___awdiv@quotient+1),f
  6300  00AD  0AF7               	incf	(___awdiv@quotient),f
  6301  00AE  1903               	skipnz
  6302  00AF  0AF8               	incf	(___awdiv@quotient+1),f
  6303  00B0  28B1               	goto	l3457
  6304                           	
  6305  00B1                     l1514:	
  6306                           	line	36
  6307                           	
  6308  00B1                     l3457:	
  6309  00B1  0878               	movf	(___awdiv@quotient+1),w
  6310  00B2  01F1               	clrf	(?___awdiv+1)
  6311  00B3  07F1               	addwf	(?___awdiv+1)
  6312  00B4  0877               	movf	(___awdiv@quotient),w
  6313  00B5  01F0               	clrf	(?___awdiv)
  6314  00B6  07F0               	addwf	(?___awdiv)
  6315                           
  6316  00B7  28B8               	goto	l1515
  6317                           	
  6318  00B8                     l3459:	
  6319                           	line	37
  6320                           	
  6321  00B8                     l1515:	
  6322  00B8  0008               	return
  6323                           	opt stack 0
  6324                           GLOBAL	__end_of___awdiv
  6325  00B9                     	__end_of___awdiv:
  6326 ;; =============== function ___awdiv ends ============
  6327                           
  6328                           	signat	___awdiv,8314
  6329                           	global	___wmul
  6330                           psect	text584,local,class=CODE,delta=2
  6331                           global __ptext584
  6332  0BEA                     __ptext584:
  6333                           
  6334 ;; *************** function ___wmul *****************
  6335 ;; Defined at:
  6336 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  multiplier      2    0[COMMON] unsigned int 
  6339 ;;  multiplicand    2    2[COMMON] unsigned int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  product         2    4[COMMON] unsigned int 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  2    0[COMMON] unsigned int 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6351 ;;      Params:         4       0       0       0       0
  6352 ;;      Locals:         2       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0
  6354 ;;      Totals:         6       0       0       0       0
  6355 ;;Total ram usage:        6 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_itoaa
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           psect	text584
  6364                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  6365                           	line	3
  6366                           	global	__size_of___wmul
  6367  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6368                           	
  6369  0BEA                     ___wmul:	
  6370                           	opt	stack 5
  6371                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6372                           	line	4
  6373                           	
  6374  0BEA                     l3409:	
  6375  0BEA  01F4               	clrf	(___wmul@product)
  6376  0BEB  01F5               	clrf	(___wmul@product+1)
  6377  0BEC  2BED               	goto	l3411
  6378                           	line	6
  6379                           	
  6380  0BED                     l1365:	
  6381                           	line	7
  6382                           	
  6383  0BED                     l3411:	
  6384  0BED  1C70               	btfss	(___wmul@multiplier),(0)&7
  6385  0BEE  2BF0               	goto	u3931
  6386  0BEF  2BF1               	goto	u3930
  6387  0BF0                     u3931:
  6388  0BF0  2BF7               	goto	l1366
  6389  0BF1                     u3930:
  6390                           	line	8
  6391                           	
  6392  0BF1                     l3413:	
  6393  0BF1  0872               	movf	(___wmul@multiplicand),w
  6394  0BF2  07F4               	addwf	(___wmul@product),f
  6395  0BF3  1803               	skipnc
  6396  0BF4  0AF5               	incf	(___wmul@product+1),f
  6397  0BF5  0873               	movf	(___wmul@multiplicand+1),w
  6398  0BF6  07F5               	addwf	(___wmul@product+1),f
  6399                           	
  6400  0BF7                     l1366:	
  6401                           	line	9
  6402  0BF7  3001               	movlw	01h
  6403                           	
  6404  0BF8                     u3945:
  6405  0BF8  1003               	clrc
  6406  0BF9  0DF2               	rlf	(___wmul@multiplicand),f
  6407  0BFA  0DF3               	rlf	(___wmul@multiplicand+1),f
  6408  0BFB  3EFF               	addlw	-1
  6409  0BFC  1D03               	skipz
  6410  0BFD  2BF8               	goto	u3945
  6411                           	line	10
  6412                           	
  6413  0BFE                     l3415:	
  6414  0BFE  3001               	movlw	01h
  6415                           	
  6416  0BFF                     u3955:
  6417  0BFF  1003               	clrc
  6418  0C00  0CF1               	rrf	(___wmul@multiplier+1),f
  6419  0C01  0CF0               	rrf	(___wmul@multiplier),f
  6420  0C02  3EFF               	addlw	-1
  6421  0C03  1D03               	skipz
  6422  0C04  2BFF               	goto	u3955
  6423                           	line	11
  6424  0C05  0871               	movf	((___wmul@multiplier+1)),w
  6425  0C06  0470               	iorwf	((___wmul@multiplier)),w
  6426  0C07  1D03               	skipz
  6427  0C08  2C0A               	goto	u3961
  6428  0C09  2C0B               	goto	u3960
  6429  0C0A                     u3961:
  6430  0C0A  2BED               	goto	l3411
  6431  0C0B                     u3960:
  6432  0C0B  2C0C               	goto	l3417
  6433                           	
  6434  0C0C                     l1367:	
  6435                           	line	12
  6436                           	
  6437  0C0C                     l3417:	
  6438  0C0C  0875               	movf	(___wmul@product+1),w
  6439  0C0D  01F1               	clrf	(?___wmul+1)
  6440  0C0E  07F1               	addwf	(?___wmul+1)
  6441  0C0F  0874               	movf	(___wmul@product),w
  6442  0C10  01F0               	clrf	(?___wmul)
  6443  0C11  07F0               	addwf	(?___wmul)
  6444                           
  6445  0C12  2C13               	goto	l1368
  6446                           	
  6447  0C13                     l3419:	
  6448                           	line	13
  6449                           	
  6450  0C13                     l1368:	
  6451  0C13  0008               	return
  6452                           	opt stack 0
  6453                           GLOBAL	__end_of___wmul
  6454  0C14                     	__end_of___wmul:
  6455 ;; =============== function ___wmul ends ============
  6456                           
  6457                           	signat	___wmul,8314
  6458                           	global	_resetout
  6459                           psect	text585,local,class=CODE,delta=2
  6460                           global __ptext585
  6461  0AF0                     __ptext585:
  6462                           
  6463 ;; *************** function _resetout *****************
  6464 ;; Defined at:
  6465 ;;		line 760 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;		None
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;		None               void
  6472 ;; Registers used:
  6473 ;;		None
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6479 ;;      Params:         0       0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0
  6481 ;;      Temps:          0       0       0       0       0
  6482 ;;      Totals:         0       0       0       0       0
  6483 ;;Total ram usage:        0 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_actrow
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           psect	text585
  6492                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6493                           	line	760
  6494                           	global	__size_of_resetout
  6495  0007                     	__size_of_resetout	equ	__end_of_resetout-_resetout
  6496                           	
  6497  0AF0                     _resetout:	
  6498                           	opt	stack 4
  6499                           ; Regs used in _resetout: []
  6500                           	line	761
  6501                           	
  6502  0AF0                     l3403:	
  6503                           ;prev11.c: 761: RD6=0;RD7=0;RB6=0;RB7=0;
  6504  0AF0  1283               	bcf	status, 5	;RP0=0, select bank0
  6505  0AF1  1303               	bcf	status, 6	;RP1=0, select bank0
  6506  0AF2  1308               	bcf	(70/8),(70)&7
  6507  0AF3  1388               	bcf	(71/8),(71)&7
  6508  0AF4  1306               	bcf	(54/8),(54)&7
  6509  0AF5  1386               	bcf	(55/8),(55)&7
  6510                           	line	762
  6511                           	
  6512  0AF6                     l1302:	
  6513  0AF6  0008               	return
  6514                           	opt stack 0
  6515                           GLOBAL	__end_of_resetout
  6516  0AF7                     	__end_of_resetout:
  6517 ;; =============== function _resetout ends ============
  6518                           
  6519                           	signat	_resetout,88
  6520                           	global	_setLCD
  6521                           psect	text586,local,class=CODE,delta=2
  6522                           global __ptext586
  6523  02B9                     __ptext586:
  6524                           
  6525 ;; *************** function _setLCD *****************
  6526 ;; Defined at:
  6527 ;;		line 598 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  number          2    0[COMMON] int 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  vbool          32    0[BANK0 ] int [16]
  6532 ;;  i               2   32[BANK0 ] int 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;		None               void
  6535 ;; Registers used:
  6536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6542 ;;      Params:         2       0       0       0       0
  6543 ;;      Locals:         0      34       0       0       0
  6544 ;;      Temps:          6       0       0       0       0
  6545 ;;      Totals:         8      34       0       0       0
  6546 ;;Total ram usage:       42 bytes
  6547 ;; Hardware stack levels used:    2
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_cmd
  6552 ;;		_dat
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           psect	text586
  6556                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6557                           	line	598
  6558                           	global	__size_of_setLCD
  6559  015A                     	__size_of_setLCD	equ	__end_of_setLCD-_setLCD
  6560                           	
  6561  02B9                     _setLCD:	
  6562                           	opt	stack 2
  6563                           ; Regs used in _setLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6564                           	line	603
  6565                           	
  6566  02B9                     l3389:	
  6567                           ;prev11.c: 599: const int size=8*sizeof(int);
  6568                           ;prev11.c: 600: int vbool[8*sizeof(int)];
  6569                           ;prev11.c: 601: int i;;
  6570                           ;prev11.c: 603: for (i = 0; i <size; i++)
  6571  02B9  1283               	bcf	status, 5	;RP0=0, select bank0
  6572  02BA  1303               	bcf	status, 6	;RP1=0, select bank0
  6573  02BB  01C0               	clrf	(setLCD@i)
  6574  02BC  01C1               	clrf	(setLCD@i+1)
  6575                           	
  6576  02BD                     l3391:	
  6577  02BD  3017               	movlw	low(setLCD@size|8000h)
  6578  02BE  0084               	movwf	fsr0
  6579  02BF  3088               	movlw	high(setLCD@size|8000h)
  6580  02C0  00FF               	movwf	btemp+1
  6581  02C1  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6582  02C6  00F2               	movwf	(??_setLCD+0)+0
  6583  02C7  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6584  02CC  00F3               	movwf	(??_setLCD+0)+0+1
  6585  02CD  0841               	movf	(setLCD@i+1),w
  6586  02CE  3A80               	xorlw	80h
  6587  02CF  00F4               	movwf	(??_setLCD+2)+0
  6588  02D0  0873               	movf	1+(??_setLCD+0)+0,w
  6589  02D1  3A80               	xorlw	80h
  6590  02D2  0274               	subwf	(??_setLCD+2)+0,w
  6591  02D3  1D03               	skipz
  6592  02D4  2AD7               	goto	u3745
  6593  02D5  0872               	movf	0+(??_setLCD+0)+0,w
  6594  02D6  0240               	subwf	(setLCD@i),w
  6595  02D7                     u3745:
  6596                           
  6597  02D7  1C03               	skipc
  6598  02D8  2ADA               	goto	u3741
  6599  02D9  2ADB               	goto	u3740
  6600  02DA                     u3741:
  6601  02DA  2ADD               	goto	l3395
  6602  02DB                     u3740:
  6603  02DB  2B20               	goto	l3401
  6604                           	
  6605  02DC                     l3393:	
  6606  02DC  2B20               	goto	l3401
  6607                           	line	604
  6608                           	
  6609  02DD                     l1239:	
  6610                           	line	605
  6611                           	
  6612  02DD                     l3395:	
  6613                           ;prev11.c: 604: {
  6614                           ;prev11.c: 605: vbool[i] = number<<i < 0;
  6615  02DD  1283               	bcf	status, 5	;RP0=0, select bank0
  6616  02DE  1303               	bcf	status, 6	;RP1=0, select bank0
  6617  02DF  0A40               	incf	(setLCD@i),w
  6618  02E0  00F2               	movwf	(??_setLCD+0)+0
  6619  02E1  0871               	movf	(setLCD@number+1),w
  6620  02E2  00F4               	movwf	(??_setLCD+1)+0+1
  6621  02E3  0870               	movf	(setLCD@number),w
  6622  02E4  00F3               	movwf	(??_setLCD+1)+0
  6623  02E5  2AE9               	goto	u3754
  6624  02E6                     u3755:
  6625  02E6  1003               	clrc
  6626  02E7  0DF3               	rlf	(??_setLCD+1)+0,f
  6627  02E8  0DF4               	rlf	(??_setLCD+1)+1,f
  6628  02E9                     u3754:
  6629  02E9  0BF2               	decfsz	(??_setLCD+0)+0,f
  6630  02EA  2AE6               	goto	u3755
  6631  02EB  3000               	movlw	0
  6632  02EC  1BF4               	btfsc	1+(??_setLCD+1)+0,7
  6633  02ED  3001               	movlw	1
  6634  02EE  00F5               	movwf	(??_setLCD+3)+0
  6635  02EF  01F6               	clrf	(??_setLCD+3)+0+1
  6636  02F0  0840               	movf	(setLCD@i),w
  6637  02F1  00F7               	movwf	(??_setLCD+5)+0
  6638  02F2  0777               	addwf	(??_setLCD+5)+0,w
  6639  02F3  3E20               	addlw	setLCD@vbool&0ffh
  6640  02F4  0084               	movwf	fsr0
  6641  02F5  0875               	movf	0+(??_setLCD+3)+0,w
  6642  02F6  1383               	bcf	status, 7	;select IRP bank0
  6643  02F7  0080               	movwf	indf
  6644  02F8  0A84               	incf	fsr0,f
  6645  02F9  0876               	movf	1+(??_setLCD+3)+0,w
  6646  02FA  0080               	movwf	indf
  6647                           	line	603
  6648                           	
  6649  02FB                     l3397:	
  6650  02FB  3001               	movlw	low(01h)
  6651  02FC  07C0               	addwf	(setLCD@i),f
  6652  02FD  1803               	skipnc
  6653  02FE  0AC1               	incf	(setLCD@i+1),f
  6654  02FF  3000               	movlw	high(01h)
  6655  0300  07C1               	addwf	(setLCD@i+1),f
  6656                           	
  6657  0301                     l3399:	
  6658  0301  3017               	movlw	low(setLCD@size|8000h)
  6659  0302  0084               	movwf	fsr0
  6660  0303  3088               	movlw	high(setLCD@size|8000h)
  6661  0304  00FF               	movwf	btemp+1
  6662  0305  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6663  030A  00F2               	movwf	(??_setLCD+0)+0
  6664  030B  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6665  0310  00F3               	movwf	(??_setLCD+0)+0+1
  6666  0311  0841               	movf	(setLCD@i+1),w
  6667  0312  3A80               	xorlw	80h
  6668  0313  00F4               	movwf	(??_setLCD+2)+0
  6669  0314  0873               	movf	1+(??_setLCD+0)+0,w
  6670  0315  3A80               	xorlw	80h
  6671  0316  0274               	subwf	(??_setLCD+2)+0,w
  6672  0317  1D03               	skipz
  6673  0318  2B1B               	goto	u3765
  6674  0319  0872               	movf	0+(??_setLCD+0)+0,w
  6675  031A  0240               	subwf	(setLCD@i),w
  6676  031B                     u3765:
  6677                           
  6678  031B  1C03               	skipc
  6679  031C  2B1E               	goto	u3761
  6680  031D  2B1F               	goto	u3760
  6681  031E                     u3761:
  6682  031E  2ADD               	goto	l3395
  6683  031F                     u3760:
  6684  031F  2B20               	goto	l3401
  6685                           	
  6686  0320                     l1240:	
  6687                           	line	608
  6688                           	
  6689  0320                     l3401:	
  6690                           ;prev11.c: 606: }
  6691                           ;prev11.c: 608: RD3=vbool[size-1];
  6692  0320  3017               	movlw	low(setLCD@size|8000h)
  6693  0321  0084               	movwf	fsr0
  6694  0322  3088               	movlw	high(setLCD@size|8000h)
  6695  0323  1283               	bcf	status, 5	;RP0=0, select bank0
  6696  0324  1303               	bcf	status, 6	;RP1=0, select bank0
  6697  0325  00FF               	movwf	btemp+1
  6698  0326  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6699  032B  00F2               	movwf	(??_setLCD+0)+0
  6700  032C  0772               	addwf	(??_setLCD+0)+0,w
  6701  032D  3EFE               	addlw	0FEh
  6702  032E  3E20               	addlw	setLCD@vbool&0ffh
  6703  032F  0084               	movwf	fsr0
  6704  0330  1383               	bcf	status, 7	;select IRP bank0
  6705  0331  0800               	movf	indf,w
  6706  0332  00F3               	movwf	(??_setLCD+1)+0+0
  6707  0333  0A84               	incf	fsr0,f
  6708  0334  0800               	movf	indf,w
  6709  0335  00F4               	movwf	(??_setLCD+1)+0+1
  6710  0336  1873               	btfsc	0+(??_setLCD+1)+0,0
  6711  0337  2B39               	goto	u3771
  6712  0338  2B3D               	goto	u3770
  6713                           	
  6714  0339                     u3771:
  6715  0339  1283               	bcf	status, 5	;RP0=0, select bank0
  6716  033A  1303               	bcf	status, 6	;RP1=0, select bank0
  6717  033B  1588               	bsf	(67/8),(67)&7
  6718  033C  2B40               	goto	u3784
  6719  033D                     u3770:
  6720  033D  1283               	bcf	status, 5	;RP0=0, select bank0
  6721  033E  1303               	bcf	status, 6	;RP1=0, select bank0
  6722  033F  1188               	bcf	(67/8),(67)&7
  6723  0340                     u3784:
  6724                           	line	609
  6725                           ;prev11.c: 609: RD2=vbool[size-2];
  6726  0340  3017               	movlw	low(setLCD@size|8000h)
  6727  0341  0084               	movwf	fsr0
  6728  0342  3088               	movlw	high(setLCD@size|8000h)
  6729  0343  00FF               	movwf	btemp+1
  6730  0344  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6731  0349  00F2               	movwf	(??_setLCD+0)+0
  6732  034A  0772               	addwf	(??_setLCD+0)+0,w
  6733  034B  3EFC               	addlw	0FCh
  6734  034C  3E20               	addlw	setLCD@vbool&0ffh
  6735  034D  0084               	movwf	fsr0
  6736  034E  1383               	bcf	status, 7	;select IRP bank0
  6737  034F  0800               	movf	indf,w
  6738  0350  00F3               	movwf	(??_setLCD+1)+0+0
  6739  0351  0A84               	incf	fsr0,f
  6740  0352  0800               	movf	indf,w
  6741  0353  00F4               	movwf	(??_setLCD+1)+0+1
  6742  0354  1873               	btfsc	0+(??_setLCD+1)+0,0
  6743  0355  2B57               	goto	u3791
  6744  0356  2B5B               	goto	u3790
  6745                           	
  6746  0357                     u3791:
  6747  0357  1283               	bcf	status, 5	;RP0=0, select bank0
  6748  0358  1303               	bcf	status, 6	;RP1=0, select bank0
  6749  0359  1508               	bsf	(66/8),(66)&7
  6750  035A  2B5E               	goto	u3804
  6751  035B                     u3790:
  6752  035B  1283               	bcf	status, 5	;RP0=0, select bank0
  6753  035C  1303               	bcf	status, 6	;RP1=0, select bank0
  6754  035D  1108               	bcf	(66/8),(66)&7
  6755  035E                     u3804:
  6756                           	line	610
  6757                           ;prev11.c: 610: RD1=vbool[size-3];
  6758  035E  3017               	movlw	low(setLCD@size|8000h)
  6759  035F  0084               	movwf	fsr0
  6760  0360  3088               	movlw	high(setLCD@size|8000h)
  6761  0361  00FF               	movwf	btemp+1
  6762  0362  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6763  0367  00F2               	movwf	(??_setLCD+0)+0
  6764  0368  0772               	addwf	(??_setLCD+0)+0,w
  6765  0369  3EFA               	addlw	0FAh
  6766  036A  3E20               	addlw	setLCD@vbool&0ffh
  6767  036B  0084               	movwf	fsr0
  6768  036C  1383               	bcf	status, 7	;select IRP bank0
  6769  036D  0800               	movf	indf,w
  6770  036E  00F3               	movwf	(??_setLCD+1)+0+0
  6771  036F  0A84               	incf	fsr0,f
  6772  0370  0800               	movf	indf,w
  6773  0371  00F4               	movwf	(??_setLCD+1)+0+1
  6774  0372  1873               	btfsc	0+(??_setLCD+1)+0,0
  6775  0373  2B75               	goto	u3811
  6776  0374  2B79               	goto	u3810
  6777                           	
  6778  0375                     u3811:
  6779  0375  1283               	bcf	status, 5	;RP0=0, select bank0
  6780  0376  1303               	bcf	status, 6	;RP1=0, select bank0
  6781  0377  1488               	bsf	(65/8),(65)&7
  6782  0378  2B7C               	goto	u3824
  6783  0379                     u3810:
  6784  0379  1283               	bcf	status, 5	;RP0=0, select bank0
  6785  037A  1303               	bcf	status, 6	;RP1=0, select bank0
  6786  037B  1088               	bcf	(65/8),(65)&7
  6787  037C                     u3824:
  6788                           	line	611
  6789                           ;prev11.c: 611: RD0=vbool[size-4];
  6790  037C  3017               	movlw	low(setLCD@size|8000h)
  6791  037D  0084               	movwf	fsr0
  6792  037E  3088               	movlw	high(setLCD@size|8000h)
  6793  037F  00FF               	movwf	btemp+1
  6794  0380  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6795  0385  00F2               	movwf	(??_setLCD+0)+0
  6796  0386  0772               	addwf	(??_setLCD+0)+0,w
  6797  0387  3EF8               	addlw	0F8h
  6798  0388  3E20               	addlw	setLCD@vbool&0ffh
  6799  0389  0084               	movwf	fsr0
  6800  038A  1383               	bcf	status, 7	;select IRP bank0
  6801  038B  0800               	movf	indf,w
  6802  038C  00F3               	movwf	(??_setLCD+1)+0+0
  6803  038D  0A84               	incf	fsr0,f
  6804  038E  0800               	movf	indf,w
  6805  038F  00F4               	movwf	(??_setLCD+1)+0+1
  6806  0390  1873               	btfsc	0+(??_setLCD+1)+0,0
  6807  0391  2B93               	goto	u3831
  6808  0392  2B97               	goto	u3830
  6809                           	
  6810  0393                     u3831:
  6811  0393  1283               	bcf	status, 5	;RP0=0, select bank0
  6812  0394  1303               	bcf	status, 6	;RP1=0, select bank0
  6813  0395  1408               	bsf	(64/8),(64)&7
  6814  0396  2B9A               	goto	u3844
  6815  0397                     u3830:
  6816  0397  1283               	bcf	status, 5	;RP0=0, select bank0
  6817  0398  1303               	bcf	status, 6	;RP1=0, select bank0
  6818  0399  1008               	bcf	(64/8),(64)&7
  6819  039A                     u3844:
  6820                           	line	612
  6821                           ;prev11.c: 612: RC3=vbool[size-5];
  6822  039A  3017               	movlw	low(setLCD@size|8000h)
  6823  039B  0084               	movwf	fsr0
  6824  039C  3088               	movlw	high(setLCD@size|8000h)
  6825  039D  00FF               	movwf	btemp+1
  6826  039E  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6827  03A3  00F2               	movwf	(??_setLCD+0)+0
  6828  03A4  0772               	addwf	(??_setLCD+0)+0,w
  6829  03A5  3EF6               	addlw	0F6h
  6830  03A6  3E20               	addlw	setLCD@vbool&0ffh
  6831  03A7  0084               	movwf	fsr0
  6832  03A8  1383               	bcf	status, 7	;select IRP bank0
  6833  03A9  0800               	movf	indf,w
  6834  03AA  00F3               	movwf	(??_setLCD+1)+0+0
  6835  03AB  0A84               	incf	fsr0,f
  6836  03AC  0800               	movf	indf,w
  6837  03AD  00F4               	movwf	(??_setLCD+1)+0+1
  6838  03AE  1873               	btfsc	0+(??_setLCD+1)+0,0
  6839  03AF  2BB1               	goto	u3851
  6840  03B0  2BB5               	goto	u3850
  6841                           	
  6842  03B1                     u3851:
  6843  03B1  1283               	bcf	status, 5	;RP0=0, select bank0
  6844  03B2  1303               	bcf	status, 6	;RP1=0, select bank0
  6845  03B3  1587               	bsf	(59/8),(59)&7
  6846  03B4  2BB8               	goto	u3864
  6847  03B5                     u3850:
  6848  03B5  1283               	bcf	status, 5	;RP0=0, select bank0
  6849  03B6  1303               	bcf	status, 6	;RP1=0, select bank0
  6850  03B7  1187               	bcf	(59/8),(59)&7
  6851  03B8                     u3864:
  6852                           	line	613
  6853                           ;prev11.c: 613: RC2=vbool[size-6];
  6854  03B8  3017               	movlw	low(setLCD@size|8000h)
  6855  03B9  0084               	movwf	fsr0
  6856  03BA  3088               	movlw	high(setLCD@size|8000h)
  6857  03BB  00FF               	movwf	btemp+1
  6858  03BC  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6859  03C1  00F2               	movwf	(??_setLCD+0)+0
  6860  03C2  0772               	addwf	(??_setLCD+0)+0,w
  6861  03C3  3EF4               	addlw	0F4h
  6862  03C4  3E20               	addlw	setLCD@vbool&0ffh
  6863  03C5  0084               	movwf	fsr0
  6864  03C6  1383               	bcf	status, 7	;select IRP bank0
  6865  03C7  0800               	movf	indf,w
  6866  03C8  00F3               	movwf	(??_setLCD+1)+0+0
  6867  03C9  0A84               	incf	fsr0,f
  6868  03CA  0800               	movf	indf,w
  6869  03CB  00F4               	movwf	(??_setLCD+1)+0+1
  6870  03CC  1873               	btfsc	0+(??_setLCD+1)+0,0
  6871  03CD  2BCF               	goto	u3871
  6872  03CE  2BD3               	goto	u3870
  6873                           	
  6874  03CF                     u3871:
  6875  03CF  1283               	bcf	status, 5	;RP0=0, select bank0
  6876  03D0  1303               	bcf	status, 6	;RP1=0, select bank0
  6877  03D1  1507               	bsf	(58/8),(58)&7
  6878  03D2  2BD6               	goto	u3884
  6879  03D3                     u3870:
  6880  03D3  1283               	bcf	status, 5	;RP0=0, select bank0
  6881  03D4  1303               	bcf	status, 6	;RP1=0, select bank0
  6882  03D5  1107               	bcf	(58/8),(58)&7
  6883  03D6                     u3884:
  6884                           	line	614
  6885                           ;prev11.c: 614: RC1=vbool[size-7];
  6886  03D6  3017               	movlw	low(setLCD@size|8000h)
  6887  03D7  0084               	movwf	fsr0
  6888  03D8  3088               	movlw	high(setLCD@size|8000h)
  6889  03D9  00FF               	movwf	btemp+1
  6890  03DA  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6891  03DF  00F2               	movwf	(??_setLCD+0)+0
  6892  03E0  0772               	addwf	(??_setLCD+0)+0,w
  6893  03E1  3EF2               	addlw	0F2h
  6894  03E2  3E20               	addlw	setLCD@vbool&0ffh
  6895  03E3  0084               	movwf	fsr0
  6896  03E4  1383               	bcf	status, 7	;select IRP bank0
  6897  03E5  0800               	movf	indf,w
  6898  03E6  00F3               	movwf	(??_setLCD+1)+0+0
  6899  03E7  0A84               	incf	fsr0,f
  6900  03E8  0800               	movf	indf,w
  6901  03E9  00F4               	movwf	(??_setLCD+1)+0+1
  6902  03EA  1873               	btfsc	0+(??_setLCD+1)+0,0
  6903  03EB  2BED               	goto	u3891
  6904  03EC  2BF1               	goto	u3890
  6905                           	
  6906  03ED                     u3891:
  6907  03ED  1283               	bcf	status, 5	;RP0=0, select bank0
  6908  03EE  1303               	bcf	status, 6	;RP1=0, select bank0
  6909  03EF  1487               	bsf	(57/8),(57)&7
  6910  03F0  2BF4               	goto	u3904
  6911  03F1                     u3890:
  6912  03F1  1283               	bcf	status, 5	;RP0=0, select bank0
  6913  03F2  1303               	bcf	status, 6	;RP1=0, select bank0
  6914  03F3  1087               	bcf	(57/8),(57)&7
  6915  03F4                     u3904:
  6916                           	line	615
  6917                           ;prev11.c: 615: RC0=vbool[size-8];
  6918  03F4  3017               	movlw	low(setLCD@size|8000h)
  6919  03F5  0084               	movwf	fsr0
  6920  03F6  3088               	movlw	high(setLCD@size|8000h)
  6921  03F7  00FF               	movwf	btemp+1
  6922  03F8  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6923  03FD  00F2               	movwf	(??_setLCD+0)+0
  6924  03FE  0772               	addwf	(??_setLCD+0)+0,w
  6925  03FF  3EF0               	addlw	0F0h
  6926  0400  3E20               	addlw	setLCD@vbool&0ffh
  6927  0401  0084               	movwf	fsr0
  6928  0402  1383               	bcf	status, 7	;select IRP bank0
  6929  0403  0800               	movf	indf,w
  6930  0404  00F3               	movwf	(??_setLCD+1)+0+0
  6931  0405  0A84               	incf	fsr0,f
  6932  0406  0800               	movf	indf,w
  6933  0407  00F4               	movwf	(??_setLCD+1)+0+1
  6934  0408  1873               	btfsc	0+(??_setLCD+1)+0,0
  6935  0409  2C0B               	goto	u3911
  6936  040A  2C0F               	goto	u3910
  6937                           	
  6938  040B                     u3911:
  6939  040B  1283               	bcf	status, 5	;RP0=0, select bank0
  6940  040C  1303               	bcf	status, 6	;RP1=0, select bank0
  6941  040D  1407               	bsf	(56/8),(56)&7
  6942  040E  2C12               	goto	u3924
  6943  040F                     u3910:
  6944  040F  1283               	bcf	status, 5	;RP0=0, select bank0
  6945  0410  1303               	bcf	status, 6	;RP1=0, select bank0
  6946  0411  1007               	bcf	(56/8),(56)&7
  6947  0412                     u3924:
  6948                           	line	619
  6949                           	
  6950  0412                     l1241:	
  6951  0412  0008               	return
  6952                           	opt stack 0
  6953                           GLOBAL	__end_of_setLCD
  6954  0413                     	__end_of_setLCD:
  6955 ;; =============== function _setLCD ends ============
  6956                           
  6957                           	signat	_setLCD,4216
  6958                           	global	_strcat
  6959                           psect	text587,local,class=CODE,delta=2
  6960                           global __ptext587
  6961  0C70                     __ptext587:
  6962                           
  6963 ;; *************** function _strcat *****************
  6964 ;; Defined at:
  6965 ;;		line 10 in file "../../common/strcat.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  to              2    0[COMMON] PTR unsigned char 
  6968 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  6969 ;;  from            1    2[COMMON] PTR const unsigned char 
  6970 ;;		 -> getlogicseq@snum(16), 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  cp              2    6[COMMON] PTR unsigned char 
  6973 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  2    wreg      PTR unsigned char 
  6976 ;; Registers used:
  6977 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6983 ;;      Params:         3       0       0       0       0
  6984 ;;      Locals:         2       0       0       0       0
  6985 ;;      Temps:          3       0       0       0       0
  6986 ;;      Totals:         8       0       0       0       0
  6987 ;;Total ram usage:        8 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_getlogicseq
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           psect	text587
  6996                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcat.c"
  6997                           	line	10
  6998                           	global	__size_of_strcat
  6999  0038                     	__size_of_strcat	equ	__end_of_strcat-_strcat
  7000                           	
  7001  0C70                     _strcat:	
  7002                           	opt	stack 6
  7003                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  7004                           	line	18
  7005                           	
  7006  0C70                     l3313:	
  7007  0C70  0871               	movf	(strcat@to+1),w
  7008  0C71  01F7               	clrf	(strcat@cp+1)
  7009  0C72  07F7               	addwf	(strcat@cp+1)
  7010  0C73  0870               	movf	(strcat@to),w
  7011  0C74  01F6               	clrf	(strcat@cp)
  7012  0C75  07F6               	addwf	(strcat@cp)
  7013                           
  7014                           	line	19
  7015  0C76  2C7E               	goto	l3317
  7016                           	
  7017  0C77                     l1337:	
  7018                           	line	20
  7019                           	
  7020  0C77                     l3315:	
  7021  0C77  3001               	movlw	low(01h)
  7022  0C78  07F6               	addwf	(strcat@cp),f
  7023  0C79  1803               	skipnc
  7024  0C7A  0AF7               	incf	(strcat@cp+1),f
  7025  0C7B  3000               	movlw	high(01h)
  7026  0C7C  07F7               	addwf	(strcat@cp+1),f
  7027  0C7D  2C7E               	goto	l3317
  7028                           	
  7029  0C7E                     l1336:	
  7030                           	line	19
  7031                           	
  7032  0C7E                     l3317:	
  7033  0C7E  0876               	movf	(strcat@cp),w
  7034  0C7F  0084               	movwf	fsr0
  7035  0C80  1783               	bsf	status,7
  7036  0C81  1C77               	btfss	(strcat@cp+1),0
  7037  0C82  1383               	bcf	status,7
  7038  0C83  0880               	movf	indf,f
  7039  0C84  1D03               	skipz
  7040  0C85  2C87               	goto	u3561
  7041  0C86  2C88               	goto	u3560
  7042  0C87                     u3561:
  7043  0C87  2C77               	goto	l3315
  7044  0C88                     u3560:
  7045  0C88  2C8B               	goto	l3319
  7046                           	
  7047  0C89                     l1338:	
  7048                           	line	21
  7049  0C89  2C8B               	goto	l3319
  7050                           	
  7051  0C8A                     l1340:	
  7052                           	line	22
  7053  0C8A  2C8B               	goto	l3319
  7054                           	
  7055  0C8B                     l1339:	
  7056                           	line	21
  7057                           	
  7058  0C8B                     l3319:	
  7059  0C8B  0872               	movf	(strcat@from),w
  7060  0C8C  0084               	movwf	fsr0
  7061  0C8D  3001               	movlw	01h
  7062  0C8E  07F2               	addwf	(strcat@from),f
  7063  0C8F  1383               	bcf	status, 7	;select IRP bank0
  7064  0C90  0800               	movf	indf,w
  7065  0C91  00F3               	movwf	(??_strcat+0)+0
  7066  0C92  0877               	movf	(strcat@cp+1),w
  7067  0C93  00F5               	movwf	(??_strcat+1)+0+1
  7068  0C94  0876               	movf	(strcat@cp),w
  7069  0C95  00F4               	movwf	(??_strcat+1)+0
  7070  0C96  3001               	movlw	(01h)
  7071  0C97  07F6               	addwf	(strcat@cp),f
  7072  0C98  1803               	skipnc
  7073  0C99  0AF7               	incf	(strcat@cp+1),f
  7074  0C9A  0874               	movf	0+(??_strcat+1)+0,w
  7075  0C9B  0084               	movwf	fsr0
  7076  0C9C  1783               	bsf	status,7
  7077  0C9D  1C75               	btfss	1+(??_strcat+1)+0,0
  7078  0C9E  1383               	bcf	status,7
  7079  0C9F  0873               	movf	(??_strcat+0)+0,w
  7080  0CA0  0080               	movwf	indf
  7081  0CA1  0880               	movf	(indf),f
  7082  0CA2  1D03               	skipz
  7083  0CA3  2CA5               	goto	u3571
  7084  0CA4  2CA6               	goto	u3570
  7085  0CA5                     u3571:
  7086  0CA5  2C8B               	goto	l3319
  7087  0CA6                     u3570:
  7088  0CA6  2CA7               	goto	l1342
  7089                           	
  7090  0CA7                     l1341:	
  7091                           	line	24
  7092                           ;	Return value of _strcat is never used
  7093                           	
  7094  0CA7                     l1342:	
  7095  0CA7  0008               	return
  7096                           	opt stack 0
  7097                           GLOBAL	__end_of_strcat
  7098  0CA8                     	__end_of_strcat:
  7099 ;; =============== function _strcat ends ============
  7100                           
  7101                           	signat	_strcat,8313
  7102                           	global	_delay
  7103                           psect	text588,local,class=CODE,delta=2
  7104                           global __ptext588
  7105  0B4B                     __ptext588:
  7106                           
  7107 ;; *************** function _delay *****************
  7108 ;; Defined at:
  7109 ;;		line 512 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  x               2    0[COMMON] unsigned int 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;		None
  7114 ;; Return value:  Size  Location     Type
  7115 ;;		None               void
  7116 ;; Registers used:
  7117 ;;		wreg
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7123 ;;      Params:         2       0       0       0       0
  7124 ;;      Locals:         0       0       0       0       0
  7125 ;;      Temps:          0       0       0       0       0
  7126 ;;      Totals:         2       0       0       0       0
  7127 ;;Total ram usage:        2 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; This function calls:
  7130 ;;		Nothing
  7131 ;; This function is called by:
  7132 ;;		_getlogicseq
  7133 ;;		_cmd
  7134 ;;		_dat
  7135 ;;		_scroll
  7136 ;;		_actrow
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           psect	text588
  7140                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7141                           	line	512
  7142                           	global	__size_of_delay
  7143  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  7144                           	
  7145  0B4B                     _delay:	
  7146                           	opt	stack 6
  7147                           ; Regs used in _delay: [wreg]
  7148                           	line	513
  7149                           	
  7150  0B4B                     l3309:	
  7151                           ;prev11.c: 513: while(x-->0);
  7152  0B4B  2B4D               	goto	l3311
  7153                           	
  7154  0B4C                     l1210:	
  7155  0B4C  2B4D               	goto	l3311
  7156                           	
  7157  0B4D                     l1209:	
  7158                           	
  7159  0B4D                     l3311:	
  7160  0B4D  3001               	movlw	low(01h)
  7161  0B4E  02F0               	subwf	(delay@x),f
  7162  0B4F  3000               	movlw	high(01h)
  7163  0B50  1C03               	skipc
  7164  0B51  03F1               	decf	(delay@x+1),f
  7165  0B52  02F1               	subwf	(delay@x+1),f
  7166  0B53  30FF               	movlw	high(0FFFFh)
  7167  0B54  0671               	xorwf	((delay@x+1)),w
  7168  0B55  1D03               	skipz
  7169  0B56  2B59               	goto	u3555
  7170  0B57  30FF               	movlw	low(0FFFFh)
  7171  0B58  0670               	xorwf	((delay@x)),w
  7172  0B59                     u3555:
  7173                           
  7174  0B59  1D03               	skipz
  7175  0B5A  2B5C               	goto	u3551
  7176  0B5B  2B5D               	goto	u3550
  7177  0B5C                     u3551:
  7178  0B5C  2B4D               	goto	l3311
  7179  0B5D                     u3550:
  7180  0B5D  2B5E               	goto	l1212
  7181                           	
  7182  0B5E                     l1211:	
  7183                           	line	514
  7184                           	
  7185  0B5E                     l1212:	
  7186  0B5E  0008               	return
  7187                           	opt stack 0
  7188                           GLOBAL	__end_of_delay
  7189  0B5F                     	__end_of_delay:
  7190 ;; =============== function _delay ends ============
  7191                           
  7192                           	signat	_delay,4216
  7193                           	global	_strcmp
  7194                           psect	text589,local,class=CODE,delta=2
  7195                           global __ptext589
  7196  0CA8                     __ptext589:
  7197                           
  7198 ;; *************** function _strcmp *****************
  7199 ;; Defined at:
  7200 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  s1              1    wreg     PTR const unsigned char 
  7203 ;;		 -> lo(5), 
  7204 ;;  s2              2    0[COMMON] PTR const unsigned char 
  7205 ;;		 -> STR_32(5), STR_31(5), STR_30(5), STR_29(5), 
  7206 ;;		 -> STR_28(5), STR_27(5), STR_26(5), STR_25(5), 
  7207 ;;		 -> STR_24(5), STR_23(5), STR_22(5), STR_21(5), 
  7208 ;;		 -> STR_20(5), STR_19(5), STR_18(5), STR_17(5), 
  7209 ;;		 -> plo(5), 
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;  s1              1    7[COMMON] PTR const unsigned char 
  7212 ;;		 -> lo(5), 
  7213 ;;  r               1    6[COMMON] char 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  2    0[COMMON] int 
  7216 ;; Registers used:
  7217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7223 ;;      Params:         2       0       0       0       0
  7224 ;;      Locals:         2       0       0       0       0
  7225 ;;      Temps:          4       0       0       0       0
  7226 ;;      Totals:         8       0       0       0       0
  7227 ;;Total ram usage:        8 bytes
  7228 ;; Hardware stack levels used:    2
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_startswitch
  7233 ;;		_parselogic
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           psect	text589
  7237                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  7238                           	line	34
  7239                           	global	__size_of_strcmp
  7240  0039                     	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  7241                           	
  7242  0CA8                     _strcmp:	
  7243                           	opt	stack 4
  7244                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7245                           ;strcmp@s1 stored from wreg
  7246  0CA8  00F7               	movwf	(strcmp@s1)
  7247                           	line	37
  7248                           	
  7249  0CA9                     l3299:	
  7250  0CA9  2CAB               	goto	l3301
  7251                           	
  7252  0CAA                     l1346:	
  7253                           	line	38
  7254  0CAA  2CAB               	goto	l3301
  7255                           	
  7256  0CAB                     l1345:	
  7257                           	line	37
  7258                           	
  7259  0CAB                     l3301:	
  7260  0CAB  0877               	movf	(strcmp@s1),w
  7261  0CAC  0084               	movwf	fsr
  7262  0CAD  1383               	bcf	status, 7	;select IRP bank0
  7263  0CAE  0800               	movf	indf,w
  7264  0CAF  00F2               	movwf	(??_strcmp+0)+0
  7265  0CB0  0871               	movf	(strcmp@s2+1),w
  7266  0CB1  00F4               	movwf	(??_strcmp+1)+0+1
  7267  0CB2  0870               	movf	(strcmp@s2),w
  7268  0CB3  00F3               	movwf	(??_strcmp+1)+0
  7269  0CB4  3001               	movlw	(01h)
  7270  0CB5  07F0               	addwf	(strcmp@s2),f
  7271  0CB6  1803               	skipnc
  7272  0CB7  0AF1               	incf	(strcmp@s2+1),f
  7273  0CB8  0874               	movf	1+(??_strcmp+1)+0,w
  7274  0CB9  1283               	bcf	status, 5	;RP0=0, select bank0
  7275  0CBA  1303               	bcf	status, 6	;RP1=0, select bank0
  7276  0CBB  00FF               	movwf	btemp+1
  7277  0CBC  0873               	movf	0+(??_strcmp+1)+0,w
  7278  0CBD  0084               	movwf	fsr0
  7279  0CBE  120A  158A  2000   	fcall	stringtab
              120A  158A         
  7280  0CC3  3AFF               	xorlw	0ffh
  7281  0CC4  3E01               	addlw	1
  7282  0CC5  0772               	addwf	(??_strcmp+0)+0,w
  7283  0CC6  00F5               	movwf	(??_strcmp+3)+0
  7284  0CC7  0875               	movf	(??_strcmp+3)+0,w
  7285  0CC8  00F6               	movwf	(strcmp@r)
  7286  0CC9  08F6               	movf	((strcmp@r)),f
  7287  0CCA  1D03               	skipz
  7288  0CCB  2CCD               	goto	u3531
  7289  0CCC  2CCE               	goto	u3530
  7290  0CCD                     u3531:
  7291  0CCD  2CDA               	goto	l3305
  7292  0CCE                     u3530:
  7293                           	
  7294  0CCE                     l3303:	
  7295  0CCE  0877               	movf	(strcmp@s1),w
  7296  0CCF  0084               	movwf	fsr0
  7297  0CD0  3001               	movlw	01h
  7298  0CD1  07F7               	addwf	(strcmp@s1),f
  7299  0CD2  1383               	bcf	status, 7	;select IRP bank0
  7300  0CD3  0880               	movf	indf,f
  7301  0CD4  1D03               	skipz
  7302  0CD5  2CD7               	goto	u3541
  7303  0CD6  2CD8               	goto	u3540
  7304  0CD7                     u3541:
  7305  0CD7  2CAB               	goto	l3301
  7306  0CD8                     u3540:
  7307  0CD8  2CDA               	goto	l3305
  7308                           	
  7309  0CD9                     l1348:	
  7310  0CD9  2CDA               	goto	l3305
  7311                           	
  7312  0CDA                     l1349:	
  7313                           	line	39
  7314                           	
  7315  0CDA                     l3305:	
  7316  0CDA  0876               	movf	(strcmp@r),w
  7317  0CDB  00F0               	movwf	(?_strcmp)
  7318  0CDC  01F1               	clrf	(?_strcmp+1)
  7319  0CDD  1BF0               	btfsc	(?_strcmp),7
  7320  0CDE  03F1               	decf	(?_strcmp+1),f
  7321  0CDF  2CE0               	goto	l1350
  7322                           	
  7323  0CE0                     l3307:	
  7324                           	line	40
  7325                           	
  7326  0CE0                     l1350:	
  7327  0CE0  0008               	return
  7328                           	opt stack 0
  7329                           GLOBAL	__end_of_strcmp
  7330  0CE1                     	__end_of_strcmp:
  7331 ;; =============== function _strcmp ends ============
  7332                           
  7333                           	signat	_strcmp,8314
  7334                           	global	_strcpy
  7335                           psect	text590,local,class=CODE,delta=2
  7336                           global __ptext590
  7337  0C3E                     __ptext590:
  7338                           
  7339 ;; *************** function _strcpy *****************
  7340 ;; Defined at:
  7341 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  to              2    0[COMMON] PTR unsigned char 
  7344 ;;		 -> getlogicseq@str(32), logic_d3(5), logic_d2(5), logic_d1(5), 
  7345 ;;		 -> lo(5), plo(5), 
  7346 ;;  from            2    2[COMMON] PTR const unsigned char 
  7347 ;;		 -> STR_15(1), STR_14(20), STR_12(1), STR_11(20), 
  7348 ;;		 -> STR_9(1), STR_8(20), STR_2(4), lo(5), 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  cp              2    9[COMMON] PTR unsigned char 
  7351 ;;		 -> getlogicseq@str(32), logic_d3(5), logic_d2(5), logic_d1(5), 
  7352 ;;		 -> lo(5), plo(5), 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  2    wreg      PTR unsigned char 
  7355 ;; Registers used:
  7356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7362 ;;      Params:         4       0       0       0       0
  7363 ;;      Locals:         2       0       0       0       0
  7364 ;;      Temps:          5       0       0       0       0
  7365 ;;      Totals:        11       0       0       0       0
  7366 ;;Total ram usage:       11 bytes
  7367 ;; Hardware stack levels used:    2
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_startswitch
  7372 ;;		_getlogicseq
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           psect	text590
  7376                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  7377                           	line	10
  7378                           	global	__size_of_strcpy
  7379  0032                     	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  7380                           	
  7381  0C3E                     _strcpy:	
  7382                           	opt	stack 5
  7383                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7384                           	line	18
  7385                           	
  7386  0C3E                     l3295:	
  7387  0C3E  0871               	movf	(strcpy@to+1),w
  7388  0C3F  01FA               	clrf	(strcpy@cp+1)
  7389  0C40  07FA               	addwf	(strcpy@cp+1)
  7390  0C41  0870               	movf	(strcpy@to),w
  7391  0C42  01F9               	clrf	(strcpy@cp)
  7392  0C43  07F9               	addwf	(strcpy@cp)
  7393                           
  7394                           	line	19
  7395  0C44  2C46               	goto	l3297
  7396                           	
  7397  0C45                     l1354:	
  7398                           	line	20
  7399  0C45  2C46               	goto	l3297
  7400                           	
  7401  0C46                     l1353:	
  7402                           	line	19
  7403                           	
  7404  0C46                     l3297:	
  7405  0C46  0873               	movf	(strcpy@from+1),w
  7406  0C47  00F5               	movwf	(??_strcpy+0)+0+1
  7407  0C48  0872               	movf	(strcpy@from),w
  7408  0C49  00F4               	movwf	(??_strcpy+0)+0
  7409  0C4A  3001               	movlw	(01h)
  7410  0C4B  07F2               	addwf	(strcpy@from),f
  7411  0C4C  1803               	skipnc
  7412  0C4D  0AF3               	incf	(strcpy@from+1),f
  7413  0C4E  0875               	movf	1+(??_strcpy+0)+0,w
  7414  0C4F  1283               	bcf	status, 5	;RP0=0, select bank0
  7415  0C50  1303               	bcf	status, 6	;RP1=0, select bank0
  7416  0C51  00FF               	movwf	btemp+1
  7417  0C52  0874               	movf	0+(??_strcpy+0)+0,w
  7418  0C53  0084               	movwf	fsr0
  7419  0C54  120A  158A  2000   	fcall	stringtab
              120A  158A         
  7420  0C59  00F6               	movwf	(??_strcpy+2)+0
  7421  0C5A  087A               	movf	(strcpy@cp+1),w
  7422  0C5B  00F8               	movwf	(??_strcpy+3)+0+1
  7423  0C5C  0879               	movf	(strcpy@cp),w
  7424  0C5D  00F7               	movwf	(??_strcpy+3)+0
  7425  0C5E  3001               	movlw	(01h)
  7426  0C5F  07F9               	addwf	(strcpy@cp),f
  7427  0C60  1803               	skipnc
  7428  0C61  0AFA               	incf	(strcpy@cp+1),f
  7429  0C62  0877               	movf	0+(??_strcpy+3)+0,w
  7430  0C63  0084               	movwf	fsr0
  7431  0C64  1783               	bsf	status,7
  7432  0C65  1C78               	btfss	1+(??_strcpy+3)+0,0
  7433  0C66  1383               	bcf	status,7
  7434  0C67  0876               	movf	(??_strcpy+2)+0,w
  7435  0C68  0080               	movwf	indf
  7436  0C69  0880               	movf	(indf),f
  7437  0C6A  1D03               	skipz
  7438  0C6B  2C6D               	goto	u3521
  7439  0C6C  2C6E               	goto	u3520
  7440  0C6D                     u3521:
  7441  0C6D  2C46               	goto	l3297
  7442  0C6E                     u3520:
  7443  0C6E  2C6F               	goto	l1356
  7444                           	
  7445  0C6F                     l1355:	
  7446                           	line	22
  7447                           ;	Return value of _strcpy is never used
  7448                           	
  7449  0C6F                     l1356:	
  7450  0C6F  0008               	return
  7451                           	opt stack 0
  7452                           GLOBAL	__end_of_strcpy
  7453  0C70                     	__end_of_strcpy:
  7454 ;; =============== function _strcpy ends ============
  7455                           
  7456                           	signat	_strcpy,8313
  7457                           	global	_check
  7458                           psect	text591,local,class=CODE,delta=2
  7459                           global __ptext591
  7460  0D26                     __ptext591:
  7461                           
  7462 ;; *************** function _check *****************
  7463 ;; Defined at:
  7464 ;;		line 145 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  input           1    wreg     PTR unsigned char 
  7467 ;;		 -> lo(5), 
  7468 ;;  logic           2    0[COMMON] PTR unsigned char 
  7469 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  input           1    5[COMMON] PTR unsigned char 
  7472 ;;		 -> lo(5), 
  7473 ;;  i               2    6[COMMON] int 
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  2    0[COMMON] int 
  7476 ;; Registers used:
  7477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7483 ;;      Params:         2       0       0       0       0
  7484 ;;      Locals:         3       0       0       0       0
  7485 ;;      Temps:          3       0       0       0       0
  7486 ;;      Totals:         8       0       0       0       0
  7487 ;;Total ram usage:        8 bytes
  7488 ;; Hardware stack levels used:    1
  7489 ;; This function calls:
  7490 ;;		Nothing
  7491 ;; This function is called by:
  7492 ;;		_startswitch
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           psect	text591
  7496                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7497                           	line	145
  7498                           	global	__size_of_check
  7499  0055                     	__size_of_check	equ	__end_of_check-_check
  7500                           	
  7501  0D26                     _check:	
  7502                           	opt	stack 5
  7503                           ; Regs used in _check: [wreg-fsr0h+status,2+status,0+btemp+1]
  7504                           ;check@input stored from wreg
  7505                           	line	147
  7506  0D26  00F5               	movwf	(check@input)
  7507                           	
  7508  0D27                     l3273:	
  7509                           ;prev11.c: 147: int i=0;
  7510  0D27  01F6               	clrf	(check@i)
  7511  0D28  01F7               	clrf	(check@i+1)
  7512                           	line	149
  7513                           ;prev11.c: 149: for(i=0;i<4;i++)
  7514  0D29  01F6               	clrf	(check@i)
  7515  0D2A  01F7               	clrf	(check@i+1)
  7516                           	
  7517  0D2B                     l3275:	
  7518  0D2B  0877               	movf	(check@i+1),w
  7519  0D2C  3A80               	xorlw	80h
  7520  0D2D  00FF               	movwf	btemp+1
  7521  0D2E  3080               	movlw	(high(04h))^80h
  7522  0D2F  027F               	subwf	btemp+1,w
  7523  0D30  1D03               	skipz
  7524  0D31  2D34               	goto	u3475
  7525  0D32  3004               	movlw	low(04h)
  7526  0D33  0276               	subwf	(check@i),w
  7527  0D34                     u3475:
  7528                           
  7529  0D34  1C03               	skipc
  7530  0D35  2D37               	goto	u3471
  7531  0D36  2D38               	goto	u3470
  7532  0D37                     u3471:
  7533  0D37  2D3A               	goto	l3279
  7534  0D38                     u3470:
  7535  0D38  2D75               	goto	l3291
  7536                           	
  7537  0D39                     l3277:	
  7538  0D39  2D75               	goto	l3291
  7539                           	line	150
  7540                           	
  7541  0D3A                     l1092:	
  7542                           	line	151
  7543                           	
  7544  0D3A                     l3279:	
  7545                           ;prev11.c: 150: {
  7546                           ;prev11.c: 151: if(input[i]=='0'&&logic[i]=='1')
  7547  0D3A  0876               	movf	(check@i),w
  7548  0D3B  0775               	addwf	(check@input),w
  7549  0D3C  00F2               	movwf	(??_check+0)+0
  7550  0D3D  0872               	movf	0+(??_check+0)+0,w
  7551  0D3E  0084               	movwf	fsr0
  7552  0D3F  1383               	bcf	status, 7	;select IRP bank0
  7553  0D40  0800               	movf	indf,w
  7554  0D41  3A30               	xorlw	030h
  7555  0D42  1D03               	skipz
  7556  0D43  2D45               	goto	u3481
  7557  0D44  2D46               	goto	u3480
  7558  0D45                     u3481:
  7559  0D45  2D61               	goto	l3287
  7560  0D46                     u3480:
  7561                           	
  7562  0D46                     l3281:	
  7563  0D46  0876               	movf	(check@i),w
  7564  0D47  0770               	addwf	(check@logic),w
  7565  0D48  00F3               	movwf	(??_check+1)+0
  7566  0D49  0871               	movf	(check@logic+1),w
  7567  0D4A  00F2               	movwf	(??_check+0)+0
  7568  0D4B  1803               	skipnc
  7569  0D4C  0AF2               	incf	(??_check+0)+0,f
  7570  0D4D  1FF6               	btfss	(check@i),7
  7571  0D4E  2D50               	goto	u3490
  7572  0D4F  03F2               	decf	(??_check+0)+0,f
  7573  0D50                     u3490:
  7574  0D50  0872               	movf	(??_check+0)+0,w
  7575  0D51  00F4               	movwf	0+((??_check+1)+0)+1
  7576  0D52  0873               	movf	0+(??_check+1)+0,w
  7577  0D53  0084               	movwf	fsr0
  7578  0D54  1783               	bsf	status,7
  7579  0D55  1C74               	btfss	1+(??_check+1)+0,0
  7580  0D56  1383               	bcf	status,7
  7581  0D57  0800               	movf	indf,w
  7582  0D58  3A31               	xorlw	031h
  7583  0D59  1D03               	skipz
  7584  0D5A  2D5C               	goto	u3501
  7585  0D5B  2D5D               	goto	u3500
  7586  0D5C                     u3501:
  7587  0D5C  2D61               	goto	l3287
  7588  0D5D                     u3500:
  7589                           	line	152
  7590                           	
  7591  0D5D                     l3283:	
  7592                           ;prev11.c: 152: return 0;
  7593  0D5D  01F0               	clrf	(?_check)
  7594  0D5E  01F1               	clrf	(?_check+1)
  7595  0D5F  2D7A               	goto	l1095
  7596                           	
  7597  0D60                     l3285:	
  7598  0D60  2D7A               	goto	l1095
  7599                           	
  7600  0D61                     l1094:	
  7601                           	line	149
  7602                           	
  7603  0D61                     l3287:	
  7604  0D61  3001               	movlw	low(01h)
  7605  0D62  07F6               	addwf	(check@i),f
  7606  0D63  1803               	skipnc
  7607  0D64  0AF7               	incf	(check@i+1),f
  7608  0D65  3000               	movlw	high(01h)
  7609  0D66  07F7               	addwf	(check@i+1),f
  7610                           	
  7611  0D67                     l3289:	
  7612  0D67  0877               	movf	(check@i+1),w
  7613  0D68  3A80               	xorlw	80h
  7614  0D69  00FF               	movwf	btemp+1
  7615  0D6A  3080               	movlw	(high(04h))^80h
  7616  0D6B  027F               	subwf	btemp+1,w
  7617  0D6C  1D03               	skipz
  7618  0D6D  2D70               	goto	u3515
  7619  0D6E  3004               	movlw	low(04h)
  7620  0D6F  0276               	subwf	(check@i),w
  7621  0D70                     u3515:
  7622                           
  7623  0D70  1C03               	skipc
  7624  0D71  2D73               	goto	u3511
  7625  0D72  2D74               	goto	u3510
  7626  0D73                     u3511:
  7627  0D73  2D3A               	goto	l3279
  7628  0D74                     u3510:
  7629  0D74  2D75               	goto	l3291
  7630                           	
  7631  0D75                     l1093:	
  7632                           	line	154
  7633                           	
  7634  0D75                     l3291:	
  7635                           ;prev11.c: 153: }
  7636                           ;prev11.c: 154: return 1;
  7637  0D75  3001               	movlw	low(01h)
  7638  0D76  00F0               	movwf	(?_check)
  7639  0D77  3000               	movlw	high(01h)
  7640  0D78  00F1               	movwf	((?_check))+1
  7641  0D79  2D7A               	goto	l1095
  7642                           	
  7643  0D7A                     l3293:	
  7644                           	line	155
  7645                           	
  7646  0D7A                     l1095:	
  7647  0D7A  0008               	return
  7648                           	opt stack 0
  7649                           GLOBAL	__end_of_check
  7650  0D7B                     	__end_of_check:
  7651 ;; =============== function _check ends ============
  7652                           
  7653                           	signat	_check,8314
  7654                           	global	_initkeypad
  7655                           psect	text592,local,class=CODE,delta=2
  7656                           global __ptext592
  7657  0AF7                     __ptext592:
  7658                           
  7659 ;; *************** function _initkeypad *****************
  7660 ;; Defined at:
  7661 ;;		line 696 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;		None               void
  7668 ;; Registers used:
  7669 ;;		wreg, status,2
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7675 ;;      Params:         0       0       0       0       0
  7676 ;;      Locals:         0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0
  7678 ;;      Totals:         0       0       0       0       0
  7679 ;;Total ram usage:        0 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_main
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           psect	text592
  7688                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7689                           	line	696
  7690                           	global	__size_of_initkeypad
  7691  0008                     	__size_of_initkeypad	equ	__end_of_initkeypad-_initkeypad
  7692                           	
  7693  0AF7                     _initkeypad:	
  7694                           	opt	stack 7
  7695                           ; Regs used in _initkeypad: [wreg+status,2]
  7696                           	line	697
  7697                           	
  7698  0AF7                     l1789:	
  7699                           ;prev11.c: 697: PORTB = 0;
  7700  0AF7  1283               	bcf	status, 5	;RP0=0, select bank0
  7701  0AF8  1303               	bcf	status, 6	;RP1=0, select bank0
  7702  0AF9  0186               	clrf	(6)	;volatile
  7703                           	line	698
  7704                           	
  7705  0AFA                     l1791:	
  7706                           ;prev11.c: 698: TRISB = 0b11010000;
  7707  0AFA  30D0               	movlw	(0D0h)
  7708  0AFB  1683               	bsf	status, 5	;RP0=1, select bank1
  7709  0AFC  1303               	bcf	status, 6	;RP1=0, select bank1
  7710  0AFD  0086               	movwf	(134)^080h	;volatile
  7711                           	line	700
  7712                           	
  7713  0AFE                     l1268:	
  7714  0AFE  0008               	return
  7715                           	opt stack 0
  7716                           GLOBAL	__end_of_initkeypad
  7717  0AFF                     	__end_of_initkeypad:
  7718 ;; =============== function _initkeypad ends ============
  7719                           
  7720                           	signat	_initkeypad,88
  7721                           	global	_buzz
  7722                           psect	text593,local,class=CODE,delta=2
  7723                           global __ptext593
  7724  0B2A                     __ptext593:
  7725                           
  7726 ;; *************** function _buzz *****************
  7727 ;; Defined at:
  7728 ;;		line 40 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  val             2    0[COMMON] int 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;		None
  7733 ;; Return value:  Size  Location     Type
  7734 ;;		None               void
  7735 ;; Registers used:
  7736 ;;		wreg
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7742 ;;      Params:         2       0       0       0       0
  7743 ;;      Locals:         0       0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0
  7745 ;;      Totals:         2       0       0       0       0
  7746 ;;Total ram usage:        2 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_getlogicseq
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           psect	text593
  7755                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7756                           	line	40
  7757                           	global	__size_of_buzz
  7758  0010                     	__size_of_buzz	equ	__end_of_buzz-_buzz
  7759                           	
  7760  0B2A                     _buzz:	
  7761                           	opt	stack 6
  7762                           ; Regs used in _buzz: [wreg]
  7763                           	line	41
  7764                           	
  7765  0B2A                     l3269:	
  7766                           ;prev11.c: 41: if(val!=99)
  7767  0B2A  3063               	movlw	063h
  7768  0B2B  0670               	xorwf	(buzz@val),w
  7769  0B2C  0471               	iorwf	(buzz@val+1),w
  7770  0B2D  1903               	skipnz
  7771  0B2E  2B30               	goto	u3461
  7772  0B2F  2B31               	goto	u3460
  7773  0B30                     u3461:
  7774  0B30  2B35               	goto	l1081
  7775  0B31                     u3460:
  7776                           	line	42
  7777                           	
  7778  0B31                     l3271:	
  7779                           ;prev11.c: 42: RB5=1;
  7780  0B31  1283               	bcf	status, 5	;RP0=0, select bank0
  7781  0B32  1303               	bcf	status, 6	;RP1=0, select bank0
  7782  0B33  1686               	bsf	(53/8),(53)&7
  7783  0B34  2B39               	goto	l1083
  7784                           	line	43
  7785                           	
  7786  0B35                     l1081:	
  7787                           	line	44
  7788                           ;prev11.c: 43: else
  7789                           ;prev11.c: 44: RB5=0;
  7790  0B35  1283               	bcf	status, 5	;RP0=0, select bank0
  7791  0B36  1303               	bcf	status, 6	;RP1=0, select bank0
  7792  0B37  1286               	bcf	(53/8),(53)&7
  7793  0B38  2B39               	goto	l1083
  7794                           	
  7795  0B39                     l1082:	
  7796                           	line	45
  7797                           	
  7798  0B39                     l1083:	
  7799  0B39  0008               	return
  7800                           	opt stack 0
  7801                           GLOBAL	__end_of_buzz
  7802  0B3A                     	__end_of_buzz:
  7803 ;; =============== function _buzz ends ============
  7804                           
  7805                           	signat	_buzz,4216
  7806                           psect	text594,local,class=CODE,delta=2
  7807                           global __ptext594
  7808  0000                     __ptext594:
  7809                           	global	btemp
  7810  007E                     	btemp set 07Eh
  7811                           
  7812                           	DABS	1,126,2	;btemp
  7813                           	global	wtemp0
  7814  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Tue Aug 08 07:20:54 2017

                   pc 0002                    _RD 0C60                    _f1 00E4                    _f2 00E6  
                  _f3 00E8                    _WR 0C61          ___awdiv@sign 0076                    _lo 0068  
                  fsr 0004   ___wmul@multiplicand 0072                   _RA0 0028                   _RA1 0029  
                 _RB0 0030                   _RA2 002A                   _RB1 0031                   _RC0 0038  
                 _RB2 0032                   _RC1 0039                   _RB3 0033                   _RD0 0040  
                 _RC2 003A                   _RD1 0041                   _RC3 003B                   _RB5 0035  
                 _RD2 0042                   _RC4 003C                   _RB6 0036                   _RD3 0043  
                 _RC5 003D                   _RB7 0037                   _RD4 0044                   _RC6 003E  
                 _RD5 0045                   _RD6 0046                   _RD7 0047                   _adr 0812  
                 _dat 0B9D                   _cmd 0B78                   _dev 0061                   _plo 01AA  
        ?_getlogicseq 0070                   fsr0 0004                   indf 0000          ___awmod@sign 0076  
         _startswitch 01A4                  l1110 0279                  l1102 01CE                  l1111 0282  
                l1103 01D7                  l1112 02B8                  l1104 01E0                  l1120 04A7  
                l1105 02B7                  l1121 04B6                  l1210 0B4C                  l1106 0235  
                l1130 04FB                  l1122 04CA                  l1211 0B5E                  l1107 023E  
                l1131 0551                  l1123 04D6                  l1212 0B5E                  l1220 0140  
                l1108 0257                  l1140 0602                  l1132 05DB                  l1124 04F9  
                l1221 015B                  l1109 0260                  l1141 0601                  l1125 04E6  
                l1117 046B                  l1302 0AF6                  l1222 01A3                  l1310 0039  
                l1150 067D                  l1142 060D                  l1134 056C                  l1126 04FC  
                l1118 047E                  l1215 00C4                  l1231 0B9C                  l1311 0038  
                l1151 06D6                  l1143 060C                  l1135 05DA                  l1127 04F8  
                l1119 07FF                  l1240 0320                  l1216 01A3                  l1312 0044  
                l1160 07CB                  l1152 06E5                  l1144 060E                  l1136 0585  
                l1128 04F7                  l1081 0B35                  l1209 0B4D                  l1241 0412  
                l1217 00D3                  l1305 0017                  l1225 0C3D                  l1153 0707  
                l1145 0649                  l1137 05DE                  l1129 04FA                  l1082 0B39  
                l1218 0100                  l1234 0BC1                  l1306 003B                  l1250 0DDE  
                l1170 07FD                  l1162 075C                  l1154 06FA                  l1146 06D3  
                l1138 05ED                  l1083 0B39                  l1219 0115                  l1307 0022  
                l1171 07FC                  l1163 07CA                  l1155 06F9                  l1139 060F  
                l1092 0D3A                  l1340 0C8A                  l1308 003A                  l1228 0B10  
                l1244 0D8A                  l1260 0ECE                  l1172 07FE                  l1164 0775  
                l1156 0705                  l1148 0664                  l1093 0D75                  l1341 0CA7  
                l1309 002D                  l1245 0D9D                  l1261 0EE6                  l1253 0E70  
                l1165 07CE                  l1157 0704                  l1149 06D2                  l1094 0D61  
                l1350 0CE0                  l1342 0CA7                  l1510 007E                  l1246 0DA7  
                l1262 0ED3                  l1254 0E63                  l1166 07DD                  l1158 0706  
                l1086 0B6E                  ?_dat 0078                  l1095 0D7A                  l1239 02DD  
                l1511 007F                  l1271 0F2C                  l1247 0DCA                  l1263 0EFC  
                l1255 0E82                  l1167 07FF                  l1159 0741                  l1087 0B74  
                l1336 0C7E                  l1512 0098                  l1280 0F88                  l1272 0FFF  
                l1248 0DAA                  l1256 0F17                  l1264 0F16                  l1168 07F2  
                l1088 0B75                  l1353 0C46                  l1345 0CAB                  l1337 0C77  
                l1513 00A6                  l1505 0053                  l1281 0F70                  l1273 0F4F  
                l1249 0DDE                  l1257 0EA0                  l1265 0F17                  l1169 07F1  
                l4001 07BD                  l1089 0B75                  l1354 0C45                  l1346 0CAA  
                l1338 0C89                  l1514 00B1                  l1506 0061                  l1290 0FB4  
                l1282 0F87                  l1274 0F37                  l1098 0BE9                  l1258 0EB8  
                ?_cmd 0078                  l1355 0C6F                  l1339 0C8B                  l1515 00B8  
                l1507 00A7                  l1291 0FBF                  l1283 0F7B                  l1275 0F4E  
                l1099 0BE9                  l1259 0EA5                  l4011 07DD                  l4003 07C3  
                l1268 0AFE                  l1356 0C6F                  l1348 0CD9                  l1508 0079  
                l1292 0FBE                  l1284 0F86                  l1276 0F42                  l1349 0CDA  
                l3301 0CAB                  l1365 0BED                  l1509 006D                  l1293 0FD7  
                l1285 0F85                  l1277 0F4D                  l4013 07E6                  l4005 07CB  
                l4021 0B5F                  l1366 0BF7                  l1294 0FFA                  l1286 0F9E  
                l1278 0F4C                  l3303 0CCE                  l3311 0B4D                  l1367 0C0C  
                l1295 0FE2                  l1287 0FC1                  l1279 0F65                  l4015 07EC  
                l4007 07CE                  l4023 0B63                  l1368 0C13                  l1296 0FF9  
                l1288 0FA9                  l3305 0CDA                  l3313 0C70                  l3401 0320  
                l1297 0FED                  l1289 0FC0                  l4017 07F2                  l4009 07DC  
                l4025 0B68                  l1298 0FF8                  l3307 0CE0                  l3315 0C77  
                l3403 0AF0                  l3411 0BED                  l1299 0FF7                  l4019 07F9  
                l4027 0B6E                  l1580 0E24                  l3309 0B4B                  l3317 0C7E  
                l3413 0BF1                  l3421 0045                  l1581 0E32                  l1573 0DED  
                l3501 00C4                  l1582 0E3D                  l1574 0DF7                  l3271 0B31  
                l3319 0C8B                  l3415 0BFE                  l3431 0061                  l3423 004A  
                l1583 0E44                  l1575 0E33                  l3511 00F3                  l3503 00CA  
                l1576 0E0D                  l3281 0D46                  l3273 0D27                  l3417 0C0C  
                l3409 0BEA                  l3441 0079                  l3433 0063                  l3425 0053  
                l1577 0E01                  l3521 0115                  l3513 00F7                  l3505 00D2  
                l3601 0F21                  l1578 0E12                  l3283 0D5D                  l3291 0D75  
                l3275 0D2B                  l3419 0C13                  l3451 009F                  l3443 007F  
                l3435 0069                  l3427 0057                  l1579 0E13                  l3531 014C  
                l3523 012E                  l3507 00D7                  l3515 0100                  l3611 0F35  
                l3603 0F27                  l3269 0B2A                  l3293 0D7A                  l3285 0D60  
                l3277 0D39                  l3445 0090                  l3437 006D                  l3453 00A7  
                l3429 005C                  l3461 0DDF                  l3541 0195                  l3533 015A  
                l3525 0132                  l3517 0106                  l3509 00EC                  l3701 0FF6  
                l3621 0F46                  l3613 0F36                  l3605 0F2A                  l1791 0AFA  
                l3287 0D61                  l3279 0D3A                  l3295 0C3E                  l3391 02BD  
                l3455 00AB                  l3447 0096                  l3439 0074                  l3471 0DFD  
                l3463 0DE4                  l3535 015B                  l3519 0114                  l3527 0140  
                l3551 0B90                  l3543 0B78                  l3703 0FFA                  l3631 0F63  
                l3623 0F4B                  l3615 0F3B                  l3607 0F2B                  l3711 0D84  
                l3289 0D67                  l3297 0C46                  l3393 02DC                  l3457 00B1  
                l3449 0098                  l3481 0E1D                  l3473 0E01                  l3465 0DED  
                l3537 0176                  l3529 0144                  l3553 0B93                  l3545 0B83  
                l3561 0BAC                  l3705 0FFF                  l3641 0F74                  l3633 0F64  
                l3617 0F40                  l3609 0F30                  l3625 0F4F                  l3721 0DAA  
                l3713 0D8A                  l3801 022C                  l3299 0CA9                  l3395 02DD  
                l3459 00B8                  l3491 0E3D                  l3483 0E24                  l3475 0E08  
                l3467 0DF1                  l3539 017E                  l3547 0B86                  l3563 0BB5  
                l3555 0B9D                  l3571 0013                  l3643 0F79                  l3635 0F69  
                l3651 0F88                  l3627 0F58                  l3619 0F41                  l3707 0B07  
                l3723 0DC3                  l3715 0D93                  l3731 0BCE                  l3811 0260  
                l3803 0235                  l1789 0AF7                  l3397 02FB                  l3389 02B9  
                l3493 0E44                  l3485 0E2B                  l3477 0E0D                  l3469 0DF7  
                l3549 0B87                  l3565 0BB8                  l3557 0BA8                  l3581 002D  
                l3573 0017                  l3661 0FA2                  l3653 0F91                  l3645 0F7A  
                l3637 0F6E                  l3629 0F5E                  l3725 0DCA                  l3717 0D9D  
                l3709 0D7B                  l3733 0BD1                  l3741 0E5E                  l3821 02A1  
                l3813 0270                  l3805 023E                  l3901 0565                  l3399 0301  
                l3479 0E13                  l3487 0E33                  l3495 00B9                  l3559 0BAB  
                l3583 0034                  l3575 001E                  l3567 0007                  l3591 0C19  
                l3671 0FB3                  l3663 0FA7                  l3655 0F97                  l3647 0F7F  
                l3639 0F6F                  l3719 0DA7                  l3735 0BD7                  l3727 0BC2  
                l3751 0E8A                  l3743 0E60                  l3823 02B8                  l3815 0279  
                l3807 024E                  l3911 05BA                  l3903 056C                  l3831 043E  
                l3489 0E37                  l3497 00BD                  l3577 0022                  l3585 003B  
                l3569 000C                  l3593 0C22                  l3681 0FD0                  l3673 0FB8  
                l3665 0FA8                  l3657 0F9C                  l3649 0F84                  l3729 0BCA  
                l3761 0EAE                  l3753 0E97                  l3745 0E63                  l3737 0E45  
                l3817 0282                  l3809 0257                  l3921 05EC                  l3913 05CD  
                l3905 0572                  l3841 046B                  l3833 0440                  l3825 0413  
                l3499 00C3                  l3579 0029                  l3595 0C2B                  l3587 0C14  
                l3691 0FE1                  l3683 0FD5                  l3675 0FBD                  l3667 0FAD  
                l3659 0F9D                  l3771 0EE6                  l3763 0EB8                  l3755 0E9B  
                l3747 0E70                  l3739 0E5A                  l3819 028C                  l3931 0609  
                l3923 05ED                  l3915 05D3                  l3907 0578                  l3851 049F  
                l3843 0474                  l3835 0442                  l3827 0422                  l3597 0C34  
                l3589 0C17                  l3693 0FE6                  l3685 0FD6                  l3669 0FB2  
                l3677 0FC1                  l3773 0EFC                  l3765 0ECE                  l3757 0EA0  
                l3749 0E82                  l3781 01C9                  l3941 0649                  l3925 05F6  
                l3933 060F                  l3909 05AB                  l3917 05DB                  l3861 04B4  
                l3853 04A3                  l3845 047D                  l3837 0444                  l3829 043A  
                l3695 0FEB                  l3687 0FDB                  l3679 0FCA                  l3599 0F18  
                l3775 0F15                  l3767 0ED3                  l3759 0EA5                  l3791 01E0  
                l3783 01CE                  l3951 0670                  l3943 0656                  l3935 0615  
                l3927 05FC                  l3919 05DE                  l3871 04D0                  l3863 04BD  
                l3855 04A5                  l3847 047E                  l3839 0457                  l3697 0FEC  
                l3689 0FE0                  l3769 0EDC                  l3793 01E6                  l3785 01D2  
                l3777 01A4                  l3953 06A3                  l3961 06D3                  l3945 065D  
                l3937 0622                  l3929 0602                  l3881 04EC                  l3873 04D6  
                l3865 04C1                  l3857 04AE                  l3849 0496                  l3699 0FF1  
                l3795 01E8                  l3787 01D7                  l3779 01C3                  l3971 06F4  
                l3955 06B2                  l3963 06D6                  l3947 0664                  l3939 0635  
                l3891 051C                  l3883 04F2                  l3875 04DE                  l3867 04C5  
                l3859 04B0                  l3797 01F9                  l3789 01DB                  l3981 071A  
                l3973 06FA                  l3965 06E4                  l3957 06C5                  l3949 066A  
                l3893 051E                  l3877 04E5                  l3885 04FC                  l3869 04CA  
                l3799 0209                  l3991 075C                  l3983 072D                  l3975 0701  
                l3967 06E5                  l3959 06CB                  l3895 052B                  l3887 050F  
                l3879 04E6                  l3993 0762                  l3985 0741                  l3969 06EE  
                l3977 0707                  l3897 053E                  l3889 0518                  l3995 0768  
                l3987 074E                  l3979 070D                  l3899 055E                  l3997 079B  
                l3989 0755                  l3999 07AA                  STR_1 08B6                  STR_2 08CA  
                STR_3 0896                  STR_4 0819                  STR_5 08A7                  STR_6 08C1  
                STR_7 083F                  STR_8 085A                  STR_9 086D                  u4010 007D  
                u4011 007C                  u4005 006E                  u4030 0090                  u4110 0E11  
                u4031 008F                  u4111 0E10                  u4120 0E1D                  u4200 013F  
                u4025 0080                  u4121 0E1C                  u4105 0E02                  u4201 013E  
                u4050 00A5                  u4210 0159                  u4051 00A4                  u4035 008C  
                u4211 0158                  u3500 0D5D                  u4060 00AB                  u4140 0E31  
                u4220 01A2                  u4300 0F46                  u3501 0D5C                  u4045 0099  
                u4141 0E30                  u4125 0E19                  u4221 01A1                  u4205 013B  
                u4301 0F45                  u3510 0D74                  u4150 0E37                  u4070 0DE4  
                u4230 0013                  u4310 0F5E                  u3511 0D73                  u4135 0E25  
                u4071 0DE3                  u4215 0155                  u4231 0012                  u4311 0F5D  
                u3520 0C6E                  u4080 0DF1                  u4160 00C2                  u4240 001E  
                u4400 0FDB                  u4320 0F69                  u3521 0C6D                  u4081 0DF0  
                u4225 019E                  u4161 00C1                  u4241 001D                  u4401 0FDA  
                u4321 0F68                  u3530 0CCE                  u4090 0DFD                  u4170 00CA  
                u4250 0029                  u4410 0FE6                  u4330 0F74                  u3515 0D70  
                u3531 0CCD                  u4091 0DFC                  u4171 00C9                  u4251 0028  
                u4411 0FE5                  u4331 0F73                  u3460 0B31                  u3540 0CD8  
                u4180 00D7                  u4260 0034                  u4420 0FF1                  u4340 0F7F  
                u4500 0EFB                  u3461 0B30                  u3541 0CD7                  u4181 00D6  
                u4261 0033                  u4421 0FF0                  u4341 0F7E                  u4501 0EFA  
                u3470 0D38                  u3550 0B5D                  u4190 0113                  u4350 0F97  
                u4270 0F27                  u4430 0D84                  u4510 0F14                  u3471 0D37  
                u3551 0B5C                  u4191 0112                  u4351 0F96                  u4271 0F26  
                u4431 0D83                  u4511 0F13                  u3480 0D46                  u3560 0C88  
                u4360 0FA2                  u4280 0F30                  u4440 0D93                  u4520 01C9  
                u3481 0D45                  u3561 0C87                  u4361 0FA1                  u4281 0F2F  
                u4441 0D92                  u4505 0EF7                  u4521 01C8                  u3490 0D50  
                u3570 0CA6                  u3810 0379                  u4370 0FAD                  u4290 0F3B  
                u4450 0DDD                  u4530 01D2                  u3475 0D34                  u3555 0B59  
                u3571 0CA5                  u3811 0375                  u4195 010F                  u4371 0FAC  
                u4291 0F3A                  u4451 0DDC                  u4515 0F10                  u4531 01D1  
                u3804 035E                  u3740 02DB                  u4380 0FB8                  u4460 0BCA  
                u4620 029E                  u4604 028C                  u4540 01DB                  u4700 04AE  
                u3741 02DA                  u4381 0FB7                  u4461 0BC9                  u4621 029A  
                u4541 01DA                  u4701 04AD                  u3910 040F                  u3830 0397  
                u4390 0FD0                  u4470 0E81                  u4550 0209                  u4710 04BD  
                u3911 040B                  u3831 0393                  u4391 0FCF                  u4471 0E80  
                u4615 0292                  u4551 0208                  u4711 04BC                  u3904 03F4  
                u3824 037C                  u3760 031F                  u4480 0E97                  u4560 022C  
                u4800 05F6                  u4720 04D0                  u3761 031E                  u3745 02D7  
                u4481 0E96                  u4561 022B                  u4801 05F5                  u4721 04CF  
                u3850 03B5                  u3770 033D                  u3754 02E9                  u3930 0BF1  
                u4490 0ECD                  u4650 02B3                  u4634 02A1                  u4570 024E  
                u4810 05FC                  u4730 04DE                  u3851 03B1                  u3771 0339  
                u3755 02E6                  u3931 0BF0                  u4491 0ECC                  u4651 02AF  
                u4571 024D                  u4811 05FB                  u4731 04DD                  u3924 0412  
                u3844 039A                  u4580 0270                  u4900 0701                  u4820 0609  
                u4740 04EC                  u3765 031B                  u4485 0E93                  u4645 02A7  
                u4581 026F                  u4901 0700                  u4821 0608                  u4741 04EB  
                u3870 03D3                  u3790 035B                  u4590 0289                  u4910 0755  
                u4830 065D                  u4750 0565                  u4670 042C                  u3871 03CF  
                u3791 0357                  u4495 0EC9                  u4591 0285                  u4911 0754  
                u4831 065C                  u4751 0564                  u3864 03B8                  u3784 0340  
                u3960 0C0B                  u4664 02B6                  u4920 075B                  u4840 0663  
                u4760 056B                  u4680 0474                  u3961 0C0A                  u3945 0BF8  
                u4921 075A                  u4841 0662                  u4761 056A                  u4681 0473  
                u3890 03F1                  u3970 004A                  u4930 0762                  u4850 066A  
                u4770 0572                  u4690 049F                  u3891 03ED                  u3955 0BFF  
                u3971 0049                  u4931 0761                  u4851 0669                  u4771 0571  
                u4691 049E                  u3884 03D6                  u3980 0057                  u4940 0768  
                u4860 0670                  u4780 0578                  u3981 0056                  u4941 0767  
                u4861 066F                  u4781 0577                  u3990 0069                  u4950 07DB  
                u4870 06E3                  u4790 05EB                  u3991 0068                  u4951 07DA  
                u4871 06E2                  u4791 05EA                  u4960 07E6                  u4880 06EE  
                u4961 07E5                  u4881 06ED                  u4970 07EC                  u4890 06F4  
                u4971 07EB                  u4955 07D7                  u4891 06F3                  u4875 06DF  
                u4795 05E7                  u4980 07F9                  u4981 07F8                  _WREN 0C62  
                _main 0B5F                  _pdev 0065                  _buzz 0B2A                  _scan 0F18  
                _retm 00EA                  btemp 007E                  start 0000                 ??_dat 007A  
               ??_cmd 007A                 ?_main 0070                 ?_buzz 0070                 ?_scan 0074  
     __end_of___awdiv 00B9                 _EEADR 010D                 STR_10 0919                 _EEDAT 010C  
               STR_11 086E                 STR_12 086D                 STR_20 0905                 STR_13 0919  
               STR_21 08D3                 STR_30 0900                 STR_22 08FB                 STR_14 0882  
               STR_15 086D                 STR_31 08EC                 STR_23 08E7                 STR_16 0919  
               STR_32 0914                 STR_24 090F                 STR_25 08CE                 STR_17 08C9  
               STR_26 08F6                 STR_18 08F1                 STR_27 08E2                 STR_19 08DD  
               STR_28 090A       __end_of___awmod 0E45                 STR_29 08D8                 _EEPGD 0C67  
               _ANSEL 0188       ___awdiv@divisor 0070       ___awdiv@counter 0075                 _PORTB 0006  
               _TRISA 0085                 _TRISB 0086                 _TRISC 0087                 _TRISD 0088  
               _WRERR 0C63                 _check 0D26                 _delay 0B4B                 _itoaa 00B9  
     __end_of_initlcd 0C3E                 _write 0D7B                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 0B78          __end_of_buzz 0B3A          __end_of_scan 1000  
              ??_main 007E                ??_buzz 0072                ??_scan 0076                ?_check 0070  
              ?_delay 0070                ?_itoaa 0079                _EECON2 018D      ___awdiv@dividend 0072  
              ?_write 0042      __end_of_clearlcd 0B11                ___wmul 0BEA             ??___awdiv 0074  
           ??___awmod 0074                _actrow 0007                check@i 0076           setLCD@vbool 0020  
              _setLCD 02B9      __end_of_init_fun 0BEA                delay@x 0070      ___awdiv@quotient 0077  
     ___awmod@divisor 0070                _scroll 0E45       ___awmod@counter 0075                _strcat 0C70  
              _strcmp 0CA8                clrloop 0B00                _strcpy 0C3E             ??_initlcd 007A  
    __end_of_resetout 0AF7  __size_of_getlogicseq 03ED                write@i 007C        __pcstackCOMMON 0070  
        __pidataBANK0 0AEB          __pidataBANK1 0B11          __pidataBANK3 0B1B         __end_of_check 0D7B  
       __end_of_delay 0B5F         __end_of_itoaa 01A4         __end_of_write 0DDF               ??_check 0072  
             ??_delay 0072          ?_startswitch 0070               ??_itoaa 007C               ??_write 007A  
          __pbssBANK0 0061            __pbssBANK1 00E4            __pbssBANK3 0190            dat@Command 0078  
          __pmaintext 0B5F               ?___wmul 0070               ?_actrow 0072            cmd@Command 0078  
             ?_setLCD 0070               ?_scroll 0048               ?_strcat 0070               ?_strcmp 0070  
             ?_strcpy 0070         getlogicseq@bf 00C0         getlogicseq@nf 00D2         getlogicseq@wf 00D4  
           ?_clearlcd 0070             ?_init_fun 0070            check@logic 0070            check@input 0075  
           ?_resetout 0070               ___awdiv 0045               ___awmod 0DDF       __size_of___wmul 002A  
     __size_of_actrow 003E       __size_of_setLCD 015A       __size_of_scroll 00D3            _initkeypad 0AF7  
     __size_of_strcat 0038       __size_of_strcmp 0039       __size_of_strcpy 0032          setLCD@number 0070  
        __size_of_dat 0025          __size_of_cmd 0025               _initlcd 0C14      ___awmod@dividend 0072  
             actrow@n 0072            ??_clearlcd 007A           scroll@endat 0055       getlogicseq@snum 00C2  
         scroll@loopn 0057           scroll@loops 004A  end_of_initialization 0D22               setLCD@i 0040  
             buzz@val 0070               init_ram 0B3E            ??_init_fun 007E               scroll@i 005B  
          ??_resetout 0070          __pstringtext 0800               strcmp@r 0076  __size_of_startswitch 0115  
      __end_of___wmul 0C14        __end_of_actrow 0045           ?_initkeypad 0070        __end_of_setLCD 0413  
      __end_of_scroll 0F18         ??_getlogicseq 005D        __end_of_strcat 0CA8        __end_of_strcmp 0CE1  
      __end_of_strcpy 0C70   start_initialization 0CE1           __end_of_dat 0BC2           __end_of_cmd 0B9D  
            ??___wmul 0074            setLCD@size 0817              ??_actrow 0074           __pdataBANK0 0068  
         __pdataBANK1 00DA           __pdataBANK3 01A0              ??_setLCD 0072              ??_scroll 004C  
            ??_strcat 0073              ??_strcmp 0072              ??_strcpy 0074            itoaa@count 0020  
          itoaa@value 0079         __pcstackBANK0 0020         __pcstackBANK1 00A0     __size_of_clearlcd 000A  
 __end_of_getlogicseq 0800   __size_of_initkeypad 0008     __size_of_init_fun 0028              ?___awdiv 0070  
            ?___awmod 0070             __ptext570 0413             __ptext571 01A4             __ptext580 0B78  
           __ptext572 0E45             __ptext581 00B9             __ptext573 0BC2             __ptext590 0C3E  
           __ptext582 0DDF             __ptext574 0D7B             __ptext591 0D26             __ptext583 0045  
           __ptext575 0B07             __ptext592 0AF7             __ptext584 0BEA             __ptext576 0F18  
           __ptext593 0B2A             __ptext585 0AF0             __ptext577 0C14             __ptext594 0000  
           __ptext586 02B9             __ptext578 0007             __ptext587 0C70             __ptext579 0B9D  
           __ptext588 0B4B             __ptext589 0CA8     __size_of_resetout 0007             _done_init 0063  
            ?_initlcd 0070        __size_of_check 0055        __size_of_delay 0014        __size_of_itoaa 00EB  
      __size_of_write 0064        getlogicseq@num 00D8        getlogicseq@str 00A0        ___wmul@product 0074  
   getlogicseq@ccount 00D6           __stringbase 0812     ___wmul@multiplier 0070         scroll@startat 0053  
         _getlogicseq 0413             init_fetch 0B3A      __size_of___awdiv 0074      __size_of___awmod 0066  
           itoaa@temp 0022          ??_initkeypad 0070            strcat@from 0072      __size_of_initlcd 002A  
            _clearlcd 0B07         ??_startswitch 0048      getlogicseq@F1868 0190            strcpy@from 0072  
            _init_fun 0BC2         __size_of_main 0019         __size_of_buzz 0010         __size_of_scan 00E8  
            _logic_d1 00DA              _logic_d2 00DF              _logic_d3 01A5              _logic_d4 01A0  
           scroll@len 0059             scroll@str 0048    __end_of_initkeypad 0AFF              clear_ram 0AFF  
          write@erase 0046              _resetout 0AF0              itoaa@ptr 007B   __end_of_startswitch 02B9  
       read_log@F1911 0067             stringcode 080A              scroll@en 0051              scroll@st 004F  
           write@line 0044              strcat@cp 0076              strcat@to 0070              strcmp@s1 0077  
            strcmp@s2 0070              strcpy@cp 0079              strcpy@to 0070              stringtab 0800  
            write@str 0042  
