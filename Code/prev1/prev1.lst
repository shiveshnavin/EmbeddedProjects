

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Sun Jul 30 11:23:41 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_initlcd
    43                           	FNCALL	_main,_initkeypad
    44                           	FNCALL	_main,_getlogicseq
    45                           	FNCALL	_getlogicseq,_scroll
    46                           	FNCALL	_getlogicseq,_write
    47                           	FNCALL	_getlogicseq,_scan
    48                           	FNCALL	_getlogicseq,_startswitch
    49                           	FNCALL	_getlogicseq,_delay
    50                           	FNCALL	_getlogicseq,_strcpy
    51                           	FNCALL	_getlogicseq,_itoaa
    52                           	FNCALL	_getlogicseq,_strcat
    53                           	FNCALL	_startswitch,_init_fun
    54                           	FNCALL	_startswitch,_strcpy
    55                           	FNCALL	_startswitch,_write
    56                           	FNCALL	_startswitch,_strcmp
    57                           	FNCALL	_startswitch,_check
    58                           	FNCALL	_scroll,_write
    59                           	FNCALL	_scroll,_delay
    60                           	FNCALL	_scroll,_cmd
    61                           	FNCALL	_init_fun,_write
    62                           	FNCALL	_write,_clearlcd
    63                           	FNCALL	_write,_cmd
    64                           	FNCALL	_write,_dat
    65                           	FNCALL	_clearlcd,_cmd
    66                           	FNCALL	_scan,_actrow
    67                           	FNCALL	_initlcd,_cmd
    68                           	FNCALL	_actrow,_resetout
    69                           	FNCALL	_actrow,_delay
    70                           	FNCALL	_dat,_setLCD
    71                           	FNCALL	_dat,_delay
    72                           	FNCALL	_cmd,_setLCD
    73                           	FNCALL	_cmd,_delay
    74                           	FNCALL	_itoaa,___wmul
    75                           	FNCALL	_itoaa,___awdiv
    76                           	FNCALL	_itoaa,___awmod
    77                           	FNROOT	_main
    78                           	global	_logic_d4
    79                           	global	_lo
    80                           	global	_logic_d3
    81                           	global	_plo
    82                           	global	_logic_d1
    83                           	global	_logic_d2
    84                           psect	idataBANK3,class=CODE,space=0,delta=2
    85                           global __pidataBANK3
    86  0B64                     __pidataBANK3:
    87                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
    88                           	line	114
    89                           
    90                           ;initializer for _logic_d4
    91  0B64  3431               	retlw	031h
    92  0B65  3430               	retlw	030h
    93  0B66  3430               	retlw	030h
    94  0B67  3400               	retlw	0
    95  0B68  3400               	retlw	0
    96                           psect	idataBANK0,class=CODE,space=0,delta=2
    97                           global __pidataBANK0
    98  0B3E                     __pidataBANK0:
    99                           	line	115
   100                           
   101                           ;initializer for _lo
   102  0B3E  3430               	retlw	030h
   103  0B3F  3430               	retlw	030h
   104  0B40  3430               	retlw	030h
   105  0B41  3430               	retlw	030h
   106  0B42  3400               	retlw	0
   107                           psect	idataBANK3
   108                           	line	113
   109                           
   110                           ;initializer for _logic_d3
   111  0B69  3430               	retlw	030h
   112  0B6A  3431               	retlw	031h
   113  0B6B  3430               	retlw	030h
   114  0B6C  3400               	retlw	0
   115  0B6D  3400               	retlw	0
   116                           	line	116
   117                           
   118                           ;initializer for _plo
   119  0B6E  3430               	retlw	030h
   120  0B6F  3430               	retlw	030h
   121  0B70  3430               	retlw	030h
   122  0B71  3430               	retlw	030h
   123  0B72  3400               	retlw	0
   124                           psect	idataBANK1,class=CODE,space=0,delta=2
   125                           global __pidataBANK1
   126  0007                     __pidataBANK1:
   127                           	line	111
   128                           
   129                           ;initializer for _logic_d1
   130  0007  3431               	retlw	031h
   131  0008  3430               	retlw	030h
   132  0009  3430               	retlw	030h
   133  000A  3400               	retlw	0
   134  000B  3400               	retlw	0
   135                           	line	112
   136                           
   137                           ;initializer for _logic_d2
   138  000C  3430               	retlw	030h
   139  000D  3431               	retlw	031h
   140  000E  3430               	retlw	030h
   141  000F  3400               	retlw	0
   142  0010  3400               	retlw	0
   143                           	global	setLCD@size
   144                           psect	stringtext,class=STRCODE,delta=2,reloc=256
   145                           global __pstringtext
   146  0800                     __pstringtext:
   147                           ;	global	stringtab,__stringbase
   148  0800                     stringtab:
   149                           ;	String table - string pointers are 2 bytes each
   150  0800  1BFF               	btfsc	(btemp+1),7
   151  0801  280A               	ljmp	stringcode
   152  0802  1383               	bcf	status,7
   153  0803  187F               	btfsc	(btemp+1),0
   154  0804  1783               	bsf	status,7
   155  0805  0800               	movf	indf,w
   156  0806  0A84               	incf fsr
   157  0807  1903               skipnz
   158  0808  0AFF               incf btemp+1
   159  0809  0008               	return
   160  080A                     stringcode:
   161  080A  087F               	movf btemp+1,w
   162  080B  397F               andlw 7Fh
   163  080C  008A               movwf	pclath
   164  080D  0804               	movf	fsr,w
   165  080E  0A84               incf fsr
   166  080F  1903               skipnz
   167  0810  0AFF               incf btemp+1
   168  0811  0082               	movwf pc
   169  0812                     __stringbase:
   170                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   171                           	line	572
   172  0812                     setLCD@size:
   173  0812  3410               	retlw	010h
   174  0813  3400               	retlw	0
   175                           
   176                           	global	setLCD@size
   177                           	global	_dev
   178                           	global	_done_init
   179                           	global	_pdev
   180                           	global	getlogicseq@F1268
   181                           	global	_f1
   182                           	global	_f2
   183                           	global	_f3
   184                           	global	_retm
   185                           	global	_PORTA
   186  0005                     _PORTA	set	5
   187                           	global	_PORTB
   188  0006                     _PORTB	set	6
   189                           	global	_RB0
   190  0030                     _RB0	set	48
   191                           	global	_RB1
   192  0031                     _RB1	set	49
   193                           	global	_RB2
   194  0032                     _RB2	set	50
   195                           	global	_RB3
   196  0033                     _RB3	set	51
   197                           	global	_RB5
   198  0035                     _RB5	set	53
   199                           	global	_RB6
   200  0036                     _RB6	set	54
   201                           	global	_RB7
   202  0037                     _RB7	set	55
   203                           	global	_RC0
   204  0038                     _RC0	set	56
   205                           	global	_RC1
   206  0039                     _RC1	set	57
   207                           	global	_RC2
   208  003A                     _RC2	set	58
   209                           	global	_RC3
   210  003B                     _RC3	set	59
   211                           	global	_RC4
   212  003C                     _RC4	set	60
   213                           	global	_RC5
   214  003D                     _RC5	set	61
   215                           	global	_RD0
   216  0040                     _RD0	set	64
   217                           	global	_RD1
   218  0041                     _RD1	set	65
   219                           	global	_RD2
   220  0042                     _RD2	set	66
   221                           	global	_RD3
   222  0043                     _RD3	set	67
   223                           	global	_RD4
   224  0044                     _RD4	set	68
   225                           	global	_RD5
   226  0045                     _RD5	set	69
   227                           	global	_RD6
   228  0046                     _RD6	set	70
   229                           	global	_RD7
   230  0047                     _RD7	set	71
   231                           	global	_TRISA
   232  0085                     _TRISA	set	133
   233                           	global	_TRISB
   234  0086                     _TRISB	set	134
   235                           	global	_TRISC
   236  0087                     _TRISC	set	135
   237                           	global	_TRISD
   238  0088                     _TRISD	set	136
   239                           	
   240  0814                     STR_4:	
   241  0814  3457               	retlw	87	;'W'
   242  0815  3445               	retlw	69	;'E'
   243  0816  344C               	retlw	76	;'L'
   244  0817  3443               	retlw	67	;'C'
   245  0818  344F               	retlw	79	;'O'
   246  0819  344D               	retlw	77	;'M'
   247  081A  3445               	retlw	69	;'E'
   248  081B  3420               	retlw	32	;' '
   249  081C  3421               	retlw	33	;'!'
   250  081D  3420               	retlw	32	;' '
   251  081E  3454               	retlw	84	;'T'
   252  081F  344F               	retlw	79	;'O'
   253  0820  3420               	retlw	32	;' '
   254  0821  3450               	retlw	80	;'P'
   255  0822  3452               	retlw	82	;'R'
   256  0823  344F               	retlw	79	;'O'
   257  0824  3447               	retlw	71	;'G'
   258  0825  3452               	retlw	82	;'R'
   259  0826  3441               	retlw	65	;'A'
   260  0827  344D               	retlw	77	;'M'
   261  0828  3441               	retlw	65	;'A'
   262  0829  3442               	retlw	66	;'B'
   263  082A  344C               	retlw	76	;'L'
   264  082B  3445               	retlw	69	;'E'
   265  082C  3420               	retlw	32	;' '
   266  082D  3448               	retlw	72	;'H'
   267  082E  344F               	retlw	79	;'O'
   268  082F  344D               	retlw	77	;'M'
   269  0830  3445               	retlw	69	;'E'
   270  0831  3420               	retlw	32	;' '
   271  0832  3441               	retlw	65	;'A'
   272  0833  3455               	retlw	85	;'U'
   273  0834  3454               	retlw	84	;'T'
   274  0835  344D               	retlw	77	;'M'
   275  0836  3441               	retlw	65	;'A'
   276  0837  3454               	retlw	84	;'T'
   277  0838  344E               	retlw	78	;'N'
   278  0839  3400               	retlw	0
   279                           psect	stringtext
   280                           	
   281  083A                     STR_7:	
   282  083A  3450               	retlw	80	;'P'
   283  083B  3472               	retlw	114	;'r'
   284  083C  3465               	retlw	101	;'e'
   285  083D  3473               	retlw	115	;'s'
   286  083E  3473               	retlw	115	;'s'
   287  083F  3420               	retlw	32	;' '
   288  0840  3432               	retlw	50	;'2'
   289  0841  342E               	retlw	46	;'.'
   290  0842  3420               	retlw	32	;' '
   291  0843  342D               	retlw	45	;'-'
   292  0844  3420               	retlw	32	;' '
   293  0845  3453               	retlw	83	;'S'
   294  0846  346B               	retlw	107	;'k'
   295  0847  3469               	retlw	105	;'i'
   296  0848  3470               	retlw	112	;'p'
   297  0849  3420               	retlw	32	;' '
   298  084A  3466               	retlw	102	;'f'
   299  084B  346F               	retlw	111	;'o'
   300  084C  3472               	retlw	114	;'r'
   301  084D  3420               	retlw	32	;' '
   302  084E  3444               	retlw	68	;'D'
   303  084F  3465               	retlw	101	;'e'
   304  0850  3476               	retlw	118	;'v'
   305  0851  3469               	retlw	105	;'i'
   306  0852  3463               	retlw	99	;'c'
   307  0853  3465               	retlw	101	;'e'
   308  0854  3400               	retlw	0
   309                           psect	stringtext
   310                           	
   311  0855                     STR_8:	
   312  0855  3445               	retlw	69	;'E'
   313  0856  346E               	retlw	110	;'n'
   314  0857  3474               	retlw	116	;'t'
   315  0858  3465               	retlw	101	;'e'
   316  0859  3472               	retlw	114	;'r'
   317  085A  3420               	retlw	32	;' '
   318  085B  344C               	retlw	76	;'L'
   319  085C  346F               	retlw	111	;'o'
   320  085D  3467               	retlw	103	;'g'
   321  085E  3469               	retlw	105	;'i'
   322  085F  3463               	retlw	99	;'c'
   323  0860  3420               	retlw	32	;' '
   324  0861  3444               	retlw	68	;'D'
   325  0862  3445               	retlw	69	;'E'
   326  0863  3456               	retlw	86	;'V'
   327  0864  3431               	retlw	49	;'1'
   328  0865  343A               	retlw	58	;':'
   329  0866  3420               	retlw	32	;' '
   330  0867  3420               	retlw	32	;' '
   331  0868  3400               	retlw	0
   332                           psect	stringtext
   333                           	
   334  0869                     STR_11:	
   335  0869  3445               	retlw	69	;'E'
   336  086A  346E               	retlw	110	;'n'
   337  086B  3474               	retlw	116	;'t'
   338  086C  3465               	retlw	101	;'e'
   339  086D  3472               	retlw	114	;'r'
   340  086E  3420               	retlw	32	;' '
   341  086F  344C               	retlw	76	;'L'
   342  0870  346F               	retlw	111	;'o'
   343  0871  3467               	retlw	103	;'g'
   344  0872  3469               	retlw	105	;'i'
   345  0873  3463               	retlw	99	;'c'
   346  0874  3420               	retlw	32	;' '
   347  0875  3444               	retlw	68	;'D'
   348  0876  3445               	retlw	69	;'E'
   349  0877  3456               	retlw	86	;'V'
   350  0878  3432               	retlw	50	;'2'
   351  0879  343A               	retlw	58	;':'
   352  087A  3420               	retlw	32	;' '
   353  087B  3420               	retlw	32	;' '
   354  087C  3400               	retlw	0
   355                           psect	stringtext
   356                           	
   357  087D                     STR_14:	
   358  087D  3445               	retlw	69	;'E'
   359  087E  346E               	retlw	110	;'n'
   360  087F  3474               	retlw	116	;'t'
   361  0880  3465               	retlw	101	;'e'
   362  0881  3472               	retlw	114	;'r'
   363  0882  3420               	retlw	32	;' '
   364  0883  344C               	retlw	76	;'L'
   365  0884  346F               	retlw	111	;'o'
   366  0885  3467               	retlw	103	;'g'
   367  0886  3469               	retlw	105	;'i'
   368  0887  3463               	retlw	99	;'c'
   369  0888  3420               	retlw	32	;' '
   370  0889  3444               	retlw	68	;'D'
   371  088A  3445               	retlw	69	;'E'
   372  088B  3456               	retlw	86	;'V'
   373  088C  3433               	retlw	51	;'3'
   374  088D  343A               	retlw	58	;':'
   375  088E  3420               	retlw	32	;' '
   376  088F  3420               	retlw	32	;' '
   377  0890  3400               	retlw	0
   378                           psect	stringtext
   379                           	
   380  0891                     STR_3:	
   381  0891  3450               	retlw	80	;'P'
   382  0892  3472               	retlw	114	;'r'
   383  0893  3465               	retlw	101	;'e'
   384  0894  3473               	retlw	115	;'s'
   385  0895  3473               	retlw	115	;'s'
   386  0896  3420               	retlw	32	;' '
   387  0897  3432               	retlw	50	;'2'
   388  0898  3420               	retlw	32	;' '
   389  0899  3474               	retlw	116	;'t'
   390  089A  346F               	retlw	111	;'o'
   391  089B  3420               	retlw	32	;' '
   392  089C  3452               	retlw	82	;'R'
   393  089D  3445               	retlw	69	;'E'
   394  089E  3450               	retlw	80	;'P'
   395  089F  3452               	retlw	82	;'R'
   396  08A0  3447               	retlw	71	;'G'
   397  08A1  3400               	retlw	0
   398                           psect	stringtext
   399                           	
   400  08A2                     STR_5:	
   401  08A2  3431               	retlw	49	;'1'
   402  08A3  342E               	retlw	46	;'.'
   403  08A4  3453               	retlw	83	;'S'
   404  08A5  3457               	retlw	87	;'W'
   405  08A6  3454               	retlw	84	;'T'
   406  08A7  3420               	retlw	32	;' '
   407  08A8  3420               	retlw	32	;' '
   408  08A9  3432               	retlw	50	;'2'
   409  08AA  342E               	retlw	46	;'.'
   410  08AB  3452               	retlw	82	;'R'
   411  08AC  3445               	retlw	69	;'E'
   412  08AD  3450               	retlw	80	;'P'
   413  08AE  3452               	retlw	82	;'R'
   414  08AF  3447               	retlw	71	;'G'
   415  08B0  3400               	retlw	0
   416                           psect	stringtext
   417                           	
   418  08B1                     STR_1:	
   419  08B1  3453               	retlw	83	;'S'
   420  08B2  3465               	retlw	101	;'e'
   421  08B3  346E               	retlw	110	;'n'
   422  08B4  3473               	retlw	115	;'s'
   423  08B5  3469               	retlw	105	;'i'
   424  08B6  346E               	retlw	110	;'n'
   425  08B7  3467               	retlw	103	;'g'
   426  08B8  342E               	retlw	46	;'.'
   427  08B9  342E               	retlw	46	;'.'
   428  08BA  342E               	retlw	46	;'.'
   429  08BB  3400               	retlw	0
   430                           psect	stringtext
   431                           	
   432  08BC                     STR_6:	
   433  08BC  3433               	retlw	51	;'3'
   434  08BD  342E               	retlw	46	;'.'
   435  08BE  3452               	retlw	82	;'R'
   436  08BF  3445               	retlw	69	;'E'
   437  08C0  3453               	retlw	83	;'S'
   438  08C1  3445               	retlw	69	;'E'
   439  08C2  3454               	retlw	84	;'T'
   440  08C3  3400               	retlw	0
   441                           psect	stringtext
   442                           	
   443  08C4                     STR_17:	
   444  08C4  3430               	retlw	48	;'0'
   445  08C5  3430               	retlw	48	;'0'
   446  08C6  3430               	retlw	48	;'0'
   447  08C7  3430               	retlw	48	;'0'
   448  08C8  3400               	retlw	0
   449                           psect	stringtext
   450                           	
   451  08C9                     STR_25:	
   452  08C9  3431               	retlw	49	;'1'
   453  08CA  3430               	retlw	48	;'0'
   454  08CB  3430               	retlw	48	;'0'
   455  08CC  3430               	retlw	48	;'0'
   456  08CD  3400               	retlw	0
   457                           psect	stringtext
   458                           	
   459  08CE                     STR_21:	
   460  08CE  3430               	retlw	48	;'0'
   461  08CF  3431               	retlw	49	;'1'
   462  08D0  3430               	retlw	48	;'0'
   463  08D1  3430               	retlw	48	;'0'
   464  08D2  3400               	retlw	0
   465                           psect	stringtext
   466                           	
   467  08D3                     STR_29:	
   468  08D3  3431               	retlw	49	;'1'
   469  08D4  3431               	retlw	49	;'1'
   470  08D5  3430               	retlw	48	;'0'
   471  08D6  3430               	retlw	48	;'0'
   472  08D7  3400               	retlw	0
   473                           psect	stringtext
   474                           	
   475  08D8                     STR_19:	
   476  08D8  3430               	retlw	48	;'0'
   477  08D9  3430               	retlw	48	;'0'
   478  08DA  3431               	retlw	49	;'1'
   479  08DB  3430               	retlw	48	;'0'
   480  08DC  3400               	retlw	0
   481                           psect	stringtext
   482                           	
   483  08DD                     STR_27:	
   484  08DD  3431               	retlw	49	;'1'
   485  08DE  3430               	retlw	48	;'0'
   486  08DF  3431               	retlw	49	;'1'
   487  08E0  3430               	retlw	48	;'0'
   488  08E1  3400               	retlw	0
   489                           psect	stringtext
   490                           	
   491  08E2                     STR_23:	
   492  08E2  3430               	retlw	48	;'0'
   493  08E3  3431               	retlw	49	;'1'
   494  08E4  3431               	retlw	49	;'1'
   495  08E5  3430               	retlw	48	;'0'
   496  08E6  3400               	retlw	0
   497                           psect	stringtext
   498                           	
   499  08E7                     STR_31:	
   500  08E7  3431               	retlw	49	;'1'
   501  08E8  3431               	retlw	49	;'1'
   502  08E9  3431               	retlw	49	;'1'
   503  08EA  3430               	retlw	48	;'0'
   504  08EB  3400               	retlw	0
   505                           psect	stringtext
   506                           	
   507  08EC                     STR_18:	
   508  08EC  3430               	retlw	48	;'0'
   509  08ED  3430               	retlw	48	;'0'
   510  08EE  3430               	retlw	48	;'0'
   511  08EF  3431               	retlw	49	;'1'
   512  08F0  3400               	retlw	0
   513                           psect	stringtext
   514                           	
   515  08F1                     STR_26:	
   516  08F1  3431               	retlw	49	;'1'
   517  08F2  3430               	retlw	48	;'0'
   518  08F3  3430               	retlw	48	;'0'
   519  08F4  3431               	retlw	49	;'1'
   520  08F5  3400               	retlw	0
   521                           psect	stringtext
   522                           	
   523  08F6                     STR_22:	
   524  08F6  3430               	retlw	48	;'0'
   525  08F7  3431               	retlw	49	;'1'
   526  08F8  3430               	retlw	48	;'0'
   527  08F9  3431               	retlw	49	;'1'
   528  08FA  3400               	retlw	0
   529                           psect	stringtext
   530                           	
   531  08FB                     STR_30:	
   532  08FB  3431               	retlw	49	;'1'
   533  08FC  3431               	retlw	49	;'1'
   534  08FD  3430               	retlw	48	;'0'
   535  08FE  3431               	retlw	49	;'1'
   536  08FF  3400               	retlw	0
   537                           psect	stringtext
   538                           	
   539  0900                     STR_20:	
   540  0900  3430               	retlw	48	;'0'
   541  0901  3430               	retlw	48	;'0'
   542  0902  3431               	retlw	49	;'1'
   543  0903  3431               	retlw	49	;'1'
   544  0904  3400               	retlw	0
   545                           psect	stringtext
   546                           	
   547  0905                     STR_28:	
   548  0905  3431               	retlw	49	;'1'
   549  0906  3430               	retlw	48	;'0'
   550  0907  3431               	retlw	49	;'1'
   551  0908  3431               	retlw	49	;'1'
   552  0909  3400               	retlw	0
   553                           psect	stringtext
   554                           	
   555  090A                     STR_24:	
   556  090A  3430               	retlw	48	;'0'
   557  090B  3431               	retlw	49	;'1'
   558  090C  3431               	retlw	49	;'1'
   559  090D  3431               	retlw	49	;'1'
   560  090E  3400               	retlw	0
   561                           psect	stringtext
   562                           	
   563  090F                     STR_32:	
   564  090F  3431               	retlw	49	;'1'
   565  0910  3431               	retlw	49	;'1'
   566  0911  3431               	retlw	49	;'1'
   567  0912  3431               	retlw	49	;'1'
   568  0913  3400               	retlw	0
   569                           psect	stringtext
   570                           	
   571  0914                     STR_10:	
   572  0914  342D               	retlw	45	;'-'
   573  0915  342D               	retlw	45	;'-'
   574  0916  342D               	retlw	45	;'-'
   575  0917  3400               	retlw	0
   576                           psect	stringtext
   577  08C5                     STR_2	equ	STR_17+1
   578  0914                     STR_13	equ	STR_10+0
   579  0914                     STR_16	equ	STR_10+0
   580  0868                     STR_9	equ	STR_8+19
   581  0868                     STR_12	equ	STR_8+19
   582  0868                     STR_15	equ	STR_8+19
   583                           	file	"prev1.as"
   584                           	line	#
   585                           psect cinit,class=CODE,delta=2
   586                           global start_initialization
   587  0D56                     start_initialization:
   588                           
   589                           psect	bssBANK0,class=BANK0,space=1
   590                           global __pbssBANK0
   591  0061                     __pbssBANK0:
   592  0061                     _dev:
   593  0061                            ds      2
   594                           
   595  0063                     _done_init:
   596  0063                            ds      2
   597                           
   598  0065                     _pdev:
   599  0065                            ds      2
   600                           
   601                           psect	dataBANK0,class=BANK0,space=1
   602                           global __pdataBANK0
   603  0067                     __pdataBANK0:
   604                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   605                           	line	115
   606  0067                     _lo:
   607  0067                            ds      5
   608                           
   609                           psect	bssBANK1,class=BANK1,space=1
   610                           global __pbssBANK1
   611  00E4                     __pbssBANK1:
   612  00E4                     _f1:
   613  00E4                            ds      2
   614                           
   615  00E6                     _f2:
   616  00E6                            ds      2
   617                           
   618  00E8                     _f3:
   619  00E8                            ds      2
   620                           
   621  00EA                     _retm:
   622  00EA                            ds      2
   623                           
   624                           psect	dataBANK1,class=BANK1,space=1
   625                           global __pdataBANK1
   626  00DA                     __pdataBANK1:
   627                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   628                           	line	111
   629  00DA                     _logic_d1:
   630  00DA                            ds      5
   631                           
   632                           psect	dataBANK1
   633                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   634                           	line	112
   635  00DF                     _logic_d2:
   636  00DF                            ds      5
   637                           
   638                           psect	bssBANK3,class=BANK3,space=1
   639                           global __pbssBANK3
   640  0190                     __pbssBANK3:
   641  0190                     getlogicseq@F1268:
   642  0190                            ds      16
   643                           
   644                           psect	dataBANK3,class=BANK3,space=1
   645                           global __pdataBANK3
   646  01A0                     __pdataBANK3:
   647                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   648                           	line	114
   649  01A0                     _logic_d4:
   650  01A0                            ds      5
   651                           
   652                           psect	dataBANK3
   653                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   654                           	line	113
   655  01A5                     _logic_d3:
   656  01A5                            ds      5
   657                           
   658                           psect	dataBANK3
   659                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
   660                           	line	116
   661  01AA                     _plo:
   662  01AA                            ds      5
   663                           
   664                           psect clrtext,class=CODE,delta=2
   665                           global clear_ram
   666                           ;	Called with FSR containing the base address, and
   667                           ;	W with the last address+1
   668  0B52                     clear_ram:
   669  0B52  0064               	clrwdt			;clear the watchdog before getting into this loop
   670  0B53                     clrloop:
   671  0B53  0180               	clrf	indf		;clear RAM location pointed to by FSR
   672  0B54  0A84               	incf	fsr,f		;increment pointer
   673  0B55  0604               	xorwf	fsr,w		;XOR with final address
   674  0B56  1903               	btfsc	status,2	;have we reached the end yet?
   675  0B57  3400               	retlw	0		;all done for this memory range, return
   676  0B58  0604               	xorwf	fsr,w		;XOR again to restore value
   677  0B59  2B53               	goto	clrloop		;do the next byte
   678                           
   679                           ; Clear objects allocated to BANK0
   680                           psect cinit,class=CODE,delta=2
   681  0D56  01E1               	clrf	((__pbssBANK0)+0)&07Fh
   682  0D57  01E2               	clrf	((__pbssBANK0)+1)&07Fh
   683  0D58  01E3               	clrf	((__pbssBANK0)+2)&07Fh
   684  0D59  01E4               	clrf	((__pbssBANK0)+3)&07Fh
   685  0D5A  01E5               	clrf	((__pbssBANK0)+4)&07Fh
   686  0D5B  01E6               	clrf	((__pbssBANK0)+5)&07Fh
   687                           ; Clear objects allocated to BANK1
   688                           psect cinit,class=CODE,delta=2
   689  0D5C  1383               	bcf	status, 7	;select IRP bank0
   690  0D5D  30E4               	movlw	low(__pbssBANK1)
   691  0D5E  0084               	movwf	fsr
   692  0D5F  30EC               	movlw	low((__pbssBANK1)+08h)
   693  0D60  120A  158A  2352   	fcall	clear_ram
              120A  158A         
   694                           ; Clear objects allocated to BANK3
   695                           psect cinit,class=CODE,delta=2
   696  0D65  1783               	bsf	status, 7	;select IRP bank2
   697  0D66  3090               	movlw	low(__pbssBANK3)
   698  0D67  0084               	movwf	fsr
   699  0D68  30A0               	movlw	low((__pbssBANK3)+010h)
   700  0D69  120A  158A  2352   	fcall	clear_ram
              120A  158A         
   701                           global btemp
   702                           psect inittext,class=CODE,delta=2
   703                           global init_fetch,btemp
   704                           ;	Called with low address in FSR and high address in W
   705  0B73                     init_fetch:
   706  0B73  087E               	movf btemp,w
   707  0B74  008A               	movwf pclath
   708  0B75  087F               	movf btemp+1,w
   709  0B76  0082               	movwf pc
   710                           global init_ram
   711                           ;Called with:
   712                           ;	high address of idata address in btemp 
   713                           ;	low address of idata address in btemp+1 
   714                           ;	low address of data in FSR
   715                           ;	high address + 1 of data in btemp-1
   716  0B77                     init_ram:
   717  0B77  2373  120A  158A   	fcall init_fetch
   718  0B7A  0080               	movwf indf,f
   719  0B7B  0A84               	incf fsr,f
   720  0B7C  0804               	movf fsr,w
   721  0B7D  067D               	xorwf btemp-1,w
   722  0B7E  1903               	btfsc status,2
   723  0B7F  3400               	retlw 0
   724  0B80  0AFF               	incf btemp+1,f
   725  0B81  1903               	btfsc status,2
   726  0B82  0AFE               	incf btemp,f
   727  0B83  2B77               	goto init_ram
   728                           ; Initialize objects allocated to BANK3
   729                           psect cinit,class=CODE,delta=2
   730                           global init_ram, __pidataBANK3
   731  0D6E  30AF               	movlw low(__pdataBANK3+15)
   732  0D6F  00FD               	movwf btemp-1,f
   733  0D70  300B               	movlw high(__pidataBANK3)
   734  0D71  00FE               	movwf btemp,f
   735  0D72  3064               	movlw low(__pidataBANK3)
   736  0D73  00FF               	movwf btemp+1,f
   737  0D74  30A0               	movlw low(__pdataBANK3)
   738  0D75  0084               	movwf fsr,f
   739  0D76  120A  158A  2377   	fcall init_ram
              120A  158A         
   740                           ; Initialize objects allocated to BANK1
   741                           psect cinit,class=CODE,delta=2
   742                           global init_ram, __pidataBANK1
   743  0D7B  1383               	bcf	status, 7	;select IRP bank0
   744  0D7C  30E4               	movlw low(__pdataBANK1+10)
   745  0D7D  00FD               	movwf btemp-1,f
   746  0D7E  3000               	movlw high(__pidataBANK1)
   747  0D7F  00FE               	movwf btemp,f
   748  0D80  3007               	movlw low(__pidataBANK1)
   749  0D81  00FF               	movwf btemp+1,f
   750  0D82  30DA               	movlw low(__pdataBANK1)
   751  0D83  0084               	movwf fsr,f
   752  0D84  120A  158A  2377   	fcall init_ram
              120A  158A         
   753                           ; Initialize objects allocated to BANK0
   754                           psect cinit,class=CODE,delta=2
   755                           global init_ram, __pidataBANK0
   756  0D89  306C               	movlw low(__pdataBANK0+5)
   757  0D8A  00FD               	movwf btemp-1,f
   758  0D8B  300B               	movlw high(__pidataBANK0)
   759  0D8C  00FE               	movwf btemp,f
   760  0D8D  303E               	movlw low(__pidataBANK0)
   761  0D8E  00FF               	movwf btemp+1,f
   762  0D8F  3067               	movlw low(__pdataBANK0)
   763  0D90  0084               	movwf fsr,f
   764  0D91  120A  158A  2377   	fcall init_ram
              120A  158A         
   765                           psect cinit,class=CODE,delta=2
   766                           global end_of_initialization
   767                           
   768                           ;End of C runtime variable initialization code
   769                           
   770  0D96                     end_of_initialization:
   771  0D96  0183               clrf status
   772  0D97  120A  158A  2B98   ljmp _main	;jump to C main() function
   773                           psect	cstackBANK1,class=BANK1,space=1
   774                           global __pcstackBANK1
   775  00A0                     __pcstackBANK1:
   776                           	global	getlogicseq@str
   777  00A0                     getlogicseq@str:	; 32 bytes @ 0x0
   778  00A0                     	ds	32
   779                           	global	getlogicseq@bf
   780  00C0                     getlogicseq@bf:	; 2 bytes @ 0x20
   781  00C0                     	ds	2
   782                           	global	getlogicseq@snum
   783  00C2                     getlogicseq@snum:	; 16 bytes @ 0x22
   784  00C2                     	ds	16
   785                           	global	getlogicseq@nf
   786  00D2                     getlogicseq@nf:	; 2 bytes @ 0x32
   787  00D2                     	ds	2
   788                           	global	getlogicseq@wf
   789  00D4                     getlogicseq@wf:	; 2 bytes @ 0x34
   790  00D4                     	ds	2
   791                           	global	getlogicseq@ccount
   792  00D6                     getlogicseq@ccount:	; 2 bytes @ 0x36
   793  00D6                     	ds	2
   794                           	global	getlogicseq@num
   795  00D8                     getlogicseq@num:	; 2 bytes @ 0x38
   796  00D8                     	ds	2
   797                           psect	cstackCOMMON,class=COMMON,space=1
   798                           global __pcstackCOMMON
   799  0070                     __pcstackCOMMON:
   800                           	global	?_initlcd
   801  0070                     ?_initlcd:	; 0 bytes @ 0x0
   802                           	global	?_initkeypad
   803  0070                     ?_initkeypad:	; 0 bytes @ 0x0
   804                           	global	??_initkeypad
   805  0070                     ??_initkeypad:	; 0 bytes @ 0x0
   806                           	global	?_getlogicseq
   807  0070                     ?_getlogicseq:	; 0 bytes @ 0x0
   808                           	global	?_delay
   809  0070                     ?_delay:	; 0 bytes @ 0x0
   810                           	global	?_setLCD
   811  0070                     ?_setLCD:	; 0 bytes @ 0x0
   812                           	global	?_init_fun
   813  0070                     ?_init_fun:	; 0 bytes @ 0x0
   814                           	global	?_startswitch
   815  0070                     ?_startswitch:	; 0 bytes @ 0x0
   816                           	global	?_clearlcd
   817  0070                     ?_clearlcd:	; 0 bytes @ 0x0
   818                           	global	?_resetout
   819  0070                     ?_resetout:	; 0 bytes @ 0x0
   820                           	global	??_resetout
   821  0070                     ??_resetout:	; 0 bytes @ 0x0
   822                           	global	?_strcpy
   823  0070                     ?_strcpy:	; 2 bytes @ 0x0
   824                           	global	?_strcmp
   825  0070                     ?_strcmp:	; 2 bytes @ 0x0
   826                           	global	?_strcat
   827  0070                     ?_strcat:	; 2 bytes @ 0x0
   828                           	global	?_main
   829  0070                     ?_main:	; 2 bytes @ 0x0
   830                           	global	?_check
   831  0070                     ?_check:	; 2 bytes @ 0x0
   832                           	global	?___wmul
   833  0070                     ?___wmul:	; 2 bytes @ 0x0
   834                           	global	?___awdiv
   835  0070                     ?___awdiv:	; 2 bytes @ 0x0
   836                           	global	?___awmod
   837  0070                     ?___awmod:	; 2 bytes @ 0x0
   838                           	global	check@logic
   839  0070                     check@logic:	; 2 bytes @ 0x0
   840                           	global	delay@x
   841  0070                     delay@x:	; 2 bytes @ 0x0
   842                           	global	setLCD@number
   843  0070                     setLCD@number:	; 2 bytes @ 0x0
   844                           	global	strcat@to
   845  0070                     strcat@to:	; 2 bytes @ 0x0
   846                           	global	strcmp@s2
   847  0070                     strcmp@s2:	; 2 bytes @ 0x0
   848                           	global	strcpy@to
   849  0070                     strcpy@to:	; 2 bytes @ 0x0
   850                           	global	___wmul@multiplier
   851  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   852                           	global	___awdiv@divisor
   853  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   854                           	global	___awmod@divisor
   855  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   856  0070                     	ds	2
   857                           	global	??_strcmp
   858  0072                     ??_strcmp:	; 0 bytes @ 0x2
   859                           	global	??_delay
   860  0072                     ??_delay:	; 0 bytes @ 0x2
   861                           	global	??_setLCD
   862  0072                     ??_setLCD:	; 0 bytes @ 0x2
   863                           	global	?_actrow
   864  0072                     ?_actrow:	; 0 bytes @ 0x2
   865                           	global	??_check
   866  0072                     ??_check:	; 0 bytes @ 0x2
   867                           	global	strcat@from
   868  0072                     strcat@from:	; 1 bytes @ 0x2
   869                           	global	actrow@n
   870  0072                     actrow@n:	; 2 bytes @ 0x2
   871                           	global	strcpy@from
   872  0072                     strcpy@from:	; 2 bytes @ 0x2
   873                           	global	___wmul@multiplicand
   874  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   875                           	global	___awdiv@dividend
   876  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   877                           	global	___awmod@dividend
   878  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   879  0072                     	ds	1
   880                           	global	??_strcat
   881  0073                     ??_strcat:	; 0 bytes @ 0x3
   882  0073                     	ds	1
   883                           	global	??_strcpy
   884  0074                     ??_strcpy:	; 0 bytes @ 0x4
   885                           	global	??_actrow
   886  0074                     ??_actrow:	; 0 bytes @ 0x4
   887                           	global	??___wmul
   888  0074                     ??___wmul:	; 0 bytes @ 0x4
   889                           	global	??___awdiv
   890  0074                     ??___awdiv:	; 0 bytes @ 0x4
   891                           	global	??___awmod
   892  0074                     ??___awmod:	; 0 bytes @ 0x4
   893                           	global	?_scan
   894  0074                     ?_scan:	; 2 bytes @ 0x4
   895                           	global	___wmul@product
   896  0074                     ___wmul@product:	; 2 bytes @ 0x4
   897  0074                     	ds	1
   898                           	global	check@input
   899  0075                     check@input:	; 1 bytes @ 0x5
   900                           	global	___awdiv@counter
   901  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   902                           	global	___awmod@counter
   903  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   904  0075                     	ds	1
   905                           	global	??_scan
   906  0076                     ??_scan:	; 0 bytes @ 0x6
   907                           	global	strcmp@r
   908  0076                     strcmp@r:	; 1 bytes @ 0x6
   909                           	global	___awdiv@sign
   910  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   911                           	global	___awmod@sign
   912  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   913                           	global	check@i
   914  0076                     check@i:	; 2 bytes @ 0x6
   915                           	global	strcat@cp
   916  0076                     strcat@cp:	; 2 bytes @ 0x6
   917  0076                     	ds	1
   918                           	global	strcmp@s1
   919  0077                     strcmp@s1:	; 1 bytes @ 0x7
   920                           	global	___awdiv@quotient
   921  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   922  0077                     	ds	1
   923                           	global	?_cmd
   924  0078                     ?_cmd:	; 0 bytes @ 0x8
   925                           	global	?_dat
   926  0078                     ?_dat:	; 0 bytes @ 0x8
   927                           	global	cmd@Command
   928  0078                     cmd@Command:	; 2 bytes @ 0x8
   929                           	global	dat@Command
   930  0078                     dat@Command:	; 2 bytes @ 0x8
   931  0078                     	ds	1
   932                           	global	?_itoaa
   933  0079                     ?_itoaa:	; 2 bytes @ 0x9
   934                           	global	itoaa@value
   935  0079                     itoaa@value:	; 2 bytes @ 0x9
   936                           	global	strcpy@cp
   937  0079                     strcpy@cp:	; 2 bytes @ 0x9
   938  0079                     	ds	1
   939                           	global	??_initlcd
   940  007A                     ??_initlcd:	; 0 bytes @ 0xA
   941                           	global	??_write
   942  007A                     ??_write:	; 0 bytes @ 0xA
   943                           	global	??_cmd
   944  007A                     ??_cmd:	; 0 bytes @ 0xA
   945                           	global	??_clearlcd
   946  007A                     ??_clearlcd:	; 0 bytes @ 0xA
   947                           	global	??_dat
   948  007A                     ??_dat:	; 0 bytes @ 0xA
   949  007A                     	ds	1
   950                           	global	itoaa@ptr
   951  007B                     itoaa@ptr:	; 1 bytes @ 0xB
   952  007B                     	ds	1
   953                           	global	??_itoaa
   954  007C                     ??_itoaa:	; 0 bytes @ 0xC
   955                           	global	write@i
   956  007C                     write@i:	; 2 bytes @ 0xC
   957  007C                     	ds	2
   958                           	global	??_main
   959  007E                     ??_main:	; 0 bytes @ 0xE
   960                           	global	??_init_fun
   961  007E                     ??_init_fun:	; 0 bytes @ 0xE
   962                           psect	cstackBANK0,class=BANK0,space=1
   963                           global __pcstackBANK0
   964  0020                     __pcstackBANK0:
   965                           	global	itoaa@count
   966  0020                     itoaa@count:	; 2 bytes @ 0x0
   967                           	global	setLCD@vbool
   968  0020                     setLCD@vbool:	; 32 bytes @ 0x0
   969  0020                     	ds	2
   970                           	global	itoaa@temp
   971  0022                     itoaa@temp:	; 2 bytes @ 0x2
   972  0022                     	ds	30
   973                           	global	setLCD@i
   974  0040                     setLCD@i:	; 2 bytes @ 0x20
   975  0040                     	ds	2
   976                           	global	?_write
   977  0042                     ?_write:	; 0 bytes @ 0x22
   978                           	global	write@str
   979  0042                     write@str:	; 2 bytes @ 0x22
   980  0042                     	ds	2
   981                           	global	write@line
   982  0044                     write@line:	; 2 bytes @ 0x24
   983  0044                     	ds	2
   984                           	global	write@erase
   985  0046                     write@erase:	; 2 bytes @ 0x26
   986  0046                     	ds	2
   987                           	global	?_scroll
   988  0048                     ?_scroll:	; 0 bytes @ 0x28
   989                           	global	??_startswitch
   990  0048                     ??_startswitch:	; 0 bytes @ 0x28
   991                           	global	scroll@str
   992  0048                     scroll@str:	; 2 bytes @ 0x28
   993  0048                     	ds	2
   994                           	global	scroll@loops
   995  004A                     scroll@loops:	; 2 bytes @ 0x2A
   996  004A                     	ds	2
   997                           	global	??_scroll
   998  004C                     ??_scroll:	; 0 bytes @ 0x2C
   999  004C                     	ds	3
  1000                           	global	scroll@st
  1001  004F                     scroll@st:	; 2 bytes @ 0x2F
  1002  004F                     	ds	2
  1003                           	global	scroll@en
  1004  0051                     scroll@en:	; 2 bytes @ 0x31
  1005  0051                     	ds	2
  1006                           	global	scroll@startat
  1007  0053                     scroll@startat:	; 2 bytes @ 0x33
  1008  0053                     	ds	2
  1009                           	global	scroll@endat
  1010  0055                     scroll@endat:	; 2 bytes @ 0x35
  1011  0055                     	ds	2
  1012                           	global	scroll@loopn
  1013  0057                     scroll@loopn:	; 2 bytes @ 0x37
  1014  0057                     	ds	2
  1015                           	global	scroll@len
  1016  0059                     scroll@len:	; 2 bytes @ 0x39
  1017  0059                     	ds	2
  1018                           	global	scroll@i
  1019  005B                     scroll@i:	; 2 bytes @ 0x3B
  1020  005B                     	ds	2
  1021                           	global	??_getlogicseq
  1022  005D                     ??_getlogicseq:	; 0 bytes @ 0x3D
  1023  005D                     	ds	4
  1024 ;;Data sizes: Strings 260, constant 2, data 30, bss 30, persistent 0 stack 0
  1025 ;;Auto spaces:   Size  Autos    Used
  1026 ;; COMMON          14     14      14
  1027 ;; BANK0           80     65      76
  1028 ;; BANK1           80     58      76
  1029 ;; BANK3           96      0      31
  1030 ;; BANK2           96      0       0
  1031                           
  1032 ;;
  1033 ;; Pointer list with targets:
  1034                           
  1035 ;; ?___awmod	int  size(1) Largest target is 0
  1036 ;;
  1037 ;; ?___awdiv	int  size(1) Largest target is 0
  1038 ;;
  1039 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1040 ;;
  1041 ;; ?_strcat	PTR unsigned char  size(2) Largest target is 5
  1042 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1043 ;;
  1044 ;; ?_itoaa	int  size(1) Largest target is 0
  1045 ;;
  1046 ;; ?_strcmp	int  size(1) Largest target is 0
  1047 ;;
  1048 ;; ?_strcpy	PTR unsigned char  size(2) Largest target is 32
  1049 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1050 ;;		 -> lo(BANK0[5]), plo(BANK3[5]), 
  1051 ;;
  1052 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 20
  1053 ;;		 -> STR_15(CODE[1]), STR_14(CODE[20]), STR_12(CODE[1]), STR_11(CODE[20]), 
  1054 ;;		 -> STR_9(CODE[1]), STR_8(CODE[20]), STR_2(CODE[4]), lo(BANK0[5]), 
  1055 ;;
  1056 ;; strcpy@to	PTR unsigned char  size(2) Largest target is 32
  1057 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1058 ;;		 -> lo(BANK0[5]), plo(BANK3[5]), 
  1059 ;;
  1060 ;; strcpy@cp	PTR unsigned char  size(2) Largest target is 32
  1061 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1062 ;;		 -> lo(BANK0[5]), plo(BANK3[5]), 
  1063 ;;
  1064 ;; strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
  1065 ;;		 -> STR_32(CODE[5]), STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[5]), 
  1066 ;;		 -> STR_28(CODE[5]), STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[5]), 
  1067 ;;		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[5]), 
  1068 ;;		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), 
  1069 ;;		 -> plo(BANK3[5]), 
  1070 ;;
  1071 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
  1072 ;;		 -> lo(BANK0[5]), 
  1073 ;;
  1074 ;; strcat@from	PTR const unsigned char  size(1) Largest target is 16
  1075 ;;		 -> getlogicseq@snum(BANK1[16]), 
  1076 ;;
  1077 ;; strcat@to	PTR unsigned char  size(2) Largest target is 5
  1078 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1079 ;;
  1080 ;; strcat@cp	PTR unsigned char  size(2) Largest target is 5
  1081 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1082 ;;
  1083 ;; scroll@str	PTR unsigned char  size(2) Largest target is 38
  1084 ;;		 -> STR_4(CODE[38]), 
  1085 ;;
  1086 ;; write@str	PTR unsigned char  size(2) Largest target is 38
  1087 ;;		 -> STR_16(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), getlogicseq@str(BANK1[32]), 
  1088 ;;		 -> STR_7(CODE[27]), STR_6(CODE[8]), STR_5(CODE[15]), STR_4(CODE[38]), 
  1089 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), STR_3(CODE[17]), 
  1090 ;;		 -> lo(BANK0[5]), STR_1(CODE[11]), 
  1091 ;;
  1092 ;; itoaa@ptr	PTR unsigned char  size(1) Largest target is 16
  1093 ;;		 -> getlogicseq@snum(BANK1[16]), 
  1094 ;;
  1095 ;; sp__strcat	PTR unsigned char  size(2) Largest target is 5
  1096 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1097 ;;
  1098 ;; sp__strcpy	PTR unsigned char  size(2) Largest target is 32
  1099 ;;		 -> getlogicseq@str(BANK1[32]), logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1100 ;;		 -> lo(BANK0[5]), plo(BANK3[5]), 
  1101 ;;
  1102 ;; check@logic	PTR unsigned char  size(2) Largest target is 5
  1103 ;;		 -> logic_d3(BANK3[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1104 ;;
  1105 ;; check@input	PTR unsigned char  size(1) Largest target is 5
  1106 ;;		 -> lo(BANK0[5]), 
  1107 ;;
  1108                           
  1109                           
  1110 ;;
  1111 ;; Critical Paths under _main in COMMON
  1112 ;;
  1113 ;;   _getlogicseq->_write
  1114 ;;   _startswitch->_write
  1115 ;;   _scroll->_write
  1116 ;;   _init_fun->_write
  1117 ;;   _write->_cmd
  1118 ;;   _write->_dat
  1119 ;;   _clearlcd->_cmd
  1120 ;;   _scan->_actrow
  1121 ;;   _initlcd->_cmd
  1122 ;;   _actrow->_delay
  1123 ;;   _dat->_setLCD
  1124 ;;   _cmd->_setLCD
  1125 ;;   _itoaa->___awdiv
  1126 ;;
  1127 ;; Critical Paths under _main in BANK0
  1128 ;;
  1129 ;;   _main->_getlogicseq
  1130 ;;   _getlogicseq->_scroll
  1131 ;;   _startswitch->_write
  1132 ;;   _scroll->_write
  1133 ;;   _init_fun->_write
  1134 ;;   _dat->_setLCD
  1135 ;;   _cmd->_setLCD
  1136 ;;
  1137 ;; Critical Paths under _main in BANK1
  1138 ;;
  1139 ;;   _main->_getlogicseq
  1140 ;;
  1141 ;; Critical Paths under _main in BANK3
  1142 ;;
  1143 ;;   None.
  1144 ;;
  1145 ;; Critical Paths under _main in BANK2
  1146 ;;
  1147 ;;   None.
  1148                           
  1149 ;;
  1150 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1151 ;;
  1152                           
  1153 ;;
  1154 ;;Call Graph Tables:
  1155 ;;
  1156 ;; ---------------------------------------------------------------------------------
  1157 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (0) _main                                                 0     0      0    8505
  1160 ;;                            _initlcd
  1161 ;;                         _initkeypad
  1162 ;;                        _getlogicseq
  1163 ;; ---------------------------------------------------------------------------------
  1164 ;; (1) _getlogicseq                                         62    62      0    8141
  1165 ;;                                             61 BANK0      4     4      0
  1166 ;;                                              0 BANK1     58    58      0
  1167 ;;                             _scroll
  1168 ;;                              _write
  1169 ;;                               _scan
  1170 ;;                        _startswitch
  1171 ;;                              _delay
  1172 ;;                             _strcpy
  1173 ;;                              _itoaa
  1174 ;;                             _strcat
  1175 ;; ---------------------------------------------------------------------------------
  1176 ;; (2) _startswitch                                          1     1      0    2749
  1177 ;;                                             40 BANK0      1     1      0
  1178 ;;                           _init_fun
  1179 ;;                             _strcpy
  1180 ;;                              _write
  1181 ;;                             _strcmp
  1182 ;;                              _check
  1183 ;; ---------------------------------------------------------------------------------
  1184 ;; (2) _scroll                                              53    49      4    1820
  1185 ;;                                             40 BANK0     21    17      4
  1186 ;;                              _write
  1187 ;;                              _delay
  1188 ;;                                _cmd
  1189 ;; ---------------------------------------------------------------------------------
  1190 ;; (3) _init_fun                                             0     0      0    1226
  1191 ;;                              _write
  1192 ;; ---------------------------------------------------------------------------------
  1193 ;; (3) _write                                               10     4      6    1226
  1194 ;;                                             10 COMMON     4     4      0
  1195 ;;                                             34 BANK0      6     0      6
  1196 ;;                           _clearlcd
  1197 ;;                                _cmd
  1198 ;;                                _dat
  1199 ;; ---------------------------------------------------------------------------------
  1200 ;; (4) _clearlcd                                             0     0      0     364
  1201 ;;                                _cmd
  1202 ;; ---------------------------------------------------------------------------------
  1203 ;; (2) _scan                                                 2     0      2     110
  1204 ;;                                              4 COMMON     2     0      2
  1205 ;;                             _actrow
  1206 ;; ---------------------------------------------------------------------------------
  1207 ;; (1) _initlcd                                              0     0      0     364
  1208 ;;                                _cmd
  1209 ;; ---------------------------------------------------------------------------------
  1210 ;; (3) _actrow                                               2     0      2     110
  1211 ;;                                              2 COMMON     2     0      2
  1212 ;;                           _resetout
  1213 ;;                              _delay
  1214 ;; ---------------------------------------------------------------------------------
  1215 ;; (4) _dat                                                  2     0      2     364
  1216 ;;                                              8 COMMON     2     0      2
  1217 ;;                             _setLCD
  1218 ;;                              _delay
  1219 ;; ---------------------------------------------------------------------------------
  1220 ;; (4) _cmd                                                  2     0      2     364
  1221 ;;                                              8 COMMON     2     0      2
  1222 ;;                             _setLCD
  1223 ;;                              _delay
  1224 ;; ---------------------------------------------------------------------------------
  1225 ;; (2) _itoaa                                                8     5      3    1078
  1226 ;;                                              9 COMMON     4     1      3
  1227 ;;                                              0 BANK0      4     4      0
  1228 ;;                             ___wmul
  1229 ;;                            ___awdiv
  1230 ;;                            ___awmod
  1231 ;; ---------------------------------------------------------------------------------
  1232 ;; (3) ___awmod                                              7     3      4     296
  1233 ;;                                              0 COMMON     7     3      4
  1234 ;; ---------------------------------------------------------------------------------
  1235 ;; (3) ___awdiv                                              9     5      4     300
  1236 ;;                                              0 COMMON     9     5      4
  1237 ;; ---------------------------------------------------------------------------------
  1238 ;; (3) ___wmul                                               6     2      4      92
  1239 ;;                                              0 COMMON     6     2      4
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (4) _resetout                                             0     0      0       0
  1242 ;; ---------------------------------------------------------------------------------
  1243 ;; (6) _setLCD                                              42    40      2     320
  1244 ;;                                              0 COMMON     8     6      2
  1245 ;;                                              0 BANK0     34    34      0
  1246 ;; ---------------------------------------------------------------------------------
  1247 ;; (2) _strcat                                               8     5      3      96
  1248 ;;                                              0 COMMON     8     5      3
  1249 ;; ---------------------------------------------------------------------------------
  1250 ;; (2) _delay                                                2     0      2      22
  1251 ;;                                              0 COMMON     2     0      2
  1252 ;; ---------------------------------------------------------------------------------
  1253 ;; (4) _strcmp                                               8     6      2      89
  1254 ;;                                              0 COMMON     8     6      2
  1255 ;; ---------------------------------------------------------------------------------
  1256 ;; (3) _strcpy                                              11     7      4      73
  1257 ;;                                              0 COMMON    11     7      4
  1258 ;; ---------------------------------------------------------------------------------
  1259 ;; (3) _check                                                8     6      2     135
  1260 ;;                                              0 COMMON     8     6      2
  1261 ;; ---------------------------------------------------------------------------------
  1262 ;; (1) _initkeypad                                           0     0      0       0
  1263 ;; ---------------------------------------------------------------------------------
  1264 ;; Estimated maximum stack depth 6
  1265 ;; ---------------------------------------------------------------------------------
  1266                           
  1267 ;; Call Graph Graphs:
  1268                           
  1269 ;; _main (ROOT)
  1270 ;;   _initlcd
  1271 ;;     _cmd
  1272 ;;       _setLCD
  1273 ;;       _delay
  1274 ;;   _initkeypad
  1275 ;;   _getlogicseq
  1276 ;;     _scroll
  1277 ;;       _write
  1278 ;;         _clearlcd
  1279 ;;           _cmd
  1280 ;;             _setLCD
  1281 ;;             _delay
  1282 ;;         _cmd
  1283 ;;           _setLCD
  1284 ;;           _delay
  1285 ;;         _dat
  1286 ;;           _setLCD
  1287 ;;           _delay
  1288 ;;       _delay
  1289 ;;       _cmd
  1290 ;;         _setLCD
  1291 ;;         _delay
  1292 ;;     _write
  1293 ;;       _clearlcd
  1294 ;;         _cmd
  1295 ;;           _setLCD
  1296 ;;           _delay
  1297 ;;       _cmd
  1298 ;;         _setLCD
  1299 ;;         _delay
  1300 ;;       _dat
  1301 ;;         _setLCD
  1302 ;;         _delay
  1303 ;;     _scan
  1304 ;;       _actrow
  1305 ;;         _resetout
  1306 ;;         _delay
  1307 ;;     _startswitch
  1308 ;;       _init_fun
  1309 ;;         _write
  1310 ;;           _clearlcd
  1311 ;;             _cmd
  1312 ;;               _setLCD
  1313 ;;               _delay
  1314 ;;           _cmd
  1315 ;;             _setLCD
  1316 ;;             _delay
  1317 ;;           _dat
  1318 ;;             _setLCD
  1319 ;;             _delay
  1320 ;;       _strcpy
  1321 ;;       _write
  1322 ;;         _clearlcd
  1323 ;;           _cmd
  1324 ;;             _setLCD
  1325 ;;             _delay
  1326 ;;         _cmd
  1327 ;;           _setLCD
  1328 ;;           _delay
  1329 ;;         _dat
  1330 ;;           _setLCD
  1331 ;;           _delay
  1332 ;;       _strcmp
  1333 ;;       _check
  1334 ;;     _delay
  1335 ;;     _strcpy
  1336 ;;     _itoaa
  1337 ;;       ___wmul
  1338 ;;       ___awdiv
  1339 ;;       ___awmod
  1340 ;;     _strcat
  1341 ;;
  1342                           
  1343 ;; Address spaces:
  1344                           
  1345 ;;Name               Size   Autos  Total    Cost      Usage
  1346 ;;BANK3               60      0      1F       9       32.3%
  1347 ;;BITBANK3            60      0       0       8        0.0%
  1348 ;;SFR3                 0      0       0       4        0.0%
  1349 ;;BITSFR3              0      0       0       4        0.0%
  1350 ;;BANK2               60      0       0      11        0.0%
  1351 ;;BITBANK2            60      0       0      10        0.0%
  1352 ;;SFR2                 0      0       0       5        0.0%
  1353 ;;BITSFR2              0      0       0       5        0.0%
  1354 ;;SFR1                 0      0       0       2        0.0%
  1355 ;;BITSFR1              0      0       0       2        0.0%
  1356 ;;BANK1               50     3A      4C       7       95.0%
  1357 ;;BITBANK1            50      0       0       6        0.0%
  1358 ;;CODE                 0      0       0       0        0.0%
  1359 ;;DATA                 0      0      CD      12        0.0%
  1360 ;;ABS                  0      0      C5       3        0.0%
  1361 ;;NULL                 0      0       0       0        0.0%
  1362 ;;STACK                0      0       8       2        0.0%
  1363 ;;BANK0               50     41      4C       5       95.0%
  1364 ;;BITBANK0            50      0       0       4        0.0%
  1365 ;;SFR0                 0      0       0       1        0.0%
  1366 ;;BITSFR0              0      0       0       1        0.0%
  1367 ;;COMMON               E      E       E       1      100.0%
  1368 ;;BITCOMMON            E      0       0       0        0.0%
  1369 ;;EEDATA             100      0       0       0        0.0%
  1370                           
  1371                           	global	_main
  1372                           psect	maintext,global,class=CODE,delta=2
  1373                           global __pmaintext
  1374  0B98                     __pmaintext:
  1375                           
  1376 ;; *************** function _main *****************
  1377 ;; Defined at:
  1378 ;;		line 83 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  2  694[COMMON] int 
  1385 ;; Registers used:
  1386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 17F/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1392 ;;      Params:         0       0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0
  1395 ;;      Totals:         0       0       0       0       0
  1396 ;;Total ram usage:        0 bytes
  1397 ;; Hardware stack levels required when called:    8
  1398 ;; This function calls:
  1399 ;;		_initlcd
  1400 ;;		_initkeypad
  1401 ;;		_getlogicseq
  1402 ;; This function is called by:
  1403 ;;		Startup code after reset
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           psect	maintext
  1407                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1408                           	line	83
  1409                           	global	__size_of_main
  1410  0019                     	__size_of_main	equ	__end_of_main-_main
  1411                           	
  1412  0B98                     _main:	
  1413                           	opt	stack 0
  1414                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1415                           	line	87
  1416                           	
  1417  0B98                     l3557:	
  1418                           ;prev11.c: 87: TRISB = 0b00001111;
  1419  0B98  300F               	movlw	(0Fh)
  1420  0B99  1683               	bsf	status, 5	;RP0=1, select bank1
  1421  0B9A  1303               	bcf	status, 6	;RP1=0, select bank1
  1422  0B9B  0086               	movwf	(134)^080h	;volatile
  1423                           	line	89
  1424                           	
  1425  0B9C                     l3559:	
  1426                           ;prev11.c: 89: initlcd();
  1427  0B9C  120A  158A  244B   	fcall	_initlcd
              120A  158A         
  1428                           	line	90
  1429                           	
  1430  0BA1                     l3561:	
  1431                           ;prev11.c: 90: initkeypad();
  1432  0BA1  120A  158A  234A   	fcall	_initkeypad
              120A  158A         
  1433  0BA6  2BA7               	goto	l3563
  1434                           	line	93
  1435                           ;prev11.c: 93: while(1){
  1436                           	
  1437  0BA7                     l695:	
  1438                           	line	95
  1439                           	
  1440  0BA7                     l3563:	
  1441                           ;prev11.c: 95: getlogicseq();
  1442  0BA7  120A  118A  2420   	fcall	_getlogicseq
              120A  158A         
  1443  0BAC  2BA7               	goto	l3563
  1444                           	line	96
  1445                           	
  1446  0BAD                     l696:	
  1447                           	line	93
  1448  0BAD  2BA7               	goto	l3563
  1449                           	
  1450  0BAE                     l697:	
  1451                           	line	102
  1452                           	
  1453  0BAE                     l698:	
  1454                           	global	start
  1455  0BAE  120A  118A  2800   	ljmp	start
  1456                           	opt stack 0
  1457                           GLOBAL	__end_of_main
  1458  0BB1                     	__end_of_main:
  1459 ;; =============== function _main ends ============
  1460                           
  1461                           	signat	_main,90
  1462                           	global	_getlogicseq
  1463                           psect	text538,local,class=CODE,delta=2
  1464                           global __ptext538
  1465  0420                     __ptext538:
  1466                           
  1467 ;; *************** function _getlogicseq *****************
  1468 ;; Defined at:
  1469 ;;		line 198 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  str            32    0[BANK1 ] unsigned char [32]
  1474 ;;  snum           16   34[BANK1 ] unsigned char [16]
  1475 ;;  num             2   56[BANK1 ] int 
  1476 ;;  ccount          2   54[BANK1 ] int 
  1477 ;;  wf              2   52[BANK1 ] int 
  1478 ;;  nf              2   50[BANK1 ] int 
  1479 ;;  bf              2   32[BANK1 ] int 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;		None               void
  1482 ;; Registers used:
  1483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         0       0       0       0       0
  1490 ;;      Locals:         0       0      58       0       0
  1491 ;;      Temps:          0       4       0       0       0
  1492 ;;      Totals:         0       4      58       0       0
  1493 ;;Total ram usage:       62 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    7
  1496 ;; This function calls:
  1497 ;;		_scroll
  1498 ;;		_write
  1499 ;;		_scan
  1500 ;;		_startswitch
  1501 ;;		_delay
  1502 ;;		_strcpy
  1503 ;;		_itoaa
  1504 ;;		_strcat
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           psect	text538
  1510                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  1511                           	line	198
  1512                           	global	__size_of_getlogicseq
  1513  03E0                     	__size_of_getlogicseq	equ	__end_of_getlogicseq-_getlogicseq
  1514                           	
  1515  0420                     _getlogicseq:	
  1516                           	opt	stack 0
  1517                           ; Regs used in _getlogicseq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1518                           	line	201
  1519                           	
  1520  0420                     l3361:	
  1521                           ;prev11.c: 201: scroll("WELCOME ! TO PROGRAMABLE HOME AUTMATN",0);
  1522  0420  3014               	movlw	low(STR_4|8000h)
  1523  0421  1283               	bcf	status, 5	;RP0=0, select bank0
  1524  0422  1303               	bcf	status, 6	;RP1=0, select bank0
  1525  0423  00C8               	movwf	(?_scroll)
  1526  0424  3088               	movlw	high(STR_4|8000h)
  1527  0425  00C9               	movwf	((?_scroll))+1
  1528  0426  3000               	movlw	low(0)
  1529  0427  00CA               	movwf	0+(?_scroll)+02h
  1530  0428  3000               	movlw	high(0)
  1531  0429  00CB               	movwf	(0+(?_scroll)+02h)+1
  1532  042A  120A  158A  272D   	fcall	_scroll
              120A  118A         
  1533                           	line	206
  1534                           	
  1535  042F                     l3363:	
  1536                           ;prev11.c: 205: int num ;
  1537                           ;prev11.c: 206: char snum[16]="";
  1538  042F  30C2               	movlw	(getlogicseq@snum)&0ffh
  1539  0430  0084               	movwf	fsr0
  1540  0431  3090               	movlw	low(getlogicseq@F1268)
  1541  0432  1283               	bcf	status, 5	;RP0=0, select bank0
  1542  0433  1303               	bcf	status, 6	;RP1=0, select bank0
  1543  0434  00DD               	movwf	(??_getlogicseq+0)+0
  1544  0435  0804               	movf	fsr0,w
  1545  0436  00DE               	movwf	((??_getlogicseq+0)+0+1)
  1546  0437  3010               	movlw	16
  1547  0438  00DF               	movwf	((??_getlogicseq+0)+0+2)
  1548  0439                     u4460:
  1549  0439  085D               	movf	(??_getlogicseq+0)+0,w
  1550  043A  0084               	movwf	fsr0
  1551  043B  1783               	bsf	status, 7	;select IRP bank3
  1552                           	
  1553  043C  0800               	movf	indf,w
  1554  043D  00E0               	movwf	((??_getlogicseq+0)+0+3)
  1555  043E  0ADD               	incf	(??_getlogicseq+0)+0,f
  1556  043F  085E               	movf	((??_getlogicseq+0)+0+1),w
  1557  0440  0084               	movwf	fsr0
  1558  0441  1383               	bcf	status, 7	;select IRP bank1
  1559                           	
  1560  0442  0860               	movf	((??_getlogicseq+0)+0+3),w
  1561  0443  0080               	movwf	indf
  1562  0444  0ADE               	incf	((??_getlogicseq+0)+0+1),f
  1563  0445  0BDF               	decfsz	((??_getlogicseq+0)+0+2),f
  1564  0446  2C39               	goto	u4460
  1565                           	line	207
  1566                           	
  1567  0447                     l3365:	
  1568                           ;prev11.c: 207: int wf=0;
  1569  0447  1683               	bsf	status, 5	;RP0=1, select bank1
  1570  0448  1303               	bcf	status, 6	;RP1=0, select bank1
  1571  0449  01D4               	clrf	(getlogicseq@wf)^080h
  1572  044A  01D5               	clrf	(getlogicseq@wf+1)^080h
  1573                           	line	208
  1574                           	
  1575  044B                     l3367:	
  1576                           ;prev11.c: 208: int nf=0;
  1577  044B  01D2               	clrf	(getlogicseq@nf)^080h
  1578  044C  01D3               	clrf	(getlogicseq@nf+1)^080h
  1579                           	line	209
  1580                           	
  1581  044D                     l3369:	
  1582                           ;prev11.c: 209: int bf=0;
  1583  044D  01C0               	clrf	(getlogicseq@bf)^080h
  1584  044E  01C1               	clrf	(getlogicseq@bf+1)^080h
  1585                           	line	210
  1586                           	
  1587  044F                     l3371:	
  1588                           ;prev11.c: 210: int ccount=0;
  1589  044F  01D6               	clrf	(getlogicseq@ccount)^080h
  1590  0450  01D7               	clrf	(getlogicseq@ccount+1)^080h
  1591                           	line	214
  1592                           	
  1593  0451                     l3373:	
  1594                           ;prev11.c: 211: char str[32];
  1595                           ;prev11.c: 214: write("1.SWT  2.REPRG",1,1);
  1596  0451  30A2               	movlw	low(STR_5|8000h)
  1597  0452  1283               	bcf	status, 5	;RP0=0, select bank0
  1598  0453  1303               	bcf	status, 6	;RP1=0, select bank0
  1599  0454  00C2               	movwf	(?_write)
  1600  0455  3088               	movlw	high(STR_5|8000h)
  1601  0456  00C3               	movwf	((?_write))+1
  1602  0457  3001               	movlw	low(01h)
  1603  0458  00C4               	movwf	0+(?_write)+02h
  1604  0459  3000               	movlw	high(01h)
  1605  045A  00C5               	movwf	(0+(?_write)+02h)+1
  1606  045B  3001               	movlw	low(01h)
  1607  045C  00C6               	movwf	0+(?_write)+04h
  1608  045D  3000               	movlw	high(01h)
  1609  045E  00C7               	movwf	(0+(?_write)+04h)+1
  1610  045F  120A  158A  25EF   	fcall	_write
              120A  118A         
  1611                           	line	215
  1612                           	
  1613  0464                     l3375:	
  1614                           ;prev11.c: 215: write("3.RESET",2,0);
  1615  0464  30BC               	movlw	low(STR_6|8000h)
  1616  0465  1283               	bcf	status, 5	;RP0=0, select bank0
  1617  0466  1303               	bcf	status, 6	;RP1=0, select bank0
  1618  0467  00C2               	movwf	(?_write)
  1619  0468  3088               	movlw	high(STR_6|8000h)
  1620  0469  00C3               	movwf	((?_write))+1
  1621  046A  3002               	movlw	low(02h)
  1622  046B  00C4               	movwf	0+(?_write)+02h
  1623  046C  3000               	movlw	high(02h)
  1624  046D  00C5               	movwf	(0+(?_write)+02h)+1
  1625  046E  3000               	movlw	low(0)
  1626  046F  00C6               	movwf	0+(?_write)+04h
  1627  0470  3000               	movlw	high(0)
  1628  0471  00C7               	movwf	(0+(?_write)+04h)+1
  1629  0472  120A  158A  25EF   	fcall	_write
              120A  118A         
  1630  0477  2C78               	goto	l3377
  1631                           	line	216
  1632                           ;prev11.c: 216: while(1)
  1633                           	
  1634  0478                     l726:	
  1635                           	line	218
  1636                           	
  1637  0478                     l3377:	
  1638                           ;prev11.c: 217: {
  1639                           ;prev11.c: 218: if(retm==1)
  1640  0478  3001               	movlw	01h
  1641  0479  1683               	bsf	status, 5	;RP0=1, select bank1
  1642  047A  1303               	bcf	status, 6	;RP1=0, select bank1
  1643  047B  066A               	xorwf	(_retm)^080h,w
  1644  047C  046B               	iorwf	(_retm+1)^080h,w
  1645  047D  1D03               	skipz
  1646  047E  2C80               	goto	u4471
  1647  047F  2C81               	goto	u4470
  1648  0480                     u4471:
  1649  0480  2C8B               	goto	l3383
  1650  0481                     u4470:
  1651                           	line	221
  1652                           	
  1653  0481                     l3379:	
  1654                           ;prev11.c: 219: {
  1655                           ;prev11.c: 221: retm=0;
  1656  0481  01EA               	clrf	(_retm)^080h
  1657  0482  01EB               	clrf	(_retm+1)^080h
  1658                           	line	222
  1659                           ;prev11.c: 222: f1=0; f2=0; f3=0;
  1660  0483  01E4               	clrf	(_f1)^080h
  1661  0484  01E5               	clrf	(_f1+1)^080h
  1662  0485  01E6               	clrf	(_f2)^080h
  1663  0486  01E7               	clrf	(_f2+1)^080h
  1664  0487  01E8               	clrf	(_f3)^080h
  1665  0488  01E9               	clrf	(_f3+1)^080h
  1666  0489  2FFF               	goto	l728
  1667                           	line	223
  1668                           	
  1669  048A                     l3381:	
  1670                           ;prev11.c: 223: return;
  1671  048A  2FFF               	goto	l728
  1672                           	line	224
  1673                           	
  1674  048B                     l727:	
  1675                           	line	225
  1676                           	
  1677  048B                     l3383:	
  1678                           ;prev11.c: 224: }
  1679                           ;prev11.c: 225: num=scan();
  1680  048B  120A  118A  20F3   	fcall	_scan
              120A  118A         
  1681  0490  0875               	movf	(1+(?_scan)),w
  1682  0491  1683               	bsf	status, 5	;RP0=1, select bank1
  1683  0492  1303               	bcf	status, 6	;RP1=0, select bank1
  1684  0493  01D9               	clrf	(getlogicseq@num+1)^080h
  1685  0494  07D9               	addwf	(getlogicseq@num+1)^080h
  1686  0495  0874               	movf	(0+(?_scan)),w
  1687  0496  01D8               	clrf	(getlogicseq@num)^080h
  1688  0497  07D8               	addwf	(getlogicseq@num)^080h
  1689                           
  1690                           	line	226
  1691                           	
  1692  0498                     l3385:	
  1693                           ;prev11.c: 226: if(num==1)
  1694  0498  3001               	movlw	01h
  1695  0499  0658               	xorwf	(getlogicseq@num)^080h,w
  1696  049A  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1697  049B  1D03               	skipz
  1698  049C  2C9E               	goto	u4481
  1699  049D  2C9F               	goto	u4480
  1700  049E                     u4481:
  1701  049E  2CA7               	goto	l729
  1702  049F                     u4480:
  1703                           	line	228
  1704                           	
  1705  049F                     l3387:	
  1706                           ;prev11.c: 227: {
  1707                           ;prev11.c: 228: f1=1;
  1708  049F  3001               	movlw	low(01h)
  1709  04A0  00E4               	movwf	(_f1)^080h
  1710  04A1  3000               	movlw	high(01h)
  1711  04A2  00E5               	movwf	((_f1)^080h)+1
  1712                           	line	229
  1713                           	
  1714  04A3                     l3389:	
  1715                           ;prev11.c: 229: f2=0;
  1716  04A3  01E6               	clrf	(_f2)^080h
  1717  04A4  01E7               	clrf	(_f2+1)^080h
  1718                           	line	230
  1719                           	
  1720  04A5                     l3391:	
  1721                           ;prev11.c: 230: f3=0;
  1722  04A5  01E8               	clrf	(_f3)^080h
  1723  04A6  01E9               	clrf	(_f3+1)^080h
  1724                           	line	231
  1725                           	
  1726  04A7                     l729:	
  1727                           	line	232
  1728                           ;prev11.c: 231: }
  1729                           ;prev11.c: 232: if(num==2)
  1730  04A7  3002               	movlw	02h
  1731  04A8  0658               	xorwf	(getlogicseq@num)^080h,w
  1732  04A9  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1733  04AA  1D03               	skipz
  1734  04AB  2CAD               	goto	u4491
  1735  04AC  2CAE               	goto	u4490
  1736  04AD                     u4491:
  1737  04AD  2CB6               	goto	l730
  1738  04AE                     u4490:
  1739                           	line	234
  1740                           	
  1741  04AE                     l3393:	
  1742                           ;prev11.c: 233: {
  1743                           ;prev11.c: 234: f1=0;
  1744  04AE  01E4               	clrf	(_f1)^080h
  1745  04AF  01E5               	clrf	(_f1+1)^080h
  1746                           	line	235
  1747                           	
  1748  04B0                     l3395:	
  1749                           ;prev11.c: 235: f2=1;
  1750  04B0  3001               	movlw	low(01h)
  1751  04B1  00E6               	movwf	(_f2)^080h
  1752  04B2  3000               	movlw	high(01h)
  1753  04B3  00E7               	movwf	((_f2)^080h)+1
  1754                           	line	236
  1755                           	
  1756  04B4                     l3397:	
  1757                           ;prev11.c: 236: f3=0;
  1758  04B4  01E8               	clrf	(_f3)^080h
  1759  04B5  01E9               	clrf	(_f3+1)^080h
  1760                           	line	237
  1761                           	
  1762  04B6                     l730:	
  1763                           	line	238
  1764                           ;prev11.c: 237: }
  1765                           ;prev11.c: 238: if(num==3)
  1766  04B6  3003               	movlw	03h
  1767  04B7  0658               	xorwf	(getlogicseq@num)^080h,w
  1768  04B8  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1769  04B9  1D03               	skipz
  1770  04BA  2CBC               	goto	u4501
  1771  04BB  2CBD               	goto	u4500
  1772  04BC                     u4501:
  1773  04BC  2CCA               	goto	l3405
  1774  04BD                     u4500:
  1775                           	line	240
  1776                           	
  1777  04BD                     l3399:	
  1778                           ;prev11.c: 239: {
  1779                           ;prev11.c: 240: f1=0;
  1780  04BD  01E4               	clrf	(_f1)^080h
  1781  04BE  01E5               	clrf	(_f1+1)^080h
  1782                           	line	241
  1783                           ;prev11.c: 241: f2=0;
  1784  04BF  01E6               	clrf	(_f2)^080h
  1785  04C0  01E7               	clrf	(_f2+1)^080h
  1786                           	line	242
  1787                           	
  1788  04C1                     l3401:	
  1789                           ;prev11.c: 242: f3=1;
  1790  04C1  3001               	movlw	low(01h)
  1791  04C2  00E8               	movwf	(_f3)^080h
  1792  04C3  3000               	movlw	high(01h)
  1793  04C4  00E9               	movwf	((_f3)^080h)+1
  1794                           	line	243
  1795                           	
  1796  04C5                     l3403:	
  1797                           ;prev11.c: 243: retm=1;
  1798  04C5  3001               	movlw	low(01h)
  1799  04C6  00EA               	movwf	(_retm)^080h
  1800  04C7  3000               	movlw	high(01h)
  1801  04C8  00EB               	movwf	((_retm)^080h)+1
  1802  04C9  2CCA               	goto	l3405
  1803                           	line	244
  1804                           	
  1805  04CA                     l731:	
  1806                           	line	246
  1807                           	
  1808  04CA                     l3405:	
  1809                           ;prev11.c: 244: }
  1810                           ;prev11.c: 246: if(f1){
  1811  04CA  0865               	movf	(_f1+1)^080h,w
  1812  04CB  0464               	iorwf	(_f1)^080h,w
  1813  04CC  1903               	skipnz
  1814  04CD  2CCF               	goto	u4511
  1815  04CE  2CD0               	goto	u4510
  1816  04CF                     u4511:
  1817  04CF  2CD6               	goto	l3409
  1818  04D0                     u4510:
  1819                           	line	247
  1820                           	
  1821  04D0                     l3407:	
  1822                           ;prev11.c: 247: startswitch();
  1823  04D0  120A  118A  2011   	fcall	_startswitch
              120A  118A         
  1824                           	line	248
  1825                           ;prev11.c: 248: }
  1826  04D5  2C78               	goto	l3377
  1827                           	line	249
  1828                           	
  1829  04D6                     l732:	
  1830                           	
  1831  04D6                     l3409:	
  1832                           ;prev11.c: 249: else if(f2){ f1=0; f2=0; f3=0;
  1833  04D6  1683               	bsf	status, 5	;RP0=1, select bank1
  1834  04D7  1303               	bcf	status, 6	;RP1=0, select bank1
  1835  04D8  0867               	movf	(_f2+1)^080h,w
  1836  04D9  0466               	iorwf	(_f2)^080h,w
  1837  04DA  1903               	skipnz
  1838  04DB  2CDD               	goto	u4521
  1839  04DC  2CDE               	goto	u4520
  1840  04DD                     u4521:
  1841  04DD  2CE6               	goto	l3415
  1842  04DE                     u4520:
  1843                           	
  1844  04DE                     l3411:	
  1845  04DE  01E4               	clrf	(_f1)^080h
  1846  04DF  01E5               	clrf	(_f1+1)^080h
  1847  04E0  01E6               	clrf	(_f2)^080h
  1848  04E1  01E7               	clrf	(_f2+1)^080h
  1849  04E2  01E8               	clrf	(_f3)^080h
  1850  04E3  01E9               	clrf	(_f3+1)^080h
  1851                           	line	250
  1852                           ;prev11.c: 250: goto START_SEQ;
  1853  04E4  2CFC               	goto	l3421
  1854                           	line	251
  1855                           	
  1856  04E5                     l3413:	
  1857                           ;prev11.c: 251: }
  1858  04E5  2C78               	goto	l3377
  1859                           	line	252
  1860                           	
  1861  04E6                     l734:	
  1862                           	
  1863  04E6                     l3415:	
  1864                           ;prev11.c: 252: else if(f3){ f1=0; f2=0; f3=0;
  1865  04E6  0869               	movf	(_f3+1)^080h,w
  1866  04E7  0468               	iorwf	(_f3)^080h,w
  1867  04E8  1903               	skipnz
  1868  04E9  2CEB               	goto	u4531
  1869  04EA  2CEC               	goto	u4530
  1870  04EB                     u4531:
  1871  04EB  2C78               	goto	l3377
  1872  04EC                     u4530:
  1873                           	
  1874  04EC                     l3417:	
  1875  04EC  01E4               	clrf	(_f1)^080h
  1876  04ED  01E5               	clrf	(_f1+1)^080h
  1877  04EE  01E6               	clrf	(_f2)^080h
  1878  04EF  01E7               	clrf	(_f2+1)^080h
  1879  04F0  01E8               	clrf	(_f3)^080h
  1880  04F1  01E9               	clrf	(_f3+1)^080h
  1881                           	line	253
  1882                           	
  1883  04F2                     l3419:	
  1884                           ;prev11.c: 253: retm=1;
  1885  04F2  3001               	movlw	low(01h)
  1886  04F3  00EA               	movwf	(_retm)^080h
  1887  04F4  3000               	movlw	high(01h)
  1888  04F5  00EB               	movwf	((_retm)^080h)+1
  1889  04F6  2C78               	goto	l3377
  1890                           	line	255
  1891                           	
  1892  04F7                     l737:	
  1893  04F7  2C78               	goto	l3377
  1894                           	line	256
  1895                           	
  1896  04F8                     l736:	
  1897  04F8  2C78               	goto	l3377
  1898                           	
  1899  04F9                     l733:	
  1900  04F9  2C78               	goto	l3377
  1901                           	
  1902  04FA                     l738:	
  1903                           	line	216
  1904  04FA  2C78               	goto	l3377
  1905                           	
  1906  04FB                     l739:	
  1907  04FB  2CFC               	goto	l3421
  1908                           	line	259
  1909                           ;prev11.c: 255: }
  1910                           ;prev11.c: 256: }
  1911                           ;prev11.c: 259: START_SEQ:
  1912                           	
  1913  04FC                     l735:	
  1914                           	line	260
  1915                           	
  1916  04FC                     l3421:	
  1917                           ;prev11.c: 260: write("Press 2. - Skip for Device",1,1);
  1918  04FC  303A               	movlw	low(STR_7|8000h)
  1919  04FD  1283               	bcf	status, 5	;RP0=0, select bank0
  1920  04FE  1303               	bcf	status, 6	;RP1=0, select bank0
  1921  04FF  00C2               	movwf	(?_write)
  1922  0500  3088               	movlw	high(STR_7|8000h)
  1923  0501  00C3               	movwf	((?_write))+1
  1924  0502  3001               	movlw	low(01h)
  1925  0503  00C4               	movwf	0+(?_write)+02h
  1926  0504  3000               	movlw	high(01h)
  1927  0505  00C5               	movwf	(0+(?_write)+02h)+1
  1928  0506  3001               	movlw	low(01h)
  1929  0507  00C6               	movwf	0+(?_write)+04h
  1930  0508  3000               	movlw	high(01h)
  1931  0509  00C7               	movwf	(0+(?_write)+04h)+1
  1932  050A  120A  158A  25EF   	fcall	_write
              120A  118A         
  1933                           	line	261
  1934                           	
  1935  050F                     l3423:	
  1936                           ;prev11.c: 261: delay(5000);
  1937  050F  3088               	movlw	low(01388h)
  1938  0510  00F0               	movwf	(?_delay)
  1939  0511  3013               	movlw	high(01388h)
  1940  0512  00F1               	movwf	((?_delay))+1
  1941  0513  120A  158A  2384   	fcall	_delay
              120A  118A         
  1942                           	line	263
  1943                           	
  1944  0518                     l3425:	
  1945                           ;prev11.c: 263: wf=0;ccount=0;
  1946  0518  1683               	bsf	status, 5	;RP0=1, select bank1
  1947  0519  1303               	bcf	status, 6	;RP1=0, select bank1
  1948  051A  01D4               	clrf	(getlogicseq@wf)^080h
  1949  051B  01D5               	clrf	(getlogicseq@wf+1)^080h
  1950                           	
  1951  051C                     l3427:	
  1952  051C  01D6               	clrf	(getlogicseq@ccount)^080h
  1953  051D  01D7               	clrf	(getlogicseq@ccount+1)^080h
  1954                           	line	264
  1955                           	
  1956  051E                     l3429:	
  1957                           ;prev11.c: 264: strcpy(str,"Enter Logic DEV1:  ");
  1958  051E  30A0               	movlw	(getlogicseq@str&0ffh)
  1959  051F  00F0               	movwf	(?_strcpy)
  1960  0520  3000               	movlw	(0x1/2)
  1961  0521  00F1               	movwf	(?_strcpy+1)
  1962  0522  3055               	movlw	low(STR_8|8000h)
  1963  0523  00F2               	movwf	0+(?_strcpy)+02h
  1964  0524  3088               	movlw	high(STR_8|8000h)
  1965  0525  00F3               	movwf	(0+(?_strcpy)+02h)+1
  1966  0526  120A  158A  2475   	fcall	_strcpy
              120A  118A         
  1967                           	line	265
  1968                           	
  1969  052B                     l3431:	
  1970                           ;prev11.c: 265: write(str,1,1);
  1971  052B  30A0               	movlw	(getlogicseq@str&0ffh)
  1972  052C  1283               	bcf	status, 5	;RP0=0, select bank0
  1973  052D  1303               	bcf	status, 6	;RP1=0, select bank0
  1974  052E  00C2               	movwf	(?_write)
  1975  052F  3000               	movlw	(0x1/2)
  1976  0530  00C3               	movwf	(?_write+1)
  1977  0531  3001               	movlw	low(01h)
  1978  0532  00C4               	movwf	0+(?_write)+02h
  1979  0533  3000               	movlw	high(01h)
  1980  0534  00C5               	movwf	(0+(?_write)+02h)+1
  1981  0535  3001               	movlw	low(01h)
  1982  0536  00C6               	movwf	0+(?_write)+04h
  1983  0537  3000               	movlw	high(01h)
  1984  0538  00C7               	movwf	(0+(?_write)+04h)+1
  1985  0539  120A  158A  25EF   	fcall	_write
              120A  118A         
  1986                           	line	266
  1987                           	
  1988  053E                     l3433:	
  1989                           ;prev11.c: 266: write(logic_d1,2,0);
  1990  053E  30DA               	movlw	(_logic_d1&0ffh)
  1991  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  1992  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  1993  0541  00C2               	movwf	(?_write)
  1994  0542  3000               	movlw	(0x1/2)
  1995  0543  00C3               	movwf	(?_write+1)
  1996  0544  3002               	movlw	low(02h)
  1997  0545  00C4               	movwf	0+(?_write)+02h
  1998  0546  3000               	movlw	high(02h)
  1999  0547  00C5               	movwf	(0+(?_write)+02h)+1
  2000  0548  3000               	movlw	low(0)
  2001  0549  00C6               	movwf	0+(?_write)+04h
  2002  054A  3000               	movlw	high(0)
  2003  054B  00C7               	movwf	(0+(?_write)+04h)+1
  2004  054C  120A  158A  25EF   	fcall	_write
              120A  118A         
  2005                           	line	268
  2006                           ;prev11.c: 268: while(1)
  2007                           	
  2008  0551                     l740:	
  2009                           	line	270
  2010                           ;prev11.c: 269: {
  2011                           ;prev11.c: 270: num=scan();
  2012  0551  120A  118A  20F3   	fcall	_scan
              120A  118A         
  2013  0556  0875               	movf	(1+(?_scan)),w
  2014  0557  1683               	bsf	status, 5	;RP0=1, select bank1
  2015  0558  1303               	bcf	status, 6	;RP1=0, select bank1
  2016  0559  01D9               	clrf	(getlogicseq@num+1)^080h
  2017  055A  07D9               	addwf	(getlogicseq@num+1)^080h
  2018  055B  0874               	movf	(0+(?_scan)),w
  2019  055C  01D8               	clrf	(getlogicseq@num)^080h
  2020  055D  07D8               	addwf	(getlogicseq@num)^080h
  2021                           
  2022                           	line	271
  2023                           	
  2024  055E                     l3435:	
  2025                           ;prev11.c: 271: if(num==1||num==0){
  2026  055E  3001               	movlw	01h
  2027  055F  0658               	xorwf	(getlogicseq@num)^080h,w
  2028  0560  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2029  0561  1903               	skipnz
  2030  0562  2D64               	goto	u4541
  2031  0563  2D65               	goto	u4540
  2032  0564                     u4541:
  2033  0564  2D6C               	goto	l3439
  2034  0565                     u4540:
  2035                           	
  2036  0565                     l3437:	
  2037  0565  0859               	movf	((getlogicseq@num+1)^080h),w
  2038  0566  0458               	iorwf	((getlogicseq@num)^080h),w
  2039  0567  1D03               	skipz
  2040  0568  2D6A               	goto	u4551
  2041  0569  2D6B               	goto	u4550
  2042  056A                     u4551:
  2043  056A  2DDB               	goto	l3453
  2044  056B                     u4550:
  2045  056B  2D6C               	goto	l3439
  2046                           	
  2047  056C                     l743:	
  2048                           	line	272
  2049                           	
  2050  056C                     l3439:	
  2051                           ;prev11.c: 272: if(wf==0)
  2052  056C  0855               	movf	((getlogicseq@wf+1)^080h),w
  2053  056D  0454               	iorwf	((getlogicseq@wf)^080h),w
  2054  056E  1D03               	skipz
  2055  056F  2D71               	goto	u4561
  2056  0570  2D72               	goto	u4560
  2057  0571                     u4561:
  2058  0571  2DDE               	goto	l3455
  2059  0572                     u4560:
  2060                           	line	274
  2061                           	
  2062  0572                     l3441:	
  2063                           ;prev11.c: 273: {
  2064                           ;prev11.c: 274: if(ccount==0)
  2065  0572  0857               	movf	((getlogicseq@ccount+1)^080h),w
  2066  0573  0456               	iorwf	((getlogicseq@ccount)^080h),w
  2067  0574  1D03               	skipz
  2068  0575  2D77               	goto	u4571
  2069  0576  2D78               	goto	u4570
  2070  0577                     u4571:
  2071  0577  2D85               	goto	l745
  2072  0578                     u4570:
  2073                           	line	275
  2074                           	
  2075  0578                     l3443:	
  2076                           ;prev11.c: 275: strcpy(logic_d1,"");
  2077  0578  30DA               	movlw	(_logic_d1&0ffh)
  2078  0579  00F0               	movwf	(?_strcpy)
  2079  057A  3000               	movlw	(0x1/2)
  2080  057B  00F1               	movwf	(?_strcpy+1)
  2081  057C  3068               	movlw	low(STR_9|8000h)
  2082  057D  00F2               	movwf	0+(?_strcpy)+02h
  2083  057E  3088               	movlw	high(STR_9|8000h)
  2084  057F  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2085  0580  120A  158A  2475   	fcall	_strcpy
              120A  118A         
  2086                           	
  2087  0585                     l745:	
  2088                           	line	276
  2089                           ;prev11.c: 276: write("---",2,0);
  2090  0585  3014               	movlw	low(STR_10|8000h)
  2091  0586  1283               	bcf	status, 5	;RP0=0, select bank0
  2092  0587  1303               	bcf	status, 6	;RP1=0, select bank0
  2093  0588  00C2               	movwf	(?_write)
  2094  0589  3089               	movlw	high(STR_10|8000h)
  2095  058A  00C3               	movwf	((?_write))+1
  2096  058B  3002               	movlw	low(02h)
  2097  058C  00C4               	movwf	0+(?_write)+02h
  2098  058D  3000               	movlw	high(02h)
  2099  058E  00C5               	movwf	(0+(?_write)+02h)+1
  2100  058F  3000               	movlw	low(0)
  2101  0590  00C6               	movwf	0+(?_write)+04h
  2102  0591  3000               	movlw	high(0)
  2103  0592  00C7               	movwf	(0+(?_write)+04h)+1
  2104  0593  120A  158A  25EF   	fcall	_write
              120A  118A         
  2105                           	line	277
  2106                           ;prev11.c: 277: itoaa(num, snum);
  2107  0598  1683               	bsf	status, 5	;RP0=1, select bank1
  2108  0599  1303               	bcf	status, 6	;RP1=0, select bank1
  2109  059A  0859               	movf	(getlogicseq@num+1)^080h,w
  2110  059B  01FA               	clrf	(?_itoaa+1)
  2111  059C  07FA               	addwf	(?_itoaa+1)
  2112  059D  0858               	movf	(getlogicseq@num)^080h,w
  2113  059E  01F9               	clrf	(?_itoaa)
  2114  059F  07F9               	addwf	(?_itoaa)
  2115                           
  2116  05A0  30C2               	movlw	(getlogicseq@snum)&0ffh
  2117  05A1  1283               	bcf	status, 5	;RP0=0, select bank0
  2118  05A2  1303               	bcf	status, 6	;RP1=0, select bank0
  2119  05A3  00DD               	movwf	(??_getlogicseq+0)+0
  2120  05A4  085D               	movf	(??_getlogicseq+0)+0,w
  2121  05A5  00FB               	movwf	0+(?_itoaa)+02h
  2122  05A6  120A  118A  21DB   	fcall	_itoaa
              120A  118A         
  2123                           	line	278
  2124                           	
  2125  05AB                     l3445:	
  2126                           ;prev11.c: 278: strcat(logic_d1,snum);
  2127  05AB  30DA               	movlw	(_logic_d1&0ffh)
  2128  05AC  00F0               	movwf	(?_strcat)
  2129  05AD  3000               	movlw	(0x1/2)
  2130  05AE  00F1               	movwf	(?_strcat+1)
  2131  05AF  30C2               	movlw	(getlogicseq@snum)&0ffh
  2132  05B0  1283               	bcf	status, 5	;RP0=0, select bank0
  2133  05B1  1303               	bcf	status, 6	;RP1=0, select bank0
  2134  05B2  00DD               	movwf	(??_getlogicseq+0)+0
  2135  05B3  085D               	movf	(??_getlogicseq+0)+0,w
  2136  05B4  00F2               	movwf	0+(?_strcat)+02h
  2137  05B5  120A  158A  24A7   	fcall	_strcat
              120A  118A         
  2138                           	line	279
  2139                           	
  2140  05BA                     l3447:	
  2141                           ;prev11.c: 279: write( logic_d1,2,0); ;
  2142  05BA  30DA               	movlw	(_logic_d1&0ffh)
  2143  05BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2144  05BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2145  05BD  00C2               	movwf	(?_write)
  2146  05BE  3000               	movlw	(0x1/2)
  2147  05BF  00C3               	movwf	(?_write+1)
  2148  05C0  3002               	movlw	low(02h)
  2149  05C1  00C4               	movwf	0+(?_write)+02h
  2150  05C2  3000               	movlw	high(02h)
  2151  05C3  00C5               	movwf	(0+(?_write)+02h)+1
  2152  05C4  3000               	movlw	low(0)
  2153  05C5  00C6               	movwf	0+(?_write)+04h
  2154  05C6  3000               	movlw	high(0)
  2155  05C7  00C7               	movwf	(0+(?_write)+04h)+1
  2156  05C8  120A  158A  25EF   	fcall	_write
              120A  118A         
  2157                           	line	280
  2158                           	
  2159  05CD                     l3449:	
  2160                           ;prev11.c: 280: wf=1;
  2161  05CD  3001               	movlw	low(01h)
  2162  05CE  1683               	bsf	status, 5	;RP0=1, select bank1
  2163  05CF  1303               	bcf	status, 6	;RP1=0, select bank1
  2164  05D0  00D4               	movwf	(getlogicseq@wf)^080h
  2165  05D1  3000               	movlw	high(01h)
  2166  05D2  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2167                           	line	281
  2168                           	
  2169  05D3                     l3451:	
  2170                           ;prev11.c: 281: ccount++;
  2171  05D3  3001               	movlw	low(01h)
  2172  05D4  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2173  05D5  1803               	skipnc
  2174  05D6  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2175  05D7  3000               	movlw	high(01h)
  2176  05D8  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2177  05D9  2DDE               	goto	l3455
  2178                           	line	282
  2179                           	
  2180  05DA                     l744:	
  2181                           	line	283
  2182                           ;prev11.c: 282: }
  2183                           ;prev11.c: 283: }
  2184  05DA  2DDE               	goto	l3455
  2185                           	line	284
  2186                           	
  2187  05DB                     l741:	
  2188                           	line	285
  2189                           	
  2190  05DB                     l3453:	
  2191                           ;prev11.c: 284: else{
  2192                           ;prev11.c: 285: wf=0;
  2193  05DB  01D4               	clrf	(getlogicseq@wf)^080h
  2194  05DC  01D5               	clrf	(getlogicseq@wf+1)^080h
  2195  05DD  2DDE               	goto	l3455
  2196                           	line	286
  2197                           	
  2198  05DE                     l746:	
  2199                           	line	287
  2200                           	
  2201  05DE                     l3455:	
  2202                           ;prev11.c: 286: }
  2203                           ;prev11.c: 287: if(ccount>=3)
  2204  05DE  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2205  05DF  3A80               	xorlw	80h
  2206  05E0  00FF               	movwf	btemp+1
  2207  05E1  3080               	movlw	(high(03h))^80h
  2208  05E2  027F               	subwf	btemp+1,w
  2209  05E3  1D03               	skipz
  2210  05E4  2DE7               	goto	u4585
  2211  05E5  3003               	movlw	low(03h)
  2212  05E6  0256               	subwf	(getlogicseq@ccount)^080h,w
  2213  05E7                     u4585:
  2214                           
  2215  05E7  1C03               	skipc
  2216  05E8  2DEA               	goto	u4581
  2217  05E9  2DEB               	goto	u4580
  2218  05EA                     u4581:
  2219  05EA  2DED               	goto	l3459
  2220  05EB                     u4580:
  2221  05EB  2E0F               	goto	l3469
  2222                           	line	288
  2223                           	
  2224  05EC                     l3457:	
  2225                           ;prev11.c: 288: break;
  2226  05EC  2E0F               	goto	l3469
  2227                           	
  2228  05ED                     l747:	
  2229                           	line	291
  2230                           	
  2231  05ED                     l3459:	
  2232                           ;prev11.c: 291: if(num==2)
  2233  05ED  3002               	movlw	02h
  2234  05EE  1683               	bsf	status, 5	;RP0=1, select bank1
  2235  05EF  1303               	bcf	status, 6	;RP1=0, select bank1
  2236  05F0  0658               	xorwf	(getlogicseq@num)^080h,w
  2237  05F1  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2238  05F2  1D03               	skipz
  2239  05F3  2DF5               	goto	u4591
  2240  05F4  2DF6               	goto	u4590
  2241  05F5                     u4591:
  2242  05F5  2E02               	goto	l3465
  2243  05F6                     u4590:
  2244                           	line	293
  2245                           	
  2246  05F6                     l3461:	
  2247                           ;prev11.c: 292: {
  2248                           ;prev11.c: 293: if(nf==0){
  2249  05F6  0853               	movf	((getlogicseq@nf+1)^080h),w
  2250  05F7  0452               	iorwf	((getlogicseq@nf)^080h),w
  2251  05F8  1D03               	skipz
  2252  05F9  2DFB               	goto	u4601
  2253  05FA  2DFC               	goto	u4600
  2254  05FB                     u4601:
  2255  05FB  2D51               	goto	l740
  2256  05FC                     u4600:
  2257                           	line	294
  2258                           	
  2259  05FC                     l3463:	
  2260                           ;prev11.c: 294: nf=1;
  2261  05FC  3001               	movlw	low(01h)
  2262  05FD  00D2               	movwf	(getlogicseq@nf)^080h
  2263  05FE  3000               	movlw	high(01h)
  2264  05FF  00D3               	movwf	((getlogicseq@nf)^080h)+1
  2265                           	line	295
  2266                           ;prev11.c: 295: break;
  2267  0600  2E0F               	goto	l3469
  2268                           	line	296
  2269                           	
  2270  0601                     l750:	
  2271                           	line	297
  2272                           ;prev11.c: 296: }
  2273                           ;prev11.c: 297: }
  2274  0601  2D51               	goto	l740
  2275                           	line	298
  2276                           	
  2277  0602                     l749:	
  2278                           	
  2279  0602                     l3465:	
  2280                           ;prev11.c: 298: else if(num==99){
  2281  0602  3063               	movlw	063h
  2282  0603  0658               	xorwf	(getlogicseq@num)^080h,w
  2283  0604  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2284  0605  1D03               	skipz
  2285  0606  2E08               	goto	u4611
  2286  0607  2E09               	goto	u4610
  2287  0608                     u4611:
  2288  0608  2D51               	goto	l740
  2289  0609                     u4610:
  2290                           	line	299
  2291                           	
  2292  0609                     l3467:	
  2293                           ;prev11.c: 299: nf=0;
  2294  0609  01D2               	clrf	(getlogicseq@nf)^080h
  2295  060A  01D3               	clrf	(getlogicseq@nf+1)^080h
  2296  060B  2D51               	goto	l740
  2297                           	line	300
  2298                           	
  2299  060C                     l752:	
  2300  060C  2D51               	goto	l740
  2301                           	line	301
  2302                           	
  2303  060D                     l751:	
  2304  060D  2D51               	goto	l740
  2305                           	
  2306  060E                     l753:	
  2307                           	line	268
  2308  060E  2D51               	goto	l740
  2309                           	
  2310  060F                     l748:	
  2311                           	line	304
  2312                           	
  2313  060F                     l3469:	
  2314                           ;prev11.c: 300: }
  2315                           ;prev11.c: 301: }
  2316                           ;prev11.c: 304: wf=0;ccount=0;
  2317  060F  1683               	bsf	status, 5	;RP0=1, select bank1
  2318  0610  1303               	bcf	status, 6	;RP1=0, select bank1
  2319  0611  01D4               	clrf	(getlogicseq@wf)^080h
  2320  0612  01D5               	clrf	(getlogicseq@wf+1)^080h
  2321  0613  01D6               	clrf	(getlogicseq@ccount)^080h
  2322  0614  01D7               	clrf	(getlogicseq@ccount+1)^080h
  2323                           	line	305
  2324                           	
  2325  0615                     l3471:	
  2326                           ;prev11.c: 305: strcpy(str,"Enter Logic DEV2:  ");
  2327  0615  30A0               	movlw	(getlogicseq@str&0ffh)
  2328  0616  00F0               	movwf	(?_strcpy)
  2329  0617  3000               	movlw	(0x1/2)
  2330  0618  00F1               	movwf	(?_strcpy+1)
  2331  0619  3069               	movlw	low(STR_11|8000h)
  2332  061A  00F2               	movwf	0+(?_strcpy)+02h
  2333  061B  3088               	movlw	high(STR_11|8000h)
  2334  061C  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2335  061D  120A  158A  2475   	fcall	_strcpy
              120A  118A         
  2336                           	line	306
  2337                           	
  2338  0622                     l3473:	
  2339                           ;prev11.c: 306: write(str,1,1);
  2340  0622  30A0               	movlw	(getlogicseq@str&0ffh)
  2341  0623  1283               	bcf	status, 5	;RP0=0, select bank0
  2342  0624  1303               	bcf	status, 6	;RP1=0, select bank0
  2343  0625  00C2               	movwf	(?_write)
  2344  0626  3000               	movlw	(0x1/2)
  2345  0627  00C3               	movwf	(?_write+1)
  2346  0628  3001               	movlw	low(01h)
  2347  0629  00C4               	movwf	0+(?_write)+02h
  2348  062A  3000               	movlw	high(01h)
  2349  062B  00C5               	movwf	(0+(?_write)+02h)+1
  2350  062C  3001               	movlw	low(01h)
  2351  062D  00C6               	movwf	0+(?_write)+04h
  2352  062E  3000               	movlw	high(01h)
  2353  062F  00C7               	movwf	(0+(?_write)+04h)+1
  2354  0630  120A  158A  25EF   	fcall	_write
              120A  118A         
  2355                           	line	307
  2356                           	
  2357  0635                     l3475:	
  2358                           ;prev11.c: 307: write(logic_d2,2,0);
  2359  0635  30DF               	movlw	(_logic_d2&0ffh)
  2360  0636  1283               	bcf	status, 5	;RP0=0, select bank0
  2361  0637  1303               	bcf	status, 6	;RP1=0, select bank0
  2362  0638  00C2               	movwf	(?_write)
  2363  0639  3000               	movlw	(0x1/2)
  2364  063A  00C3               	movwf	(?_write+1)
  2365  063B  3002               	movlw	low(02h)
  2366  063C  00C4               	movwf	0+(?_write)+02h
  2367  063D  3000               	movlw	high(02h)
  2368  063E  00C5               	movwf	(0+(?_write)+02h)+1
  2369  063F  3000               	movlw	low(0)
  2370  0640  00C6               	movwf	0+(?_write)+04h
  2371  0641  3000               	movlw	high(0)
  2372  0642  00C7               	movwf	(0+(?_write)+04h)+1
  2373  0643  120A  158A  25EF   	fcall	_write
              120A  118A         
  2374  0648  2E49               	goto	l3477
  2375                           	line	309
  2376                           ;prev11.c: 309: while(1)
  2377                           	
  2378  0649                     l754:	
  2379                           	line	311
  2380                           	
  2381  0649                     l3477:	
  2382                           ;prev11.c: 310: {
  2383                           ;prev11.c: 311: num=scan();
  2384  0649  120A  118A  20F3   	fcall	_scan
              120A  118A         
  2385  064E  0875               	movf	(1+(?_scan)),w
  2386  064F  1683               	bsf	status, 5	;RP0=1, select bank1
  2387  0650  1303               	bcf	status, 6	;RP1=0, select bank1
  2388  0651  01D9               	clrf	(getlogicseq@num+1)^080h
  2389  0652  07D9               	addwf	(getlogicseq@num+1)^080h
  2390  0653  0874               	movf	(0+(?_scan)),w
  2391  0654  01D8               	clrf	(getlogicseq@num)^080h
  2392  0655  07D8               	addwf	(getlogicseq@num)^080h
  2393                           
  2394                           	line	312
  2395                           	
  2396  0656                     l3479:	
  2397                           ;prev11.c: 312: if(num==1||num==0){
  2398  0656  3001               	movlw	01h
  2399  0657  0658               	xorwf	(getlogicseq@num)^080h,w
  2400  0658  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2401  0659  1903               	skipnz
  2402  065A  2E5C               	goto	u4621
  2403  065B  2E5D               	goto	u4620
  2404  065C                     u4621:
  2405  065C  2E64               	goto	l3483
  2406  065D                     u4620:
  2407                           	
  2408  065D                     l3481:	
  2409  065D  0859               	movf	((getlogicseq@num+1)^080h),w
  2410  065E  0458               	iorwf	((getlogicseq@num)^080h),w
  2411  065F  1D03               	skipz
  2412  0660  2E62               	goto	u4631
  2413  0661  2E63               	goto	u4630
  2414  0662                     u4631:
  2415  0662  2ED3               	goto	l3497
  2416  0663                     u4630:
  2417  0663  2E64               	goto	l3483
  2418                           	
  2419  0664                     l757:	
  2420                           	line	313
  2421                           	
  2422  0664                     l3483:	
  2423                           ;prev11.c: 313: if(wf==0)
  2424  0664  0855               	movf	((getlogicseq@wf+1)^080h),w
  2425  0665  0454               	iorwf	((getlogicseq@wf)^080h),w
  2426  0666  1D03               	skipz
  2427  0667  2E69               	goto	u4641
  2428  0668  2E6A               	goto	u4640
  2429  0669                     u4641:
  2430  0669  2ED6               	goto	l3499
  2431  066A                     u4640:
  2432                           	line	314
  2433                           	
  2434  066A                     l3485:	
  2435                           ;prev11.c: 314: { if(ccount==0)
  2436  066A  0857               	movf	((getlogicseq@ccount+1)^080h),w
  2437  066B  0456               	iorwf	((getlogicseq@ccount)^080h),w
  2438  066C  1D03               	skipz
  2439  066D  2E6F               	goto	u4651
  2440  066E  2E70               	goto	u4650
  2441  066F                     u4651:
  2442  066F  2E7D               	goto	l759
  2443  0670                     u4650:
  2444                           	line	315
  2445                           	
  2446  0670                     l3487:	
  2447                           ;prev11.c: 315: strcpy(logic_d2,"");
  2448  0670  30DF               	movlw	(_logic_d2&0ffh)
  2449  0671  00F0               	movwf	(?_strcpy)
  2450  0672  3000               	movlw	(0x1/2)
  2451  0673  00F1               	movwf	(?_strcpy+1)
  2452  0674  3068               	movlw	low(STR_12|8000h)
  2453  0675  00F2               	movwf	0+(?_strcpy)+02h
  2454  0676  3088               	movlw	high(STR_12|8000h)
  2455  0677  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2456  0678  120A  158A  2475   	fcall	_strcpy
              120A  118A         
  2457                           	
  2458  067D                     l759:	
  2459                           	line	316
  2460                           ;prev11.c: 316: write("---",2,0);
  2461  067D  3014               	movlw	low(STR_13|8000h)
  2462  067E  1283               	bcf	status, 5	;RP0=0, select bank0
  2463  067F  1303               	bcf	status, 6	;RP1=0, select bank0
  2464  0680  00C2               	movwf	(?_write)
  2465  0681  3089               	movlw	high(STR_13|8000h)
  2466  0682  00C3               	movwf	((?_write))+1
  2467  0683  3002               	movlw	low(02h)
  2468  0684  00C4               	movwf	0+(?_write)+02h
  2469  0685  3000               	movlw	high(02h)
  2470  0686  00C5               	movwf	(0+(?_write)+02h)+1
  2471  0687  3000               	movlw	low(0)
  2472  0688  00C6               	movwf	0+(?_write)+04h
  2473  0689  3000               	movlw	high(0)
  2474  068A  00C7               	movwf	(0+(?_write)+04h)+1
  2475  068B  120A  158A  25EF   	fcall	_write
              120A  118A         
  2476                           	line	317
  2477                           ;prev11.c: 317: itoaa(num, snum);
  2478  0690  1683               	bsf	status, 5	;RP0=1, select bank1
  2479  0691  1303               	bcf	status, 6	;RP1=0, select bank1
  2480  0692  0859               	movf	(getlogicseq@num+1)^080h,w
  2481  0693  01FA               	clrf	(?_itoaa+1)
  2482  0694  07FA               	addwf	(?_itoaa+1)
  2483  0695  0858               	movf	(getlogicseq@num)^080h,w
  2484  0696  01F9               	clrf	(?_itoaa)
  2485  0697  07F9               	addwf	(?_itoaa)
  2486                           
  2487  0698  30C2               	movlw	(getlogicseq@snum)&0ffh
  2488  0699  1283               	bcf	status, 5	;RP0=0, select bank0
  2489  069A  1303               	bcf	status, 6	;RP1=0, select bank0
  2490  069B  00DD               	movwf	(??_getlogicseq+0)+0
  2491  069C  085D               	movf	(??_getlogicseq+0)+0,w
  2492  069D  00FB               	movwf	0+(?_itoaa)+02h
  2493  069E  120A  118A  21DB   	fcall	_itoaa
              120A  118A         
  2494                           	line	318
  2495                           	
  2496  06A3                     l3489:	
  2497                           ;prev11.c: 318: strcat(logic_d2,snum);
  2498  06A3  30DF               	movlw	(_logic_d2&0ffh)
  2499  06A4  00F0               	movwf	(?_strcat)
  2500  06A5  3000               	movlw	(0x1/2)
  2501  06A6  00F1               	movwf	(?_strcat+1)
  2502  06A7  30C2               	movlw	(getlogicseq@snum)&0ffh
  2503  06A8  1283               	bcf	status, 5	;RP0=0, select bank0
  2504  06A9  1303               	bcf	status, 6	;RP1=0, select bank0
  2505  06AA  00DD               	movwf	(??_getlogicseq+0)+0
  2506  06AB  085D               	movf	(??_getlogicseq+0)+0,w
  2507  06AC  00F2               	movwf	0+(?_strcat)+02h
  2508  06AD  120A  158A  24A7   	fcall	_strcat
              120A  118A         
  2509                           	line	319
  2510                           	
  2511  06B2                     l3491:	
  2512                           ;prev11.c: 319: write( logic_d2,2,0); ;
  2513  06B2  30DF               	movlw	(_logic_d2&0ffh)
  2514  06B3  1283               	bcf	status, 5	;RP0=0, select bank0
  2515  06B4  1303               	bcf	status, 6	;RP1=0, select bank0
  2516  06B5  00C2               	movwf	(?_write)
  2517  06B6  3000               	movlw	(0x1/2)
  2518  06B7  00C3               	movwf	(?_write+1)
  2519  06B8  3002               	movlw	low(02h)
  2520  06B9  00C4               	movwf	0+(?_write)+02h
  2521  06BA  3000               	movlw	high(02h)
  2522  06BB  00C5               	movwf	(0+(?_write)+02h)+1
  2523  06BC  3000               	movlw	low(0)
  2524  06BD  00C6               	movwf	0+(?_write)+04h
  2525  06BE  3000               	movlw	high(0)
  2526  06BF  00C7               	movwf	(0+(?_write)+04h)+1
  2527  06C0  120A  158A  25EF   	fcall	_write
              120A  118A         
  2528                           	line	320
  2529                           	
  2530  06C5                     l3493:	
  2531                           ;prev11.c: 320: wf=1;
  2532  06C5  3001               	movlw	low(01h)
  2533  06C6  1683               	bsf	status, 5	;RP0=1, select bank1
  2534  06C7  1303               	bcf	status, 6	;RP1=0, select bank1
  2535  06C8  00D4               	movwf	(getlogicseq@wf)^080h
  2536  06C9  3000               	movlw	high(01h)
  2537  06CA  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2538                           	line	321
  2539                           	
  2540  06CB                     l3495:	
  2541                           ;prev11.c: 321: ccount++;
  2542  06CB  3001               	movlw	low(01h)
  2543  06CC  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2544  06CD  1803               	skipnc
  2545  06CE  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2546  06CF  3000               	movlw	high(01h)
  2547  06D0  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2548  06D1  2ED6               	goto	l3499
  2549                           	line	322
  2550                           	
  2551  06D2                     l758:	
  2552                           	line	323
  2553                           ;prev11.c: 322: }
  2554                           ;prev11.c: 323: }
  2555  06D2  2ED6               	goto	l3499
  2556                           	line	324
  2557                           	
  2558  06D3                     l755:	
  2559                           	line	325
  2560                           	
  2561  06D3                     l3497:	
  2562                           ;prev11.c: 324: else{
  2563                           ;prev11.c: 325: wf=0;
  2564  06D3  01D4               	clrf	(getlogicseq@wf)^080h
  2565  06D4  01D5               	clrf	(getlogicseq@wf+1)^080h
  2566  06D5  2ED6               	goto	l3499
  2567                           	line	326
  2568                           	
  2569  06D6                     l760:	
  2570                           	line	327
  2571                           	
  2572  06D6                     l3499:	
  2573                           ;prev11.c: 326: }
  2574                           ;prev11.c: 327: if(ccount>=3)
  2575  06D6  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2576  06D7  3A80               	xorlw	80h
  2577  06D8  00FF               	movwf	btemp+1
  2578  06D9  3080               	movlw	(high(03h))^80h
  2579  06DA  027F               	subwf	btemp+1,w
  2580  06DB  1D03               	skipz
  2581  06DC  2EDF               	goto	u4665
  2582  06DD  3003               	movlw	low(03h)
  2583  06DE  0256               	subwf	(getlogicseq@ccount)^080h,w
  2584  06DF                     u4665:
  2585                           
  2586  06DF  1C03               	skipc
  2587  06E0  2EE2               	goto	u4661
  2588  06E1  2EE3               	goto	u4660
  2589  06E2                     u4661:
  2590  06E2  2EE5               	goto	l3503
  2591  06E3                     u4660:
  2592  06E3  2F07               	goto	l3513
  2593                           	line	328
  2594                           	
  2595  06E4                     l3501:	
  2596                           ;prev11.c: 328: break;
  2597  06E4  2F07               	goto	l3513
  2598                           	
  2599  06E5                     l761:	
  2600                           	line	330
  2601                           	
  2602  06E5                     l3503:	
  2603                           ;prev11.c: 330: if(num==2)
  2604  06E5  3002               	movlw	02h
  2605  06E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2606  06E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2607  06E8  0658               	xorwf	(getlogicseq@num)^080h,w
  2608  06E9  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2609  06EA  1D03               	skipz
  2610  06EB  2EED               	goto	u4671
  2611  06EC  2EEE               	goto	u4670
  2612  06ED                     u4671:
  2613  06ED  2EFA               	goto	l3509
  2614  06EE                     u4670:
  2615                           	line	332
  2616                           	
  2617  06EE                     l3505:	
  2618                           ;prev11.c: 331: {
  2619                           ;prev11.c: 332: if(nf==0){
  2620  06EE  0853               	movf	((getlogicseq@nf+1)^080h),w
  2621  06EF  0452               	iorwf	((getlogicseq@nf)^080h),w
  2622  06F0  1D03               	skipz
  2623  06F1  2EF3               	goto	u4681
  2624  06F2  2EF4               	goto	u4680
  2625  06F3                     u4681:
  2626  06F3  2E49               	goto	l3477
  2627  06F4                     u4680:
  2628                           	line	333
  2629                           	
  2630  06F4                     l3507:	
  2631                           ;prev11.c: 333: nf=1;
  2632  06F4  3001               	movlw	low(01h)
  2633  06F5  00D2               	movwf	(getlogicseq@nf)^080h
  2634  06F6  3000               	movlw	high(01h)
  2635  06F7  00D3               	movwf	((getlogicseq@nf)^080h)+1
  2636                           	line	334
  2637                           ;prev11.c: 334: break;
  2638  06F8  2F07               	goto	l3513
  2639                           	line	335
  2640                           	
  2641  06F9                     l764:	
  2642                           	line	336
  2643                           ;prev11.c: 335: }
  2644                           ;prev11.c: 336: }
  2645  06F9  2E49               	goto	l3477
  2646                           	line	337
  2647                           	
  2648  06FA                     l763:	
  2649                           	
  2650  06FA                     l3509:	
  2651                           ;prev11.c: 337: else if(num==99){
  2652  06FA  3063               	movlw	063h
  2653  06FB  0658               	xorwf	(getlogicseq@num)^080h,w
  2654  06FC  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2655  06FD  1D03               	skipz
  2656  06FE  2F00               	goto	u4691
  2657  06FF  2F01               	goto	u4690
  2658  0700                     u4691:
  2659  0700  2E49               	goto	l3477
  2660  0701                     u4690:
  2661                           	line	338
  2662                           	
  2663  0701                     l3511:	
  2664                           ;prev11.c: 338: nf=0;
  2665  0701  01D2               	clrf	(getlogicseq@nf)^080h
  2666  0702  01D3               	clrf	(getlogicseq@nf+1)^080h
  2667  0703  2E49               	goto	l3477
  2668                           	line	339
  2669                           	
  2670  0704                     l766:	
  2671  0704  2E49               	goto	l3477
  2672                           	line	340
  2673                           	
  2674  0705                     l765:	
  2675  0705  2E49               	goto	l3477
  2676                           	
  2677  0706                     l767:	
  2678                           	line	309
  2679  0706  2E49               	goto	l3477
  2680                           	
  2681  0707                     l762:	
  2682                           	line	343
  2683                           	
  2684  0707                     l3513:	
  2685                           ;prev11.c: 339: }
  2686                           ;prev11.c: 340: }
  2687                           ;prev11.c: 343: wf=0;ccount=0;
  2688  0707  1683               	bsf	status, 5	;RP0=1, select bank1
  2689  0708  1303               	bcf	status, 6	;RP1=0, select bank1
  2690  0709  01D4               	clrf	(getlogicseq@wf)^080h
  2691  070A  01D5               	clrf	(getlogicseq@wf+1)^080h
  2692  070B  01D6               	clrf	(getlogicseq@ccount)^080h
  2693  070C  01D7               	clrf	(getlogicseq@ccount+1)^080h
  2694                           	line	344
  2695                           	
  2696  070D                     l3515:	
  2697                           ;prev11.c: 344: strcpy(str,"Enter Logic DEV3:  ");
  2698  070D  30A0               	movlw	(getlogicseq@str&0ffh)
  2699  070E  00F0               	movwf	(?_strcpy)
  2700  070F  3000               	movlw	(0x1/2)
  2701  0710  00F1               	movwf	(?_strcpy+1)
  2702  0711  307D               	movlw	low(STR_14|8000h)
  2703  0712  00F2               	movwf	0+(?_strcpy)+02h
  2704  0713  3088               	movlw	high(STR_14|8000h)
  2705  0714  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2706  0715  120A  158A  2475   	fcall	_strcpy
              120A  118A         
  2707                           	line	345
  2708                           	
  2709  071A                     l3517:	
  2710                           ;prev11.c: 345: write(str,1,1);
  2711  071A  30A0               	movlw	(getlogicseq@str&0ffh)
  2712  071B  1283               	bcf	status, 5	;RP0=0, select bank0
  2713  071C  1303               	bcf	status, 6	;RP1=0, select bank0
  2714  071D  00C2               	movwf	(?_write)
  2715  071E  3000               	movlw	(0x1/2)
  2716  071F  00C3               	movwf	(?_write+1)
  2717  0720  3001               	movlw	low(01h)
  2718  0721  00C4               	movwf	0+(?_write)+02h
  2719  0722  3000               	movlw	high(01h)
  2720  0723  00C5               	movwf	(0+(?_write)+02h)+1
  2721  0724  3001               	movlw	low(01h)
  2722  0725  00C6               	movwf	0+(?_write)+04h
  2723  0726  3000               	movlw	high(01h)
  2724  0727  00C7               	movwf	(0+(?_write)+04h)+1
  2725  0728  120A  158A  25EF   	fcall	_write
              120A  118A         
  2726                           	line	346
  2727                           	
  2728  072D                     l3519:	
  2729                           ;prev11.c: 346: write(logic_d3,2,0);
  2730  072D  30A5               	movlw	(_logic_d3&0ffh)
  2731  072E  1283               	bcf	status, 5	;RP0=0, select bank0
  2732  072F  1303               	bcf	status, 6	;RP1=0, select bank0
  2733  0730  00C2               	movwf	(?_write)
  2734  0731  3001               	movlw	(0x3/2)
  2735  0732  00C3               	movwf	(?_write+1)
  2736  0733  3002               	movlw	low(02h)
  2737  0734  00C4               	movwf	0+(?_write)+02h
  2738  0735  3000               	movlw	high(02h)
  2739  0736  00C5               	movwf	(0+(?_write)+02h)+1
  2740  0737  3000               	movlw	low(0)
  2741  0738  00C6               	movwf	0+(?_write)+04h
  2742  0739  3000               	movlw	high(0)
  2743  073A  00C7               	movwf	(0+(?_write)+04h)+1
  2744  073B  120A  158A  25EF   	fcall	_write
              120A  118A         
  2745  0740  2F41               	goto	l3521
  2746                           	line	348
  2747                           ;prev11.c: 348: while(1)
  2748                           	
  2749  0741                     l768:	
  2750                           	line	350
  2751                           	
  2752  0741                     l3521:	
  2753                           ;prev11.c: 349: {
  2754                           ;prev11.c: 350: num=scan();
  2755  0741  120A  118A  20F3   	fcall	_scan
              120A  118A         
  2756  0746  0875               	movf	(1+(?_scan)),w
  2757  0747  1683               	bsf	status, 5	;RP0=1, select bank1
  2758  0748  1303               	bcf	status, 6	;RP1=0, select bank1
  2759  0749  01D9               	clrf	(getlogicseq@num+1)^080h
  2760  074A  07D9               	addwf	(getlogicseq@num+1)^080h
  2761  074B  0874               	movf	(0+(?_scan)),w
  2762  074C  01D8               	clrf	(getlogicseq@num)^080h
  2763  074D  07D8               	addwf	(getlogicseq@num)^080h
  2764                           
  2765                           	line	351
  2766                           	
  2767  074E                     l3523:	
  2768                           ;prev11.c: 351: if(num==1||num==0){
  2769  074E  3001               	movlw	01h
  2770  074F  0658               	xorwf	(getlogicseq@num)^080h,w
  2771  0750  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2772  0751  1903               	skipnz
  2773  0752  2F54               	goto	u4701
  2774  0753  2F55               	goto	u4700
  2775  0754                     u4701:
  2776  0754  2F5C               	goto	l3527
  2777  0755                     u4700:
  2778                           	
  2779  0755                     l3525:	
  2780  0755  0859               	movf	((getlogicseq@num+1)^080h),w
  2781  0756  0458               	iorwf	((getlogicseq@num)^080h),w
  2782  0757  1D03               	skipz
  2783  0758  2F5A               	goto	u4711
  2784  0759  2F5B               	goto	u4710
  2785  075A                     u4711:
  2786  075A  2FCB               	goto	l3541
  2787  075B                     u4710:
  2788  075B  2F5C               	goto	l3527
  2789                           	
  2790  075C                     l771:	
  2791                           	line	352
  2792                           	
  2793  075C                     l3527:	
  2794                           ;prev11.c: 352: if(wf==0)
  2795  075C  0855               	movf	((getlogicseq@wf+1)^080h),w
  2796  075D  0454               	iorwf	((getlogicseq@wf)^080h),w
  2797  075E  1D03               	skipz
  2798  075F  2F61               	goto	u4721
  2799  0760  2F62               	goto	u4720
  2800  0761                     u4721:
  2801  0761  2FCE               	goto	l3543
  2802  0762                     u4720:
  2803                           	line	353
  2804                           	
  2805  0762                     l3529:	
  2806                           ;prev11.c: 353: { if(ccount==0)
  2807  0762  0857               	movf	((getlogicseq@ccount+1)^080h),w
  2808  0763  0456               	iorwf	((getlogicseq@ccount)^080h),w
  2809  0764  1D03               	skipz
  2810  0765  2F67               	goto	u4731
  2811  0766  2F68               	goto	u4730
  2812  0767                     u4731:
  2813  0767  2F75               	goto	l773
  2814  0768                     u4730:
  2815                           	line	354
  2816                           	
  2817  0768                     l3531:	
  2818                           ;prev11.c: 354: strcpy(logic_d3,"");
  2819  0768  30A5               	movlw	(_logic_d3&0ffh)
  2820  0769  00F0               	movwf	(?_strcpy)
  2821  076A  3001               	movlw	(0x3/2)
  2822  076B  00F1               	movwf	(?_strcpy+1)
  2823  076C  3068               	movlw	low(STR_15|8000h)
  2824  076D  00F2               	movwf	0+(?_strcpy)+02h
  2825  076E  3088               	movlw	high(STR_15|8000h)
  2826  076F  00F3               	movwf	(0+(?_strcpy)+02h)+1
  2827  0770  120A  158A  2475   	fcall	_strcpy
              120A  118A         
  2828                           	
  2829  0775                     l773:	
  2830                           	line	355
  2831                           ;prev11.c: 355: write("---",2,0);
  2832  0775  3014               	movlw	low(STR_16|8000h)
  2833  0776  1283               	bcf	status, 5	;RP0=0, select bank0
  2834  0777  1303               	bcf	status, 6	;RP1=0, select bank0
  2835  0778  00C2               	movwf	(?_write)
  2836  0779  3089               	movlw	high(STR_16|8000h)
  2837  077A  00C3               	movwf	((?_write))+1
  2838  077B  3002               	movlw	low(02h)
  2839  077C  00C4               	movwf	0+(?_write)+02h
  2840  077D  3000               	movlw	high(02h)
  2841  077E  00C5               	movwf	(0+(?_write)+02h)+1
  2842  077F  3000               	movlw	low(0)
  2843  0780  00C6               	movwf	0+(?_write)+04h
  2844  0781  3000               	movlw	high(0)
  2845  0782  00C7               	movwf	(0+(?_write)+04h)+1
  2846  0783  120A  158A  25EF   	fcall	_write
              120A  118A         
  2847                           	line	356
  2848                           ;prev11.c: 356: itoaa(num, snum);
  2849  0788  1683               	bsf	status, 5	;RP0=1, select bank1
  2850  0789  1303               	bcf	status, 6	;RP1=0, select bank1
  2851  078A  0859               	movf	(getlogicseq@num+1)^080h,w
  2852  078B  01FA               	clrf	(?_itoaa+1)
  2853  078C  07FA               	addwf	(?_itoaa+1)
  2854  078D  0858               	movf	(getlogicseq@num)^080h,w
  2855  078E  01F9               	clrf	(?_itoaa)
  2856  078F  07F9               	addwf	(?_itoaa)
  2857                           
  2858  0790  30C2               	movlw	(getlogicseq@snum)&0ffh
  2859  0791  1283               	bcf	status, 5	;RP0=0, select bank0
  2860  0792  1303               	bcf	status, 6	;RP1=0, select bank0
  2861  0793  00DD               	movwf	(??_getlogicseq+0)+0
  2862  0794  085D               	movf	(??_getlogicseq+0)+0,w
  2863  0795  00FB               	movwf	0+(?_itoaa)+02h
  2864  0796  120A  118A  21DB   	fcall	_itoaa
              120A  118A         
  2865                           	line	357
  2866                           	
  2867  079B                     l3533:	
  2868                           ;prev11.c: 357: strcat(logic_d3,snum);
  2869  079B  30A5               	movlw	(_logic_d3&0ffh)
  2870  079C  00F0               	movwf	(?_strcat)
  2871  079D  3001               	movlw	(0x3/2)
  2872  079E  00F1               	movwf	(?_strcat+1)
  2873  079F  30C2               	movlw	(getlogicseq@snum)&0ffh
  2874  07A0  1283               	bcf	status, 5	;RP0=0, select bank0
  2875  07A1  1303               	bcf	status, 6	;RP1=0, select bank0
  2876  07A2  00DD               	movwf	(??_getlogicseq+0)+0
  2877  07A3  085D               	movf	(??_getlogicseq+0)+0,w
  2878  07A4  00F2               	movwf	0+(?_strcat)+02h
  2879  07A5  120A  158A  24A7   	fcall	_strcat
              120A  118A         
  2880                           	line	358
  2881                           	
  2882  07AA                     l3535:	
  2883                           ;prev11.c: 358: write( logic_d3,2,0); ;
  2884  07AA  30A5               	movlw	(_logic_d3&0ffh)
  2885  07AB  1283               	bcf	status, 5	;RP0=0, select bank0
  2886  07AC  1303               	bcf	status, 6	;RP1=0, select bank0
  2887  07AD  00C2               	movwf	(?_write)
  2888  07AE  3001               	movlw	(0x3/2)
  2889  07AF  00C3               	movwf	(?_write+1)
  2890  07B0  3002               	movlw	low(02h)
  2891  07B1  00C4               	movwf	0+(?_write)+02h
  2892  07B2  3000               	movlw	high(02h)
  2893  07B3  00C5               	movwf	(0+(?_write)+02h)+1
  2894  07B4  3000               	movlw	low(0)
  2895  07B5  00C6               	movwf	0+(?_write)+04h
  2896  07B6  3000               	movlw	high(0)
  2897  07B7  00C7               	movwf	(0+(?_write)+04h)+1
  2898  07B8  120A  158A  25EF   	fcall	_write
              120A  118A         
  2899                           	line	359
  2900                           	
  2901  07BD                     l3537:	
  2902                           ;prev11.c: 359: wf=1;
  2903  07BD  3001               	movlw	low(01h)
  2904  07BE  1683               	bsf	status, 5	;RP0=1, select bank1
  2905  07BF  1303               	bcf	status, 6	;RP1=0, select bank1
  2906  07C0  00D4               	movwf	(getlogicseq@wf)^080h
  2907  07C1  3000               	movlw	high(01h)
  2908  07C2  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2909                           	line	360
  2910                           	
  2911  07C3                     l3539:	
  2912                           ;prev11.c: 360: ccount++;
  2913  07C3  3001               	movlw	low(01h)
  2914  07C4  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2915  07C5  1803               	skipnc
  2916  07C6  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2917  07C7  3000               	movlw	high(01h)
  2918  07C8  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2919  07C9  2FCE               	goto	l3543
  2920                           	line	361
  2921                           	
  2922  07CA                     l772:	
  2923                           	line	362
  2924                           ;prev11.c: 361: }
  2925                           ;prev11.c: 362: }
  2926  07CA  2FCE               	goto	l3543
  2927                           	line	363
  2928                           	
  2929  07CB                     l769:	
  2930                           	line	364
  2931                           	
  2932  07CB                     l3541:	
  2933                           ;prev11.c: 363: else{
  2934                           ;prev11.c: 364: wf=0;
  2935  07CB  01D4               	clrf	(getlogicseq@wf)^080h
  2936  07CC  01D5               	clrf	(getlogicseq@wf+1)^080h
  2937  07CD  2FCE               	goto	l3543
  2938                           	line	365
  2939                           	
  2940  07CE                     l774:	
  2941                           	line	366
  2942                           	
  2943  07CE                     l3543:	
  2944                           ;prev11.c: 365: }
  2945                           ;prev11.c: 366: if(ccount>=3)
  2946  07CE  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2947  07CF  3A80               	xorlw	80h
  2948  07D0  00FF               	movwf	btemp+1
  2949  07D1  3080               	movlw	(high(03h))^80h
  2950  07D2  027F               	subwf	btemp+1,w
  2951  07D3  1D03               	skipz
  2952  07D4  2FD7               	goto	u4745
  2953  07D5  3003               	movlw	low(03h)
  2954  07D6  0256               	subwf	(getlogicseq@ccount)^080h,w
  2955  07D7                     u4745:
  2956                           
  2957  07D7  1C03               	skipc
  2958  07D8  2FDA               	goto	u4741
  2959  07D9  2FDB               	goto	u4740
  2960  07DA                     u4741:
  2961  07DA  2FDD               	goto	l3547
  2962  07DB                     u4740:
  2963  07DB  2FFF               	goto	l728
  2964                           	line	367
  2965                           	
  2966  07DC                     l3545:	
  2967                           ;prev11.c: 367: break;
  2968  07DC  2FFF               	goto	l728
  2969                           	
  2970  07DD                     l775:	
  2971                           	line	369
  2972                           	
  2973  07DD                     l3547:	
  2974                           ;prev11.c: 369: if(num==2)
  2975  07DD  3002               	movlw	02h
  2976  07DE  1683               	bsf	status, 5	;RP0=1, select bank1
  2977  07DF  1303               	bcf	status, 6	;RP1=0, select bank1
  2978  07E0  0658               	xorwf	(getlogicseq@num)^080h,w
  2979  07E1  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2980  07E2  1D03               	skipz
  2981  07E3  2FE5               	goto	u4751
  2982  07E4  2FE6               	goto	u4750
  2983  07E5                     u4751:
  2984  07E5  2FF2               	goto	l3553
  2985  07E6                     u4750:
  2986                           	line	371
  2987                           	
  2988  07E6                     l3549:	
  2989                           ;prev11.c: 370: {
  2990                           ;prev11.c: 371: if(nf==0){
  2991  07E6  0853               	movf	((getlogicseq@nf+1)^080h),w
  2992  07E7  0452               	iorwf	((getlogicseq@nf)^080h),w
  2993  07E8  1D03               	skipz
  2994  07E9  2FEB               	goto	u4761
  2995  07EA  2FEC               	goto	u4760
  2996  07EB                     u4761:
  2997  07EB  2F41               	goto	l3521
  2998  07EC                     u4760:
  2999                           	line	372
  3000                           	
  3001  07EC                     l3551:	
  3002                           ;prev11.c: 372: nf=1;
  3003  07EC  3001               	movlw	low(01h)
  3004  07ED  00D2               	movwf	(getlogicseq@nf)^080h
  3005  07EE  3000               	movlw	high(01h)
  3006  07EF  00D3               	movwf	((getlogicseq@nf)^080h)+1
  3007                           	line	373
  3008                           ;prev11.c: 373: break;
  3009  07F0  2FFF               	goto	l728
  3010                           	line	374
  3011                           	
  3012  07F1                     l778:	
  3013                           	line	375
  3014                           ;prev11.c: 374: }
  3015                           ;prev11.c: 375: }
  3016  07F1  2F41               	goto	l3521
  3017                           	line	376
  3018                           	
  3019  07F2                     l777:	
  3020                           	
  3021  07F2                     l3553:	
  3022                           ;prev11.c: 376: else if(num==99){
  3023  07F2  3063               	movlw	063h
  3024  07F3  0658               	xorwf	(getlogicseq@num)^080h,w
  3025  07F4  0459               	iorwf	(getlogicseq@num+1)^080h,w
  3026  07F5  1D03               	skipz
  3027  07F6  2FF8               	goto	u4771
  3028  07F7  2FF9               	goto	u4770
  3029  07F8                     u4771:
  3030  07F8  2F41               	goto	l3521
  3031  07F9                     u4770:
  3032                           	line	377
  3033                           	
  3034  07F9                     l3555:	
  3035                           ;prev11.c: 377: nf=0;
  3036  07F9  01D2               	clrf	(getlogicseq@nf)^080h
  3037  07FA  01D3               	clrf	(getlogicseq@nf+1)^080h
  3038  07FB  2F41               	goto	l3521
  3039                           	line	378
  3040                           	
  3041  07FC                     l780:	
  3042  07FC  2F41               	goto	l3521
  3043                           	line	379
  3044                           	
  3045  07FD                     l779:	
  3046  07FD  2F41               	goto	l3521
  3047                           	
  3048  07FE                     l781:	
  3049                           	line	348
  3050  07FE  2F41               	goto	l3521
  3051                           	
  3052  07FF                     l776:	
  3053                           	line	425
  3054                           	
  3055  07FF                     l728:	
  3056  07FF  0008               	return
  3057                           	opt stack 0
  3058                           GLOBAL	__end_of_getlogicseq
  3059  0800                     	__end_of_getlogicseq:
  3060 ;; =============== function _getlogicseq ends ============
  3061                           
  3062                           	signat	_getlogicseq,88
  3063                           	global	_startswitch
  3064                           psect	text539,local,class=CODE,delta=2
  3065                           global __ptext539
  3066  0011                     __ptext539:
  3067                           
  3068 ;; *************** function _startswitch *****************
  3069 ;; Defined at:
  3070 ;;		line 145 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;		None               void
  3077 ;; Registers used:
  3078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0
  3086 ;;      Temps:          0       1       0       0       0
  3087 ;;      Totals:         0       1       0       0       0
  3088 ;;Total ram usage:        1 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    6
  3091 ;; This function calls:
  3092 ;;		_init_fun
  3093 ;;		_strcpy
  3094 ;;		_write
  3095 ;;		_strcmp
  3096 ;;		_check
  3097 ;; This function is called by:
  3098 ;;		_getlogicseq
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           psect	text539
  3102                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3103                           	line	145
  3104                           	global	__size_of_startswitch
  3105  00E2                     	__size_of_startswitch	equ	__end_of_startswitch-_startswitch
  3106                           	
  3107  0011                     _startswitch:	
  3108                           	opt	stack 0
  3109                           ; Regs used in _startswitch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3110                           	line	146
  3111                           	
  3112  0011                     l3319:	
  3113                           ;prev11.c: 146: init_fun();
  3114  0011  120A  158A  23FB   	fcall	_init_fun
              120A  118A         
  3115                           	line	149
  3116                           ;prev11.c: 149: strcpy(plo,lo);
  3117  0016  30AA               	movlw	(_plo&0ffh)
  3118  0017  00F0               	movwf	(?_strcpy)
  3119  0018  3001               	movlw	(0x3/2)
  3120  0019  00F1               	movwf	(?_strcpy+1)
  3121  001A  3067               	movlw	(_lo&0ffh)
  3122  001B  00F2               	movwf	0+(?_strcpy)+02h
  3123  001C  3000               	movlw	(0x0/2)
  3124  001D  00F3               	movwf	1+(?_strcpy)+02h
  3125  001E  120A  158A  2475   	fcall	_strcpy
              120A  118A         
  3126                           	line	150
  3127                           ;prev11.c: 150: strcpy(lo,"000");;
  3128  0023  3067               	movlw	(_lo&0ffh)
  3129  0024  00F0               	movwf	(?_strcpy)
  3130  0025  3000               	movlw	(0x0/2)
  3131  0026  00F1               	movwf	(?_strcpy+1)
  3132  0027  30C5               	movlw	low(STR_2|8000h)
  3133  0028  00F2               	movwf	0+(?_strcpy)+02h
  3134  0029  3088               	movlw	high(STR_2|8000h)
  3135  002A  00F3               	movwf	(0+(?_strcpy)+02h)+1
  3136  002B  120A  158A  2475   	fcall	_strcpy
              120A  118A         
  3137                           	line	151
  3138                           	
  3139  0030                     l3321:	
  3140                           ;prev11.c: 151: if(RC4==1)
  3141  0030  1283               	bcf	status, 5	;RP0=0, select bank0
  3142  0031  1303               	bcf	status, 6	;RP1=0, select bank0
  3143  0032  1E07               	btfss	(60/8),(60)&7
  3144  0033  2835               	goto	u4391
  3145  0034  2836               	goto	u4390
  3146  0035                     u4391:
  3147  0035  283B               	goto	l3325
  3148  0036                     u4390:
  3149                           	line	152
  3150                           	
  3151  0036                     l3323:	
  3152                           ;prev11.c: 152: lo[0]='1';
  3153  0036  3031               	movlw	(031h)
  3154  0037  00C8               	movwf	(??_startswitch+0)+0
  3155  0038  0848               	movf	(??_startswitch+0)+0,w
  3156  0039  00E7               	movwf	(_lo)
  3157  003A  283B               	goto	l3325
  3158                           	
  3159  003B                     l711:	
  3160                           	line	153
  3161                           	
  3162  003B                     l3325:	
  3163                           ;prev11.c: 153: if(RC5==1)
  3164  003B  1E87               	btfss	(61/8),(61)&7
  3165  003C  283E               	goto	u4401
  3166  003D  283F               	goto	u4400
  3167  003E                     u4401:
  3168  003E  2844               	goto	l3329
  3169  003F                     u4400:
  3170                           	line	154
  3171                           	
  3172  003F                     l3327:	
  3173                           ;prev11.c: 154: lo[1]='1';
  3174  003F  3031               	movlw	(031h)
  3175  0040  00C8               	movwf	(??_startswitch+0)+0
  3176  0041  0848               	movf	(??_startswitch+0)+0,w
  3177  0042  00E8               	movwf	0+(_lo)+01h
  3178  0043  2844               	goto	l3329
  3179                           	
  3180  0044                     l712:	
  3181                           	line	155
  3182                           	
  3183  0044                     l3329:	
  3184                           ;prev11.c: 155: if(RC1==1)
  3185  0044  1C87               	btfss	(57/8),(57)&7
  3186  0045  2847               	goto	u4411
  3187  0046  2848               	goto	u4410
  3188  0047                     u4411:
  3189  0047  284D               	goto	l3333
  3190  0048                     u4410:
  3191                           	line	156
  3192                           	
  3193  0048                     l3331:	
  3194                           ;prev11.c: 156: lo[2]='1';
  3195  0048  3031               	movlw	(031h)
  3196  0049  00C8               	movwf	(??_startswitch+0)+0
  3197  004A  0848               	movf	(??_startswitch+0)+0,w
  3198  004B  00E9               	movwf	0+(_lo)+02h
  3199  004C  284D               	goto	l3333
  3200                           	
  3201  004D                     l713:	
  3202                           	line	159
  3203                           	
  3204  004D                     l3333:	
  3205                           ;prev11.c: 159: pdev=dev;
  3206  004D  0862               	movf	(_dev+1),w
  3207  004E  01E6               	clrf	(_pdev+1)
  3208  004F  07E6               	addwf	(_pdev+1)
  3209  0050  0861               	movf	(_dev),w
  3210  0051  01E5               	clrf	(_pdev)
  3211  0052  07E5               	addwf	(_pdev)
  3212                           
  3213                           	line	160
  3214                           	
  3215  0053                     l3335:	
  3216                           ;prev11.c: 160: dev=0b0000;
  3217  0053  01E1               	clrf	(_dev)
  3218  0054  01E2               	clrf	(_dev+1)
  3219                           	line	161
  3220                           	
  3221  0055                     l3337:	
  3222                           ;prev11.c: 161: write("Press 2 to REPRG",2,0);
  3223  0055  3091               	movlw	low(STR_3|8000h)
  3224  0056  00C2               	movwf	(?_write)
  3225  0057  3088               	movlw	high(STR_3|8000h)
  3226  0058  00C3               	movwf	((?_write))+1
  3227  0059  3002               	movlw	low(02h)
  3228  005A  00C4               	movwf	0+(?_write)+02h
  3229  005B  3000               	movlw	high(02h)
  3230  005C  00C5               	movwf	(0+(?_write)+02h)+1
  3231  005D  3000               	movlw	low(0)
  3232  005E  00C6               	movwf	0+(?_write)+04h
  3233  005F  3000               	movlw	high(0)
  3234  0060  00C7               	movwf	(0+(?_write)+04h)+1
  3235  0061  120A  158A  25EF   	fcall	_write
              120A  118A         
  3236                           	line	163
  3237                           	
  3238  0066                     l3339:	
  3239                           ;prev11.c: 163: if(strcmp(lo,plo)!=0)
  3240  0066  30AA               	movlw	(_plo&0ffh)
  3241  0067  00F0               	movwf	(?_strcmp)
  3242  0068  3001               	movlw	(0x3/2)
  3243  0069  00F1               	movwf	(?_strcmp+1)
  3244  006A  3067               	movlw	(_lo)&0ffh
  3245  006B  120A  158A  24DF   	fcall	_strcmp
              120A  118A         
  3246  0070  0871               	movf	(1+(?_strcmp)),w
  3247  0071  0470               	iorwf	(0+(?_strcmp)),w
  3248  0072  1903               	skipnz
  3249  0073  2875               	goto	u4421
  3250  0074  2876               	goto	u4420
  3251  0075                     u4421:
  3252  0075  28F2               	goto	l721
  3253  0076                     u4420:
  3254                           	line	166
  3255                           	
  3256  0076                     l3341:	
  3257                           ;prev11.c: 164: {
  3258                           ;prev11.c: 166: write(lo,1,1);
  3259  0076  3067               	movlw	(_lo&0ffh)
  3260  0077  1283               	bcf	status, 5	;RP0=0, select bank0
  3261  0078  1303               	bcf	status, 6	;RP1=0, select bank0
  3262  0079  00C2               	movwf	(?_write)
  3263  007A  3000               	movlw	(0x0/2)
  3264  007B  00C3               	movwf	(?_write+1)
  3265  007C  3001               	movlw	low(01h)
  3266  007D  00C4               	movwf	0+(?_write)+02h
  3267  007E  3000               	movlw	high(01h)
  3268  007F  00C5               	movwf	(0+(?_write)+02h)+1
  3269  0080  3001               	movlw	low(01h)
  3270  0081  00C6               	movwf	0+(?_write)+04h
  3271  0082  3000               	movlw	high(01h)
  3272  0083  00C7               	movwf	(0+(?_write)+04h)+1
  3273  0084  120A  158A  25EF   	fcall	_write
              120A  118A         
  3274                           	line	170
  3275                           ;prev11.c: 170: if(check(lo,logic_d1))
  3276  0089  30DA               	movlw	(_logic_d1&0ffh)
  3277  008A  00F0               	movwf	(?_check)
  3278  008B  3000               	movlw	(0x1/2)
  3279  008C  00F1               	movwf	(?_check+1)
  3280  008D  3067               	movlw	(_lo)&0ffh
  3281  008E  120A  158A  259A   	fcall	_check
              120A  118A         
  3282  0093  0871               	movf	(1+(?_check)),w
  3283  0094  0470               	iorwf	(0+(?_check)),w
  3284  0095  1903               	skipnz
  3285  0096  2898               	goto	u4431
  3286  0097  2899               	goto	u4430
  3287  0098                     u4431:
  3288  0098  28A2               	goto	l3345
  3289  0099                     u4430:
  3290                           	line	171
  3291                           	
  3292  0099                     l3343:	
  3293                           ;prev11.c: 171: dev=dev|0b0001;
  3294  0099  3001               	movlw	low(01h)
  3295  009A  1283               	bcf	status, 5	;RP0=0, select bank0
  3296  009B  1303               	bcf	status, 6	;RP1=0, select bank0
  3297  009C  0461               	iorwf	(_dev),w
  3298  009D  00E1               	movwf	(_dev)
  3299  009E  3000               	movlw	high(01h)
  3300  009F  0462               	iorwf	(_dev+1),w
  3301  00A0  00E2               	movwf	1+(_dev)
  3302  00A1  28AB               	goto	l3347
  3303                           	line	172
  3304                           	
  3305  00A2                     l715:	
  3306                           	line	173
  3307                           	
  3308  00A2                     l3345:	
  3309                           ;prev11.c: 172: else
  3310                           ;prev11.c: 173: dev=dev&0b0110;
  3311  00A2  3006               	movlw	low(06h)
  3312  00A3  1283               	bcf	status, 5	;RP0=0, select bank0
  3313  00A4  1303               	bcf	status, 6	;RP1=0, select bank0
  3314  00A5  0561               	andwf	(_dev),w
  3315  00A6  00E1               	movwf	(_dev)
  3316  00A7  3000               	movlw	high(06h)
  3317  00A8  0562               	andwf	(_dev+1),w
  3318  00A9  00E2               	movwf	1+(_dev)
  3319  00AA  28AB               	goto	l3347
  3320                           	
  3321  00AB                     l716:	
  3322                           	line	175
  3323                           	
  3324  00AB                     l3347:	
  3325                           ;prev11.c: 175: if(check(lo,logic_d2))
  3326  00AB  30DF               	movlw	(_logic_d2&0ffh)
  3327  00AC  00F0               	movwf	(?_check)
  3328  00AD  3000               	movlw	(0x1/2)
  3329  00AE  00F1               	movwf	(?_check+1)
  3330  00AF  3067               	movlw	(_lo)&0ffh
  3331  00B0  120A  158A  259A   	fcall	_check
              120A  118A         
  3332  00B5  0871               	movf	(1+(?_check)),w
  3333  00B6  0470               	iorwf	(0+(?_check)),w
  3334  00B7  1903               	skipnz
  3335  00B8  28BA               	goto	u4441
  3336  00B9  28BB               	goto	u4440
  3337  00BA                     u4441:
  3338  00BA  28C4               	goto	l3351
  3339  00BB                     u4440:
  3340                           	line	176
  3341                           	
  3342  00BB                     l3349:	
  3343                           ;prev11.c: 176: dev=dev|0b0010;
  3344  00BB  3002               	movlw	low(02h)
  3345  00BC  1283               	bcf	status, 5	;RP0=0, select bank0
  3346  00BD  1303               	bcf	status, 6	;RP1=0, select bank0
  3347  00BE  0461               	iorwf	(_dev),w
  3348  00BF  00E1               	movwf	(_dev)
  3349  00C0  3000               	movlw	high(02h)
  3350  00C1  0462               	iorwf	(_dev+1),w
  3351  00C2  00E2               	movwf	1+(_dev)
  3352  00C3  28CD               	goto	l3353
  3353                           	line	177
  3354                           	
  3355  00C4                     l717:	
  3356                           	line	178
  3357                           	
  3358  00C4                     l3351:	
  3359                           ;prev11.c: 177: else
  3360                           ;prev11.c: 178: dev=dev&0b0101;
  3361  00C4  3005               	movlw	low(05h)
  3362  00C5  1283               	bcf	status, 5	;RP0=0, select bank0
  3363  00C6  1303               	bcf	status, 6	;RP1=0, select bank0
  3364  00C7  0561               	andwf	(_dev),w
  3365  00C8  00E1               	movwf	(_dev)
  3366  00C9  3000               	movlw	high(05h)
  3367  00CA  0562               	andwf	(_dev+1),w
  3368  00CB  00E2               	movwf	1+(_dev)
  3369  00CC  28CD               	goto	l3353
  3370                           	
  3371  00CD                     l718:	
  3372                           	line	181
  3373                           	
  3374  00CD                     l3353:	
  3375                           ;prev11.c: 181: if(check(lo,logic_d3))
  3376  00CD  30A5               	movlw	(_logic_d3&0ffh)
  3377  00CE  00F0               	movwf	(?_check)
  3378  00CF  3001               	movlw	(0x3/2)
  3379  00D0  00F1               	movwf	(?_check+1)
  3380  00D1  3067               	movlw	(_lo)&0ffh
  3381  00D2  120A  158A  259A   	fcall	_check
              120A  118A         
  3382  00D7  0871               	movf	(1+(?_check)),w
  3383  00D8  0470               	iorwf	(0+(?_check)),w
  3384  00D9  1903               	skipnz
  3385  00DA  28DC               	goto	u4451
  3386  00DB  28DD               	goto	u4450
  3387  00DC                     u4451:
  3388  00DC  28E6               	goto	l3357
  3389  00DD                     u4450:
  3390                           	line	182
  3391                           	
  3392  00DD                     l3355:	
  3393                           ;prev11.c: 182: dev=dev|0b0100;
  3394  00DD  3004               	movlw	low(04h)
  3395  00DE  1283               	bcf	status, 5	;RP0=0, select bank0
  3396  00DF  1303               	bcf	status, 6	;RP1=0, select bank0
  3397  00E0  0461               	iorwf	(_dev),w
  3398  00E1  00E1               	movwf	(_dev)
  3399  00E2  3000               	movlw	high(04h)
  3400  00E3  0462               	iorwf	(_dev+1),w
  3401  00E4  00E2               	movwf	1+(_dev)
  3402  00E5  28EE               	goto	l720
  3403                           	line	183
  3404                           	
  3405  00E6                     l719:	
  3406                           	line	184
  3407                           	
  3408  00E6                     l3357:	
  3409                           ;prev11.c: 183: else
  3410                           ;prev11.c: 184: dev=dev&0b0011;
  3411  00E6  3003               	movlw	low(03h)
  3412  00E7  1283               	bcf	status, 5	;RP0=0, select bank0
  3413  00E8  1303               	bcf	status, 6	;RP1=0, select bank0
  3414  00E9  0561               	andwf	(_dev),w
  3415  00EA  00E1               	movwf	(_dev)
  3416  00EB  3000               	movlw	high(03h)
  3417  00EC  0562               	andwf	(_dev+1),w
  3418  00ED  00E2               	movwf	1+(_dev)
  3419                           	
  3420  00EE                     l720:	
  3421                           	line	189
  3422                           ;prev11.c: 189: PORTA=dev;
  3423  00EE  0861               	movf	(_dev),w
  3424  00EF  0085               	movwf	(5)	;volatile
  3425  00F0  28F2               	goto	l721
  3426                           	line	190
  3427                           	
  3428  00F1                     l714:	
  3429  00F1  28F2               	goto	l721
  3430                           	line	191
  3431                           	
  3432  00F2                     l3359:	
  3433                           	line	193
  3434                           ;prev11.c: 190: }
  3435                           ;prev11.c: 191: return;
  3436                           	
  3437  00F2                     l721:	
  3438  00F2  0008               	return
  3439                           	opt stack 0
  3440                           GLOBAL	__end_of_startswitch
  3441  00F3                     	__end_of_startswitch:
  3442 ;; =============== function _startswitch ends ============
  3443                           
  3444                           	signat	_startswitch,88
  3445                           	global	_scroll
  3446                           psect	text540,local,class=CODE,delta=2
  3447                           global __ptext540
  3448  0F2D                     __ptext540:
  3449                           
  3450 ;; *************** function _scroll *****************
  3451 ;; Defined at:
  3452 ;;		line 615 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  str             2   40[BANK0 ] PTR unsigned char 
  3455 ;;		 -> STR_4(38), 
  3456 ;;  loops           2   42[BANK0 ] int 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  dest           32    0        unsigned char [32]
  3459 ;;  endat           2   53[BANK0 ] int 
  3460 ;;  startat         2   51[BANK0 ] int 
  3461 ;;  i               2   59[BANK0 ] int 
  3462 ;;  len             2   57[BANK0 ] int 
  3463 ;;  loopn           2   55[BANK0 ] int 
  3464 ;;  en              2   49[BANK0 ] int 
  3465 ;;  st              2   47[BANK0 ] int 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;		None               void
  3468 ;; Registers used:
  3469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3475 ;;      Params:         0       4       0       0       0
  3476 ;;      Locals:         0      14       0       0       0
  3477 ;;      Temps:          0       3       0       0       0
  3478 ;;      Totals:         0      21       0       0       0
  3479 ;;Total ram usage:       21 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    5
  3482 ;; This function calls:
  3483 ;;		_write
  3484 ;;		_delay
  3485 ;;		_cmd
  3486 ;; This function is called by:
  3487 ;;		_getlogicseq
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           psect	text540
  3491                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3492                           	line	615
  3493                           	global	__size_of_scroll
  3494  00D3                     	__size_of_scroll	equ	__end_of_scroll-_scroll
  3495                           	
  3496  0F2D                     _scroll:	
  3497                           	opt	stack 1
  3498                           ; Regs used in _scroll: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3499                           	line	617
  3500                           	
  3501  0F2D                     l3279:	
  3502                           ;prev11.c: 617: write(str,1,0); ;
  3503  0F2D  1283               	bcf	status, 5	;RP0=0, select bank0
  3504  0F2E  1303               	bcf	status, 6	;RP1=0, select bank0
  3505  0F2F  0849               	movf	(scroll@str+1),w
  3506  0F30  01C3               	clrf	(?_write+1)
  3507  0F31  07C3               	addwf	(?_write+1)
  3508  0F32  0848               	movf	(scroll@str),w
  3509  0F33  01C2               	clrf	(?_write)
  3510  0F34  07C2               	addwf	(?_write)
  3511                           
  3512  0F35  3001               	movlw	low(01h)
  3513  0F36  00C4               	movwf	0+(?_write)+02h
  3514  0F37  3000               	movlw	high(01h)
  3515  0F38  00C5               	movwf	(0+(?_write)+02h)+1
  3516  0F39  3000               	movlw	low(0)
  3517  0F3A  00C6               	movwf	0+(?_write)+04h
  3518  0F3B  3000               	movlw	high(0)
  3519  0F3C  00C7               	movwf	(0+(?_write)+04h)+1
  3520  0F3D  120A  158A  25EF   	fcall	_write
              120A  158A         
  3521                           	line	618
  3522                           	
  3523  0F42                     l3281:	
  3524                           ;prev11.c: 618: int loopn=0;
  3525  0F42  1283               	bcf	status, 5	;RP0=0, select bank0
  3526  0F43  1303               	bcf	status, 6	;RP1=0, select bank0
  3527  0F44  01D7               	clrf	(scroll@loopn)
  3528  0F45  01D8               	clrf	(scroll@loopn+1)
  3529                           	line	620
  3530                           	
  3531  0F46                     l3283:	
  3532                           ;prev11.c: 619: int i;
  3533                           ;prev11.c: 620: int len=0;;
  3534  0F46  01D9               	clrf	(scroll@len)
  3535  0F47  01DA               	clrf	(scroll@len+1)
  3536                           	line	621
  3537                           	
  3538  0F48                     l3285:	
  3539                           ;prev11.c: 621: int st=0;
  3540  0F48  01CF               	clrf	(scroll@st)
  3541  0F49  01D0               	clrf	(scroll@st+1)
  3542                           	line	623
  3543                           ;prev11.c: 622: int en;
  3544                           ;prev11.c: 623: while(str[i]!='\0')
  3545  0F4A  2F58               	goto	l3289
  3546                           	
  3547  0F4B                     l863:	
  3548                           	line	624
  3549                           	
  3550  0F4B                     l3287:	
  3551                           ;prev11.c: 624: { i++;
  3552  0F4B  3001               	movlw	low(01h)
  3553  0F4C  07DB               	addwf	(scroll@i),f
  3554  0F4D  1803               	skipnc
  3555  0F4E  0ADC               	incf	(scroll@i+1),f
  3556  0F4F  3000               	movlw	high(01h)
  3557  0F50  07DC               	addwf	(scroll@i+1),f
  3558                           	line	625
  3559                           ;prev11.c: 625: len++;
  3560  0F51  3001               	movlw	low(01h)
  3561  0F52  07D9               	addwf	(scroll@len),f
  3562  0F53  1803               	skipnc
  3563  0F54  0ADA               	incf	(scroll@len+1),f
  3564  0F55  3000               	movlw	high(01h)
  3565  0F56  07DA               	addwf	(scroll@len+1),f
  3566  0F57  2F58               	goto	l3289
  3567                           	line	626
  3568                           	
  3569  0F58                     l862:	
  3570                           	line	623
  3571                           	
  3572  0F58                     l3289:	
  3573  0F58  085B               	movf	(scroll@i),w
  3574  0F59  0748               	addwf	(scroll@str),w
  3575  0F5A  0084               	movwf	fsr0
  3576  0F5B  0849               	movf	(scroll@str+1),w
  3577  0F5C  1803               	skipnc
  3578  0F5D  0A49               	incf	(scroll@str+1),w
  3579  0F5E  00FF               	movwf	btemp+1
  3580  0F5F  120A  158A  2000   	fcall	stringtab
              120A  158A         
  3581  0F64  3800               	iorlw	0
  3582  0F65  1D03               	skipz
  3583  0F66  2F68               	goto	u4341
  3584  0F67  2F69               	goto	u4340
  3585  0F68                     u4341:
  3586  0F68  2F4B               	goto	l3287
  3587  0F69                     u4340:
  3588  0F69  2F6A               	goto	l3291
  3589                           	
  3590  0F6A                     l864:	
  3591                           	line	627
  3592                           	
  3593  0F6A                     l3291:	
  3594                           ;prev11.c: 626: }
  3595                           ;prev11.c: 627: en=len-1;
  3596  0F6A  0859               	movf	(scroll@len),w
  3597  0F6B  3EFF               	addlw	low(-1)
  3598  0F6C  00D1               	movwf	(scroll@en)
  3599  0F6D  085A               	movf	(scroll@len+1),w
  3600  0F6E  1803               	skipnc
  3601  0F6F  3E01               	addlw	1
  3602  0F70  3EFF               	addlw	high(-1)
  3603  0F71  00D2               	movwf	1+(scroll@en)
  3604                           	line	629
  3605                           	
  3606  0F72                     l3293:	
  3607                           ;prev11.c: 629: if(len>32)
  3608  0F72  085A               	movf	(scroll@len+1),w
  3609  0F73  3A80               	xorlw	80h
  3610  0F74  00FF               	movwf	btemp+1
  3611  0F75  3080               	movlw	(high(021h))^80h
  3612  0F76  027F               	subwf	btemp+1,w
  3613  0F77  1D03               	skipz
  3614  0F78  2F7B               	goto	u4355
  3615  0F79  3021               	movlw	low(021h)
  3616  0F7A  0259               	subwf	(scroll@len),w
  3617  0F7B                     u4355:
  3618                           
  3619  0F7B  1C03               	skipc
  3620  0F7C  2F7E               	goto	u4351
  3621  0F7D  2F7F               	goto	u4350
  3622  0F7E                     u4351:
  3623  0F7E  2FFF               	goto	l874
  3624  0F7F                     u4350:
  3625                           	line	633
  3626                           	
  3627  0F7F                     l3295:	
  3628                           ;prev11.c: 630: {
  3629                           ;prev11.c: 632: char dest [32] ;
  3630                           ;prev11.c: 633: int startat=0;
  3631  0F7F  1283               	bcf	status, 5	;RP0=0, select bank0
  3632  0F80  1303               	bcf	status, 6	;RP1=0, select bank0
  3633  0F81  01D3               	clrf	(scroll@startat)
  3634  0F82  01D4               	clrf	(scroll@startat+1)
  3635                           	line	634
  3636                           	
  3637  0F83                     l3297:	
  3638                           ;prev11.c: 634: int endat=31;
  3639  0F83  301F               	movlw	low(01Fh)
  3640  0F84  00D5               	movwf	(scroll@endat)
  3641  0F85  3000               	movlw	high(01Fh)
  3642  0F86  00D6               	movwf	((scroll@endat))+1
  3643  0F87  2F88               	goto	l3299
  3644                           	line	635
  3645                           ;prev11.c: 635: START:
  3646                           	
  3647  0F88                     l866:	
  3648                           	line	636
  3649                           	
  3650  0F88                     l3299:	
  3651                           ;prev11.c: 636: i=0;
  3652  0F88  1283               	bcf	status, 5	;RP0=0, select bank0
  3653  0F89  1303               	bcf	status, 6	;RP1=0, select bank0
  3654  0F8A  01DB               	clrf	(scroll@i)
  3655  0F8B  01DC               	clrf	(scroll@i+1)
  3656                           	line	637
  3657                           ;prev11.c: 637: while(i++<32)
  3658  0F8C  2FA0               	goto	l3305
  3659                           	
  3660  0F8D                     l868:	
  3661                           	line	640
  3662                           	
  3663  0F8D                     l3301:	
  3664                           ;prev11.c: 638: {
  3665                           ;prev11.c: 640: delay(3000);
  3666  0F8D  30B8               	movlw	low(0BB8h)
  3667  0F8E  00F0               	movwf	(?_delay)
  3668  0F8F  300B               	movlw	high(0BB8h)
  3669  0F90  00F1               	movwf	((?_delay))+1
  3670  0F91  120A  158A  2384   	fcall	_delay
              120A  158A         
  3671                           	line	641
  3672                           	
  3673  0F96                     l3303:	
  3674                           ;prev11.c: 641: cmd(0x1E);
  3675  0F96  301E               	movlw	low(01Eh)
  3676  0F97  00F8               	movwf	(?_cmd)
  3677  0F98  3000               	movlw	high(01Eh)
  3678  0F99  00F9               	movwf	((?_cmd))+1
  3679  0F9A  120A  158A  23B1   	fcall	_cmd
              120A  158A         
  3680  0F9F  2FA0               	goto	l3305
  3681                           	line	644
  3682                           	
  3683  0FA0                     l867:	
  3684                           	line	637
  3685                           	
  3686  0FA0                     l3305:	
  3687  0FA0  3001               	movlw	low(01h)
  3688  0FA1  1283               	bcf	status, 5	;RP0=0, select bank0
  3689  0FA2  1303               	bcf	status, 6	;RP1=0, select bank0
  3690  0FA3  07DB               	addwf	(scroll@i),f
  3691  0FA4  1803               	skipnc
  3692  0FA5  0ADC               	incf	(scroll@i+1),f
  3693  0FA6  3000               	movlw	high(01h)
  3694  0FA7  07DC               	addwf	(scroll@i+1),f
  3695  0FA8  085C               	movf	((scroll@i+1)),w
  3696  0FA9  3A80               	xorlw	80h
  3697  0FAA  00FF               	movwf	btemp+1
  3698  0FAB  3080               	movlw	(high(021h))^80h
  3699  0FAC  027F               	subwf	btemp+1,w
  3700  0FAD  1D03               	skipz
  3701  0FAE  2FB1               	goto	u4365
  3702  0FAF  3021               	movlw	low(021h)
  3703  0FB0  025B               	subwf	((scroll@i)),w
  3704  0FB1                     u4365:
  3705                           
  3706  0FB1  1C03               	skipc
  3707  0FB2  2FB4               	goto	u4361
  3708  0FB3  2FB5               	goto	u4360
  3709  0FB4                     u4361:
  3710  0FB4  2F8D               	goto	l3301
  3711  0FB5                     u4360:
  3712  0FB5  2FB6               	goto	l3307
  3713                           	
  3714  0FB6                     l869:	
  3715                           	line	646
  3716                           	
  3717  0FB6                     l3307:	
  3718                           ;prev11.c: 644: }
  3719                           ;prev11.c: 646: i=0;
  3720  0FB6  1283               	bcf	status, 5	;RP0=0, select bank0
  3721  0FB7  1303               	bcf	status, 6	;RP1=0, select bank0
  3722  0FB8  01DB               	clrf	(scroll@i)
  3723  0FB9  01DC               	clrf	(scroll@i+1)
  3724                           	line	647
  3725                           ;prev11.c: 647: while(i++<32)
  3726  0FBA  2FCE               	goto	l3313
  3727                           	
  3728  0FBB                     l871:	
  3729                           	line	650
  3730                           	
  3731  0FBB                     l3309:	
  3732                           ;prev11.c: 648: {
  3733                           ;prev11.c: 650: delay(3000);
  3734  0FBB  30B8               	movlw	low(0BB8h)
  3735  0FBC  00F0               	movwf	(?_delay)
  3736  0FBD  300B               	movlw	high(0BB8h)
  3737  0FBE  00F1               	movwf	((?_delay))+1
  3738  0FBF  120A  158A  2384   	fcall	_delay
              120A  158A         
  3739                           	line	651
  3740                           	
  3741  0FC4                     l3311:	
  3742                           ;prev11.c: 651: cmd(0x18);
  3743  0FC4  3018               	movlw	low(018h)
  3744  0FC5  00F8               	movwf	(?_cmd)
  3745  0FC6  3000               	movlw	high(018h)
  3746  0FC7  00F9               	movwf	((?_cmd))+1
  3747  0FC8  120A  158A  23B1   	fcall	_cmd
              120A  158A         
  3748  0FCD  2FCE               	goto	l3313
  3749                           	line	654
  3750                           	
  3751  0FCE                     l870:	
  3752                           	line	647
  3753                           	
  3754  0FCE                     l3313:	
  3755  0FCE  3001               	movlw	low(01h)
  3756  0FCF  1283               	bcf	status, 5	;RP0=0, select bank0
  3757  0FD0  1303               	bcf	status, 6	;RP1=0, select bank0
  3758  0FD1  07DB               	addwf	(scroll@i),f
  3759  0FD2  1803               	skipnc
  3760  0FD3  0ADC               	incf	(scroll@i+1),f
  3761  0FD4  3000               	movlw	high(01h)
  3762  0FD5  07DC               	addwf	(scroll@i+1),f
  3763  0FD6  085C               	movf	((scroll@i+1)),w
  3764  0FD7  3A80               	xorlw	80h
  3765  0FD8  00FF               	movwf	btemp+1
  3766  0FD9  3080               	movlw	(high(021h))^80h
  3767  0FDA  027F               	subwf	btemp+1,w
  3768  0FDB  1D03               	skipz
  3769  0FDC  2FDF               	goto	u4375
  3770  0FDD  3021               	movlw	low(021h)
  3771  0FDE  025B               	subwf	((scroll@i)),w
  3772  0FDF                     u4375:
  3773                           
  3774  0FDF  1C03               	skipc
  3775  0FE0  2FE2               	goto	u4371
  3776  0FE1  2FE3               	goto	u4370
  3777  0FE2                     u4371:
  3778  0FE2  2FBB               	goto	l3309
  3779  0FE3                     u4370:
  3780  0FE3  2FE4               	goto	l3315
  3781                           	
  3782  0FE4                     l872:	
  3783                           	line	655
  3784                           	
  3785  0FE4                     l3315:	
  3786                           ;prev11.c: 654: }
  3787                           ;prev11.c: 655: if(loopn++<loops)
  3788  0FE4  1283               	bcf	status, 5	;RP0=0, select bank0
  3789  0FE5  1303               	bcf	status, 6	;RP1=0, select bank0
  3790  0FE6  0858               	movf	(scroll@loopn+1),w
  3791  0FE7  00CD               	movwf	(??_scroll+0)+0+1
  3792  0FE8  0857               	movf	(scroll@loopn),w
  3793  0FE9  00CC               	movwf	(??_scroll+0)+0
  3794  0FEA  3001               	movlw	(01h)
  3795  0FEB  07D7               	addwf	(scroll@loopn),f
  3796  0FEC  1803               	skipnc
  3797  0FED  0AD8               	incf	(scroll@loopn+1),f
  3798  0FEE  084D               	movf	1+(??_scroll+0)+0,w
  3799  0FEF  3A80               	xorlw	80h
  3800  0FF0  00CE               	movwf	(??_scroll+2)+0
  3801  0FF1  084B               	movf	(scroll@loops+1),w
  3802  0FF2  3A80               	xorlw	80h
  3803  0FF3  024E               	subwf	(??_scroll+2)+0,w
  3804  0FF4  1D03               	skipz
  3805  0FF5  2FF8               	goto	u4385
  3806  0FF6  084A               	movf	(scroll@loops),w
  3807  0FF7  024C               	subwf	0+(??_scroll+0)+0,w
  3808  0FF8                     u4385:
  3809                           
  3810  0FF8  1803               	skipnc
  3811  0FF9  2FFB               	goto	u4381
  3812  0FFA  2FFC               	goto	u4380
  3813  0FFB                     u4381:
  3814  0FFB  2FFF               	goto	l874
  3815  0FFC                     u4380:
  3816  0FFC  2F88               	goto	l3299
  3817                           	line	656
  3818                           	
  3819  0FFD                     l3317:	
  3820                           ;prev11.c: 656: goto START;
  3821  0FFD  2F88               	goto	l3299
  3822                           	
  3823  0FFE                     l873:	
  3824  0FFE  2FFF               	goto	l874
  3825                           	line	657
  3826                           	
  3827  0FFF                     l865:	
  3828                           	line	662
  3829                           	
  3830  0FFF                     l874:	
  3831  0FFF  0008               	return
  3832                           	opt stack 0
  3833                           GLOBAL	__end_of_scroll
  3834  1000                     	__end_of_scroll:
  3835 ;; =============== function _scroll ends ============
  3836                           
  3837                           	signat	_scroll,8312
  3838                           	global	_init_fun
  3839                           psect	text541,local,class=CODE,delta=2
  3840                           global __ptext541
  3841  0BFB                     __ptext541:
  3842                           
  3843 ;; *************** function _init_fun *****************
  3844 ;; Defined at:
  3845 ;;		line 134 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;		None               void
  3852 ;; Registers used:
  3853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3859 ;;      Params:         0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0
  3862 ;;      Totals:         0       0       0       0       0
  3863 ;;Total ram usage:        0 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    5
  3866 ;; This function calls:
  3867 ;;		_write
  3868 ;; This function is called by:
  3869 ;;		_startswitch
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           psect	text541
  3873                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3874                           	line	134
  3875                           	global	__size_of_init_fun
  3876  0026                     	__size_of_init_fun	equ	__end_of_init_fun-_init_fun
  3877                           	
  3878  0BFB                     _init_fun:	
  3879                           	opt	stack 0
  3880                           ; Regs used in _init_fun: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3881                           	line	135
  3882                           	
  3883  0BFB                     l3269:	
  3884                           ;prev11.c: 135: if(done_init==0)
  3885  0BFB  1283               	bcf	status, 5	;RP0=0, select bank0
  3886  0BFC  1303               	bcf	status, 6	;RP1=0, select bank0
  3887  0BFD  0864               	movf	((_done_init+1)),w
  3888  0BFE  0463               	iorwf	((_done_init)),w
  3889  0BFF  1D03               	skipz
  3890  0C00  2C02               	goto	u4331
  3891  0C01  2C03               	goto	u4330
  3892  0C02                     u4331:
  3893  0C02  2C20               	goto	l708
  3894  0C03                     u4330:
  3895                           	line	138
  3896                           	
  3897  0C03                     l3271:	
  3898                           ;prev11.c: 136: {
  3899                           ;prev11.c: 138: TRISA=0b110000;
  3900  0C03  3030               	movlw	(030h)
  3901  0C04  1683               	bsf	status, 5	;RP0=1, select bank1
  3902  0C05  1303               	bcf	status, 6	;RP1=0, select bank1
  3903  0C06  0085               	movwf	(133)^080h	;volatile
  3904                           	line	139
  3905                           	
  3906  0C07                     l3273:	
  3907                           ;prev11.c: 139: PORTA=0x0;
  3908  0C07  1283               	bcf	status, 5	;RP0=0, select bank0
  3909  0C08  1303               	bcf	status, 6	;RP1=0, select bank0
  3910  0C09  0185               	clrf	(5)	;volatile
  3911                           	line	140
  3912                           	
  3913  0C0A                     l3275:	
  3914                           ;prev11.c: 140: done_init=1;
  3915  0C0A  3001               	movlw	low(01h)
  3916  0C0B  00E3               	movwf	(_done_init)
  3917  0C0C  3000               	movlw	high(01h)
  3918  0C0D  00E4               	movwf	((_done_init))+1
  3919                           	line	141
  3920                           	
  3921  0C0E                     l3277:	
  3922                           ;prev11.c: 141: write("Sensing...",1,1);
  3923  0C0E  30B1               	movlw	low(STR_1|8000h)
  3924  0C0F  00C2               	movwf	(?_write)
  3925  0C10  3088               	movlw	high(STR_1|8000h)
  3926  0C11  00C3               	movwf	((?_write))+1
  3927  0C12  3001               	movlw	low(01h)
  3928  0C13  00C4               	movwf	0+(?_write)+02h
  3929  0C14  3000               	movlw	high(01h)
  3930  0C15  00C5               	movwf	(0+(?_write)+02h)+1
  3931  0C16  3001               	movlw	low(01h)
  3932  0C17  00C6               	movwf	0+(?_write)+04h
  3933  0C18  3000               	movlw	high(01h)
  3934  0C19  00C7               	movwf	(0+(?_write)+04h)+1
  3935  0C1A  120A  158A  25EF   	fcall	_write
              120A  158A         
  3936  0C1F  2C20               	goto	l708
  3937                           	line	142
  3938                           	
  3939  0C20                     l707:	
  3940                           	line	143
  3941                           	
  3942  0C20                     l708:	
  3943  0C20  0008               	return
  3944                           	opt stack 0
  3945                           GLOBAL	__end_of_init_fun
  3946  0C21                     	__end_of_init_fun:
  3947 ;; =============== function _init_fun ends ============
  3948                           
  3949                           	signat	_init_fun,88
  3950                           	global	_write
  3951                           psect	text542,local,class=CODE,delta=2
  3952                           global __ptext542
  3953  0DEF                     __ptext542:
  3954                           
  3955 ;; *************** function _write *****************
  3956 ;; Defined at:
  3957 ;;		line 594 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  str             2   34[BANK0 ] PTR unsigned char 
  3960 ;;		 -> STR_16(4), STR_13(4), STR_10(4), getlogicseq@str(32), 
  3961 ;;		 -> STR_7(27), STR_6(8), STR_5(15), STR_4(38), 
  3962 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), STR_3(17), 
  3963 ;;		 -> lo(5), STR_1(11), 
  3964 ;;  line            2   36[BANK0 ] int 
  3965 ;;  erase           2   38[BANK0 ] int 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  i               2   12[COMMON] int 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;		None               void
  3970 ;; Registers used:
  3971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3977 ;;      Params:         0       6       0       0       0
  3978 ;;      Locals:         2       0       0       0       0
  3979 ;;      Temps:          2       0       0       0       0
  3980 ;;      Totals:         4       6       0       0       0
  3981 ;;Total ram usage:       10 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    4
  3984 ;; This function calls:
  3985 ;;		_clearlcd
  3986 ;;		_cmd
  3987 ;;		_dat
  3988 ;; This function is called by:
  3989 ;;		_init_fun
  3990 ;;		_startswitch
  3991 ;;		_getlogicseq
  3992 ;;		_scroll
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           psect	text542
  3996                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  3997                           	line	594
  3998                           	global	__size_of_write
  3999  0064                     	__size_of_write	equ	__end_of_write-_write
  4000                           	
  4001  0DEF                     _write:	
  4002                           	opt	stack 1
  4003                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4004                           	line	595
  4005                           	
  4006  0DEF                     l3251:	
  4007                           ;prev11.c: 595: if(erase==1)
  4008  0DEF  3001               	movlw	01h
  4009  0DF0  1283               	bcf	status, 5	;RP0=0, select bank0
  4010  0DF1  1303               	bcf	status, 6	;RP1=0, select bank0
  4011  0DF2  0646               	xorwf	(write@erase),w
  4012  0DF3  0447               	iorwf	(write@erase+1),w
  4013  0DF4  1D03               	skipz
  4014  0DF5  2DF7               	goto	u4301
  4015  0DF6  2DF8               	goto	u4300
  4016  0DF7                     u4301:
  4017  0DF7  2DFE               	goto	l3255
  4018  0DF8                     u4300:
  4019                           	line	596
  4020                           	
  4021  0DF8                     l3253:	
  4022                           ;prev11.c: 596: clearlcd();
  4023  0DF8  120A  158A  235A   	fcall	_clearlcd
              120A  158A         
  4024  0DFD  2DFE               	goto	l3255
  4025                           	
  4026  0DFE                     l853:	
  4027                           	line	598
  4028                           	
  4029  0DFE                     l3255:	
  4030                           ;prev11.c: 598: if(line==2)
  4031  0DFE  3002               	movlw	02h
  4032  0DFF  1283               	bcf	status, 5	;RP0=0, select bank0
  4033  0E00  1303               	bcf	status, 6	;RP1=0, select bank0
  4034  0E01  0644               	xorwf	(write@line),w
  4035  0E02  0445               	iorwf	(write@line+1),w
  4036  0E03  1D03               	skipz
  4037  0E04  2E06               	goto	u4311
  4038  0E05  2E07               	goto	u4310
  4039  0E06                     u4311:
  4040  0E06  2E11               	goto	l3259
  4041  0E07                     u4310:
  4042                           	line	599
  4043                           	
  4044  0E07                     l3257:	
  4045                           ;prev11.c: 599: cmd(0xC0);
  4046  0E07  30C0               	movlw	low(0C0h)
  4047  0E08  00F8               	movwf	(?_cmd)
  4048  0E09  3000               	movlw	high(0C0h)
  4049  0E0A  00F9               	movwf	((?_cmd))+1
  4050  0E0B  120A  158A  23B1   	fcall	_cmd
              120A  158A         
  4051  0E10  2E1B               	goto	l3261
  4052                           	line	600
  4053                           	
  4054  0E11                     l854:	
  4055                           	line	601
  4056                           	
  4057  0E11                     l3259:	
  4058                           ;prev11.c: 600: else
  4059                           ;prev11.c: 601: cmd(0x2);
  4060  0E11  3002               	movlw	low(02h)
  4061  0E12  00F8               	movwf	(?_cmd)
  4062  0E13  3000               	movlw	high(02h)
  4063  0E14  00F9               	movwf	((?_cmd))+1
  4064  0E15  120A  158A  23B1   	fcall	_cmd
              120A  158A         
  4065  0E1A  2E1B               	goto	l3261
  4066                           	
  4067  0E1B                     l855:	
  4068                           	line	603
  4069                           	
  4070  0E1B                     l3261:	
  4071                           ;prev11.c: 603: int i=0;
  4072  0E1B  01FC               	clrf	(write@i)
  4073  0E1C  01FD               	clrf	(write@i+1)
  4074                           	line	604
  4075                           ;prev11.c: 604: while(str[i]!='\0')
  4076  0E1D  2E3E               	goto	l3267
  4077                           	
  4078  0E1E                     l857:	
  4079                           	line	606
  4080                           	
  4081  0E1E                     l3263:	
  4082                           ;prev11.c: 605: {
  4083                           ;prev11.c: 606: dat(str[i]);
  4084  0E1E  087C               	movf	(write@i),w
  4085  0E1F  1283               	bcf	status, 5	;RP0=0, select bank0
  4086  0E20  1303               	bcf	status, 6	;RP1=0, select bank0
  4087  0E21  0742               	addwf	(write@str),w
  4088  0E22  0084               	movwf	fsr0
  4089  0E23  0843               	movf	(write@str+1),w
  4090  0E24  1803               	skipnc
  4091  0E25  0A43               	incf	(write@str+1),w
  4092  0E26  00FF               	movwf	btemp+1
  4093  0E27  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4094  0E2C  00FA               	movwf	(??_write+0)+0
  4095  0E2D  01FB               	clrf	(??_write+0)+0+1
  4096  0E2E  087A               	movf	0+(??_write+0)+0,w
  4097  0E2F  00F8               	movwf	(?_dat)
  4098  0E30  087B               	movf	1+(??_write+0)+0,w
  4099  0E31  00F9               	movwf	(?_dat+1)
  4100  0E32  120A  158A  23D6   	fcall	_dat
              120A  158A         
  4101                           	line	607
  4102                           	
  4103  0E37                     l3265:	
  4104                           ;prev11.c: 607: i++;
  4105  0E37  3001               	movlw	low(01h)
  4106  0E38  07FC               	addwf	(write@i),f
  4107  0E39  1803               	skipnc
  4108  0E3A  0AFD               	incf	(write@i+1),f
  4109  0E3B  3000               	movlw	high(01h)
  4110  0E3C  07FD               	addwf	(write@i+1),f
  4111  0E3D  2E3E               	goto	l3267
  4112                           	line	608
  4113                           	
  4114  0E3E                     l856:	
  4115                           	line	604
  4116                           	
  4117  0E3E                     l3267:	
  4118  0E3E  087C               	movf	(write@i),w
  4119  0E3F  1283               	bcf	status, 5	;RP0=0, select bank0
  4120  0E40  1303               	bcf	status, 6	;RP1=0, select bank0
  4121  0E41  0742               	addwf	(write@str),w
  4122  0E42  0084               	movwf	fsr0
  4123  0E43  0843               	movf	(write@str+1),w
  4124  0E44  1803               	skipnc
  4125  0E45  0A43               	incf	(write@str+1),w
  4126  0E46  00FF               	movwf	btemp+1
  4127  0E47  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4128  0E4C  3800               	iorlw	0
  4129  0E4D  1D03               	skipz
  4130  0E4E  2E50               	goto	u4321
  4131  0E4F  2E51               	goto	u4320
  4132  0E50                     u4321:
  4133  0E50  2E1E               	goto	l3263
  4134  0E51                     u4320:
  4135  0E51  2E52               	goto	l859
  4136                           	
  4137  0E52                     l858:	
  4138                           	line	611
  4139                           	
  4140  0E52                     l859:	
  4141  0E52  0008               	return
  4142                           	opt stack 0
  4143                           GLOBAL	__end_of_write
  4144  0E53                     	__end_of_write:
  4145 ;; =============== function _write ends ============
  4146                           
  4147                           	signat	_write,12408
  4148                           	global	_clearlcd
  4149                           psect	text543,local,class=CODE,delta=2
  4150                           global __ptext543
  4151  0B5A                     __ptext543:
  4152                           
  4153 ;; *************** function _clearlcd *****************
  4154 ;; Defined at:
  4155 ;;		line 536 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;		None               void
  4162 ;; Registers used:
  4163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4169 ;;      Params:         0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0
  4172 ;;      Totals:         0       0       0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    3
  4176 ;; This function calls:
  4177 ;;		_cmd
  4178 ;; This function is called by:
  4179 ;;		_write
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           psect	text543
  4183                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4184                           	line	536
  4185                           	global	__size_of_clearlcd
  4186  000A                     	__size_of_clearlcd	equ	__end_of_clearlcd-_clearlcd
  4187                           	
  4188  0B5A                     _clearlcd:	
  4189                           	opt	stack 1
  4190                           ; Regs used in _clearlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4191                           	line	537
  4192                           	
  4193  0B5A                     l3249:	
  4194                           ;prev11.c: 537: cmd(0x01);
  4195  0B5A  3001               	movlw	low(01h)
  4196  0B5B  00F8               	movwf	(?_cmd)
  4197  0B5C  3000               	movlw	high(01h)
  4198  0B5D  00F9               	movwf	((?_cmd))+1
  4199  0B5E  120A  158A  23B1   	fcall	_cmd
              120A  158A         
  4200                           	line	538
  4201                           	
  4202  0B63                     l837:	
  4203  0B63  0008               	return
  4204                           	opt stack 0
  4205                           GLOBAL	__end_of_clearlcd
  4206  0B64                     	__end_of_clearlcd:
  4207 ;; =============== function _clearlcd ends ============
  4208                           
  4209                           	signat	_clearlcd,88
  4210                           	global	_scan
  4211                           psect	text544,local,class=CODE,delta=2
  4212                           global __ptext544
  4213  00F3                     __ptext544:
  4214                           
  4215 ;; *************** function _scan *****************
  4216 ;; Defined at:
  4217 ;;		line 676 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2    4[COMMON] int 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4231 ;;      Params:         2       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0
  4234 ;;      Totals:         2       0       0       0       0
  4235 ;;Total ram usage:        2 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    2
  4238 ;; This function calls:
  4239 ;;		_actrow
  4240 ;; This function is called by:
  4241 ;;		_getlogicseq
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           psect	text544
  4245                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4246                           	line	676
  4247                           	global	__size_of_scan
  4248  00E8                     	__size_of_scan	equ	__end_of_scan-_scan
  4249                           	
  4250  00F3                     _scan:	
  4251                           	opt	stack 4
  4252                           ; Regs used in _scan: [wreg+status,2+status,0+pclath+cstack]
  4253                           	line	677
  4254                           	
  4255  00F3                     l3141:	
  4256                           ;prev11.c: 677: actrow(1) ;
  4257  00F3  3001               	movlw	low(01h)
  4258  00F4  00F2               	movwf	(?_actrow)
  4259  00F5  3000               	movlw	high(01h)
  4260  00F6  00F3               	movwf	((?_actrow))+1
  4261  00F7  120A  158A  2518   	fcall	_actrow
              120A  118A         
  4262                           	line	678
  4263                           	
  4264  00FC                     l3143:	
  4265                           ;prev11.c: 678: if( RC2==1)
  4266  00FC  1283               	bcf	status, 5	;RP0=0, select bank0
  4267  00FD  1303               	bcf	status, 6	;RP1=0, select bank0
  4268  00FE  1D07               	btfss	(58/8),(58)&7
  4269  00FF  2901               	goto	u4141
  4270  0100  2902               	goto	u4140
  4271  0101                     u4141:
  4272  0101  2907               	goto	l880
  4273  0102                     u4140:
  4274                           	line	679
  4275                           	
  4276  0102                     l3145:	
  4277                           ;prev11.c: 679: return 0;
  4278  0102  01F4               	clrf	(?_scan)
  4279  0103  01F5               	clrf	(?_scan+1)
  4280  0104  29DA               	goto	l881
  4281                           	
  4282  0105                     l3147:	
  4283  0105  29DA               	goto	l881
  4284                           	
  4285  0106                     l3149:	
  4286  0106  292A               	goto	l3167
  4287                           	line	680
  4288                           	
  4289  0107                     l880:	
  4290                           ;prev11.c: 680: else if(RC3==1)
  4291  0107  1D87               	btfss	(59/8),(59)&7
  4292  0108  290A               	goto	u4151
  4293  0109  290B               	goto	u4150
  4294  010A                     u4151:
  4295  010A  2912               	goto	l883
  4296  010B                     u4150:
  4297                           	line	681
  4298                           	
  4299  010B                     l3151:	
  4300                           ;prev11.c: 681: return 1;
  4301  010B  3001               	movlw	low(01h)
  4302  010C  00F4               	movwf	(?_scan)
  4303  010D  3000               	movlw	high(01h)
  4304  010E  00F5               	movwf	((?_scan))+1
  4305  010F  29DA               	goto	l881
  4306                           	
  4307  0110                     l3153:	
  4308  0110  29DA               	goto	l881
  4309                           	
  4310  0111                     l3155:	
  4311  0111  292A               	goto	l3167
  4312                           	line	682
  4313                           	
  4314  0112                     l883:	
  4315                           ;prev11.c: 682: else if(RB6==1)
  4316  0112  1F06               	btfss	(54/8),(54)&7
  4317  0113  2915               	goto	u4161
  4318  0114  2916               	goto	u4160
  4319  0115                     u4161:
  4320  0115  291D               	goto	l885
  4321  0116                     u4160:
  4322                           	line	683
  4323                           	
  4324  0116                     l3157:	
  4325                           ;prev11.c: 683: return 2;
  4326  0116  3002               	movlw	low(02h)
  4327  0117  00F4               	movwf	(?_scan)
  4328  0118  3000               	movlw	high(02h)
  4329  0119  00F5               	movwf	((?_scan))+1
  4330  011A  29DA               	goto	l881
  4331                           	
  4332  011B                     l3159:	
  4333  011B  29DA               	goto	l881
  4334                           	
  4335  011C                     l3161:	
  4336  011C  292A               	goto	l3167
  4337                           	line	684
  4338                           	
  4339  011D                     l885:	
  4340                           ;prev11.c: 684: else if(RB7==1)
  4341  011D  1F86               	btfss	(55/8),(55)&7
  4342  011E  2920               	goto	u4171
  4343  011F  2921               	goto	u4170
  4344  0120                     u4171:
  4345  0120  292A               	goto	l3167
  4346  0121                     u4170:
  4347                           	line	685
  4348                           	
  4349  0121                     l3163:	
  4350                           ;prev11.c: 685: return 3;
  4351  0121  3003               	movlw	low(03h)
  4352  0122  00F4               	movwf	(?_scan)
  4353  0123  3000               	movlw	high(03h)
  4354  0124  00F5               	movwf	((?_scan))+1
  4355  0125  29DA               	goto	l881
  4356                           	
  4357  0126                     l3165:	
  4358  0126  29DA               	goto	l881
  4359                           	
  4360  0127                     l887:	
  4361  0127  292A               	goto	l3167
  4362                           	line	687
  4363                           	
  4364  0128                     l886:	
  4365  0128  292A               	goto	l3167
  4366                           	
  4367  0129                     l884:	
  4368  0129  292A               	goto	l3167
  4369                           	
  4370  012A                     l882:	
  4371                           	
  4372  012A                     l3167:	
  4373                           ;prev11.c: 687: actrow(2) ;
  4374  012A  3002               	movlw	low(02h)
  4375  012B  00F2               	movwf	(?_actrow)
  4376  012C  3000               	movlw	high(02h)
  4377  012D  00F3               	movwf	((?_actrow))+1
  4378  012E  120A  158A  2518   	fcall	_actrow
              120A  118A         
  4379                           	line	689
  4380                           	
  4381  0133                     l3169:	
  4382                           ;prev11.c: 689: if( RC2==1)
  4383  0133  1283               	bcf	status, 5	;RP0=0, select bank0
  4384  0134  1303               	bcf	status, 6	;RP1=0, select bank0
  4385  0135  1D07               	btfss	(58/8),(58)&7
  4386  0136  2938               	goto	u4181
  4387  0137  2939               	goto	u4180
  4388  0138                     u4181:
  4389  0138  2940               	goto	l888
  4390  0139                     u4180:
  4391                           	line	690
  4392                           	
  4393  0139                     l3171:	
  4394                           ;prev11.c: 690: return 4;
  4395  0139  3004               	movlw	low(04h)
  4396  013A  00F4               	movwf	(?_scan)
  4397  013B  3000               	movlw	high(04h)
  4398  013C  00F5               	movwf	((?_scan))+1
  4399  013D  29DA               	goto	l881
  4400                           	
  4401  013E                     l3173:	
  4402  013E  29DA               	goto	l881
  4403                           	
  4404  013F                     l3175:	
  4405  013F  2963               	goto	l3193
  4406                           	line	691
  4407                           	
  4408  0140                     l888:	
  4409                           ;prev11.c: 691: else if(RC3==1)
  4410  0140  1D87               	btfss	(59/8),(59)&7
  4411  0141  2943               	goto	u4191
  4412  0142  2944               	goto	u4190
  4413  0143                     u4191:
  4414  0143  294B               	goto	l890
  4415  0144                     u4190:
  4416                           	line	692
  4417                           	
  4418  0144                     l3177:	
  4419                           ;prev11.c: 692: return 5;
  4420  0144  3005               	movlw	low(05h)
  4421  0145  00F4               	movwf	(?_scan)
  4422  0146  3000               	movlw	high(05h)
  4423  0147  00F5               	movwf	((?_scan))+1
  4424  0148  29DA               	goto	l881
  4425                           	
  4426  0149                     l3179:	
  4427  0149  29DA               	goto	l881
  4428                           	
  4429  014A                     l3181:	
  4430  014A  2963               	goto	l3193
  4431                           	line	693
  4432                           	
  4433  014B                     l890:	
  4434                           ;prev11.c: 693: else if(RB6==1)
  4435  014B  1F06               	btfss	(54/8),(54)&7
  4436  014C  294E               	goto	u4201
  4437  014D  294F               	goto	u4200
  4438  014E                     u4201:
  4439  014E  2956               	goto	l892
  4440  014F                     u4200:
  4441                           	line	694
  4442                           	
  4443  014F                     l3183:	
  4444                           ;prev11.c: 694: return 6;
  4445  014F  3006               	movlw	low(06h)
  4446  0150  00F4               	movwf	(?_scan)
  4447  0151  3000               	movlw	high(06h)
  4448  0152  00F5               	movwf	((?_scan))+1
  4449  0153  29DA               	goto	l881
  4450                           	
  4451  0154                     l3185:	
  4452  0154  29DA               	goto	l881
  4453                           	
  4454  0155                     l3187:	
  4455  0155  2963               	goto	l3193
  4456                           	line	695
  4457                           	
  4458  0156                     l892:	
  4459                           ;prev11.c: 695: else if(RB7==1)
  4460  0156  1F86               	btfss	(55/8),(55)&7
  4461  0157  2959               	goto	u4211
  4462  0158  295A               	goto	u4210
  4463  0159                     u4211:
  4464  0159  2963               	goto	l3193
  4465  015A                     u4210:
  4466                           	line	696
  4467                           	
  4468  015A                     l3189:	
  4469                           ;prev11.c: 696: return 7;
  4470  015A  3007               	movlw	low(07h)
  4471  015B  00F4               	movwf	(?_scan)
  4472  015C  3000               	movlw	high(07h)
  4473  015D  00F5               	movwf	((?_scan))+1
  4474  015E  29DA               	goto	l881
  4475                           	
  4476  015F                     l3191:	
  4477  015F  29DA               	goto	l881
  4478                           	
  4479  0160                     l894:	
  4480  0160  2963               	goto	l3193
  4481                           	line	698
  4482                           	
  4483  0161                     l893:	
  4484  0161  2963               	goto	l3193
  4485                           	
  4486  0162                     l891:	
  4487  0162  2963               	goto	l3193
  4488                           	
  4489  0163                     l889:	
  4490                           	
  4491  0163                     l3193:	
  4492                           ;prev11.c: 698: actrow(3) ;
  4493  0163  3003               	movlw	low(03h)
  4494  0164  00F2               	movwf	(?_actrow)
  4495  0165  3000               	movlw	high(03h)
  4496  0166  00F3               	movwf	((?_actrow))+1
  4497  0167  120A  158A  2518   	fcall	_actrow
              120A  118A         
  4498                           	line	700
  4499                           	
  4500  016C                     l3195:	
  4501                           ;prev11.c: 700: if( RC2==1)
  4502  016C  1283               	bcf	status, 5	;RP0=0, select bank0
  4503  016D  1303               	bcf	status, 6	;RP1=0, select bank0
  4504  016E  1D07               	btfss	(58/8),(58)&7
  4505  016F  2971               	goto	u4221
  4506  0170  2972               	goto	u4220
  4507  0171                     u4221:
  4508  0171  2979               	goto	l895
  4509  0172                     u4220:
  4510                           	line	701
  4511                           	
  4512  0172                     l3197:	
  4513                           ;prev11.c: 701: return 8;
  4514  0172  3008               	movlw	low(08h)
  4515  0173  00F4               	movwf	(?_scan)
  4516  0174  3000               	movlw	high(08h)
  4517  0175  00F5               	movwf	((?_scan))+1
  4518  0176  29DA               	goto	l881
  4519                           	
  4520  0177                     l3199:	
  4521  0177  29DA               	goto	l881
  4522                           	
  4523  0178                     l3201:	
  4524  0178  299C               	goto	l3219
  4525                           	line	702
  4526                           	
  4527  0179                     l895:	
  4528                           ;prev11.c: 702: else if(RC3==1)
  4529  0179  1D87               	btfss	(59/8),(59)&7
  4530  017A  297C               	goto	u4231
  4531  017B  297D               	goto	u4230
  4532  017C                     u4231:
  4533  017C  2984               	goto	l897
  4534  017D                     u4230:
  4535                           	line	703
  4536                           	
  4537  017D                     l3203:	
  4538                           ;prev11.c: 703: return 9;
  4539  017D  3009               	movlw	low(09h)
  4540  017E  00F4               	movwf	(?_scan)
  4541  017F  3000               	movlw	high(09h)
  4542  0180  00F5               	movwf	((?_scan))+1
  4543  0181  29DA               	goto	l881
  4544                           	
  4545  0182                     l3205:	
  4546  0182  29DA               	goto	l881
  4547                           	
  4548  0183                     l3207:	
  4549  0183  299C               	goto	l3219
  4550                           	line	704
  4551                           	
  4552  0184                     l897:	
  4553                           ;prev11.c: 704: else if(RB6==1)
  4554  0184  1F06               	btfss	(54/8),(54)&7
  4555  0185  2987               	goto	u4241
  4556  0186  2988               	goto	u4240
  4557  0187                     u4241:
  4558  0187  298F               	goto	l899
  4559  0188                     u4240:
  4560                           	line	705
  4561                           	
  4562  0188                     l3209:	
  4563                           ;prev11.c: 705: return 10;
  4564  0188  300A               	movlw	low(0Ah)
  4565  0189  00F4               	movwf	(?_scan)
  4566  018A  3000               	movlw	high(0Ah)
  4567  018B  00F5               	movwf	((?_scan))+1
  4568  018C  29DA               	goto	l881
  4569                           	
  4570  018D                     l3211:	
  4571  018D  29DA               	goto	l881
  4572                           	
  4573  018E                     l3213:	
  4574  018E  299C               	goto	l3219
  4575                           	line	706
  4576                           	
  4577  018F                     l899:	
  4578                           ;prev11.c: 706: else if(RB7==1)
  4579  018F  1F86               	btfss	(55/8),(55)&7
  4580  0190  2992               	goto	u4251
  4581  0191  2993               	goto	u4250
  4582  0192                     u4251:
  4583  0192  299C               	goto	l3219
  4584  0193                     u4250:
  4585                           	line	707
  4586                           	
  4587  0193                     l3215:	
  4588                           ;prev11.c: 707: return 11;
  4589  0193  300B               	movlw	low(0Bh)
  4590  0194  00F4               	movwf	(?_scan)
  4591  0195  3000               	movlw	high(0Bh)
  4592  0196  00F5               	movwf	((?_scan))+1
  4593  0197  29DA               	goto	l881
  4594                           	
  4595  0198                     l3217:	
  4596  0198  29DA               	goto	l881
  4597                           	
  4598  0199                     l901:	
  4599  0199  299C               	goto	l3219
  4600                           	line	710
  4601                           	
  4602  019A                     l900:	
  4603  019A  299C               	goto	l3219
  4604                           	
  4605  019B                     l898:	
  4606  019B  299C               	goto	l3219
  4607                           	
  4608  019C                     l896:	
  4609                           	
  4610  019C                     l3219:	
  4611                           ;prev11.c: 710: actrow(4) ;
  4612  019C  3004               	movlw	low(04h)
  4613  019D  00F2               	movwf	(?_actrow)
  4614  019E  3000               	movlw	high(04h)
  4615  019F  00F3               	movwf	((?_actrow))+1
  4616  01A0  120A  158A  2518   	fcall	_actrow
              120A  118A         
  4617                           	line	712
  4618                           	
  4619  01A5                     l3221:	
  4620                           ;prev11.c: 712: if( RC2==1)
  4621  01A5  1283               	bcf	status, 5	;RP0=0, select bank0
  4622  01A6  1303               	bcf	status, 6	;RP1=0, select bank0
  4623  01A7  1D07               	btfss	(58/8),(58)&7
  4624  01A8  29AA               	goto	u4261
  4625  01A9  29AB               	goto	u4260
  4626  01AA                     u4261:
  4627  01AA  29B2               	goto	l902
  4628  01AB                     u4260:
  4629                           	line	713
  4630                           	
  4631  01AB                     l3223:	
  4632                           ;prev11.c: 713: return 12;
  4633  01AB  300C               	movlw	low(0Ch)
  4634  01AC  00F4               	movwf	(?_scan)
  4635  01AD  3000               	movlw	high(0Ch)
  4636  01AE  00F5               	movwf	((?_scan))+1
  4637  01AF  29DA               	goto	l881
  4638                           	
  4639  01B0                     l3225:	
  4640  01B0  29DA               	goto	l881
  4641                           	
  4642  01B1                     l3227:	
  4643  01B1  29D5               	goto	l3245
  4644                           	line	714
  4645                           	
  4646  01B2                     l902:	
  4647                           ;prev11.c: 714: else if(RC3==1)
  4648  01B2  1D87               	btfss	(59/8),(59)&7
  4649  01B3  29B5               	goto	u4271
  4650  01B4  29B6               	goto	u4270
  4651  01B5                     u4271:
  4652  01B5  29BD               	goto	l904
  4653  01B6                     u4270:
  4654                           	line	715
  4655                           	
  4656  01B6                     l3229:	
  4657                           ;prev11.c: 715: return 13;
  4658  01B6  300D               	movlw	low(0Dh)
  4659  01B7  00F4               	movwf	(?_scan)
  4660  01B8  3000               	movlw	high(0Dh)
  4661  01B9  00F5               	movwf	((?_scan))+1
  4662  01BA  29DA               	goto	l881
  4663                           	
  4664  01BB                     l3231:	
  4665  01BB  29DA               	goto	l881
  4666                           	
  4667  01BC                     l3233:	
  4668  01BC  29D5               	goto	l3245
  4669                           	line	716
  4670                           	
  4671  01BD                     l904:	
  4672                           ;prev11.c: 716: else if(RB6==1)
  4673  01BD  1F06               	btfss	(54/8),(54)&7
  4674  01BE  29C0               	goto	u4281
  4675  01BF  29C1               	goto	u4280
  4676  01C0                     u4281:
  4677  01C0  29C8               	goto	l906
  4678  01C1                     u4280:
  4679                           	line	717
  4680                           	
  4681  01C1                     l3235:	
  4682                           ;prev11.c: 717: return 14;
  4683  01C1  300E               	movlw	low(0Eh)
  4684  01C2  00F4               	movwf	(?_scan)
  4685  01C3  3000               	movlw	high(0Eh)
  4686  01C4  00F5               	movwf	((?_scan))+1
  4687  01C5  29DA               	goto	l881
  4688                           	
  4689  01C6                     l3237:	
  4690  01C6  29DA               	goto	l881
  4691                           	
  4692  01C7                     l3239:	
  4693  01C7  29D5               	goto	l3245
  4694                           	line	718
  4695                           	
  4696  01C8                     l906:	
  4697                           ;prev11.c: 718: else if(RB7==1)
  4698  01C8  1F86               	btfss	(55/8),(55)&7
  4699  01C9  29CB               	goto	u4291
  4700  01CA  29CC               	goto	u4290
  4701  01CB                     u4291:
  4702  01CB  29D5               	goto	l3245
  4703  01CC                     u4290:
  4704                           	line	719
  4705                           	
  4706  01CC                     l3241:	
  4707                           ;prev11.c: 719: return 15;
  4708  01CC  300F               	movlw	low(0Fh)
  4709  01CD  00F4               	movwf	(?_scan)
  4710  01CE  3000               	movlw	high(0Fh)
  4711  01CF  00F5               	movwf	((?_scan))+1
  4712  01D0  29DA               	goto	l881
  4713                           	
  4714  01D1                     l3243:	
  4715  01D1  29DA               	goto	l881
  4716                           	
  4717  01D2                     l908:	
  4718  01D2  29D5               	goto	l3245
  4719                           	line	723
  4720                           	
  4721  01D3                     l907:	
  4722  01D3  29D5               	goto	l3245
  4723                           	
  4724  01D4                     l905:	
  4725  01D4  29D5               	goto	l3245
  4726                           	
  4727  01D5                     l903:	
  4728                           	
  4729  01D5                     l3245:	
  4730                           ;prev11.c: 723: return 99;
  4731  01D5  3063               	movlw	low(063h)
  4732  01D6  00F4               	movwf	(?_scan)
  4733  01D7  3000               	movlw	high(063h)
  4734  01D8  00F5               	movwf	((?_scan))+1
  4735  01D9  29DA               	goto	l881
  4736                           	
  4737  01DA                     l3247:	
  4738                           	line	727
  4739                           	
  4740  01DA                     l881:	
  4741  01DA  0008               	return
  4742                           	opt stack 0
  4743                           GLOBAL	__end_of_scan
  4744  01DB                     	__end_of_scan:
  4745 ;; =============== function _scan ends ============
  4746                           
  4747                           	signat	_scan,90
  4748                           	global	_initlcd
  4749                           psect	text545,local,class=CODE,delta=2
  4750                           global __ptext545
  4751  0C4B                     __ptext545:
  4752                           
  4753 ;; *************** function _initlcd *****************
  4754 ;; Defined at:
  4755 ;;		line 518 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;		None               void
  4762 ;; Registers used:
  4763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4769 ;;      Params:         0       0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0
  4772 ;;      Totals:         0       0       0       0       0
  4773 ;;Total ram usage:        0 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:    3
  4776 ;; This function calls:
  4777 ;;		_cmd
  4778 ;; This function is called by:
  4779 ;;		_main
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           psect	text545
  4783                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4784                           	line	518
  4785                           	global	__size_of_initlcd
  4786  002A                     	__size_of_initlcd	equ	__end_of_initlcd-_initlcd
  4787                           	
  4788  0C4B                     _initlcd:	
  4789                           	opt	stack 4
  4790                           ; Regs used in _initlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4791                           	line	520
  4792                           	
  4793  0C4B                     l3129:	
  4794                           ;prev11.c: 520: TRISC=0b111110;
  4795  0C4B  303E               	movlw	(03Eh)
  4796  0C4C  1683               	bsf	status, 5	;RP0=1, select bank1
  4797  0C4D  1303               	bcf	status, 6	;RP1=0, select bank1
  4798  0C4E  0087               	movwf	(135)^080h	;volatile
  4799                           	line	522
  4800                           	
  4801  0C4F                     l3131:	
  4802                           ;prev11.c: 522: TRISD=0x00;
  4803  0C4F  0188               	clrf	(136)^080h	;volatile
  4804                           	line	524
  4805                           	
  4806  0C50                     l3133:	
  4807                           ;prev11.c: 524: cmd(0x38);
  4808  0C50  3038               	movlw	low(038h)
  4809  0C51  00F8               	movwf	(?_cmd)
  4810  0C52  3000               	movlw	high(038h)
  4811  0C53  00F9               	movwf	((?_cmd))+1
  4812  0C54  120A  158A  23B1   	fcall	_cmd
              120A  158A         
  4813                           	line	526
  4814                           	
  4815  0C59                     l3135:	
  4816                           ;prev11.c: 526: cmd(0x0C);
  4817  0C59  300C               	movlw	low(0Ch)
  4818  0C5A  00F8               	movwf	(?_cmd)
  4819  0C5B  3000               	movlw	high(0Ch)
  4820  0C5C  00F9               	movwf	((?_cmd))+1
  4821  0C5D  120A  158A  23B1   	fcall	_cmd
              120A  158A         
  4822                           	line	528
  4823                           	
  4824  0C62                     l3137:	
  4825                           ;prev11.c: 528: cmd(0x01);
  4826  0C62  3001               	movlw	low(01h)
  4827  0C63  00F8               	movwf	(?_cmd)
  4828  0C64  3000               	movlw	high(01h)
  4829  0C65  00F9               	movwf	((?_cmd))+1
  4830  0C66  120A  158A  23B1   	fcall	_cmd
              120A  158A         
  4831                           	line	530
  4832                           	
  4833  0C6B                     l3139:	
  4834                           ;prev11.c: 530: cmd(0x80);
  4835  0C6B  3080               	movlw	low(080h)
  4836  0C6C  00F8               	movwf	(?_cmd)
  4837  0C6D  3000               	movlw	high(080h)
  4838  0C6E  00F9               	movwf	((?_cmd))+1
  4839  0C6F  120A  158A  23B1   	fcall	_cmd
              120A  158A         
  4840                           	line	534
  4841                           	
  4842  0C74                     l834:	
  4843  0C74  0008               	return
  4844                           	opt stack 0
  4845                           GLOBAL	__end_of_initlcd
  4846  0C75                     	__end_of_initlcd:
  4847 ;; =============== function _initlcd ends ============
  4848                           
  4849                           	signat	_initlcd,88
  4850                           	global	_actrow
  4851                           psect	text546,local,class=CODE,delta=2
  4852                           global __ptext546
  4853  0D18                     __ptext546:
  4854                           
  4855 ;; *************** function _actrow *****************
  4856 ;; Defined at:
  4857 ;;		line 735 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  n               2    2[COMMON] int 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;		None               void
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0, pclath, cstack
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4871 ;;      Params:         2       0       0       0       0
  4872 ;;      Locals:         0       0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0
  4874 ;;      Totals:         2       0       0       0       0
  4875 ;;Total ram usage:        2 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    1
  4878 ;; This function calls:
  4879 ;;		_resetout
  4880 ;;		_delay
  4881 ;; This function is called by:
  4882 ;;		_scan
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           psect	text546
  4886                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  4887                           	line	735
  4888                           	global	__size_of_actrow
  4889  003E                     	__size_of_actrow	equ	__end_of_actrow-_actrow
  4890                           	
  4891  0D18                     _actrow:	
  4892                           	opt	stack 4
  4893                           ; Regs used in _actrow: [wreg+status,2+status,0+pclath+cstack]
  4894                           	line	736
  4895                           	
  4896  0D18                     l3109:	
  4897                           ;prev11.c: 736: resetout();
  4898  0D18  120A  158A  2343   	fcall	_resetout
              120A  158A         
  4899                           	line	738
  4900                           	
  4901  0D1D                     l3111:	
  4902                           ;prev11.c: 738: if(n==1)
  4903  0D1D  3001               	movlw	01h
  4904  0D1E  0672               	xorwf	(actrow@n),w
  4905  0D1F  0473               	iorwf	(actrow@n+1),w
  4906  0D20  1D03               	skipz
  4907  0D21  2D23               	goto	u4101
  4908  0D22  2D24               	goto	u4100
  4909  0D23                     u4101:
  4910  0D23  2D28               	goto	l3115
  4911  0D24                     u4100:
  4912                           	line	740
  4913                           	
  4914  0D24                     l3113:	
  4915                           ;prev11.c: 739: {
  4916                           ;prev11.c: 740: RB0=1;
  4917  0D24  1283               	bcf	status, 5	;RP0=0, select bank0
  4918  0D25  1303               	bcf	status, 6	;RP1=0, select bank0
  4919  0D26  1406               	bsf	(48/8),(48)&7
  4920                           	line	741
  4921                           ;prev11.c: 741: }
  4922  0D27  2D4C               	goto	l3127
  4923                           	line	742
  4924                           	
  4925  0D28                     l914:	
  4926                           	
  4927  0D28                     l3115:	
  4928                           ;prev11.c: 742: else if(n==2)
  4929  0D28  3002               	movlw	02h
  4930  0D29  0672               	xorwf	(actrow@n),w
  4931  0D2A  0473               	iorwf	(actrow@n+1),w
  4932  0D2B  1D03               	skipz
  4933  0D2C  2D2E               	goto	u4111
  4934  0D2D  2D2F               	goto	u4110
  4935  0D2E                     u4111:
  4936  0D2E  2D33               	goto	l3119
  4937  0D2F                     u4110:
  4938                           	line	744
  4939                           	
  4940  0D2F                     l3117:	
  4941                           ;prev11.c: 743: {
  4942                           ;prev11.c: 744: RB1=1;
  4943  0D2F  1283               	bcf	status, 5	;RP0=0, select bank0
  4944  0D30  1303               	bcf	status, 6	;RP1=0, select bank0
  4945  0D31  1486               	bsf	(49/8),(49)&7
  4946                           	line	745
  4947                           ;prev11.c: 745: }
  4948  0D32  2D4C               	goto	l3127
  4949                           	line	746
  4950                           	
  4951  0D33                     l916:	
  4952                           	
  4953  0D33                     l3119:	
  4954                           ;prev11.c: 746: else if(n==3)
  4955  0D33  3003               	movlw	03h
  4956  0D34  0672               	xorwf	(actrow@n),w
  4957  0D35  0473               	iorwf	(actrow@n+1),w
  4958  0D36  1D03               	skipz
  4959  0D37  2D39               	goto	u4121
  4960  0D38  2D3A               	goto	u4120
  4961  0D39                     u4121:
  4962  0D39  2D3E               	goto	l3123
  4963  0D3A                     u4120:
  4964                           	line	748
  4965                           	
  4966  0D3A                     l3121:	
  4967                           ;prev11.c: 747: {
  4968                           ;prev11.c: 748: RB2=1;
  4969  0D3A  1283               	bcf	status, 5	;RP0=0, select bank0
  4970  0D3B  1303               	bcf	status, 6	;RP1=0, select bank0
  4971  0D3C  1506               	bsf	(50/8),(50)&7
  4972                           	line	749
  4973                           ;prev11.c: 749: }
  4974  0D3D  2D4C               	goto	l3127
  4975                           	line	750
  4976                           	
  4977  0D3E                     l918:	
  4978                           	
  4979  0D3E                     l3123:	
  4980                           ;prev11.c: 750: else if(n==4)
  4981  0D3E  3004               	movlw	04h
  4982  0D3F  0672               	xorwf	(actrow@n),w
  4983  0D40  0473               	iorwf	(actrow@n+1),w
  4984  0D41  1D03               	skipz
  4985  0D42  2D44               	goto	u4131
  4986  0D43  2D45               	goto	u4130
  4987  0D44                     u4131:
  4988  0D44  2D4C               	goto	l3127
  4989  0D45                     u4130:
  4990                           	line	752
  4991                           	
  4992  0D45                     l3125:	
  4993                           ;prev11.c: 751: {
  4994                           ;prev11.c: 752: RB3=1;
  4995  0D45  1283               	bcf	status, 5	;RP0=0, select bank0
  4996  0D46  1303               	bcf	status, 6	;RP1=0, select bank0
  4997  0D47  1586               	bsf	(51/8),(51)&7
  4998  0D48  2D4C               	goto	l3127
  4999                           	line	753
  5000                           	
  5001  0D49                     l920:	
  5002  0D49  2D4C               	goto	l3127
  5003                           	line	754
  5004                           	
  5005  0D4A                     l919:	
  5006  0D4A  2D4C               	goto	l3127
  5007                           	
  5008  0D4B                     l917:	
  5009  0D4B  2D4C               	goto	l3127
  5010                           	
  5011  0D4C                     l915:	
  5012                           	
  5013  0D4C                     l3127:	
  5014                           ;prev11.c: 753: }
  5015                           ;prev11.c: 754: delay(200);
  5016  0D4C  30C8               	movlw	low(0C8h)
  5017  0D4D  00F0               	movwf	(?_delay)
  5018  0D4E  3000               	movlw	high(0C8h)
  5019  0D4F  00F1               	movwf	((?_delay))+1
  5020  0D50  120A  158A  2384   	fcall	_delay
              120A  158A         
  5021                           	line	757
  5022                           	
  5023  0D55                     l921:	
  5024  0D55  0008               	return
  5025                           	opt stack 0
  5026                           GLOBAL	__end_of_actrow
  5027  0D56                     	__end_of_actrow:
  5028 ;; =============== function _actrow ends ============
  5029                           
  5030                           	signat	_actrow,4216
  5031                           	global	_dat
  5032                           psect	text547,local,class=CODE,delta=2
  5033                           global __ptext547
  5034  0BD6                     __ptext547:
  5035                           
  5036 ;; *************** function _dat *****************
  5037 ;; Defined at:
  5038 ;;		line 552 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  Command         2    8[COMMON] unsigned int 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;		None               void
  5045 ;; Registers used:
  5046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5052 ;;      Params:         2       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0
  5055 ;;      Totals:         2       0       0       0       0
  5056 ;;Total ram usage:        2 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    2
  5059 ;; This function calls:
  5060 ;;		_setLCD
  5061 ;;		_delay
  5062 ;; This function is called by:
  5063 ;;		_write
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           psect	text547
  5067                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5068                           	line	552
  5069                           	global	__size_of_dat
  5070  0025                     	__size_of_dat	equ	__end_of_dat-_dat
  5071                           	
  5072  0BD6                     _dat:	
  5073                           	opt	stack 2
  5074                           ; Regs used in _dat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5075                           	line	553
  5076                           	
  5077  0BD6                     l3097:	
  5078                           ;prev11.c: 553: setLCD(Command);
  5079  0BD6  0879               	movf	(dat@Command+1),w
  5080  0BD7  01F1               	clrf	(?_setLCD+1)
  5081  0BD8  07F1               	addwf	(?_setLCD+1)
  5082  0BD9  0878               	movf	(dat@Command),w
  5083  0BDA  01F0               	clrf	(?_setLCD)
  5084  0BDB  07F0               	addwf	(?_setLCD)
  5085                           
  5086  0BDC  120A  118A  22C6   	fcall	_setLCD
              120A  158A         
  5087                           	line	555
  5088                           	
  5089  0BE1                     l3099:	
  5090                           ;prev11.c: 555: RC0=1;
  5091  0BE1  1283               	bcf	status, 5	;RP0=0, select bank0
  5092  0BE2  1303               	bcf	status, 6	;RP1=0, select bank0
  5093  0BE3  1407               	bsf	(56/8),(56)&7
  5094                           	line	557
  5095                           	
  5096  0BE4                     l3101:	
  5097                           ;prev11.c: 557: RB5=1;
  5098  0BE4  1686               	bsf	(53/8),(53)&7
  5099                           	line	559
  5100                           	
  5101  0BE5                     l3103:	
  5102                           ;prev11.c: 559: delay(20);
  5103  0BE5  3014               	movlw	low(014h)
  5104  0BE6  00F0               	movwf	(?_delay)
  5105  0BE7  3000               	movlw	high(014h)
  5106  0BE8  00F1               	movwf	((?_delay))+1
  5107  0BE9  120A  158A  2384   	fcall	_delay
              120A  158A         
  5108                           	line	561
  5109                           	
  5110  0BEE                     l3105:	
  5111                           ;prev11.c: 561: RB5=0;
  5112  0BEE  1283               	bcf	status, 5	;RP0=0, select bank0
  5113  0BEF  1303               	bcf	status, 6	;RP1=0, select bank0
  5114  0BF0  1286               	bcf	(53/8),(53)&7
  5115                           	line	563
  5116                           	
  5117  0BF1                     l3107:	
  5118                           ;prev11.c: 563: delay(20);
  5119  0BF1  3014               	movlw	low(014h)
  5120  0BF2  00F0               	movwf	(?_delay)
  5121  0BF3  3000               	movlw	high(014h)
  5122  0BF4  00F1               	movwf	((?_delay))+1
  5123  0BF5  120A  158A  2384   	fcall	_delay
              120A  158A         
  5124                           	line	569
  5125                           	
  5126  0BFA                     l843:	
  5127  0BFA  0008               	return
  5128                           	opt stack 0
  5129                           GLOBAL	__end_of_dat
  5130  0BFB                     	__end_of_dat:
  5131 ;; =============== function _dat ends ============
  5132                           
  5133                           	signat	_dat,4216
  5134                           	global	_cmd
  5135                           psect	text548,local,class=CODE,delta=2
  5136                           global __ptext548
  5137  0BB1                     __ptext548:
  5138                           
  5139 ;; *************** function _cmd *****************
  5140 ;; Defined at:
  5141 ;;		line 540 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  Command         2    8[COMMON] unsigned int 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;		None               void
  5148 ;; Registers used:
  5149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5155 ;;      Params:         2       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0
  5158 ;;      Totals:         2       0       0       0       0
  5159 ;;Total ram usage:        2 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    2
  5162 ;; This function calls:
  5163 ;;		_setLCD
  5164 ;;		_delay
  5165 ;; This function is called by:
  5166 ;;		_initlcd
  5167 ;;		_clearlcd
  5168 ;;		_write
  5169 ;;		_scroll
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           psect	text548
  5173                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5174                           	line	540
  5175                           	global	__size_of_cmd
  5176  0025                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  5177                           	
  5178  0BB1                     _cmd:	
  5179                           	opt	stack 2
  5180                           ; Regs used in _cmd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5181                           	line	542
  5182                           	
  5183  0BB1                     l3085:	
  5184                           ;prev11.c: 542: setLCD(Command);
  5185  0BB1  0879               	movf	(cmd@Command+1),w
  5186  0BB2  01F1               	clrf	(?_setLCD+1)
  5187  0BB3  07F1               	addwf	(?_setLCD+1)
  5188  0BB4  0878               	movf	(cmd@Command),w
  5189  0BB5  01F0               	clrf	(?_setLCD)
  5190  0BB6  07F0               	addwf	(?_setLCD)
  5191                           
  5192  0BB7  120A  118A  22C6   	fcall	_setLCD
              120A  158A         
  5193                           	line	543
  5194                           	
  5195  0BBC                     l3087:	
  5196                           ;prev11.c: 543: RC0=0;
  5197  0BBC  1283               	bcf	status, 5	;RP0=0, select bank0
  5198  0BBD  1303               	bcf	status, 6	;RP1=0, select bank0
  5199  0BBE  1007               	bcf	(56/8),(56)&7
  5200                           	line	544
  5201                           	
  5202  0BBF                     l3089:	
  5203                           ;prev11.c: 544: RB5=1;
  5204  0BBF  1686               	bsf	(53/8),(53)&7
  5205                           	line	545
  5206                           	
  5207  0BC0                     l3091:	
  5208                           ;prev11.c: 545: delay(20);
  5209  0BC0  3014               	movlw	low(014h)
  5210  0BC1  00F0               	movwf	(?_delay)
  5211  0BC2  3000               	movlw	high(014h)
  5212  0BC3  00F1               	movwf	((?_delay))+1
  5213  0BC4  120A  158A  2384   	fcall	_delay
              120A  158A         
  5214                           	line	546
  5215                           	
  5216  0BC9                     l3093:	
  5217                           ;prev11.c: 546: RB5=0;
  5218  0BC9  1283               	bcf	status, 5	;RP0=0, select bank0
  5219  0BCA  1303               	bcf	status, 6	;RP1=0, select bank0
  5220  0BCB  1286               	bcf	(53/8),(53)&7
  5221                           	line	547
  5222                           	
  5223  0BCC                     l3095:	
  5224                           ;prev11.c: 547: delay(20);
  5225  0BCC  3014               	movlw	low(014h)
  5226  0BCD  00F0               	movwf	(?_delay)
  5227  0BCE  3000               	movlw	high(014h)
  5228  0BCF  00F1               	movwf	((?_delay))+1
  5229  0BD0  120A  158A  2384   	fcall	_delay
              120A  158A         
  5230                           	line	549
  5231                           	
  5232  0BD5                     l840:	
  5233  0BD5  0008               	return
  5234                           	opt stack 0
  5235                           GLOBAL	__end_of_cmd
  5236  0BD6                     	__end_of_cmd:
  5237 ;; =============== function _cmd ends ============
  5238                           
  5239                           	signat	_cmd,4216
  5240                           	global	_itoaa
  5241                           psect	text549,local,class=CODE,delta=2
  5242                           global __ptext549
  5243  01DB                     __ptext549:
  5244                           
  5245 ;; *************** function _itoaa *****************
  5246 ;; Defined at:
  5247 ;;		line 491 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  value           2    9[COMMON] int 
  5250 ;;  ptr             1   11[COMMON] PTR unsigned char 
  5251 ;;		 -> getlogicseq@snum(16), 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  temp            2    2[BANK0 ] int 
  5254 ;;  count           2    0[BANK0 ] int 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  2    9[COMMON] int 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5264 ;;      Params:         3       0       0       0       0
  5265 ;;      Locals:         0       4       0       0       0
  5266 ;;      Temps:          1       0       0       0       0
  5267 ;;      Totals:         4       4       0       0       0
  5268 ;;Total ram usage:        8 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    1
  5271 ;; This function calls:
  5272 ;;		___wmul
  5273 ;;		___awdiv
  5274 ;;		___awmod
  5275 ;; This function is called by:
  5276 ;;		_getlogicseq
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           psect	text549
  5280                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  5281                           	line	491
  5282                           	global	__size_of_itoaa
  5283  00EB                     	__size_of_itoaa	equ	__end_of_itoaa-_itoaa
  5284                           	
  5285  01DB                     _itoaa:	
  5286                           	opt	stack 5
  5287                           ; Regs used in _itoaa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5288                           	line	492
  5289                           	
  5290  01DB                     l3037:	
  5291                           ;prev11.c: 492: int count=0,temp;
  5292  01DB  1283               	bcf	status, 5	;RP0=0, select bank0
  5293  01DC  1303               	bcf	status, 6	;RP1=0, select bank0
  5294  01DD  01A0               	clrf	(itoaa@count)
  5295  01DE  01A1               	clrf	(itoaa@count+1)
  5296                           	line	493
  5297                           	
  5298  01DF                     l3039:	
  5299                           ;prev11.c: 493: if(ptr==(0))
  5300  01DF  08FB               	movf	(itoaa@ptr),f
  5301  01E0  1D03               	skipz
  5302  01E1  29E3               	goto	u4031
  5303  01E2  29E4               	goto	u4030
  5304  01E3                     u4031:
  5305  01E3  29E6               	goto	l3043
  5306  01E4                     u4030:
  5307  01E4  2AC5               	goto	l825
  5308                           	line	494
  5309                           	
  5310  01E5                     l3041:	
  5311                           ;prev11.c: 494: return 0;
  5312                           ;	Return value of _itoaa is never used
  5313  01E5  2AC5               	goto	l825
  5314                           	
  5315  01E6                     l824:	
  5316                           	line	495
  5317                           	
  5318  01E6                     l3043:	
  5319                           ;prev11.c: 495: if(value==0)
  5320  01E6  087A               	movf	((itoaa@value+1)),w
  5321  01E7  0479               	iorwf	((itoaa@value)),w
  5322  01E8  1D03               	skipz
  5323  01E9  29EB               	goto	u4041
  5324  01EA  29EC               	goto	u4040
  5325  01EB                     u4041:
  5326  01EB  29F5               	goto	l826
  5327  01EC                     u4040:
  5328                           	line	497
  5329                           	
  5330  01EC                     l3045:	
  5331                           ;prev11.c: 496: {
  5332                           ;prev11.c: 497: *ptr='0';
  5333  01EC  3030               	movlw	(030h)
  5334  01ED  00FC               	movwf	(??_itoaa+0)+0
  5335  01EE  087B               	movf	(itoaa@ptr),w
  5336  01EF  0084               	movwf	fsr0
  5337  01F0  087C               	movf	(??_itoaa+0)+0,w
  5338  01F1  1383               	bcf	status, 7	;select IRP bank0
  5339  01F2  0080               	movwf	indf
  5340  01F3  2AC5               	goto	l825
  5341                           	line	498
  5342                           	
  5343  01F4                     l3047:	
  5344                           ;prev11.c: 498: return 1;
  5345                           ;	Return value of _itoaa is never used
  5346  01F4  2AC5               	goto	l825
  5347                           	line	499
  5348                           	
  5349  01F5                     l826:	
  5350                           	line	501
  5351                           ;prev11.c: 499: }
  5352                           ;prev11.c: 501: if(value<0)
  5353  01F5  1FFA               	btfss	(itoaa@value+1),7
  5354  01F6  29F8               	goto	u4051
  5355  01F7  29F9               	goto	u4050
  5356  01F8                     u4051:
  5357  01F8  2A22               	goto	l3057
  5358  01F9                     u4050:
  5359                           	line	503
  5360                           	
  5361  01F9                     l3049:	
  5362                           ;prev11.c: 502: {
  5363                           ;prev11.c: 503: value*=(-1);
  5364  01F9  30FF               	movlw	low(-1)
  5365  01FA  00F0               	movwf	(?___wmul)
  5366  01FB  30FF               	movlw	high(-1)
  5367  01FC  00F1               	movwf	((?___wmul))+1
  5368  01FD  087A               	movf	(itoaa@value+1),w
  5369  01FE  01F3               	clrf	1+(?___wmul)+02h
  5370  01FF  07F3               	addwf	1+(?___wmul)+02h
  5371  0200  0879               	movf	(itoaa@value),w
  5372  0201  01F2               	clrf	0+(?___wmul)+02h
  5373  0202  07F2               	addwf	0+(?___wmul)+02h
  5374                           
  5375  0203  120A  158A  2421   	fcall	___wmul
              120A  118A         
  5376  0208  0871               	movf	(1+(?___wmul)),w
  5377  0209  01FA               	clrf	(itoaa@value+1)
  5378  020A  07FA               	addwf	(itoaa@value+1)
  5379  020B  0870               	movf	(0+(?___wmul)),w
  5380  020C  01F9               	clrf	(itoaa@value)
  5381  020D  07F9               	addwf	(itoaa@value)
  5382                           
  5383                           	line	504
  5384                           	
  5385  020E                     l3051:	
  5386                           ;prev11.c: 504: *ptr++='-';
  5387  020E  302D               	movlw	(02Dh)
  5388  020F  00FC               	movwf	(??_itoaa+0)+0
  5389  0210  087B               	movf	(itoaa@ptr),w
  5390  0211  0084               	movwf	fsr0
  5391  0212  087C               	movf	(??_itoaa+0)+0,w
  5392  0213  1383               	bcf	status, 7	;select IRP bank0
  5393  0214  0080               	movwf	indf
  5394                           	
  5395  0215                     l3053:	
  5396  0215  3001               	movlw	(01h)
  5397  0216  00FC               	movwf	(??_itoaa+0)+0
  5398  0217  087C               	movf	(??_itoaa+0)+0,w
  5399  0218  07FB               	addwf	(itoaa@ptr),f
  5400                           	line	505
  5401                           	
  5402  0219                     l3055:	
  5403                           ;prev11.c: 505: count++;
  5404  0219  3001               	movlw	low(01h)
  5405  021A  1283               	bcf	status, 5	;RP0=0, select bank0
  5406  021B  1303               	bcf	status, 6	;RP1=0, select bank0
  5407  021C  07A0               	addwf	(itoaa@count),f
  5408  021D  1803               	skipnc
  5409  021E  0AA1               	incf	(itoaa@count+1),f
  5410  021F  3000               	movlw	high(01h)
  5411  0220  07A1               	addwf	(itoaa@count+1),f
  5412  0221  2A22               	goto	l3057
  5413                           	line	506
  5414                           	
  5415  0222                     l827:	
  5416                           	line	507
  5417                           	
  5418  0222                     l3057:	
  5419                           ;prev11.c: 506: }
  5420                           ;prev11.c: 507: for(temp=value;temp>0;temp/=10,ptr++);
  5421  0222  087A               	movf	(itoaa@value+1),w
  5422  0223  01A3               	clrf	(itoaa@temp+1)
  5423  0224  07A3               	addwf	(itoaa@temp+1)
  5424  0225  0879               	movf	(itoaa@value),w
  5425  0226  01A2               	clrf	(itoaa@temp)
  5426  0227  07A2               	addwf	(itoaa@temp)
  5427                           
  5428                           	
  5429  0228                     l3059:	
  5430  0228  0823               	movf	(itoaa@temp+1),w
  5431  0229  3A80               	xorlw	80h
  5432  022A  00FF               	movwf	btemp+1
  5433  022B  3080               	movlw	(high(01h))^80h
  5434  022C  027F               	subwf	btemp+1,w
  5435  022D  1D03               	skipz
  5436  022E  2A31               	goto	u4065
  5437  022F  3001               	movlw	low(01h)
  5438  0230  0222               	subwf	(itoaa@temp),w
  5439  0231                     u4065:
  5440                           
  5441  0231  1803               	skipnc
  5442  0232  2A34               	goto	u4061
  5443  0233  2A35               	goto	u4060
  5444  0234                     u4061:
  5445  0234  2A37               	goto	l3063
  5446  0235                     u4060:
  5447  0235  2A62               	goto	l3069
  5448                           	
  5449  0236                     l3061:	
  5450  0236  2A62               	goto	l3069
  5451                           	
  5452  0237                     l828:	
  5453                           	
  5454  0237                     l3063:	
  5455  0237  300A               	movlw	low(0Ah)
  5456  0238  00F0               	movwf	(?___awdiv)
  5457  0239  3000               	movlw	high(0Ah)
  5458  023A  00F1               	movwf	((?___awdiv))+1
  5459  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  5460  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  5461  023D  0823               	movf	(itoaa@temp+1),w
  5462  023E  01F3               	clrf	1+(?___awdiv)+02h
  5463  023F  07F3               	addwf	1+(?___awdiv)+02h
  5464  0240  0822               	movf	(itoaa@temp),w
  5465  0241  01F2               	clrf	0+(?___awdiv)+02h
  5466  0242  07F2               	addwf	0+(?___awdiv)+02h
  5467                           
  5468  0243  120A  158A  26B9   	fcall	___awdiv
              120A  118A         
  5469  0248  0871               	movf	(1+(?___awdiv)),w
  5470  0249  1283               	bcf	status, 5	;RP0=0, select bank0
  5471  024A  1303               	bcf	status, 6	;RP1=0, select bank0
  5472  024B  01A3               	clrf	(itoaa@temp+1)
  5473  024C  07A3               	addwf	(itoaa@temp+1)
  5474  024D  0870               	movf	(0+(?___awdiv)),w
  5475  024E  01A2               	clrf	(itoaa@temp)
  5476  024F  07A2               	addwf	(itoaa@temp)
  5477                           
  5478                           	
  5479  0250                     l3065:	
  5480  0250  3001               	movlw	(01h)
  5481  0251  00FC               	movwf	(??_itoaa+0)+0
  5482  0252  087C               	movf	(??_itoaa+0)+0,w
  5483  0253  07FB               	addwf	(itoaa@ptr),f
  5484                           	
  5485  0254                     l3067:	
  5486  0254  0823               	movf	(itoaa@temp+1),w
  5487  0255  3A80               	xorlw	80h
  5488  0256  00FF               	movwf	btemp+1
  5489  0257  3080               	movlw	(high(01h))^80h
  5490  0258  027F               	subwf	btemp+1,w
  5491  0259  1D03               	skipz
  5492  025A  2A5D               	goto	u4075
  5493  025B  3001               	movlw	low(01h)
  5494  025C  0222               	subwf	(itoaa@temp),w
  5495  025D                     u4075:
  5496                           
  5497  025D  1803               	skipnc
  5498  025E  2A60               	goto	u4071
  5499  025F  2A61               	goto	u4070
  5500  0260                     u4071:
  5501  0260  2A37               	goto	l3063
  5502  0261                     u4070:
  5503  0261  2A62               	goto	l3069
  5504                           	
  5505  0262                     l829:	
  5506                           	line	508
  5507                           	
  5508  0262                     l3069:	
  5509                           ;prev11.c: 508: *ptr='\0';
  5510  0262  087B               	movf	(itoaa@ptr),w
  5511  0263  0084               	movwf	fsr0
  5512  0264  1383               	bcf	status, 7	;select IRP bank0
  5513  0265  0180               	clrf	indf
  5514                           	line	509
  5515                           	
  5516  0266                     l3071:	
  5517                           ;prev11.c: 509: for(temp=value;temp>0;temp/=10)
  5518  0266  087A               	movf	(itoaa@value+1),w
  5519  0267  1283               	bcf	status, 5	;RP0=0, select bank0
  5520  0268  1303               	bcf	status, 6	;RP1=0, select bank0
  5521  0269  01A3               	clrf	(itoaa@temp+1)
  5522  026A  07A3               	addwf	(itoaa@temp+1)
  5523  026B  0879               	movf	(itoaa@value),w
  5524  026C  01A2               	clrf	(itoaa@temp)
  5525  026D  07A2               	addwf	(itoaa@temp)
  5526                           
  5527                           	
  5528  026E                     l3073:	
  5529  026E  0823               	movf	(itoaa@temp+1),w
  5530  026F  3A80               	xorlw	80h
  5531  0270  00FF               	movwf	btemp+1
  5532  0271  3080               	movlw	(high(01h))^80h
  5533  0272  027F               	subwf	btemp+1,w
  5534  0273  1D03               	skipz
  5535  0274  2A77               	goto	u4085
  5536  0275  3001               	movlw	low(01h)
  5537  0276  0222               	subwf	(itoaa@temp),w
  5538  0277                     u4085:
  5539                           
  5540  0277  1803               	skipnc
  5541  0278  2A7A               	goto	u4081
  5542  0279  2A7B               	goto	u4080
  5543  027A                     u4081:
  5544  027A  2A7D               	goto	l3077
  5545  027B                     u4080:
  5546  027B  2AC5               	goto	l825
  5547                           	
  5548  027C                     l3075:	
  5549  027C  2AC5               	goto	l825
  5550                           	line	510
  5551                           	
  5552  027D                     l830:	
  5553                           	line	511
  5554                           	
  5555  027D                     l3077:	
  5556                           ;prev11.c: 510: {
  5557                           ;prev11.c: 511: *--ptr=temp%10+'0';
  5558  027D  300A               	movlw	low(0Ah)
  5559  027E  00F0               	movwf	(?___awmod)
  5560  027F  3000               	movlw	high(0Ah)
  5561  0280  00F1               	movwf	((?___awmod))+1
  5562  0281  1283               	bcf	status, 5	;RP0=0, select bank0
  5563  0282  1303               	bcf	status, 6	;RP1=0, select bank0
  5564  0283  0823               	movf	(itoaa@temp+1),w
  5565  0284  01F3               	clrf	1+(?___awmod)+02h
  5566  0285  07F3               	addwf	1+(?___awmod)+02h
  5567  0286  0822               	movf	(itoaa@temp),w
  5568  0287  01F2               	clrf	0+(?___awmod)+02h
  5569  0288  07F2               	addwf	0+(?___awmod)+02h
  5570                           
  5571  0289  120A  158A  2653   	fcall	___awmod
              120A  118A         
  5572  028E  0870               	movf	(0+(?___awmod)),w
  5573  028F  3E30               	addlw	030h
  5574  0290  00FC               	movwf	(??_itoaa+0)+0
  5575  0291  3001               	movlw	low(01h)
  5576  0292  02FB               	subwf	(itoaa@ptr),f
  5577  0293  087B               	movf	((itoaa@ptr)),w
  5578  0294  0084               	movwf	fsr0
  5579  0295  087C               	movf	(??_itoaa+0)+0,w
  5580  0296  1383               	bcf	status, 7	;select IRP bank0
  5581  0297  0080               	movwf	indf
  5582                           	line	512
  5583                           	
  5584  0298                     l3079:	
  5585                           ;prev11.c: 512: count++;
  5586  0298  3001               	movlw	low(01h)
  5587  0299  1283               	bcf	status, 5	;RP0=0, select bank0
  5588  029A  1303               	bcf	status, 6	;RP1=0, select bank0
  5589  029B  07A0               	addwf	(itoaa@count),f
  5590  029C  1803               	skipnc
  5591  029D  0AA1               	incf	(itoaa@count+1),f
  5592  029E  3000               	movlw	high(01h)
  5593  029F  07A1               	addwf	(itoaa@count+1),f
  5594                           	line	509
  5595                           	
  5596  02A0                     l3081:	
  5597  02A0  300A               	movlw	low(0Ah)
  5598  02A1  00F0               	movwf	(?___awdiv)
  5599  02A2  3000               	movlw	high(0Ah)
  5600  02A3  00F1               	movwf	((?___awdiv))+1
  5601  02A4  0823               	movf	(itoaa@temp+1),w
  5602  02A5  01F3               	clrf	1+(?___awdiv)+02h
  5603  02A6  07F3               	addwf	1+(?___awdiv)+02h
  5604  02A7  0822               	movf	(itoaa@temp),w
  5605  02A8  01F2               	clrf	0+(?___awdiv)+02h
  5606  02A9  07F2               	addwf	0+(?___awdiv)+02h
  5607                           
  5608  02AA  120A  158A  26B9   	fcall	___awdiv
              120A  118A         
  5609  02AF  0871               	movf	(1+(?___awdiv)),w
  5610  02B0  1283               	bcf	status, 5	;RP0=0, select bank0
  5611  02B1  1303               	bcf	status, 6	;RP1=0, select bank0
  5612  02B2  01A3               	clrf	(itoaa@temp+1)
  5613  02B3  07A3               	addwf	(itoaa@temp+1)
  5614  02B4  0870               	movf	(0+(?___awdiv)),w
  5615  02B5  01A2               	clrf	(itoaa@temp)
  5616  02B6  07A2               	addwf	(itoaa@temp)
  5617                           
  5618                           	
  5619  02B7                     l3083:	
  5620  02B7  0823               	movf	(itoaa@temp+1),w
  5621  02B8  3A80               	xorlw	80h
  5622  02B9  00FF               	movwf	btemp+1
  5623  02BA  3080               	movlw	(high(01h))^80h
  5624  02BB  027F               	subwf	btemp+1,w
  5625  02BC  1D03               	skipz
  5626  02BD  2AC0               	goto	u4095
  5627  02BE  3001               	movlw	low(01h)
  5628  02BF  0222               	subwf	(itoaa@temp),w
  5629  02C0                     u4095:
  5630                           
  5631  02C0  1803               	skipnc
  5632  02C1  2AC3               	goto	u4091
  5633  02C2  2AC4               	goto	u4090
  5634  02C3                     u4091:
  5635  02C3  2A7D               	goto	l3077
  5636  02C4                     u4090:
  5637  02C4  2AC5               	goto	l825
  5638                           	
  5639  02C5                     l831:	
  5640                           	line	515
  5641                           ;prev11.c: 513: }
  5642                           ;prev11.c: 514: return count;
  5643                           ;	Return value of _itoaa is never used
  5644                           	
  5645  02C5                     l825:	
  5646  02C5  0008               	return
  5647                           	opt stack 0
  5648                           GLOBAL	__end_of_itoaa
  5649  02C6                     	__end_of_itoaa:
  5650 ;; =============== function _itoaa ends ============
  5651                           
  5652                           	signat	_itoaa,8314
  5653                           	global	___awmod
  5654                           psect	text550,local,class=CODE,delta=2
  5655                           global __ptext550
  5656  0E53                     __ptext550:
  5657                           
  5658 ;; *************** function ___awmod *****************
  5659 ;; Defined at:
  5660 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  divisor         2    0[COMMON] int 
  5663 ;;  dividend        2    2[COMMON] int 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  sign            1    6[COMMON] unsigned char 
  5666 ;;  counter         1    5[COMMON] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  2    0[COMMON] int 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2, status,0
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5676 ;;      Params:         4       0       0       0       0
  5677 ;;      Locals:         2       0       0       0       0
  5678 ;;      Temps:          1       0       0       0       0
  5679 ;;      Totals:         7       0       0       0       0
  5680 ;;Total ram usage:        7 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_itoaa
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           psect	text550
  5689                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  5690                           	line	5
  5691                           	global	__size_of___awmod
  5692  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  5693                           	
  5694  0E53                     ___awmod:	
  5695                           	opt	stack 5
  5696                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5697                           	line	8
  5698                           	
  5699  0E53                     l3003:	
  5700  0E53  01F6               	clrf	(___awmod@sign)
  5701                           	line	9
  5702  0E54  1FF3               	btfss	(___awmod@dividend+1),7
  5703  0E55  2E57               	goto	u3941
  5704  0E56  2E58               	goto	u3940
  5705  0E57                     u3941:
  5706  0E57  2E61               	goto	l3007
  5707  0E58                     u3940:
  5708                           	line	10
  5709                           	
  5710  0E58                     l3005:	
  5711  0E58  09F2               	comf	(___awmod@dividend),f
  5712  0E59  09F3               	comf	(___awmod@dividend+1),f
  5713  0E5A  0AF2               	incf	(___awmod@dividend),f
  5714  0E5B  1903               	skipnz
  5715  0E5C  0AF3               	incf	(___awmod@dividend+1),f
  5716                           	line	11
  5717  0E5D  01F6               	clrf	(___awmod@sign)
  5718  0E5E  1403               	bsf	status,0
  5719  0E5F  0DF6               	rlf	(___awmod@sign),f
  5720  0E60  2E61               	goto	l3007
  5721                           	line	12
  5722                           	
  5723  0E61                     l1161:	
  5724                           	line	13
  5725                           	
  5726  0E61                     l3007:	
  5727  0E61  1FF1               	btfss	(___awmod@divisor+1),7
  5728  0E62  2E64               	goto	u3951
  5729  0E63  2E65               	goto	u3950
  5730  0E64                     u3951:
  5731  0E64  2E6B               	goto	l3011
  5732  0E65                     u3950:
  5733                           	line	14
  5734                           	
  5735  0E65                     l3009:	
  5736  0E65  09F0               	comf	(___awmod@divisor),f
  5737  0E66  09F1               	comf	(___awmod@divisor+1),f
  5738  0E67  0AF0               	incf	(___awmod@divisor),f
  5739  0E68  1903               	skipnz
  5740  0E69  0AF1               	incf	(___awmod@divisor+1),f
  5741  0E6A  2E6B               	goto	l3011
  5742                           	
  5743  0E6B                     l1162:	
  5744                           	line	15
  5745                           	
  5746  0E6B                     l3011:	
  5747  0E6B  0871               	movf	(___awmod@divisor+1),w
  5748  0E6C  0470               	iorwf	(___awmod@divisor),w
  5749  0E6D  1903               	skipnz
  5750  0E6E  2E70               	goto	u3961
  5751  0E6F  2E71               	goto	u3960
  5752  0E70                     u3961:
  5753  0E70  2EA7               	goto	l3029
  5754  0E71                     u3960:
  5755                           	line	16
  5756                           	
  5757  0E71                     l3013:	
  5758  0E71  01F5               	clrf	(___awmod@counter)
  5759  0E72  1403               	bsf	status,0
  5760  0E73  0DF5               	rlf	(___awmod@counter),f
  5761                           	line	17
  5762  0E74  2E81               	goto	l3019
  5763                           	
  5764  0E75                     l1165:	
  5765                           	line	18
  5766                           	
  5767  0E75                     l3015:	
  5768  0E75  3001               	movlw	01h
  5769                           	
  5770  0E76                     u3975:
  5771  0E76  1003               	clrc
  5772  0E77  0DF0               	rlf	(___awmod@divisor),f
  5773  0E78  0DF1               	rlf	(___awmod@divisor+1),f
  5774  0E79  3EFF               	addlw	-1
  5775  0E7A  1D03               	skipz
  5776  0E7B  2E76               	goto	u3975
  5777                           	line	19
  5778                           	
  5779  0E7C                     l3017:	
  5780  0E7C  3001               	movlw	(01h)
  5781  0E7D  00F4               	movwf	(??___awmod+0)+0
  5782  0E7E  0874               	movf	(??___awmod+0)+0,w
  5783  0E7F  07F5               	addwf	(___awmod@counter),f
  5784  0E80  2E81               	goto	l3019
  5785                           	line	20
  5786                           	
  5787  0E81                     l1164:	
  5788                           	line	17
  5789                           	
  5790  0E81                     l3019:	
  5791  0E81  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  5792  0E82  2E84               	goto	u3981
  5793  0E83  2E85               	goto	u3980
  5794  0E84                     u3981:
  5795  0E84  2E75               	goto	l3015
  5796  0E85                     u3980:
  5797  0E85  2E87               	goto	l3021
  5798                           	
  5799  0E86                     l1166:	
  5800  0E86  2E87               	goto	l3021
  5801                           	line	21
  5802                           	
  5803  0E87                     l1167:	
  5804                           	line	22
  5805                           	
  5806  0E87                     l3021:	
  5807  0E87  0871               	movf	(___awmod@divisor+1),w
  5808  0E88  0273               	subwf	(___awmod@dividend+1),w
  5809  0E89  1D03               	skipz
  5810  0E8A  2E8D               	goto	u3995
  5811  0E8B  0870               	movf	(___awmod@divisor),w
  5812  0E8C  0272               	subwf	(___awmod@dividend),w
  5813  0E8D                     u3995:
  5814  0E8D  1C03               	skipc
  5815  0E8E  2E90               	goto	u3991
  5816  0E8F  2E91               	goto	u3990
  5817  0E90                     u3991:
  5818  0E90  2E98               	goto	l3025
  5819  0E91                     u3990:
  5820                           	line	23
  5821                           	
  5822  0E91                     l3023:	
  5823  0E91  0870               	movf	(___awmod@divisor),w
  5824  0E92  02F2               	subwf	(___awmod@dividend),f
  5825  0E93  0871               	movf	(___awmod@divisor+1),w
  5826  0E94  1C03               	skipc
  5827  0E95  03F3               	decf	(___awmod@dividend+1),f
  5828  0E96  02F3               	subwf	(___awmod@dividend+1),f
  5829  0E97  2E98               	goto	l3025
  5830                           	
  5831  0E98                     l1168:	
  5832                           	line	24
  5833                           	
  5834  0E98                     l3025:	
  5835  0E98  3001               	movlw	01h
  5836                           	
  5837  0E99                     u4005:
  5838  0E99  1003               	clrc
  5839  0E9A  0CF1               	rrf	(___awmod@divisor+1),f
  5840  0E9B  0CF0               	rrf	(___awmod@divisor),f
  5841  0E9C  3EFF               	addlw	-1
  5842  0E9D  1D03               	skipz
  5843  0E9E  2E99               	goto	u4005
  5844                           	line	25
  5845                           	
  5846  0E9F                     l3027:	
  5847  0E9F  3001               	movlw	low(01h)
  5848  0EA0  02F5               	subwf	(___awmod@counter),f
  5849  0EA1  1D03               	btfss	status,2
  5850  0EA2  2EA4               	goto	u4011
  5851  0EA3  2EA5               	goto	u4010
  5852  0EA4                     u4011:
  5853  0EA4  2E87               	goto	l3021
  5854  0EA5                     u4010:
  5855  0EA5  2EA7               	goto	l3029
  5856                           	
  5857  0EA6                     l1169:	
  5858  0EA6  2EA7               	goto	l3029
  5859                           	line	26
  5860                           	
  5861  0EA7                     l1163:	
  5862                           	line	27
  5863                           	
  5864  0EA7                     l3029:	
  5865  0EA7  0876               	movf	(___awmod@sign),w
  5866  0EA8  1D03               	skipz
  5867  0EA9  2EAB               	goto	u4020
  5868  0EAA  2EB1               	goto	l3033
  5869  0EAB                     u4020:
  5870                           	line	28
  5871                           	
  5872  0EAB                     l3031:	
  5873  0EAB  09F2               	comf	(___awmod@dividend),f
  5874  0EAC  09F3               	comf	(___awmod@dividend+1),f
  5875  0EAD  0AF2               	incf	(___awmod@dividend),f
  5876  0EAE  1903               	skipnz
  5877  0EAF  0AF3               	incf	(___awmod@dividend+1),f
  5878  0EB0  2EB1               	goto	l3033
  5879                           	
  5880  0EB1                     l1170:	
  5881                           	line	29
  5882                           	
  5883  0EB1                     l3033:	
  5884  0EB1  0873               	movf	(___awmod@dividend+1),w
  5885  0EB2  01F1               	clrf	(?___awmod+1)
  5886  0EB3  07F1               	addwf	(?___awmod+1)
  5887  0EB4  0872               	movf	(___awmod@dividend),w
  5888  0EB5  01F0               	clrf	(?___awmod)
  5889  0EB6  07F0               	addwf	(?___awmod)
  5890                           
  5891  0EB7  2EB8               	goto	l1171
  5892                           	
  5893  0EB8                     l3035:	
  5894                           	line	30
  5895                           	
  5896  0EB8                     l1171:	
  5897  0EB8  0008               	return
  5898                           	opt stack 0
  5899                           GLOBAL	__end_of___awmod
  5900  0EB9                     	__end_of___awmod:
  5901 ;; =============== function ___awmod ends ============
  5902                           
  5903                           	signat	___awmod,8314
  5904                           	global	___awdiv
  5905                           psect	text551,local,class=CODE,delta=2
  5906                           global __ptext551
  5907  0EB9                     __ptext551:
  5908                           
  5909 ;; *************** function ___awdiv *****************
  5910 ;; Defined at:
  5911 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  divisor         2    0[COMMON] int 
  5914 ;;  dividend        2    2[COMMON] int 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  quotient        2    7[COMMON] int 
  5917 ;;  sign            1    6[COMMON] unsigned char 
  5918 ;;  counter         1    5[COMMON] unsigned char 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  2    0[COMMON] int 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5928 ;;      Params:         4       0       0       0       0
  5929 ;;      Locals:         4       0       0       0       0
  5930 ;;      Temps:          1       0       0       0       0
  5931 ;;      Totals:         9       0       0       0       0
  5932 ;;Total ram usage:        9 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_itoaa
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           psect	text551
  5941                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  5942                           	line	5
  5943                           	global	__size_of___awdiv
  5944  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5945                           	
  5946  0EB9                     ___awdiv:	
  5947                           	opt	stack 5
  5948                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5949                           	line	9
  5950                           	
  5951  0EB9                     l2963:	
  5952  0EB9  01F6               	clrf	(___awdiv@sign)
  5953                           	line	10
  5954  0EBA  1FF1               	btfss	(___awdiv@divisor+1),7
  5955  0EBB  2EBD               	goto	u3841
  5956  0EBC  2EBE               	goto	u3840
  5957  0EBD                     u3841:
  5958  0EBD  2EC7               	goto	l2967
  5959  0EBE                     u3840:
  5960                           	line	11
  5961                           	
  5962  0EBE                     l2965:	
  5963  0EBE  09F0               	comf	(___awdiv@divisor),f
  5964  0EBF  09F1               	comf	(___awdiv@divisor+1),f
  5965  0EC0  0AF0               	incf	(___awdiv@divisor),f
  5966  0EC1  1903               	skipnz
  5967  0EC2  0AF1               	incf	(___awdiv@divisor+1),f
  5968                           	line	12
  5969  0EC3  01F6               	clrf	(___awdiv@sign)
  5970  0EC4  1403               	bsf	status,0
  5971  0EC5  0DF6               	rlf	(___awdiv@sign),f
  5972  0EC6  2EC7               	goto	l2967
  5973                           	line	13
  5974                           	
  5975  0EC7                     l1093:	
  5976                           	line	14
  5977                           	
  5978  0EC7                     l2967:	
  5979  0EC7  1FF3               	btfss	(___awdiv@dividend+1),7
  5980  0EC8  2ECA               	goto	u3851
  5981  0EC9  2ECB               	goto	u3850
  5982  0ECA                     u3851:
  5983  0ECA  2ED5               	goto	l2973
  5984  0ECB                     u3850:
  5985                           	line	15
  5986                           	
  5987  0ECB                     l2969:	
  5988  0ECB  09F2               	comf	(___awdiv@dividend),f
  5989  0ECC  09F3               	comf	(___awdiv@dividend+1),f
  5990  0ECD  0AF2               	incf	(___awdiv@dividend),f
  5991  0ECE  1903               	skipnz
  5992  0ECF  0AF3               	incf	(___awdiv@dividend+1),f
  5993                           	line	16
  5994                           	
  5995  0ED0                     l2971:	
  5996  0ED0  3001               	movlw	(01h)
  5997  0ED1  00F4               	movwf	(??___awdiv+0)+0
  5998  0ED2  0874               	movf	(??___awdiv+0)+0,w
  5999  0ED3  06F6               	xorwf	(___awdiv@sign),f
  6000  0ED4  2ED5               	goto	l2973
  6001                           	line	17
  6002                           	
  6003  0ED5                     l1094:	
  6004                           	line	18
  6005                           	
  6006  0ED5                     l2973:	
  6007  0ED5  01F7               	clrf	(___awdiv@quotient)
  6008  0ED6  01F8               	clrf	(___awdiv@quotient+1)
  6009                           	line	19
  6010                           	
  6011  0ED7                     l2975:	
  6012  0ED7  0871               	movf	(___awdiv@divisor+1),w
  6013  0ED8  0470               	iorwf	(___awdiv@divisor),w
  6014  0ED9  1903               	skipnz
  6015  0EDA  2EDC               	goto	u3861
  6016  0EDB  2EDD               	goto	u3860
  6017  0EDC                     u3861:
  6018  0EDC  2F1B               	goto	l2995
  6019  0EDD                     u3860:
  6020                           	line	20
  6021                           	
  6022  0EDD                     l2977:	
  6023  0EDD  01F5               	clrf	(___awdiv@counter)
  6024  0EDE  1403               	bsf	status,0
  6025  0EDF  0DF5               	rlf	(___awdiv@counter),f
  6026                           	line	21
  6027  0EE0  2EED               	goto	l2983
  6028                           	
  6029  0EE1                     l1097:	
  6030                           	line	22
  6031                           	
  6032  0EE1                     l2979:	
  6033  0EE1  3001               	movlw	01h
  6034                           	
  6035  0EE2                     u3875:
  6036  0EE2  1003               	clrc
  6037  0EE3  0DF0               	rlf	(___awdiv@divisor),f
  6038  0EE4  0DF1               	rlf	(___awdiv@divisor+1),f
  6039  0EE5  3EFF               	addlw	-1
  6040  0EE6  1D03               	skipz
  6041  0EE7  2EE2               	goto	u3875
  6042                           	line	23
  6043                           	
  6044  0EE8                     l2981:	
  6045  0EE8  3001               	movlw	(01h)
  6046  0EE9  00F4               	movwf	(??___awdiv+0)+0
  6047  0EEA  0874               	movf	(??___awdiv+0)+0,w
  6048  0EEB  07F5               	addwf	(___awdiv@counter),f
  6049  0EEC  2EED               	goto	l2983
  6050                           	line	24
  6051                           	
  6052  0EED                     l1096:	
  6053                           	line	21
  6054                           	
  6055  0EED                     l2983:	
  6056  0EED  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  6057  0EEE  2EF0               	goto	u3881
  6058  0EEF  2EF1               	goto	u3880
  6059  0EF0                     u3881:
  6060  0EF0  2EE1               	goto	l2979
  6061  0EF1                     u3880:
  6062  0EF1  2EF3               	goto	l2985
  6063                           	
  6064  0EF2                     l1098:	
  6065  0EF2  2EF3               	goto	l2985
  6066                           	line	25
  6067                           	
  6068  0EF3                     l1099:	
  6069                           	line	26
  6070                           	
  6071  0EF3                     l2985:	
  6072  0EF3  3001               	movlw	01h
  6073                           	
  6074  0EF4                     u3895:
  6075  0EF4  1003               	clrc
  6076  0EF5  0DF7               	rlf	(___awdiv@quotient),f
  6077  0EF6  0DF8               	rlf	(___awdiv@quotient+1),f
  6078  0EF7  3EFF               	addlw	-1
  6079  0EF8  1D03               	skipz
  6080  0EF9  2EF4               	goto	u3895
  6081                           	line	27
  6082  0EFA  0871               	movf	(___awdiv@divisor+1),w
  6083  0EFB  0273               	subwf	(___awdiv@dividend+1),w
  6084  0EFC  1D03               	skipz
  6085  0EFD  2F00               	goto	u3905
  6086  0EFE  0870               	movf	(___awdiv@divisor),w
  6087  0EFF  0272               	subwf	(___awdiv@dividend),w
  6088  0F00                     u3905:
  6089  0F00  1C03               	skipc
  6090  0F01  2F03               	goto	u3901
  6091  0F02  2F04               	goto	u3900
  6092  0F03                     u3901:
  6093  0F03  2F0C               	goto	l2991
  6094  0F04                     u3900:
  6095                           	line	28
  6096                           	
  6097  0F04                     l2987:	
  6098  0F04  0870               	movf	(___awdiv@divisor),w
  6099  0F05  02F2               	subwf	(___awdiv@dividend),f
  6100  0F06  0871               	movf	(___awdiv@divisor+1),w
  6101  0F07  1C03               	skipc
  6102  0F08  03F3               	decf	(___awdiv@dividend+1),f
  6103  0F09  02F3               	subwf	(___awdiv@dividend+1),f
  6104                           	line	29
  6105                           	
  6106  0F0A                     l2989:	
  6107  0F0A  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  6108  0F0B  2F0C               	goto	l2991
  6109                           	line	30
  6110                           	
  6111  0F0C                     l1100:	
  6112                           	line	31
  6113                           	
  6114  0F0C                     l2991:	
  6115  0F0C  3001               	movlw	01h
  6116                           	
  6117  0F0D                     u3915:
  6118  0F0D  1003               	clrc
  6119  0F0E  0CF1               	rrf	(___awdiv@divisor+1),f
  6120  0F0F  0CF0               	rrf	(___awdiv@divisor),f
  6121  0F10  3EFF               	addlw	-1
  6122  0F11  1D03               	skipz
  6123  0F12  2F0D               	goto	u3915
  6124                           	line	32
  6125                           	
  6126  0F13                     l2993:	
  6127  0F13  3001               	movlw	low(01h)
  6128  0F14  02F5               	subwf	(___awdiv@counter),f
  6129  0F15  1D03               	btfss	status,2
  6130  0F16  2F18               	goto	u3921
  6131  0F17  2F19               	goto	u3920
  6132  0F18                     u3921:
  6133  0F18  2EF3               	goto	l2985
  6134  0F19                     u3920:
  6135  0F19  2F1B               	goto	l2995
  6136                           	
  6137  0F1A                     l1101:	
  6138  0F1A  2F1B               	goto	l2995
  6139                           	line	33
  6140                           	
  6141  0F1B                     l1095:	
  6142                           	line	34
  6143                           	
  6144  0F1B                     l2995:	
  6145  0F1B  0876               	movf	(___awdiv@sign),w
  6146  0F1C  1D03               	skipz
  6147  0F1D  2F1F               	goto	u3930
  6148  0F1E  2F25               	goto	l2999
  6149  0F1F                     u3930:
  6150                           	line	35
  6151                           	
  6152  0F1F                     l2997:	
  6153  0F1F  09F7               	comf	(___awdiv@quotient),f
  6154  0F20  09F8               	comf	(___awdiv@quotient+1),f
  6155  0F21  0AF7               	incf	(___awdiv@quotient),f
  6156  0F22  1903               	skipnz
  6157  0F23  0AF8               	incf	(___awdiv@quotient+1),f
  6158  0F24  2F25               	goto	l2999
  6159                           	
  6160  0F25                     l1102:	
  6161                           	line	36
  6162                           	
  6163  0F25                     l2999:	
  6164  0F25  0878               	movf	(___awdiv@quotient+1),w
  6165  0F26  01F1               	clrf	(?___awdiv+1)
  6166  0F27  07F1               	addwf	(?___awdiv+1)
  6167  0F28  0877               	movf	(___awdiv@quotient),w
  6168  0F29  01F0               	clrf	(?___awdiv)
  6169  0F2A  07F0               	addwf	(?___awdiv)
  6170                           
  6171  0F2B  2F2C               	goto	l1103
  6172                           	
  6173  0F2C                     l3001:	
  6174                           	line	37
  6175                           	
  6176  0F2C                     l1103:	
  6177  0F2C  0008               	return
  6178                           	opt stack 0
  6179                           GLOBAL	__end_of___awdiv
  6180  0F2D                     	__end_of___awdiv:
  6181 ;; =============== function ___awdiv ends ============
  6182                           
  6183                           	signat	___awdiv,8314
  6184                           	global	___wmul
  6185                           psect	text552,local,class=CODE,delta=2
  6186                           global __ptext552
  6187  0C21                     __ptext552:
  6188                           
  6189 ;; *************** function ___wmul *****************
  6190 ;; Defined at:
  6191 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  multiplier      2    0[COMMON] unsigned int 
  6194 ;;  multiplicand    2    2[COMMON] unsigned int 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  product         2    4[COMMON] unsigned int 
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  2    0[COMMON] unsigned int 
  6199 ;; Registers used:
  6200 ;;		wreg, status,2, status,0
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6206 ;;      Params:         4       0       0       0       0
  6207 ;;      Locals:         2       0       0       0       0
  6208 ;;      Temps:          0       0       0       0       0
  6209 ;;      Totals:         6       0       0       0       0
  6210 ;;Total ram usage:        6 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_itoaa
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           psect	text552
  6219                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  6220                           	line	3
  6221                           	global	__size_of___wmul
  6222  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6223                           	
  6224  0C21                     ___wmul:	
  6225                           	opt	stack 5
  6226                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6227                           	line	4
  6228                           	
  6229  0C21                     l2951:	
  6230  0C21  01F4               	clrf	(___wmul@product)
  6231  0C22  01F5               	clrf	(___wmul@product+1)
  6232  0C23  2C24               	goto	l2953
  6233                           	line	6
  6234                           	
  6235  0C24                     l953:	
  6236                           	line	7
  6237                           	
  6238  0C24                     l2953:	
  6239  0C24  1C70               	btfss	(___wmul@multiplier),(0)&7
  6240  0C25  2C27               	goto	u3801
  6241  0C26  2C28               	goto	u3800
  6242  0C27                     u3801:
  6243  0C27  2C2E               	goto	l954
  6244  0C28                     u3800:
  6245                           	line	8
  6246                           	
  6247  0C28                     l2955:	
  6248  0C28  0872               	movf	(___wmul@multiplicand),w
  6249  0C29  07F4               	addwf	(___wmul@product),f
  6250  0C2A  1803               	skipnc
  6251  0C2B  0AF5               	incf	(___wmul@product+1),f
  6252  0C2C  0873               	movf	(___wmul@multiplicand+1),w
  6253  0C2D  07F5               	addwf	(___wmul@product+1),f
  6254                           	
  6255  0C2E                     l954:	
  6256                           	line	9
  6257  0C2E  3001               	movlw	01h
  6258                           	
  6259  0C2F                     u3815:
  6260  0C2F  1003               	clrc
  6261  0C30  0DF2               	rlf	(___wmul@multiplicand),f
  6262  0C31  0DF3               	rlf	(___wmul@multiplicand+1),f
  6263  0C32  3EFF               	addlw	-1
  6264  0C33  1D03               	skipz
  6265  0C34  2C2F               	goto	u3815
  6266                           	line	10
  6267                           	
  6268  0C35                     l2957:	
  6269  0C35  3001               	movlw	01h
  6270                           	
  6271  0C36                     u3825:
  6272  0C36  1003               	clrc
  6273  0C37  0CF1               	rrf	(___wmul@multiplier+1),f
  6274  0C38  0CF0               	rrf	(___wmul@multiplier),f
  6275  0C39  3EFF               	addlw	-1
  6276  0C3A  1D03               	skipz
  6277  0C3B  2C36               	goto	u3825
  6278                           	line	11
  6279  0C3C  0871               	movf	((___wmul@multiplier+1)),w
  6280  0C3D  0470               	iorwf	((___wmul@multiplier)),w
  6281  0C3E  1D03               	skipz
  6282  0C3F  2C41               	goto	u3831
  6283  0C40  2C42               	goto	u3830
  6284  0C41                     u3831:
  6285  0C41  2C24               	goto	l2953
  6286  0C42                     u3830:
  6287  0C42  2C43               	goto	l2959
  6288                           	
  6289  0C43                     l955:	
  6290                           	line	12
  6291                           	
  6292  0C43                     l2959:	
  6293  0C43  0875               	movf	(___wmul@product+1),w
  6294  0C44  01F1               	clrf	(?___wmul+1)
  6295  0C45  07F1               	addwf	(?___wmul+1)
  6296  0C46  0874               	movf	(___wmul@product),w
  6297  0C47  01F0               	clrf	(?___wmul)
  6298  0C48  07F0               	addwf	(?___wmul)
  6299                           
  6300  0C49  2C4A               	goto	l956
  6301                           	
  6302  0C4A                     l2961:	
  6303                           	line	13
  6304                           	
  6305  0C4A                     l956:	
  6306  0C4A  0008               	return
  6307                           	opt stack 0
  6308                           GLOBAL	__end_of___wmul
  6309  0C4B                     	__end_of___wmul:
  6310 ;; =============== function ___wmul ends ============
  6311                           
  6312                           	signat	___wmul,8314
  6313                           	global	_resetout
  6314                           psect	text553,local,class=CODE,delta=2
  6315                           global __ptext553
  6316  0B43                     __ptext553:
  6317                           
  6318 ;; *************** function _resetout *****************
  6319 ;; Defined at:
  6320 ;;		line 731 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;		None
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;		None               void
  6327 ;; Registers used:
  6328 ;;		None
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6334 ;;      Params:         0       0       0       0       0
  6335 ;;      Locals:         0       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0
  6337 ;;      Totals:         0       0       0       0       0
  6338 ;;Total ram usage:        0 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_actrow
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           psect	text553
  6347                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6348                           	line	731
  6349                           	global	__size_of_resetout
  6350  0007                     	__size_of_resetout	equ	__end_of_resetout-_resetout
  6351                           	
  6352  0B43                     _resetout:	
  6353                           	opt	stack 4
  6354                           ; Regs used in _resetout: []
  6355                           	line	732
  6356                           	
  6357  0B43                     l2949:	
  6358                           ;prev11.c: 732: RC2=0;RC3=0;RB6=0;RB7=0;
  6359  0B43  1283               	bcf	status, 5	;RP0=0, select bank0
  6360  0B44  1303               	bcf	status, 6	;RP1=0, select bank0
  6361  0B45  1107               	bcf	(58/8),(58)&7
  6362  0B46  1187               	bcf	(59/8),(59)&7
  6363  0B47  1306               	bcf	(54/8),(54)&7
  6364  0B48  1386               	bcf	(55/8),(55)&7
  6365                           	line	733
  6366                           	
  6367  0B49                     l911:	
  6368  0B49  0008               	return
  6369                           	opt stack 0
  6370                           GLOBAL	__end_of_resetout
  6371  0B4A                     	__end_of_resetout:
  6372 ;; =============== function _resetout ends ============
  6373                           
  6374                           	signat	_resetout,88
  6375                           	global	_setLCD
  6376                           psect	text554,local,class=CODE,delta=2
  6377                           global __ptext554
  6378  02C6                     __ptext554:
  6379                           
  6380 ;; *************** function _setLCD *****************
  6381 ;; Defined at:
  6382 ;;		line 571 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  number          2    0[COMMON] int 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  vbool          32    0[BANK0 ] int [16]
  6387 ;;  i               2   32[BANK0 ] int 
  6388 ;; Return value:  Size  Location     Type
  6389 ;;		None               void
  6390 ;; Registers used:
  6391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6397 ;;      Params:         2       0       0       0       0
  6398 ;;      Locals:         0      34       0       0       0
  6399 ;;      Temps:          6       0       0       0       0
  6400 ;;      Totals:         8      34       0       0       0
  6401 ;;Total ram usage:       42 bytes
  6402 ;; Hardware stack levels used:    2
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_cmd
  6407 ;;		_dat
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           psect	text554
  6411                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6412                           	line	571
  6413                           	global	__size_of_setLCD
  6414  015A                     	__size_of_setLCD	equ	__end_of_setLCD-_setLCD
  6415                           	
  6416  02C6                     _setLCD:	
  6417                           	opt	stack 2
  6418                           ; Regs used in _setLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6419                           	line	576
  6420                           	
  6421  02C6                     l2935:	
  6422                           ;prev11.c: 572: const int size=8*sizeof(int);
  6423                           ;prev11.c: 573: int vbool[8*sizeof(int)];
  6424                           ;prev11.c: 574: int i;;
  6425                           ;prev11.c: 576: for (i = 0; i <size; i++)
  6426  02C6  1283               	bcf	status, 5	;RP0=0, select bank0
  6427  02C7  1303               	bcf	status, 6	;RP1=0, select bank0
  6428  02C8  01C0               	clrf	(setLCD@i)
  6429  02C9  01C1               	clrf	(setLCD@i+1)
  6430                           	
  6431  02CA                     l2937:	
  6432  02CA  3012               	movlw	low(setLCD@size|8000h)
  6433  02CB  0084               	movwf	fsr0
  6434  02CC  3088               	movlw	high(setLCD@size|8000h)
  6435  02CD  00FF               	movwf	btemp+1
  6436  02CE  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6437  02D3  00F2               	movwf	(??_setLCD+0)+0
  6438  02D4  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6439  02D9  00F3               	movwf	(??_setLCD+0)+0+1
  6440  02DA  0841               	movf	(setLCD@i+1),w
  6441  02DB  3A80               	xorlw	80h
  6442  02DC  00F4               	movwf	(??_setLCD+2)+0
  6443  02DD  0873               	movf	1+(??_setLCD+0)+0,w
  6444  02DE  3A80               	xorlw	80h
  6445  02DF  0274               	subwf	(??_setLCD+2)+0,w
  6446  02E0  1D03               	skipz
  6447  02E1  2AE4               	goto	u3615
  6448  02E2  0872               	movf	0+(??_setLCD+0)+0,w
  6449  02E3  0240               	subwf	(setLCD@i),w
  6450  02E4                     u3615:
  6451                           
  6452  02E4  1C03               	skipc
  6453  02E5  2AE7               	goto	u3611
  6454  02E6  2AE8               	goto	u3610
  6455  02E7                     u3611:
  6456  02E7  2AEA               	goto	l2941
  6457  02E8                     u3610:
  6458  02E8  2B2D               	goto	l2947
  6459                           	
  6460  02E9                     l2939:	
  6461  02E9  2B2D               	goto	l2947
  6462                           	line	577
  6463                           	
  6464  02EA                     l848:	
  6465                           	line	578
  6466                           	
  6467  02EA                     l2941:	
  6468                           ;prev11.c: 577: {
  6469                           ;prev11.c: 578: vbool[i] = number<<i < 0;
  6470  02EA  1283               	bcf	status, 5	;RP0=0, select bank0
  6471  02EB  1303               	bcf	status, 6	;RP1=0, select bank0
  6472  02EC  0A40               	incf	(setLCD@i),w
  6473  02ED  00F2               	movwf	(??_setLCD+0)+0
  6474  02EE  0871               	movf	(setLCD@number+1),w
  6475  02EF  00F4               	movwf	(??_setLCD+1)+0+1
  6476  02F0  0870               	movf	(setLCD@number),w
  6477  02F1  00F3               	movwf	(??_setLCD+1)+0
  6478  02F2  2AF6               	goto	u3624
  6479  02F3                     u3625:
  6480  02F3  1003               	clrc
  6481  02F4  0DF3               	rlf	(??_setLCD+1)+0,f
  6482  02F5  0DF4               	rlf	(??_setLCD+1)+1,f
  6483  02F6                     u3624:
  6484  02F6  0BF2               	decfsz	(??_setLCD+0)+0,f
  6485  02F7  2AF3               	goto	u3625
  6486  02F8  3000               	movlw	0
  6487  02F9  1BF4               	btfsc	1+(??_setLCD+1)+0,7
  6488  02FA  3001               	movlw	1
  6489  02FB  00F5               	movwf	(??_setLCD+3)+0
  6490  02FC  01F6               	clrf	(??_setLCD+3)+0+1
  6491  02FD  0840               	movf	(setLCD@i),w
  6492  02FE  00F7               	movwf	(??_setLCD+5)+0
  6493  02FF  0777               	addwf	(??_setLCD+5)+0,w
  6494  0300  3E20               	addlw	setLCD@vbool&0ffh
  6495  0301  0084               	movwf	fsr0
  6496  0302  0875               	movf	0+(??_setLCD+3)+0,w
  6497  0303  1383               	bcf	status, 7	;select IRP bank0
  6498  0304  0080               	movwf	indf
  6499  0305  0A84               	incf	fsr0,f
  6500  0306  0876               	movf	1+(??_setLCD+3)+0,w
  6501  0307  0080               	movwf	indf
  6502                           	line	576
  6503                           	
  6504  0308                     l2943:	
  6505  0308  3001               	movlw	low(01h)
  6506  0309  07C0               	addwf	(setLCD@i),f
  6507  030A  1803               	skipnc
  6508  030B  0AC1               	incf	(setLCD@i+1),f
  6509  030C  3000               	movlw	high(01h)
  6510  030D  07C1               	addwf	(setLCD@i+1),f
  6511                           	
  6512  030E                     l2945:	
  6513  030E  3012               	movlw	low(setLCD@size|8000h)
  6514  030F  0084               	movwf	fsr0
  6515  0310  3088               	movlw	high(setLCD@size|8000h)
  6516  0311  00FF               	movwf	btemp+1
  6517  0312  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6518  0317  00F2               	movwf	(??_setLCD+0)+0
  6519  0318  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6520  031D  00F3               	movwf	(??_setLCD+0)+0+1
  6521  031E  0841               	movf	(setLCD@i+1),w
  6522  031F  3A80               	xorlw	80h
  6523  0320  00F4               	movwf	(??_setLCD+2)+0
  6524  0321  0873               	movf	1+(??_setLCD+0)+0,w
  6525  0322  3A80               	xorlw	80h
  6526  0323  0274               	subwf	(??_setLCD+2)+0,w
  6527  0324  1D03               	skipz
  6528  0325  2B28               	goto	u3635
  6529  0326  0872               	movf	0+(??_setLCD+0)+0,w
  6530  0327  0240               	subwf	(setLCD@i),w
  6531  0328                     u3635:
  6532                           
  6533  0328  1C03               	skipc
  6534  0329  2B2B               	goto	u3631
  6535  032A  2B2C               	goto	u3630
  6536  032B                     u3631:
  6537  032B  2AEA               	goto	l2941
  6538  032C                     u3630:
  6539  032C  2B2D               	goto	l2947
  6540                           	
  6541  032D                     l849:	
  6542                           	line	581
  6543                           	
  6544  032D                     l2947:	
  6545                           ;prev11.c: 579: }
  6546                           ;prev11.c: 581: RD0=vbool[size-1];
  6547  032D  3012               	movlw	low(setLCD@size|8000h)
  6548  032E  0084               	movwf	fsr0
  6549  032F  3088               	movlw	high(setLCD@size|8000h)
  6550  0330  1283               	bcf	status, 5	;RP0=0, select bank0
  6551  0331  1303               	bcf	status, 6	;RP1=0, select bank0
  6552  0332  00FF               	movwf	btemp+1
  6553  0333  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6554  0338  00F2               	movwf	(??_setLCD+0)+0
  6555  0339  0772               	addwf	(??_setLCD+0)+0,w
  6556  033A  3EFE               	addlw	0FEh
  6557  033B  3E20               	addlw	setLCD@vbool&0ffh
  6558  033C  0084               	movwf	fsr0
  6559  033D  1383               	bcf	status, 7	;select IRP bank0
  6560  033E  0800               	movf	indf,w
  6561  033F  00F3               	movwf	(??_setLCD+1)+0+0
  6562  0340  0A84               	incf	fsr0,f
  6563  0341  0800               	movf	indf,w
  6564  0342  00F4               	movwf	(??_setLCD+1)+0+1
  6565  0343  1873               	btfsc	0+(??_setLCD+1)+0,0
  6566  0344  2B46               	goto	u3641
  6567  0345  2B4A               	goto	u3640
  6568                           	
  6569  0346                     u3641:
  6570  0346  1283               	bcf	status, 5	;RP0=0, select bank0
  6571  0347  1303               	bcf	status, 6	;RP1=0, select bank0
  6572  0348  1408               	bsf	(64/8),(64)&7
  6573  0349  2B4D               	goto	u3654
  6574  034A                     u3640:
  6575  034A  1283               	bcf	status, 5	;RP0=0, select bank0
  6576  034B  1303               	bcf	status, 6	;RP1=0, select bank0
  6577  034C  1008               	bcf	(64/8),(64)&7
  6578  034D                     u3654:
  6579                           	line	582
  6580                           ;prev11.c: 582: RD1=vbool[size-2];
  6581  034D  3012               	movlw	low(setLCD@size|8000h)
  6582  034E  0084               	movwf	fsr0
  6583  034F  3088               	movlw	high(setLCD@size|8000h)
  6584  0350  00FF               	movwf	btemp+1
  6585  0351  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6586  0356  00F2               	movwf	(??_setLCD+0)+0
  6587  0357  0772               	addwf	(??_setLCD+0)+0,w
  6588  0358  3EFC               	addlw	0FCh
  6589  0359  3E20               	addlw	setLCD@vbool&0ffh
  6590  035A  0084               	movwf	fsr0
  6591  035B  1383               	bcf	status, 7	;select IRP bank0
  6592  035C  0800               	movf	indf,w
  6593  035D  00F3               	movwf	(??_setLCD+1)+0+0
  6594  035E  0A84               	incf	fsr0,f
  6595  035F  0800               	movf	indf,w
  6596  0360  00F4               	movwf	(??_setLCD+1)+0+1
  6597  0361  1873               	btfsc	0+(??_setLCD+1)+0,0
  6598  0362  2B64               	goto	u3661
  6599  0363  2B68               	goto	u3660
  6600                           	
  6601  0364                     u3661:
  6602  0364  1283               	bcf	status, 5	;RP0=0, select bank0
  6603  0365  1303               	bcf	status, 6	;RP1=0, select bank0
  6604  0366  1488               	bsf	(65/8),(65)&7
  6605  0367  2B6B               	goto	u3674
  6606  0368                     u3660:
  6607  0368  1283               	bcf	status, 5	;RP0=0, select bank0
  6608  0369  1303               	bcf	status, 6	;RP1=0, select bank0
  6609  036A  1088               	bcf	(65/8),(65)&7
  6610  036B                     u3674:
  6611                           	line	583
  6612                           ;prev11.c: 583: RD2=vbool[size-3];
  6613  036B  3012               	movlw	low(setLCD@size|8000h)
  6614  036C  0084               	movwf	fsr0
  6615  036D  3088               	movlw	high(setLCD@size|8000h)
  6616  036E  00FF               	movwf	btemp+1
  6617  036F  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6618  0374  00F2               	movwf	(??_setLCD+0)+0
  6619  0375  0772               	addwf	(??_setLCD+0)+0,w
  6620  0376  3EFA               	addlw	0FAh
  6621  0377  3E20               	addlw	setLCD@vbool&0ffh
  6622  0378  0084               	movwf	fsr0
  6623  0379  1383               	bcf	status, 7	;select IRP bank0
  6624  037A  0800               	movf	indf,w
  6625  037B  00F3               	movwf	(??_setLCD+1)+0+0
  6626  037C  0A84               	incf	fsr0,f
  6627  037D  0800               	movf	indf,w
  6628  037E  00F4               	movwf	(??_setLCD+1)+0+1
  6629  037F  1873               	btfsc	0+(??_setLCD+1)+0,0
  6630  0380  2B82               	goto	u3681
  6631  0381  2B86               	goto	u3680
  6632                           	
  6633  0382                     u3681:
  6634  0382  1283               	bcf	status, 5	;RP0=0, select bank0
  6635  0383  1303               	bcf	status, 6	;RP1=0, select bank0
  6636  0384  1508               	bsf	(66/8),(66)&7
  6637  0385  2B89               	goto	u3694
  6638  0386                     u3680:
  6639  0386  1283               	bcf	status, 5	;RP0=0, select bank0
  6640  0387  1303               	bcf	status, 6	;RP1=0, select bank0
  6641  0388  1108               	bcf	(66/8),(66)&7
  6642  0389                     u3694:
  6643                           	line	584
  6644                           ;prev11.c: 584: RD3=vbool[size-4];
  6645  0389  3012               	movlw	low(setLCD@size|8000h)
  6646  038A  0084               	movwf	fsr0
  6647  038B  3088               	movlw	high(setLCD@size|8000h)
  6648  038C  00FF               	movwf	btemp+1
  6649  038D  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6650  0392  00F2               	movwf	(??_setLCD+0)+0
  6651  0393  0772               	addwf	(??_setLCD+0)+0,w
  6652  0394  3EF8               	addlw	0F8h
  6653  0395  3E20               	addlw	setLCD@vbool&0ffh
  6654  0396  0084               	movwf	fsr0
  6655  0397  1383               	bcf	status, 7	;select IRP bank0
  6656  0398  0800               	movf	indf,w
  6657  0399  00F3               	movwf	(??_setLCD+1)+0+0
  6658  039A  0A84               	incf	fsr0,f
  6659  039B  0800               	movf	indf,w
  6660  039C  00F4               	movwf	(??_setLCD+1)+0+1
  6661  039D  1873               	btfsc	0+(??_setLCD+1)+0,0
  6662  039E  2BA0               	goto	u3701
  6663  039F  2BA4               	goto	u3700
  6664                           	
  6665  03A0                     u3701:
  6666  03A0  1283               	bcf	status, 5	;RP0=0, select bank0
  6667  03A1  1303               	bcf	status, 6	;RP1=0, select bank0
  6668  03A2  1588               	bsf	(67/8),(67)&7
  6669  03A3  2BA7               	goto	u3714
  6670  03A4                     u3700:
  6671  03A4  1283               	bcf	status, 5	;RP0=0, select bank0
  6672  03A5  1303               	bcf	status, 6	;RP1=0, select bank0
  6673  03A6  1188               	bcf	(67/8),(67)&7
  6674  03A7                     u3714:
  6675                           	line	585
  6676                           ;prev11.c: 585: RD4=vbool[size-5];
  6677  03A7  3012               	movlw	low(setLCD@size|8000h)
  6678  03A8  0084               	movwf	fsr0
  6679  03A9  3088               	movlw	high(setLCD@size|8000h)
  6680  03AA  00FF               	movwf	btemp+1
  6681  03AB  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6682  03B0  00F2               	movwf	(??_setLCD+0)+0
  6683  03B1  0772               	addwf	(??_setLCD+0)+0,w
  6684  03B2  3EF6               	addlw	0F6h
  6685  03B3  3E20               	addlw	setLCD@vbool&0ffh
  6686  03B4  0084               	movwf	fsr0
  6687  03B5  1383               	bcf	status, 7	;select IRP bank0
  6688  03B6  0800               	movf	indf,w
  6689  03B7  00F3               	movwf	(??_setLCD+1)+0+0
  6690  03B8  0A84               	incf	fsr0,f
  6691  03B9  0800               	movf	indf,w
  6692  03BA  00F4               	movwf	(??_setLCD+1)+0+1
  6693  03BB  1873               	btfsc	0+(??_setLCD+1)+0,0
  6694  03BC  2BBE               	goto	u3721
  6695  03BD  2BC2               	goto	u3720
  6696                           	
  6697  03BE                     u3721:
  6698  03BE  1283               	bcf	status, 5	;RP0=0, select bank0
  6699  03BF  1303               	bcf	status, 6	;RP1=0, select bank0
  6700  03C0  1608               	bsf	(68/8),(68)&7
  6701  03C1  2BC5               	goto	u3734
  6702  03C2                     u3720:
  6703  03C2  1283               	bcf	status, 5	;RP0=0, select bank0
  6704  03C3  1303               	bcf	status, 6	;RP1=0, select bank0
  6705  03C4  1208               	bcf	(68/8),(68)&7
  6706  03C5                     u3734:
  6707                           	line	586
  6708                           ;prev11.c: 586: RD5=vbool[size-6];
  6709  03C5  3012               	movlw	low(setLCD@size|8000h)
  6710  03C6  0084               	movwf	fsr0
  6711  03C7  3088               	movlw	high(setLCD@size|8000h)
  6712  03C8  00FF               	movwf	btemp+1
  6713  03C9  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6714  03CE  00F2               	movwf	(??_setLCD+0)+0
  6715  03CF  0772               	addwf	(??_setLCD+0)+0,w
  6716  03D0  3EF4               	addlw	0F4h
  6717  03D1  3E20               	addlw	setLCD@vbool&0ffh
  6718  03D2  0084               	movwf	fsr0
  6719  03D3  1383               	bcf	status, 7	;select IRP bank0
  6720  03D4  0800               	movf	indf,w
  6721  03D5  00F3               	movwf	(??_setLCD+1)+0+0
  6722  03D6  0A84               	incf	fsr0,f
  6723  03D7  0800               	movf	indf,w
  6724  03D8  00F4               	movwf	(??_setLCD+1)+0+1
  6725  03D9  1873               	btfsc	0+(??_setLCD+1)+0,0
  6726  03DA  2BDC               	goto	u3741
  6727  03DB  2BE0               	goto	u3740
  6728                           	
  6729  03DC                     u3741:
  6730  03DC  1283               	bcf	status, 5	;RP0=0, select bank0
  6731  03DD  1303               	bcf	status, 6	;RP1=0, select bank0
  6732  03DE  1688               	bsf	(69/8),(69)&7
  6733  03DF  2BE3               	goto	u3754
  6734  03E0                     u3740:
  6735  03E0  1283               	bcf	status, 5	;RP0=0, select bank0
  6736  03E1  1303               	bcf	status, 6	;RP1=0, select bank0
  6737  03E2  1288               	bcf	(69/8),(69)&7
  6738  03E3                     u3754:
  6739                           	line	587
  6740                           ;prev11.c: 587: RD6=vbool[size-7];
  6741  03E3  3012               	movlw	low(setLCD@size|8000h)
  6742  03E4  0084               	movwf	fsr0
  6743  03E5  3088               	movlw	high(setLCD@size|8000h)
  6744  03E6  00FF               	movwf	btemp+1
  6745  03E7  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6746  03EC  00F2               	movwf	(??_setLCD+0)+0
  6747  03ED  0772               	addwf	(??_setLCD+0)+0,w
  6748  03EE  3EF2               	addlw	0F2h
  6749  03EF  3E20               	addlw	setLCD@vbool&0ffh
  6750  03F0  0084               	movwf	fsr0
  6751  03F1  1383               	bcf	status, 7	;select IRP bank0
  6752  03F2  0800               	movf	indf,w
  6753  03F3  00F3               	movwf	(??_setLCD+1)+0+0
  6754  03F4  0A84               	incf	fsr0,f
  6755  03F5  0800               	movf	indf,w
  6756  03F6  00F4               	movwf	(??_setLCD+1)+0+1
  6757  03F7  1873               	btfsc	0+(??_setLCD+1)+0,0
  6758  03F8  2BFA               	goto	u3761
  6759  03F9  2BFE               	goto	u3760
  6760                           	
  6761  03FA                     u3761:
  6762  03FA  1283               	bcf	status, 5	;RP0=0, select bank0
  6763  03FB  1303               	bcf	status, 6	;RP1=0, select bank0
  6764  03FC  1708               	bsf	(70/8),(70)&7
  6765  03FD  2C01               	goto	u3774
  6766  03FE                     u3760:
  6767  03FE  1283               	bcf	status, 5	;RP0=0, select bank0
  6768  03FF  1303               	bcf	status, 6	;RP1=0, select bank0
  6769  0400  1308               	bcf	(70/8),(70)&7
  6770  0401                     u3774:
  6771                           	line	588
  6772                           ;prev11.c: 588: RD7=vbool[size-8];
  6773  0401  3012               	movlw	low(setLCD@size|8000h)
  6774  0402  0084               	movwf	fsr0
  6775  0403  3088               	movlw	high(setLCD@size|8000h)
  6776  0404  00FF               	movwf	btemp+1
  6777  0405  120A  158A  2000   	fcall	stringtab
              120A  118A         
  6778  040A  00F2               	movwf	(??_setLCD+0)+0
  6779  040B  0772               	addwf	(??_setLCD+0)+0,w
  6780  040C  3EF0               	addlw	0F0h
  6781  040D  3E20               	addlw	setLCD@vbool&0ffh
  6782  040E  0084               	movwf	fsr0
  6783  040F  1383               	bcf	status, 7	;select IRP bank0
  6784  0410  0800               	movf	indf,w
  6785  0411  00F3               	movwf	(??_setLCD+1)+0+0
  6786  0412  0A84               	incf	fsr0,f
  6787  0413  0800               	movf	indf,w
  6788  0414  00F4               	movwf	(??_setLCD+1)+0+1
  6789  0415  1873               	btfsc	0+(??_setLCD+1)+0,0
  6790  0416  2C18               	goto	u3781
  6791  0417  2C1C               	goto	u3780
  6792                           	
  6793  0418                     u3781:
  6794  0418  1283               	bcf	status, 5	;RP0=0, select bank0
  6795  0419  1303               	bcf	status, 6	;RP1=0, select bank0
  6796  041A  1788               	bsf	(71/8),(71)&7
  6797  041B  2C1F               	goto	u3794
  6798  041C                     u3780:
  6799  041C  1283               	bcf	status, 5	;RP0=0, select bank0
  6800  041D  1303               	bcf	status, 6	;RP1=0, select bank0
  6801  041E  1388               	bcf	(71/8),(71)&7
  6802  041F                     u3794:
  6803                           	line	592
  6804                           	
  6805  041F                     l850:	
  6806  041F  0008               	return
  6807                           	opt stack 0
  6808                           GLOBAL	__end_of_setLCD
  6809  0420                     	__end_of_setLCD:
  6810 ;; =============== function _setLCD ends ============
  6811                           
  6812                           	signat	_setLCD,4216
  6813                           	global	_strcat
  6814                           psect	text555,local,class=CODE,delta=2
  6815                           global __ptext555
  6816  0CA7                     __ptext555:
  6817                           
  6818 ;; *************** function _strcat *****************
  6819 ;; Defined at:
  6820 ;;		line 10 in file "../../common/strcat.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  to              2    0[COMMON] PTR unsigned char 
  6823 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  6824 ;;  from            1    2[COMMON] PTR const unsigned char 
  6825 ;;		 -> getlogicseq@snum(16), 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;  cp              2    6[COMMON] PTR unsigned char 
  6828 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  2    wreg      PTR unsigned char 
  6831 ;; Registers used:
  6832 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6838 ;;      Params:         3       0       0       0       0
  6839 ;;      Locals:         2       0       0       0       0
  6840 ;;      Temps:          3       0       0       0       0
  6841 ;;      Totals:         8       0       0       0       0
  6842 ;;Total ram usage:        8 bytes
  6843 ;; Hardware stack levels used:    1
  6844 ;; This function calls:
  6845 ;;		Nothing
  6846 ;; This function is called by:
  6847 ;;		_getlogicseq
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           psect	text555
  6851                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcat.c"
  6852                           	line	10
  6853                           	global	__size_of_strcat
  6854  0038                     	__size_of_strcat	equ	__end_of_strcat-_strcat
  6855                           	
  6856  0CA7                     _strcat:	
  6857                           	opt	stack 6
  6858                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  6859                           	line	18
  6860                           	
  6861  0CA7                     l2859:	
  6862  0CA7  0871               	movf	(strcat@to+1),w
  6863  0CA8  01F7               	clrf	(strcat@cp+1)
  6864  0CA9  07F7               	addwf	(strcat@cp+1)
  6865  0CAA  0870               	movf	(strcat@to),w
  6866  0CAB  01F6               	clrf	(strcat@cp)
  6867  0CAC  07F6               	addwf	(strcat@cp)
  6868                           
  6869                           	line	19
  6870  0CAD  2CB5               	goto	l2863
  6871                           	
  6872  0CAE                     l925:	
  6873                           	line	20
  6874                           	
  6875  0CAE                     l2861:	
  6876  0CAE  3001               	movlw	low(01h)
  6877  0CAF  07F6               	addwf	(strcat@cp),f
  6878  0CB0  1803               	skipnc
  6879  0CB1  0AF7               	incf	(strcat@cp+1),f
  6880  0CB2  3000               	movlw	high(01h)
  6881  0CB3  07F7               	addwf	(strcat@cp+1),f
  6882  0CB4  2CB5               	goto	l2863
  6883                           	
  6884  0CB5                     l924:	
  6885                           	line	19
  6886                           	
  6887  0CB5                     l2863:	
  6888  0CB5  0876               	movf	(strcat@cp),w
  6889  0CB6  0084               	movwf	fsr0
  6890  0CB7  1783               	bsf	status,7
  6891  0CB8  1C77               	btfss	(strcat@cp+1),0
  6892  0CB9  1383               	bcf	status,7
  6893  0CBA  0880               	movf	indf,f
  6894  0CBB  1D03               	skipz
  6895  0CBC  2CBE               	goto	u3431
  6896  0CBD  2CBF               	goto	u3430
  6897  0CBE                     u3431:
  6898  0CBE  2CAE               	goto	l2861
  6899  0CBF                     u3430:
  6900  0CBF  2CC2               	goto	l2865
  6901                           	
  6902  0CC0                     l926:	
  6903                           	line	21
  6904  0CC0  2CC2               	goto	l2865
  6905                           	
  6906  0CC1                     l928:	
  6907                           	line	22
  6908  0CC1  2CC2               	goto	l2865
  6909                           	
  6910  0CC2                     l927:	
  6911                           	line	21
  6912                           	
  6913  0CC2                     l2865:	
  6914  0CC2  0872               	movf	(strcat@from),w
  6915  0CC3  0084               	movwf	fsr0
  6916  0CC4  3001               	movlw	01h
  6917  0CC5  07F2               	addwf	(strcat@from),f
  6918  0CC6  1383               	bcf	status, 7	;select IRP bank0
  6919  0CC7  0800               	movf	indf,w
  6920  0CC8  00F3               	movwf	(??_strcat+0)+0
  6921  0CC9  0877               	movf	(strcat@cp+1),w
  6922  0CCA  00F5               	movwf	(??_strcat+1)+0+1
  6923  0CCB  0876               	movf	(strcat@cp),w
  6924  0CCC  00F4               	movwf	(??_strcat+1)+0
  6925  0CCD  3001               	movlw	(01h)
  6926  0CCE  07F6               	addwf	(strcat@cp),f
  6927  0CCF  1803               	skipnc
  6928  0CD0  0AF7               	incf	(strcat@cp+1),f
  6929  0CD1  0874               	movf	0+(??_strcat+1)+0,w
  6930  0CD2  0084               	movwf	fsr0
  6931  0CD3  1783               	bsf	status,7
  6932  0CD4  1C75               	btfss	1+(??_strcat+1)+0,0
  6933  0CD5  1383               	bcf	status,7
  6934  0CD6  0873               	movf	(??_strcat+0)+0,w
  6935  0CD7  0080               	movwf	indf
  6936  0CD8  0880               	movf	(indf),f
  6937  0CD9  1D03               	skipz
  6938  0CDA  2CDC               	goto	u3441
  6939  0CDB  2CDD               	goto	u3440
  6940  0CDC                     u3441:
  6941  0CDC  2CC2               	goto	l2865
  6942  0CDD                     u3440:
  6943  0CDD  2CDE               	goto	l930
  6944                           	
  6945  0CDE                     l929:	
  6946                           	line	24
  6947                           ;	Return value of _strcat is never used
  6948                           	
  6949  0CDE                     l930:	
  6950  0CDE  0008               	return
  6951                           	opt stack 0
  6952                           GLOBAL	__end_of_strcat
  6953  0CDF                     	__end_of_strcat:
  6954 ;; =============== function _strcat ends ============
  6955                           
  6956                           	signat	_strcat,8313
  6957                           	global	_delay
  6958                           psect	text556,local,class=CODE,delta=2
  6959                           global __ptext556
  6960  0B84                     __ptext556:
  6961                           
  6962 ;; *************** function _delay *****************
  6963 ;; Defined at:
  6964 ;;		line 485 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  x               2    0[COMMON] unsigned int 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;		None
  6969 ;; Return value:  Size  Location     Type
  6970 ;;		None               void
  6971 ;; Registers used:
  6972 ;;		wreg
  6973 ;; Tracked objects:
  6974 ;;		On entry : 0/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6978 ;;      Params:         2       0       0       0       0
  6979 ;;      Locals:         0       0       0       0       0
  6980 ;;      Temps:          0       0       0       0       0
  6981 ;;      Totals:         2       0       0       0       0
  6982 ;;Total ram usage:        2 bytes
  6983 ;; Hardware stack levels used:    1
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_getlogicseq
  6988 ;;		_cmd
  6989 ;;		_dat
  6990 ;;		_scroll
  6991 ;;		_actrow
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           psect	text556
  6995                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  6996                           	line	485
  6997                           	global	__size_of_delay
  6998  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  6999                           	
  7000  0B84                     _delay:	
  7001                           	opt	stack 6
  7002                           ; Regs used in _delay: [wreg]
  7003                           	line	486
  7004                           	
  7005  0B84                     l2855:	
  7006                           ;prev11.c: 486: while(x-->0);
  7007  0B84  2B86               	goto	l2857
  7008                           	
  7009  0B85                     l819:	
  7010  0B85  2B86               	goto	l2857
  7011                           	
  7012  0B86                     l818:	
  7013                           	
  7014  0B86                     l2857:	
  7015  0B86  3001               	movlw	low(01h)
  7016  0B87  02F0               	subwf	(delay@x),f
  7017  0B88  3000               	movlw	high(01h)
  7018  0B89  1C03               	skipc
  7019  0B8A  03F1               	decf	(delay@x+1),f
  7020  0B8B  02F1               	subwf	(delay@x+1),f
  7021  0B8C  30FF               	movlw	high(0FFFFh)
  7022  0B8D  0671               	xorwf	((delay@x+1)),w
  7023  0B8E  1D03               	skipz
  7024  0B8F  2B92               	goto	u3425
  7025  0B90  30FF               	movlw	low(0FFFFh)
  7026  0B91  0670               	xorwf	((delay@x)),w
  7027  0B92                     u3425:
  7028                           
  7029  0B92  1D03               	skipz
  7030  0B93  2B95               	goto	u3421
  7031  0B94  2B96               	goto	u3420
  7032  0B95                     u3421:
  7033  0B95  2B86               	goto	l2857
  7034  0B96                     u3420:
  7035  0B96  2B97               	goto	l821
  7036                           	
  7037  0B97                     l820:	
  7038                           	line	487
  7039                           	
  7040  0B97                     l821:	
  7041  0B97  0008               	return
  7042                           	opt stack 0
  7043                           GLOBAL	__end_of_delay
  7044  0B98                     	__end_of_delay:
  7045 ;; =============== function _delay ends ============
  7046                           
  7047                           	signat	_delay,4216
  7048                           	global	_strcmp
  7049                           psect	text557,local,class=CODE,delta=2
  7050                           global __ptext557
  7051  0CDF                     __ptext557:
  7052                           
  7053 ;; *************** function _strcmp *****************
  7054 ;; Defined at:
  7055 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  s1              1    wreg     PTR const unsigned char 
  7058 ;;		 -> lo(5), 
  7059 ;;  s2              2    0[COMMON] PTR const unsigned char 
  7060 ;;		 -> STR_32(5), STR_31(5), STR_30(5), STR_29(5), 
  7061 ;;		 -> STR_28(5), STR_27(5), STR_26(5), STR_25(5), 
  7062 ;;		 -> STR_24(5), STR_23(5), STR_22(5), STR_21(5), 
  7063 ;;		 -> STR_20(5), STR_19(5), STR_18(5), STR_17(5), 
  7064 ;;		 -> plo(5), 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  s1              1    7[COMMON] PTR const unsigned char 
  7067 ;;		 -> lo(5), 
  7068 ;;  r               1    6[COMMON] char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  2    0[COMMON] int 
  7071 ;; Registers used:
  7072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7078 ;;      Params:         2       0       0       0       0
  7079 ;;      Locals:         2       0       0       0       0
  7080 ;;      Temps:          4       0       0       0       0
  7081 ;;      Totals:         8       0       0       0       0
  7082 ;;Total ram usage:        8 bytes
  7083 ;; Hardware stack levels used:    2
  7084 ;; This function calls:
  7085 ;;		Nothing
  7086 ;; This function is called by:
  7087 ;;		_startswitch
  7088 ;;		_parselogic
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           psect	text557
  7092                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  7093                           	line	34
  7094                           	global	__size_of_strcmp
  7095  0039                     	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  7096                           	
  7097  0CDF                     _strcmp:	
  7098                           	opt	stack 4
  7099                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7100                           ;strcmp@s1 stored from wreg
  7101  0CDF  00F7               	movwf	(strcmp@s1)
  7102                           	line	37
  7103                           	
  7104  0CE0                     l2845:	
  7105  0CE0  2CE2               	goto	l2847
  7106                           	
  7107  0CE1                     l934:	
  7108                           	line	38
  7109  0CE1  2CE2               	goto	l2847
  7110                           	
  7111  0CE2                     l933:	
  7112                           	line	37
  7113                           	
  7114  0CE2                     l2847:	
  7115  0CE2  0877               	movf	(strcmp@s1),w
  7116  0CE3  0084               	movwf	fsr
  7117  0CE4  1383               	bcf	status, 7	;select IRP bank0
  7118  0CE5  0800               	movf	indf,w
  7119  0CE6  00F2               	movwf	(??_strcmp+0)+0
  7120  0CE7  0871               	movf	(strcmp@s2+1),w
  7121  0CE8  00F4               	movwf	(??_strcmp+1)+0+1
  7122  0CE9  0870               	movf	(strcmp@s2),w
  7123  0CEA  00F3               	movwf	(??_strcmp+1)+0
  7124  0CEB  3001               	movlw	(01h)
  7125  0CEC  07F0               	addwf	(strcmp@s2),f
  7126  0CED  1803               	skipnc
  7127  0CEE  0AF1               	incf	(strcmp@s2+1),f
  7128  0CEF  0874               	movf	1+(??_strcmp+1)+0,w
  7129  0CF0  1283               	bcf	status, 5	;RP0=0, select bank0
  7130  0CF1  1303               	bcf	status, 6	;RP1=0, select bank0
  7131  0CF2  00FF               	movwf	btemp+1
  7132  0CF3  0873               	movf	0+(??_strcmp+1)+0,w
  7133  0CF4  0084               	movwf	fsr0
  7134  0CF5  120A  158A  2000   	fcall	stringtab
              120A  158A         
  7135  0CFA  3AFF               	xorlw	0ffh
  7136  0CFB  3E01               	addlw	1
  7137  0CFC  0772               	addwf	(??_strcmp+0)+0,w
  7138  0CFD  00F5               	movwf	(??_strcmp+3)+0
  7139  0CFE  0875               	movf	(??_strcmp+3)+0,w
  7140  0CFF  00F6               	movwf	(strcmp@r)
  7141  0D00  08F6               	movf	((strcmp@r)),f
  7142  0D01  1D03               	skipz
  7143  0D02  2D04               	goto	u3401
  7144  0D03  2D05               	goto	u3400
  7145  0D04                     u3401:
  7146  0D04  2D11               	goto	l2851
  7147  0D05                     u3400:
  7148                           	
  7149  0D05                     l2849:	
  7150  0D05  0877               	movf	(strcmp@s1),w
  7151  0D06  0084               	movwf	fsr0
  7152  0D07  3001               	movlw	01h
  7153  0D08  07F7               	addwf	(strcmp@s1),f
  7154  0D09  1383               	bcf	status, 7	;select IRP bank0
  7155  0D0A  0880               	movf	indf,f
  7156  0D0B  1D03               	skipz
  7157  0D0C  2D0E               	goto	u3411
  7158  0D0D  2D0F               	goto	u3410
  7159  0D0E                     u3411:
  7160  0D0E  2CE2               	goto	l2847
  7161  0D0F                     u3410:
  7162  0D0F  2D11               	goto	l2851
  7163                           	
  7164  0D10                     l936:	
  7165  0D10  2D11               	goto	l2851
  7166                           	
  7167  0D11                     l937:	
  7168                           	line	39
  7169                           	
  7170  0D11                     l2851:	
  7171  0D11  0876               	movf	(strcmp@r),w
  7172  0D12  00F0               	movwf	(?_strcmp)
  7173  0D13  01F1               	clrf	(?_strcmp+1)
  7174  0D14  1BF0               	btfsc	(?_strcmp),7
  7175  0D15  03F1               	decf	(?_strcmp+1),f
  7176  0D16  2D17               	goto	l938
  7177                           	
  7178  0D17                     l2853:	
  7179                           	line	40
  7180                           	
  7181  0D17                     l938:	
  7182  0D17  0008               	return
  7183                           	opt stack 0
  7184                           GLOBAL	__end_of_strcmp
  7185  0D18                     	__end_of_strcmp:
  7186 ;; =============== function _strcmp ends ============
  7187                           
  7188                           	signat	_strcmp,8314
  7189                           	global	_strcpy
  7190                           psect	text558,local,class=CODE,delta=2
  7191                           global __ptext558
  7192  0C75                     __ptext558:
  7193                           
  7194 ;; *************** function _strcpy *****************
  7195 ;; Defined at:
  7196 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  to              2    0[COMMON] PTR unsigned char 
  7199 ;;		 -> getlogicseq@str(32), logic_d3(5), logic_d2(5), logic_d1(5), 
  7200 ;;		 -> lo(5), plo(5), 
  7201 ;;  from            2    2[COMMON] PTR const unsigned char 
  7202 ;;		 -> STR_15(1), STR_14(20), STR_12(1), STR_11(20), 
  7203 ;;		 -> STR_9(1), STR_8(20), STR_2(4), lo(5), 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  cp              2    9[COMMON] PTR unsigned char 
  7206 ;;		 -> getlogicseq@str(32), logic_d3(5), logic_d2(5), logic_d1(5), 
  7207 ;;		 -> lo(5), plo(5), 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  2    wreg      PTR unsigned char 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7217 ;;      Params:         4       0       0       0       0
  7218 ;;      Locals:         2       0       0       0       0
  7219 ;;      Temps:          5       0       0       0       0
  7220 ;;      Totals:        11       0       0       0       0
  7221 ;;Total ram usage:       11 bytes
  7222 ;; Hardware stack levels used:    2
  7223 ;; This function calls:
  7224 ;;		Nothing
  7225 ;; This function is called by:
  7226 ;;		_startswitch
  7227 ;;		_getlogicseq
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           psect	text558
  7231                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  7232                           	line	10
  7233                           	global	__size_of_strcpy
  7234  0032                     	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  7235                           	
  7236  0C75                     _strcpy:	
  7237                           	opt	stack 5
  7238                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7239                           	line	18
  7240                           	
  7241  0C75                     l2841:	
  7242  0C75  0871               	movf	(strcpy@to+1),w
  7243  0C76  01FA               	clrf	(strcpy@cp+1)
  7244  0C77  07FA               	addwf	(strcpy@cp+1)
  7245  0C78  0870               	movf	(strcpy@to),w
  7246  0C79  01F9               	clrf	(strcpy@cp)
  7247  0C7A  07F9               	addwf	(strcpy@cp)
  7248                           
  7249                           	line	19
  7250  0C7B  2C7D               	goto	l2843
  7251                           	
  7252  0C7C                     l942:	
  7253                           	line	20
  7254  0C7C  2C7D               	goto	l2843
  7255                           	
  7256  0C7D                     l941:	
  7257                           	line	19
  7258                           	
  7259  0C7D                     l2843:	
  7260  0C7D  0873               	movf	(strcpy@from+1),w
  7261  0C7E  00F5               	movwf	(??_strcpy+0)+0+1
  7262  0C7F  0872               	movf	(strcpy@from),w
  7263  0C80  00F4               	movwf	(??_strcpy+0)+0
  7264  0C81  3001               	movlw	(01h)
  7265  0C82  07F2               	addwf	(strcpy@from),f
  7266  0C83  1803               	skipnc
  7267  0C84  0AF3               	incf	(strcpy@from+1),f
  7268  0C85  0875               	movf	1+(??_strcpy+0)+0,w
  7269  0C86  1283               	bcf	status, 5	;RP0=0, select bank0
  7270  0C87  1303               	bcf	status, 6	;RP1=0, select bank0
  7271  0C88  00FF               	movwf	btemp+1
  7272  0C89  0874               	movf	0+(??_strcpy+0)+0,w
  7273  0C8A  0084               	movwf	fsr0
  7274  0C8B  120A  158A  2000   	fcall	stringtab
              120A  158A         
  7275  0C90  00F6               	movwf	(??_strcpy+2)+0
  7276  0C91  087A               	movf	(strcpy@cp+1),w
  7277  0C92  00F8               	movwf	(??_strcpy+3)+0+1
  7278  0C93  0879               	movf	(strcpy@cp),w
  7279  0C94  00F7               	movwf	(??_strcpy+3)+0
  7280  0C95  3001               	movlw	(01h)
  7281  0C96  07F9               	addwf	(strcpy@cp),f
  7282  0C97  1803               	skipnc
  7283  0C98  0AFA               	incf	(strcpy@cp+1),f
  7284  0C99  0877               	movf	0+(??_strcpy+3)+0,w
  7285  0C9A  0084               	movwf	fsr0
  7286  0C9B  1783               	bsf	status,7
  7287  0C9C  1C78               	btfss	1+(??_strcpy+3)+0,0
  7288  0C9D  1383               	bcf	status,7
  7289  0C9E  0876               	movf	(??_strcpy+2)+0,w
  7290  0C9F  0080               	movwf	indf
  7291  0CA0  0880               	movf	(indf),f
  7292  0CA1  1D03               	skipz
  7293  0CA2  2CA4               	goto	u3391
  7294  0CA3  2CA5               	goto	u3390
  7295  0CA4                     u3391:
  7296  0CA4  2C7D               	goto	l2843
  7297  0CA5                     u3390:
  7298  0CA5  2CA6               	goto	l944
  7299                           	
  7300  0CA6                     l943:	
  7301                           	line	22
  7302                           ;	Return value of _strcpy is never used
  7303                           	
  7304  0CA6                     l944:	
  7305  0CA6  0008               	return
  7306                           	opt stack 0
  7307                           GLOBAL	__end_of_strcpy
  7308  0CA7                     	__end_of_strcpy:
  7309 ;; =============== function _strcpy ends ============
  7310                           
  7311                           	signat	_strcpy,8313
  7312                           	global	_check
  7313                           psect	text559,local,class=CODE,delta=2
  7314                           global __ptext559
  7315  0D9A                     __ptext559:
  7316                           
  7317 ;; *************** function _check *****************
  7318 ;; Defined at:
  7319 ;;		line 121 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  input           1    wreg     PTR unsigned char 
  7322 ;;		 -> lo(5), 
  7323 ;;  logic           2    0[COMMON] PTR unsigned char 
  7324 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  input           1    5[COMMON] PTR unsigned char 
  7327 ;;		 -> lo(5), 
  7328 ;;  i               2    6[COMMON] int 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  2    0[COMMON] int 
  7331 ;; Registers used:
  7332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7338 ;;      Params:         2       0       0       0       0
  7339 ;;      Locals:         3       0       0       0       0
  7340 ;;      Temps:          3       0       0       0       0
  7341 ;;      Totals:         8       0       0       0       0
  7342 ;;Total ram usage:        8 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_startswitch
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           psect	text559
  7351                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7352                           	line	121
  7353                           	global	__size_of_check
  7354  0055                     	__size_of_check	equ	__end_of_check-_check
  7355                           	
  7356  0D9A                     _check:	
  7357                           	opt	stack 5
  7358                           ; Regs used in _check: [wreg-fsr0h+status,2+status,0+btemp+1]
  7359                           ;check@input stored from wreg
  7360                           	line	123
  7361  0D9A  00F5               	movwf	(check@input)
  7362                           	
  7363  0D9B                     l2819:	
  7364                           ;prev11.c: 123: int i=0;
  7365  0D9B  01F6               	clrf	(check@i)
  7366  0D9C  01F7               	clrf	(check@i+1)
  7367                           	line	125
  7368                           ;prev11.c: 125: for(i=0;i<4;i++)
  7369  0D9D  01F6               	clrf	(check@i)
  7370  0D9E  01F7               	clrf	(check@i+1)
  7371                           	
  7372  0D9F                     l2821:	
  7373  0D9F  0877               	movf	(check@i+1),w
  7374  0DA0  3A80               	xorlw	80h
  7375  0DA1  00FF               	movwf	btemp+1
  7376  0DA2  3080               	movlw	(high(04h))^80h
  7377  0DA3  027F               	subwf	btemp+1,w
  7378  0DA4  1D03               	skipz
  7379  0DA5  2DA8               	goto	u3345
  7380  0DA6  3004               	movlw	low(04h)
  7381  0DA7  0276               	subwf	(check@i),w
  7382  0DA8                     u3345:
  7383                           
  7384  0DA8  1C03               	skipc
  7385  0DA9  2DAB               	goto	u3341
  7386  0DAA  2DAC               	goto	u3340
  7387  0DAB                     u3341:
  7388  0DAB  2DAE               	goto	l2825
  7389  0DAC                     u3340:
  7390  0DAC  2DE9               	goto	l2837
  7391                           	
  7392  0DAD                     l2823:	
  7393  0DAD  2DE9               	goto	l2837
  7394                           	line	126
  7395                           	
  7396  0DAE                     l701:	
  7397                           	line	127
  7398                           	
  7399  0DAE                     l2825:	
  7400                           ;prev11.c: 126: {
  7401                           ;prev11.c: 127: if(input[i]=='0'&&logic[i]=='1')
  7402  0DAE  0876               	movf	(check@i),w
  7403  0DAF  0775               	addwf	(check@input),w
  7404  0DB0  00F2               	movwf	(??_check+0)+0
  7405  0DB1  0872               	movf	0+(??_check+0)+0,w
  7406  0DB2  0084               	movwf	fsr0
  7407  0DB3  1383               	bcf	status, 7	;select IRP bank0
  7408  0DB4  0800               	movf	indf,w
  7409  0DB5  3A30               	xorlw	030h
  7410  0DB6  1D03               	skipz
  7411  0DB7  2DB9               	goto	u3351
  7412  0DB8  2DBA               	goto	u3350
  7413  0DB9                     u3351:
  7414  0DB9  2DD5               	goto	l2833
  7415  0DBA                     u3350:
  7416                           	
  7417  0DBA                     l2827:	
  7418  0DBA  0876               	movf	(check@i),w
  7419  0DBB  0770               	addwf	(check@logic),w
  7420  0DBC  00F3               	movwf	(??_check+1)+0
  7421  0DBD  0871               	movf	(check@logic+1),w
  7422  0DBE  00F2               	movwf	(??_check+0)+0
  7423  0DBF  1803               	skipnc
  7424  0DC0  0AF2               	incf	(??_check+0)+0,f
  7425  0DC1  1FF6               	btfss	(check@i),7
  7426  0DC2  2DC4               	goto	u3360
  7427  0DC3  03F2               	decf	(??_check+0)+0,f
  7428  0DC4                     u3360:
  7429  0DC4  0872               	movf	(??_check+0)+0,w
  7430  0DC5  00F4               	movwf	0+((??_check+1)+0)+1
  7431  0DC6  0873               	movf	0+(??_check+1)+0,w
  7432  0DC7  0084               	movwf	fsr0
  7433  0DC8  1783               	bsf	status,7
  7434  0DC9  1C74               	btfss	1+(??_check+1)+0,0
  7435  0DCA  1383               	bcf	status,7
  7436  0DCB  0800               	movf	indf,w
  7437  0DCC  3A31               	xorlw	031h
  7438  0DCD  1D03               	skipz
  7439  0DCE  2DD0               	goto	u3371
  7440  0DCF  2DD1               	goto	u3370
  7441  0DD0                     u3371:
  7442  0DD0  2DD5               	goto	l2833
  7443  0DD1                     u3370:
  7444                           	line	128
  7445                           	
  7446  0DD1                     l2829:	
  7447                           ;prev11.c: 128: return 0;
  7448  0DD1  01F0               	clrf	(?_check)
  7449  0DD2  01F1               	clrf	(?_check+1)
  7450  0DD3  2DEE               	goto	l704
  7451                           	
  7452  0DD4                     l2831:	
  7453  0DD4  2DEE               	goto	l704
  7454                           	
  7455  0DD5                     l703:	
  7456                           	line	125
  7457                           	
  7458  0DD5                     l2833:	
  7459  0DD5  3001               	movlw	low(01h)
  7460  0DD6  07F6               	addwf	(check@i),f
  7461  0DD7  1803               	skipnc
  7462  0DD8  0AF7               	incf	(check@i+1),f
  7463  0DD9  3000               	movlw	high(01h)
  7464  0DDA  07F7               	addwf	(check@i+1),f
  7465                           	
  7466  0DDB                     l2835:	
  7467  0DDB  0877               	movf	(check@i+1),w
  7468  0DDC  3A80               	xorlw	80h
  7469  0DDD  00FF               	movwf	btemp+1
  7470  0DDE  3080               	movlw	(high(04h))^80h
  7471  0DDF  027F               	subwf	btemp+1,w
  7472  0DE0  1D03               	skipz
  7473  0DE1  2DE4               	goto	u3385
  7474  0DE2  3004               	movlw	low(04h)
  7475  0DE3  0276               	subwf	(check@i),w
  7476  0DE4                     u3385:
  7477                           
  7478  0DE4  1C03               	skipc
  7479  0DE5  2DE7               	goto	u3381
  7480  0DE6  2DE8               	goto	u3380
  7481  0DE7                     u3381:
  7482  0DE7  2DAE               	goto	l2825
  7483  0DE8                     u3380:
  7484  0DE8  2DE9               	goto	l2837
  7485                           	
  7486  0DE9                     l702:	
  7487                           	line	130
  7488                           	
  7489  0DE9                     l2837:	
  7490                           ;prev11.c: 129: }
  7491                           ;prev11.c: 130: return 1;
  7492  0DE9  3001               	movlw	low(01h)
  7493  0DEA  00F0               	movwf	(?_check)
  7494  0DEB  3000               	movlw	high(01h)
  7495  0DEC  00F1               	movwf	((?_check))+1
  7496  0DED  2DEE               	goto	l704
  7497                           	
  7498  0DEE                     l2839:	
  7499                           	line	131
  7500                           	
  7501  0DEE                     l704:	
  7502  0DEE  0008               	return
  7503                           	opt stack 0
  7504                           GLOBAL	__end_of_check
  7505  0DEF                     	__end_of_check:
  7506 ;; =============== function _check ends ============
  7507                           
  7508                           	signat	_check,8314
  7509                           	global	_initkeypad
  7510                           psect	text560,local,class=CODE,delta=2
  7511                           global __ptext560
  7512  0B4A                     __ptext560:
  7513                           
  7514 ;; *************** function _initkeypad *****************
  7515 ;; Defined at:
  7516 ;;		line 669 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;		None
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;		None               void
  7523 ;; Registers used:
  7524 ;;		wreg, status,2
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7530 ;;      Params:         0       0       0       0       0
  7531 ;;      Locals:         0       0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0
  7533 ;;      Totals:         0       0       0       0       0
  7534 ;;Total ram usage:        0 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_main
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           psect	text560
  7543                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev11.c"
  7544                           	line	669
  7545                           	global	__size_of_initkeypad
  7546  0008                     	__size_of_initkeypad	equ	__end_of_initkeypad-_initkeypad
  7547                           	
  7548  0B4A                     _initkeypad:	
  7549                           	opt	stack 7
  7550                           ; Regs used in _initkeypad: [wreg+status,2]
  7551                           	line	670
  7552                           	
  7553  0B4A                     l1373:	
  7554                           ;prev11.c: 670: PORTB = 0;
  7555  0B4A  1283               	bcf	status, 5	;RP0=0, select bank0
  7556  0B4B  1303               	bcf	status, 6	;RP1=0, select bank0
  7557  0B4C  0186               	clrf	(6)	;volatile
  7558                           	line	671
  7559                           	
  7560  0B4D                     l1375:	
  7561                           ;prev11.c: 671: TRISB = 0b11000000;
  7562  0B4D  30C0               	movlw	(0C0h)
  7563  0B4E  1683               	bsf	status, 5	;RP0=1, select bank1
  7564  0B4F  1303               	bcf	status, 6	;RP1=0, select bank1
  7565  0B50  0086               	movwf	(134)^080h	;volatile
  7566                           	line	673
  7567                           	
  7568  0B51                     l877:	
  7569  0B51  0008               	return
  7570                           	opt stack 0
  7571                           GLOBAL	__end_of_initkeypad
  7572  0B52                     	__end_of_initkeypad:
  7573 ;; =============== function _initkeypad ends ============
  7574                           
  7575                           	signat	_initkeypad,88
  7576                           psect	text561,local,class=CODE,delta=2
  7577                           global __ptext561
  7578  0000                     __ptext561:
  7579                           	global	btemp
  7580  007E                     	btemp set 07Eh
  7581                           
  7582                           	DABS	1,126,2	;btemp
  7583                           	global	wtemp0
  7584  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Sun Jul 30 11:23:41 2017

                   pc 0002                    _f1 00E4                    _f2 00E6                    _f3 00E8  
        ___awdiv@sign 0076                    _lo 0067                    fsr 0004   ___wmul@multiplicand 0072  
                 l701 0DAE                   l702 0DE9                   l703 0DD5                   l711 003B  
                 l704 0DEE                   l720 00EE                   l712 0044                   l721 00F2  
                 l713 004D                   l714 00F1                   l730 04B6                   l707 0C20  
                 l715 00A2                   l731 04CA                   l820 0B97                   l900 019A  
                 l708 0C20                   l716 00AB                   l740 0551                   l732 04D6  
                 l821 0B97                   l901 0199                   l717 00C4                   l741 05DB  
                 l733 04F9                   l830 027D                   l902 01B2                   l718 00CD  
                 l750 0601                   l734 04E6                   l726 0478                   l911 0B49  
                 l831 02C5                   l903 01D5                   l719 00E6                   l751 060D  
                 l743 056C                   l735 04FC                   l727 048B                   l824 01E6  
                 l840 0BD5                   l920 0D49                   l904 01BD                   l760 06D6  
                 l752 060C                   l744 05DA                   l736 04F8                   l728 07FF  
                 l825 02C5                   l921 0D55                   l905 01D4                   l761 06E5  
                 l753 060E                   l745 0585                   l737 04F7                   l729 04A7  
                 l818 0B86                   l930 0CDE                   l850 041F                   l826 01F5  
                 l914 0D28                   l834 0C74                   l906 01C8                   l762 0707  
                 l754 0649                   l746 05DE                   l738 04FA                   l819 0B85  
                 l827 0222                   l843 0BFA                   l915 0D4C                   l907 01D3  
                 l771 075C                   l763 06FA                   l755 06D3                   l747 05ED  
                 l739 04FB                   l924 0CB5                   l828 0237                   l916 0D33  
                 l908 01D2                   l780 07FC                   l772 07CA                   l764 06F9  
                 l748 060F                   l941 0C7D                   l933 0CE2                   l925 0CAE  
                 l829 0262                   l917 0D4B                   l837 0B63                   l853 0DFE  
                 l781 07FE                   l773 0775                   l765 0705                   l757 0664  
                 l749 0602                   l942 0C7C                   l934 0CE1                   l926 0CC0  
                 l918 0D3E                   l854 0E11                   l870 0FCE                   l862 0F58  
                 l774 07CE                   l766 0704                   l758 06D2                   l943 0CA6  
                 l927 0CC2                   l919 0D4A                   l855 0E1B                   l871 0FBB  
                 l863 0F4B                   l775 07DD                   l767 0706                   l759 067D  
                 l695 0BA7                   l944 0CA6                   l936 0D10                   l928 0CC1  
                 l848 02EA                   l880 0107                   l856 0E3E                   l872 0FE4  
                 l864 0F6A                   l776 07FF                   l768 0741                   l696 0BAD  
                 l937 0D11                   l929 0CDE                   l849 032D                   l953 0C24  
                 l881 01DA                   l857 0E1E                   l865 0FFF                   l873 0FFE  
                 l777 07F2                   l769 07CB                   l697 0BAE                   l938 0D17  
                 l954 0C2E                   l890 014B                   l882 012A                   l858 0E52  
                 l866 0F88                   l874 0FFF                   l778 07F1                   l698 0BAE  
                 l955 0C43                   l891 0162                   l883 0112                   l859 0E52  
                 l867 0FA0                   l779 07FD                   l956 0C4A                   l892 0156  
                 l884 0129                   l868 0F8D                   l877 0B51                   l893 0161  
                 l885 011D                   l869 0FB6                   l894 0160                   l886 0128  
                 l895 0179                   l887 0127                   l896 019C                   l888 0140  
                 l897 0184                   l889 0163                   l898 019B                   l899 018F  
                 _RB0 0030                   _RB1 0031                   _RC0 0038                   _RB2 0032  
                 _RC1 0039                   _RB3 0033                   _RD0 0040                   _RC2 003A  
                 _RD1 0041                   _RC3 003B                   _RB5 0035                   _RD2 0042  
                 _RC4 003C                   _RB6 0036                   _RD3 0043                   _RC5 003D  
                 _RB7 0037                   _RD4 0044                   _RD5 0045                   _RD6 0046  
                 _RD7 0047                   _dat 0BD6                   _cmd 0BB1                   _dev 0061  
                 _plo 01AA          ?_getlogicseq 0070                   fsr0 0004                   indf 0000  
        ___awmod@sign 0076           _startswitch 0011                  l1100 0F0C                  l1101 0F1A  
                l1102 0F25                  l1103 0F2C                  l3001 0F2C                  l1161 0E61  
                l1170 0EB1                  l1162 0E6B                  l1171 0EB8                  l1163 0EA7  
                l3011 0E6B                  l3003 0E53                  l1164 0E81                  l1093 0EC7  
                l3021 0E87                  l1165 0E75                  l3013 0E71                  l3005 0E58  
                l3101 0BE4                  l1094 0ED5                  l1166 0E86                  ?_dat 0078  
                l1095 0F1B                  l3031 0EAB                  l3023 0E91                  l1167 0E87  
                l3015 0E75                  l3007 0E61                  l3103 0BE5                  l3111 0D1D  
                l1096 0EED                  l1168 0E98                  l1097 0EE1                  l3033 0EB1  
                l1169 0EA6                  l3025 0E98                  l3017 0E7C                  l3009 0E65  
                l3041 01E5                  l3105 0BEE                  l3121 0D3A                  l3113 0D24  
                l3201 0178                  l1098 0EF2                  ?_cmd 0078                  l1099 0EF3  
                l3035 0EB8                  l3027 0E9F                  l3019 0E81                  l3051 020E  
                l3043 01E6                  l3107 0BF1                  l3123 0D3E                  l3115 0D28  
                l3131 0C4F                  l3211 018D                  l3203 017D                  l1373 0B4A  
                l3029 0EA7                  l3061 0236                  l3053 0215                  l3045 01EC  
                l3037 01DB                  l3125 0D45                  l3117 0D2F                  l3109 0D18  
                l3133 0C50                  l3221 01A5                  l3213 018E                  l3205 0182  
                l3141 00F3                  l3301 0F8D                  l1375 0B4D                  l3071 0266  
                l3063 0237                  l3055 0219                  l3047 01F4                  l3039 01DF  
                l3119 0D33                  l3127 0D4C                  l3135 0C59                  l3231 01BB  
                l3223 01AB                  l3215 0193                  l3207 0183                  l3151 010B  
                l3143 00FC                  l3311 0FC4                  l3303 0F96                  l3081 02A0  
                l3073 026E                  l3065 0250                  l3049 01F9                  l3057 0222  
                l3137 0C62                  l3129 0C4B                  l3241 01CC                  l3233 01BC  
                l3225 01B0                  l3217 0198                  l3209 0188                  l3161 011C  
                l3153 0110                  l3145 0102                  l3313 0FCE                  l3305 0FA0  
                l3321 0030                  l3401 04C1                  l3083 02B7                  l3075 027C  
                l3067 0254                  l3059 0228                  l3091 0BC0                  l3139 0C6B  
                l3243 01D1                  l3235 01C1                  l3227 01B1                  l3219 019C  
                l3171 0139                  l3163 0121                  l3155 0111                  l3147 0105  
                l3251 0DEF                  l3315 0FE4                  l3307 0FB6                  l3331 0048  
                l3323 0036                  l3411 04DE                  l3403 04C5                  l3077 027D  
                l3069 0262                  l3093 0BC9                  l3085 0BB1                  l3237 01C6  
                l3229 01B6                  l3245 01D5                  l3181 014A                  l3173 013E  
                l3165 0126                  l3157 0116                  l3149 0106                  l3261 0E1B  
                l3253 0DF8                  l3317 0FFD                  l3309 0FBB                  l3341 0076  
                l3333 004D                  l3325 003B                  l3501 06E4                  l3413 04E5  
                l3421 04FC                  l3405 04CA                  l3079 0298                  l3095 0BCC  
                l3087 0BBC                  l3247 01DA                  l3239 01C7                  l3191 015F  
                l3183 014F                  l3175 013F                  l3159 011B                  l3167 012A  
                l3263 0E1E                  l3255 0DFE                  l3271 0C03                  l3351 00C4  
                l3343 0099                  l3335 0053                  l3327 003F                  l3319 0011  
                l3511 0701                  l3503 06E5                  l3431 052B                  l3423 050F  
                l3415 04E6                  l3407 04D0                  l3089 0BBF                  l3097 0BD6  
                l3185 0154                  l3177 0144                  l3193 0163                  l3169 0133  
                l3249 0B5A                  l3265 0E37                  l3257 0E07                  l3273 0C07  
                l3281 0F42                  l3353 00CD                  l3345 00A2                  l3337 0055  
                l3329 0044                  l3521 0741                  l3505 06EE                  l3513 0707  
                l3441 0572                  l3433 053E                  l3425 0518                  l3417 04EC  
                l3409 04D6                  l3361 0420                  l3099 0BE1                  l3195 016C  
                l3187 0155                  l3179 0149                  l3267 0E3E                  l3259 0E11  
                l3275 0C0A                  l3291 0F6A                  l3283 0F46                  l3355 00DD  
                l3347 00AB                  l3339 0066                  l3531 0768                  l3523 074E  
                l3515 070D                  l3507 06F4                  l3451 05D3                  l3443 0578  
                l3435 055E                  l3427 051C                  l3419 04F2                  l3371 044F  
                l3363 042F                  l2821 0D9F                  l3197 0172                  l3189 015A  
                l3277 0C0E                  l3269 0BFB                  l3293 0F72                  l3285 0F48  
                l3357 00E6                  l3349 00BB                  l3533 079B                  l3541 07CB  
                l3525 0755                  l3517 071A                  l3509 06FA                  l3461 05F6  
                l3445 05AB                  l3453 05DB                  l3437 0565                  l3429 051E  
                l3381 048A                  l3373 0451                  l3365 0447                  l2831 0DD4  
                l2823 0DAD                  l3199 0177                  l3295 0F7F                  l3287 0F4B  
                l3279 0F2D                  l3359 00F2                  l3551 07EC                  l3535 07AA  
                l3543 07CE                  l3527 075C                  l3519 072D                  l3471 0615  
                l3463 05FC                  l3447 05BA                  l3455 05DE                  l3439 056C  
                l3391 04A5                  l3383 048B                  l3375 0464                  l3367 044B  
                l2833 0DD5                  l2825 0DAE                  l2841 0C75                  l3297 0F83  
                l3289 0F58                  l3553 07F2                  l3545 07DC                  l3537 07BD  
                l3529 0762                  l3481 065D                  l3473 0622                  l3465 0602  
                l3457 05EC                  l3449 05CD                  l3393 04AE                  l3385 0498  
                l3377 0478                  l3369 044D                  l3561 0BA1                  l2835 0DDB  
                l2827 0DBA                  l2819 0D9B                  l2843 0C7D                  l2851 0D11  
                l3299 0F88                  l3555 07F9                  l3547 07DD                  l3539 07C3  
                l3491 06B2                  l3483 0664                  l3475 0635                  l3467 0609  
                l3459 05ED                  l3395 04B0                  l3387 049F                  l3379 0481  
                l3563 0BA7                  l2829 0DD1                  l2837 0DE9                  l2853 0D17  
                l2845 0CE0                  l2861 0CAE                  l2941 02EA                  l3549 07E6  
                l3493 06C5                  l3485 066A                  l3477 0649                  l3469 060F  
                l3397 04B4                  l3389 04A3                  l3557 0B98                  l2839 0DEE  
                l2847 0CE2                  l2855 0B84                  l2863 0CB5                  l2943 0308  
                l2935 02C6                  l2951 0C21                  l3495 06CB                  l3487 0670  
                l3479 0656                  l3399 04BD                  l3559 0B9C                  l2849 0D05  
                l2857 0B86                  l2865 0CC2                  l2945 030E                  l2937 02CA  
                l2961 0C4A                  l2953 0C24                  l3489 06A3                  l3497 06D3  
                l2859 0CA7                  l2939 02E9                  l2947 032D                  l2955 0C28  
                l2971 0ED0                  l2963 0EB9                  l3499 06D6                  l2949 0B43  
                l2957 0C35                  l2981 0EE8                  l2973 0ED5                  l2965 0EBE  
                l2959 0C43                  l2991 0F0C                  l2983 0EED                  l2975 0ED7  
                l2967 0EC7                  l2993 0F13                  l2985 0EF3                  l2977 0EDD  
                l2969 0ECB                  l2987 0F04                  l2979 0EE1                  l2995 0F1B  
                l2997 0F1F                  l2989 0F0A                  l2999 0F25                  STR_1 08B1  
                STR_2 08C5                  STR_3 0891                  STR_4 0814                  STR_5 08A2  
                STR_6 08BC                  STR_7 083A                  STR_8 0855                  STR_9 0868  
                u4010 0EA5                  u4011 0EA4                  u4020 0EAB                  u4100 0D24  
                u4005 0E99                  u4101 0D23                  u4030 01E4                  u4110 0D2F  
                u4031 01E3                  u4111 0D2E                  u3400 0D05                  u4040 01EC  
                u4120 0D3A                  u4200 014F                  u3401 0D04                  u4041 01EB  
                u4121 0D39                  u4201 014E                  u3410 0D0F                  u4050 01F9  
                u4130 0D45                  u4210 015A                  u3411 0D0E                  u4051 01F8  
                u4131 0D44                  u4211 0159                  u3340 0DAC                  u3420 0B96  
                u4060 0235                  u4220 0172                  u4140 0102                  u4300 0DF8  
                u3341 0DAB                  u3421 0B95                  u4061 0234                  u4221 0171  
                u4141 0101                  u4301 0DF7                  u3350 0DBA                  u3430 0CBF  
                u4070 0261                  u4230 017D                  u4150 010B                  u4310 0E07  
                u3351 0DB9                  u3431 0CBE                  u4071 0260                  u4231 017C  
                u4151 010A                  u4311 0E06                  u3360 0DC4                  u3440 0CDD  
                u4080 027B                  u4240 0188                  u4160 0116                  u4320 0E51  
                u4400 003F                  u3345 0DA8                  u3425 0B92                  u3441 0CDC  
                u4081 027A                  u4065 0231                  u4241 0187                  u4161 0115  
                u4321 0E50                  u4401 003E                  u3370 0DD1                  u3610 02E8  
                u4090 02C4                  u4250 0193                  u4170 0121                  u4330 0C03  
                u4410 0048                  u3371 0DD0                  u3611 02E7                  u4091 02C3  
                u4075 025D                  u4251 0192                  u4171 0120                  u4331 0C02  
                u4411 0047                  u3380 0DE8                  u3700 03A4                  u4260 01AB  
                u4180 0139                  u4340 0F69                  u4420 0076                  u4500 04BD  
                u3381 0DE7                  u3701 03A0                  u4085 0277                  u4261 01AA  
                u4181 0138                  u4341 0F68                  u4421 0075                  u4501 04BC  
                u3390 0CA5                  u3630 032C                  u4270 01B6                  u4190 0144  
                u4350 0F7F                  u4430 0099                  u4510 04D0                  u3391 0CA4  
                u3631 032B                  u3615 02E4                  u4095 02C0                  u4271 01B5  
                u4191 0143                  u4351 0F7E                  u4431 0098                  u4511 04CF  
                u3720 03C2                  u3640 034A                  u3624 02F6                  u3800 0C28  
                u4280 01C1                  u4360 0FB5                  u4440 00BB                  u4600 05FC  
                u4520 04DE                  u3385 0DE4                  u3721 03BE                  u3641 0346  
                u3625 02F3                  u3801 0C27                  u4281 01C0                  u4361 0FB4  
                u4441 00BA                  u4601 05FB                  u4521 04DD                  u3714 03A7  
                u4290 01CC                  u4370 0FE3                  u4450 00DD                  u4610 0609  
                u4530 04EC                  u3635 0328                  u4291 01CB                  u4371 0FE2  
                u4355 0F7B                  u4451 00DC                  u4611 0608                  u4531 04EB  
                u3740 03E0                  u3660 0368                  u3900 0F04                  u4380 0FFC  
                u4700 0755                  u4620 065D                  u4540 0565                  u4460 0439  
                u3741 03DC                  u3661 0364                  u3901 0F03                  u4381 0FFB  
                u4365 0FB1                  u4701 0754                  u4621 065C                  u4541 0564  
                u3734 03C5                  u3654 034D                  u3830 0C42                  u4390 0036  
                u4710 075B                  u4630 0663                  u4550 056B                  u4470 0481  
                u3831 0C41                  u3815 0C2F                  u4375 0FDF                  u4391 0035  
                u4711 075A                  u4631 0662                  u4551 056A                  u4471 0480  
                u3760 03FE                  u3680 0386                  u3920 0F19                  u3840 0EBE  
                u4720 0762                  u4640 066A                  u4560 0572                  u4480 049F  
                u3761 03FA                  u3681 0382                  u3825 0C36                  u3921 0F18  
                u3905 0F00                  u3841 0EBD                  u4385 0FF8                  u4721 0761  
                u4641 0669                  u4561 0571                  u4481 049E                  u3754 03E3  
                u3674 036B                  u3930 0F1F                  u3850 0ECB                  u4730 0768  
                u4650 0670                  u4570 0578                  u4490 04AE                  u3915 0F0D  
                u3851 0ECA                  u4731 0767                  u4651 066F                  u4571 0577  
                u4491 04AD                  u3780 041C                  u3860 0EDD                  u3940 0E58  
                u4740 07DB                  u4660 06E3                  u4580 05EB                  u3781 0418  
                u3861 0EDC                  u3941 0E57                  u4741 07DA                  u4661 06E2  
                u4581 05EA                  u3774 0401                  u3694 0389                  u3950 0E65  
                u4750 07E6                  u4670 06EE                  u4590 05F6                  u3951 0E64  
                u4751 07E5                  u4671 06ED                  u4591 05F5                  u3880 0EF1  
                u3960 0E71                  u4760 07EC                  u4680 06F4                  u3881 0EF0  
                u3961 0E70                  u4761 07EB                  u4745 07D7                  u4681 06F3  
                u4665 06DF                  u4585 05E7                  u3794 041F                  u4770 07F9  
                u4690 0701                  u3875 0EE2                  u4771 07F8                  u4691 0700  
                u3980 0E85                  u3981 0E84                  u3990 0E91                  u3895 0EF4  
                u3991 0E90                  u3975 0E76                  u3995 0E8D                  _main 0B98  
                _pdev 0065                  _scan 00F3                  _retm 00EA                  btemp 007E  
                start 0000                 ??_dat 007A                 ??_cmd 007A                 ?_main 0070  
               ?_scan 0074       __end_of___awdiv 0F2D                 STR_10 0914                 STR_11 0869  
               STR_12 0868                 STR_20 0900                 STR_13 0914                 STR_21 08CE  
               STR_30 08FB                 STR_22 08F6                 STR_14 087D                 STR_15 0868  
               STR_31 08E7                 STR_23 08E2                 STR_16 0914                 STR_32 090F  
               STR_24 090A                 STR_25 08C9                 STR_17 08C4                 STR_26 08F1  
               STR_18 08EC                 STR_27 08DD                 STR_19 08D8                 STR_28 0905  
     __end_of___awmod 0EB9                 STR_29 08D3       ___awdiv@divisor 0070       ___awdiv@counter 0075  
               _PORTA 0005                 _PORTB 0006                 _TRISA 0085                 _TRISB 0086  
               _TRISC 0087                 _TRISD 0088                 _check 0D9A                 _delay 0B84  
               _itoaa 01DB       __end_of_initlcd 0C75                 _write 0DEF                 pclath 000A  
               status 0003                 wtemp0 007E          __end_of_main 0BB1          __end_of_scan 01DB  
              ??_main 007E                ??_scan 0076                ?_check 0070                ?_delay 0070  
              ?_itoaa 0079      ___awdiv@dividend 0072                ?_write 0042      __end_of_clearlcd 0B64  
              ___wmul 0C21             ??___awdiv 0074             ??___awmod 0074                _actrow 0D18  
              check@i 0076           setLCD@vbool 0020                _setLCD 02C6      __end_of_init_fun 0C21  
              delay@x 0070      ___awdiv@quotient 0077       ___awmod@divisor 0070                _scroll 0F2D  
     ___awmod@counter 0075                _strcat 0CA7                _strcmp 0CDF                clrloop 0B53  
              _strcpy 0C75             ??_initlcd 007A      __end_of_resetout 0B4A  __size_of_getlogicseq 03E0  
              write@i 007C        __pcstackCOMMON 0070          __pidataBANK0 0B3E          __pidataBANK1 0007  
        __pidataBANK3 0B64         __end_of_check 0DEF         __end_of_delay 0B98         __end_of_itoaa 02C6  
       __end_of_write 0E53               ??_check 0072               ??_delay 0072          ?_startswitch 0070  
             ??_itoaa 007C               ??_write 007A            __pbssBANK0 0061            __pbssBANK1 00E4  
          __pbssBANK3 0190            dat@Command 0078            __pmaintext 0B98               ?___wmul 0070  
             ?_actrow 0072            cmd@Command 0078               ?_setLCD 0070               ?_scroll 0048  
             ?_strcat 0070               ?_strcmp 0070               ?_strcpy 0070         getlogicseq@bf 00C0  
       getlogicseq@nf 00D2         getlogicseq@wf 00D4             ?_clearlcd 0070             ?_init_fun 0070  
          check@logic 0070            check@input 0075             ?_resetout 0070               ___awdiv 0EB9  
             ___awmod 0E53       __size_of___wmul 002A       __size_of_actrow 003E       __size_of_setLCD 015A  
     __size_of_scroll 00D3            _initkeypad 0B4A       __size_of_strcat 0038       __size_of_strcmp 0039  
     __size_of_strcpy 0032          setLCD@number 0070          __size_of_dat 0025          __size_of_cmd 0025  
             _initlcd 0C4B      ___awmod@dividend 0072               actrow@n 0072            ??_clearlcd 007A  
         scroll@endat 0055       getlogicseq@snum 00C2           scroll@loopn 0057           scroll@loops 004A  
end_of_initialization 0D96               setLCD@i 0040               init_ram 0B77            ??_init_fun 007E  
             scroll@i 005B            ??_resetout 0070          __pstringtext 0800               strcmp@r 0076  
__size_of_startswitch 00E2        __end_of___wmul 0C4B        __end_of_actrow 0D56           ?_initkeypad 0070  
      __end_of_setLCD 0420        __end_of_scroll 1000         ??_getlogicseq 005D        __end_of_strcat 0CDF  
      __end_of_strcmp 0D18        __end_of_strcpy 0CA7   start_initialization 0D56           __end_of_dat 0BFB  
         __end_of_cmd 0BD6              ??___wmul 0074            setLCD@size 0812              ??_actrow 0074  
         __pdataBANK0 0067           __pdataBANK1 00DA           __pdataBANK3 01A0              ??_setLCD 0072  
            ??_scroll 004C              ??_strcat 0073              ??_strcmp 0072              ??_strcpy 0074  
          itoaa@count 0020            itoaa@value 0079         __pcstackBANK0 0020         __pcstackBANK1 00A0  
   __size_of_clearlcd 000A   __end_of_getlogicseq 0800   __size_of_initkeypad 0008     __size_of_init_fun 0026  
            ?___awdiv 0070              ?___awmod 0070             __ptext540 0F2D             __ptext541 0BFB  
           __ptext550 0E53             __ptext542 0DEF             __ptext551 0EB9             __ptext543 0B5A  
           __ptext560 0B4A             __ptext552 0C21             __ptext544 00F3             __ptext561 0000  
           __ptext553 0B43             __ptext545 0C4B             __ptext554 02C6             __ptext546 0D18  
           __ptext538 0420             __ptext555 0CA7             __ptext547 0BD6             __ptext539 0011  
           __ptext556 0B84             __ptext548 0BB1             __ptext557 0CDF             __ptext549 01DB  
           __ptext558 0C75             __ptext559 0D9A     __size_of_resetout 0007             _done_init 0063  
            ?_initlcd 0070        __size_of_check 0055        __size_of_delay 0014        __size_of_itoaa 00EB  
      __size_of_write 0064        getlogicseq@num 00D8        getlogicseq@str 00A0        ___wmul@product 0074  
   getlogicseq@ccount 00D6           __stringbase 0812     ___wmul@multiplier 0070         scroll@startat 0053  
         _getlogicseq 0420             init_fetch 0B73      __size_of___awdiv 0074      __size_of___awmod 0066  
           itoaa@temp 0022          ??_initkeypad 0070            strcat@from 0072      __size_of_initlcd 002A  
            _clearlcd 0B5A         ??_startswitch 0048      getlogicseq@F1268 0190            strcpy@from 0072  
            _init_fun 0BFB         __size_of_main 0019         __size_of_scan 00E8              _logic_d1 00DA  
            _logic_d2 00DF              _logic_d3 01A5              _logic_d4 01A0             scroll@len 0059  
           scroll@str 0048    __end_of_initkeypad 0B52              clear_ram 0B52            write@erase 0046  
            _resetout 0B43              itoaa@ptr 007B   __end_of_startswitch 00F3             stringcode 080A  
            scroll@en 0051              scroll@st 004F             write@line 0044              strcat@cp 0076  
            strcat@to 0070              strcmp@s1 0077              strcmp@s2 0070              strcpy@cp 0079  
            strcpy@to 0070              stringtab 0800              write@str 0042  
