

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Tue Aug 15 11:32:38 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_initlcd
    43                           	FNCALL	_main,_initkeypad
    44                           	FNCALL	_main,_start
    45                           	FNCALL	_start,_getlogic
    46                           	FNCALL	_start,_write
    47                           	FNCALL	_start,_scan
    48                           	FNCALL	_start,_buzz
    49                           	FNCALL	_start,_startswitch
    50                           	FNCALL	_start,_getlogicseq
    51                           	FNCALL	_getlogicseq,_getlogic
    52                           	FNCALL	_getlogicseq,_write
    53                           	FNCALL	_getlogicseq,_delay
    54                           	FNCALL	_getlogicseq,_strcpy
    55                           	FNCALL	_getlogicseq,_scan
    56                           	FNCALL	_getlogicseq,_buzz
    57                           	FNCALL	_getlogicseq,_itoaa
    58                           	FNCALL	_getlogicseq,_strcat
    59                           	FNCALL	_getlogicseq,_setlogic
    60                           	FNCALL	_startswitch,_init_fun
    61                           	FNCALL	_startswitch,_strcpy
    62                           	FNCALL	_startswitch,_write
    63                           	FNCALL	_startswitch,_buzz
    64                           	FNCALL	_startswitch,_strcmp
    65                           	FNCALL	_startswitch,_delay
    66                           	FNCALL	_startswitch,_check
    67                           	FNCALL	_init_fun,_write
    68                           	FNCALL	_getlogic,_read_eep
    69                           	FNCALL	_getlogic,_write_eep
    70                           	FNCALL	_getlogic,_write
    71                           	FNCALL	_getlogic,_delay
    72                           	FNCALL	_getlogic,_read_log
    73                           	FNCALL	_getlogic,_strcpy
    74                           	FNCALL	_write,_clearlcd
    75                           	FNCALL	_write,_cmd
    76                           	FNCALL	_write,_dat
    77                           	FNCALL	_clearlcd,_cmd
    78                           	FNCALL	_initlcd,_cmd
    79                           	FNCALL	_dat,_setLCD
    80                           	FNCALL	_dat,__dat
    81                           	FNCALL	_cmd,_setLCD
    82                           	FNCALL	_cmd,__cmd
    83                           	FNCALL	_setlogic,_write_log
    84                           	FNCALL	__cmd,_latch
    85                           	FNCALL	__dat,_latch
    86                           	FNCALL	_read_log,_read_eep
    87                           	FNCALL	_write_log,_write_eep
    88                           	FNCALL	_scan,_actrow
    89                           	FNCALL	_actrow,_resetout
    90                           	FNCALL	_actrow,_delay
    91                           	FNCALL	_setLCD,_getn
    92                           	FNCALL	_latch,_delay
    93                           	FNCALL	_itoaa,___wmul
    94                           	FNCALL	_itoaa,___awdiv
    95                           	FNCALL	_itoaa,___awmod
    96                           	FNCALL	_write_eep,_delay
    97                           	FNCALL	_read_eep,_delay
    98                           	FNROOT	_main
    99                           	global	read_log@F1918
   100                           	global	_lo
   101                           	global	_logic_d1
   102                           	global	_logic_d2
   103                           	global	_logic_d3
   104                           	global	_logic_d4
   105                           	global	_plo
   106                           psect	idataBANK1,class=CODE,space=0,delta=2
   107                           global __pidataBANK1
   108  0B4C                     __pidataBANK1:
   109                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   110                           	line	858
   111                           
   112                           ;initializer for read_log@F1918
   113  0B4C  3430               	retlw	030h
   114  0B4D  3430               	retlw	030h
   115  0B4E  3430               	retlw	030h
   116  0B4F  3430               	retlw	030h
   117  0B50  3400               	retlw	0
   118                           	line	208
   119                           
   120                           ;initializer for _lo
   121  0B51  3430               	retlw	030h
   122  0B52  3430               	retlw	030h
   123  0B53  3430               	retlw	030h
   124  0B54  3430               	retlw	030h
   125  0B55  3400               	retlw	0
   126                           	line	204
   127                           
   128                           ;initializer for _logic_d1
   129  0B56  3431               	retlw	031h
   130  0B57  3430               	retlw	030h
   131  0B58  3430               	retlw	030h
   132  0B59  3400               	retlw	0
   133  0B5A  3400               	retlw	0
   134                           	line	205
   135                           
   136                           ;initializer for _logic_d2
   137  0B5B  3430               	retlw	030h
   138  0B5C  3431               	retlw	031h
   139  0B5D  3430               	retlw	030h
   140  0B5E  3400               	retlw	0
   141  0B5F  3400               	retlw	0
   142                           	line	206
   143                           
   144                           ;initializer for _logic_d3
   145  0B60  3430               	retlw	030h
   146  0B61  3430               	retlw	030h
   147  0B62  3431               	retlw	031h
   148  0B63  3400               	retlw	0
   149  0B64  3400               	retlw	0
   150                           	line	207
   151                           
   152                           ;initializer for _logic_d4
   153  0B65  3431               	retlw	031h
   154  0B66  3430               	retlw	030h
   155  0B67  3430               	retlw	030h
   156  0B68  3400               	retlw	0
   157  0B69  3400               	retlw	0
   158                           	line	209
   159                           
   160                           ;initializer for _plo
   161  0B6A  3430               	retlw	030h
   162  0B6B  3430               	retlw	030h
   163  0B6C  3430               	retlw	030h
   164  0B6D  3430               	retlw	030h
   165  0B6E  3400               	retlw	0
   166                           	global	_adr
   167                           psect	stringtext,class=STRCODE,delta=2,reloc=256
   168                           global __pstringtext
   169  0800                     __pstringtext:
   170                           ;	global	stringtab,__stringbase
   171  0800                     stringtab:
   172                           ;	String table - string pointers are 2 bytes each
   173  0800  1BFF               	btfsc	(btemp+1),7
   174  0801  280A               	ljmp	stringcode
   175  0802  1383               	bcf	status,7
   176  0803  187F               	btfsc	(btemp+1),0
   177  0804  1783               	bsf	status,7
   178  0805  0800               	movf	indf,w
   179  0806  0A84               	incf fsr
   180  0807  1903               skipnz
   181  0808  0AFF               incf btemp+1
   182  0809  0008               	return
   183  080A                     stringcode:
   184  080A  087F               	movf btemp+1,w
   185  080B  397F               andlw 7Fh
   186  080C  008A               movwf	pclath
   187  080D  0804               	movf	fsr,w
   188  080E  0A84               incf fsr
   189  080F  1903               skipnz
   190  0810  0AFF               incf btemp+1
   191  0811  0082               	movwf pc
   192  0812                     __stringbase:
   193                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   194                           	line	17
   195  0812                     _adr:
   196  0812  3400               	retlw	0
   197  0813  3404               	retlw	04h
   198  0814  3408               	retlw	08h
   199  0815  340C               	retlw	0Ch
   200  0816  340F               	retlw	0Fh
   201                           	global	_adr
   202                           	global	_dev
   203                           	global	_num
   204                           	global	getlogicseq@F1874
   205                           	global	_done_init
   206                           	global	_f1
   207                           	global	_f2
   208                           	global	_f3
   209                           	global	_pdev
   210                           	global	_retm
   211                           	global	_PORTB
   212  0006                     _PORTB	set	6
   213                           	global	_EEIF
   214  006C                     _EEIF	set	108
   215                           	global	_RA0
   216  0028                     _RA0	set	40
   217                           	global	_RA1
   218  0029                     _RA1	set	41
   219                           	global	_RA2
   220  002A                     _RA2	set	42
   221                           	global	_RB0
   222  0030                     _RB0	set	48
   223                           	global	_RB1
   224  0031                     _RB1	set	49
   225                           	global	_RB2
   226  0032                     _RB2	set	50
   227                           	global	_RB3
   228  0033                     _RB3	set	51
   229                           	global	_RB5
   230  0035                     _RB5	set	53
   231                           	global	_RB6
   232  0036                     _RB6	set	54
   233                           	global	_RB7
   234  0037                     _RB7	set	55
   235                           	global	_RC0
   236  0038                     _RC0	set	56
   237                           	global	_RC1
   238  0039                     _RC1	set	57
   239                           	global	_RC2
   240  003A                     _RC2	set	58
   241                           	global	_RC3
   242  003B                     _RC3	set	59
   243                           	global	_RC4
   244  003C                     _RC4	set	60
   245                           	global	_RC5
   246  003D                     _RC5	set	61
   247                           	global	_RC6
   248  003E                     _RC6	set	62
   249                           	global	_RD0
   250  0040                     _RD0	set	64
   251                           	global	_RD1
   252  0041                     _RD1	set	65
   253                           	global	_RD2
   254  0042                     _RD2	set	66
   255                           	global	_RD3
   256  0043                     _RD3	set	67
   257                           	global	_RD4
   258  0044                     _RD4	set	68
   259                           	global	_RD5
   260  0045                     _RD5	set	69
   261                           	global	_RD6
   262  0046                     _RD6	set	70
   263                           	global	_RD7
   264  0047                     _RD7	set	71
   265                           	global	_TRISA
   266  0085                     _TRISA	set	133
   267                           	global	_TRISB
   268  0086                     _TRISB	set	134
   269                           	global	_TRISC
   270  0087                     _TRISC	set	135
   271                           	global	_TRISD
   272  0088                     _TRISD	set	136
   273                           	global	_EEADR
   274  010D                     _EEADR	set	269
   275                           	global	_EEDAT
   276  010C                     _EEDAT	set	268
   277                           	global	_ANSEL
   278  0188                     _ANSEL	set	392
   279                           	global	_EECON2
   280  018D                     _EECON2	set	397
   281                           	global	_EEPGD
   282  0C67                     _EEPGD	set	3175
   283                           	global	_RD
   284  0C60                     _RD	set	3168
   285                           	global	_WR
   286  0C61                     _WR	set	3169
   287                           	global	_WREN
   288  0C62                     _WREN	set	3170
   289                           	global	_WRERR
   290  0C63                     _WRERR	set	3171
   291                           	
   292  0817                     STR_10:	
   293  0817  3450               	retlw	80	;'P'
   294  0818  3472               	retlw	114	;'r'
   295  0819  3465               	retlw	101	;'e'
   296  081A  3473               	retlw	115	;'s'
   297  081B  3473               	retlw	115	;'s'
   298  081C  3420               	retlw	32	;' '
   299  081D  3432               	retlw	50	;'2'
   300  081E  342E               	retlw	46	;'.'
   301  081F  3420               	retlw	32	;' '
   302  0820  342D               	retlw	45	;'-'
   303  0821  3420               	retlw	32	;' '
   304  0822  3453               	retlw	83	;'S'
   305  0823  346B               	retlw	107	;'k'
   306  0824  3469               	retlw	105	;'i'
   307  0825  3470               	retlw	112	;'p'
   308  0826  3420               	retlw	32	;' '
   309  0827  3466               	retlw	102	;'f'
   310  0828  346F               	retlw	111	;'o'
   311  0829  3472               	retlw	114	;'r'
   312  082A  3420               	retlw	32	;' '
   313  082B  3444               	retlw	68	;'D'
   314  082C  3465               	retlw	101	;'e'
   315  082D  3476               	retlw	118	;'v'
   316  082E  3469               	retlw	105	;'i'
   317  082F  3463               	retlw	99	;'c'
   318  0830  3465               	retlw	101	;'e'
   319  0831  3400               	retlw	0
   320                           psect	stringtext
   321                           	
   322  0832                     STR_11:	
   323  0832  3445               	retlw	69	;'E'
   324  0833  346E               	retlw	110	;'n'
   325  0834  3474               	retlw	116	;'t'
   326  0835  3465               	retlw	101	;'e'
   327  0836  3472               	retlw	114	;'r'
   328  0837  3420               	retlw	32	;' '
   329  0838  344C               	retlw	76	;'L'
   330  0839  346F               	retlw	111	;'o'
   331  083A  3467               	retlw	103	;'g'
   332  083B  3469               	retlw	105	;'i'
   333  083C  3463               	retlw	99	;'c'
   334  083D  3420               	retlw	32	;' '
   335  083E  3444               	retlw	68	;'D'
   336  083F  3445               	retlw	69	;'E'
   337  0840  3456               	retlw	86	;'V'
   338  0841  3431               	retlw	49	;'1'
   339  0842  343A               	retlw	58	;':'
   340  0843  3420               	retlw	32	;' '
   341  0844  3420               	retlw	32	;' '
   342  0845  3400               	retlw	0
   343                           psect	stringtext
   344                           	
   345  0846                     STR_14:	
   346  0846  3445               	retlw	69	;'E'
   347  0847  346E               	retlw	110	;'n'
   348  0848  3474               	retlw	116	;'t'
   349  0849  3465               	retlw	101	;'e'
   350  084A  3472               	retlw	114	;'r'
   351  084B  3420               	retlw	32	;' '
   352  084C  344C               	retlw	76	;'L'
   353  084D  346F               	retlw	111	;'o'
   354  084E  3467               	retlw	103	;'g'
   355  084F  3469               	retlw	105	;'i'
   356  0850  3463               	retlw	99	;'c'
   357  0851  3420               	retlw	32	;' '
   358  0852  3444               	retlw	68	;'D'
   359  0853  3445               	retlw	69	;'E'
   360  0854  3456               	retlw	86	;'V'
   361  0855  3432               	retlw	50	;'2'
   362  0856  343A               	retlw	58	;':'
   363  0857  3420               	retlw	32	;' '
   364  0858  3420               	retlw	32	;' '
   365  0859  3400               	retlw	0
   366                           psect	stringtext
   367                           	
   368  085A                     STR_17:	
   369  085A  3445               	retlw	69	;'E'
   370  085B  346E               	retlw	110	;'n'
   371  085C  3474               	retlw	116	;'t'
   372  085D  3465               	retlw	101	;'e'
   373  085E  3472               	retlw	114	;'r'
   374  085F  3420               	retlw	32	;' '
   375  0860  344C               	retlw	76	;'L'
   376  0861  346F               	retlw	111	;'o'
   377  0862  3467               	retlw	103	;'g'
   378  0863  3469               	retlw	105	;'i'
   379  0864  3463               	retlw	99	;'c'
   380  0865  3420               	retlw	32	;' '
   381  0866  3444               	retlw	68	;'D'
   382  0867  3445               	retlw	69	;'E'
   383  0868  3456               	retlw	86	;'V'
   384  0869  3433               	retlw	51	;'3'
   385  086A  343A               	retlw	58	;':'
   386  086B  3420               	retlw	32	;' '
   387  086C  3420               	retlw	32	;' '
   388  086D  3400               	retlw	0
   389                           psect	stringtext
   390                           	
   391  086E                     STR_2:	
   392  086E  3450               	retlw	80	;'P'
   393  086F  3472               	retlw	114	;'r'
   394  0870  3465               	retlw	101	;'e'
   395  0871  3473               	retlw	115	;'s'
   396  0872  3473               	retlw	115	;'s'
   397  0873  3420               	retlw	32	;' '
   398  0874  3430               	retlw	48	;'0'
   399  0875  3420               	retlw	32	;' '
   400  0876  3474               	retlw	116	;'t'
   401  0877  346F               	retlw	111	;'o'
   402  0878  3420               	retlw	32	;' '
   403  0879  3443               	retlw	67	;'C'
   404  087A  346F               	retlw	111	;'o'
   405  087B  346E               	retlw	110	;'n'
   406  087C  3474               	retlw	116	;'t'
   407  087D  342E               	retlw	46	;'.'
   408  087E  3400               	retlw	0
   409                           psect	stringtext
   410                           	
   411  087F                     STR_9:	
   412  087F  3450               	retlw	80	;'P'
   413  0880  3472               	retlw	114	;'r'
   414  0881  3465               	retlw	101	;'e'
   415  0882  3473               	retlw	115	;'s'
   416  0883  3473               	retlw	115	;'s'
   417  0884  3420               	retlw	32	;' '
   418  0885  3432               	retlw	50	;'2'
   419  0886  3420               	retlw	32	;' '
   420  0887  3474               	retlw	116	;'t'
   421  0888  346F               	retlw	111	;'o'
   422  0889  3420               	retlw	32	;' '
   423  088A  3452               	retlw	82	;'R'
   424  088B  3445               	retlw	69	;'E'
   425  088C  3450               	retlw	80	;'P'
   426  088D  3452               	retlw	82	;'R'
   427  088E  3447               	retlw	71	;'G'
   428  088F  3400               	retlw	0
   429                           psect	stringtext
   430                           	
   431  0890                     STR_1:	
   432  0890  3446               	retlw	70	;'F'
   433  0891  3450               	retlw	80	;'P'
   434  0892  3420               	retlw	32	;' '
   435  0893  3448               	retlw	72	;'H'
   436  0894  346F               	retlw	111	;'o'
   437  0895  346D               	retlw	109	;'m'
   438  0896  3465               	retlw	101	;'e'
   439  0897  3420               	retlw	32	;' '
   440  0898  3441               	retlw	65	;'A'
   441  0899  3474               	retlw	116	;'t'
   442  089A  346F               	retlw	111	;'o'
   443  089B  346D               	retlw	109	;'m'
   444  089C  346E               	retlw	110	;'n'
   445  089D  342E               	retlw	46	;'.'
   446  089E  3400               	retlw	0
   447                           psect	stringtext
   448                           	
   449  089F                     STR_3:	
   450  089F  3431               	retlw	49	;'1'
   451  08A0  342E               	retlw	46	;'.'
   452  08A1  3453               	retlw	83	;'S'
   453  08A2  3457               	retlw	87	;'W'
   454  08A3  3454               	retlw	84	;'T'
   455  08A4  3420               	retlw	32	;' '
   456  08A5  3420               	retlw	32	;' '
   457  08A6  3432               	retlw	50	;'2'
   458  08A7  342E               	retlw	46	;'.'
   459  08A8  3452               	retlw	82	;'R'
   460  08A9  3445               	retlw	69	;'E'
   461  08AA  3450               	retlw	80	;'P'
   462  08AB  3452               	retlw	82	;'R'
   463  08AC  3447               	retlw	71	;'G'
   464  08AD  3400               	retlw	0
   465                           psect	stringtext
   466                           	
   467  08AE                     STR_5:	
   468  08AE  3443               	retlw	67	;'C'
   469  08AF  344F               	retlw	79	;'O'
   470  08B0  344E               	retlw	78	;'N'
   471  08B1  3446               	retlw	70	;'F'
   472  08B2  3449               	retlw	73	;'I'
   473  08B3  3447               	retlw	71	;'G'
   474  08B4  3455               	retlw	85	;'U'
   475  08B5  3452               	retlw	82	;'R'
   476  08B6  3445               	retlw	69	;'E'
   477  08B7  3444               	retlw	68	;'D'
   478  08B8  3420               	retlw	32	;' '
   479  08B9  3421               	retlw	33	;'!'
   480  08BA  3400               	retlw	0
   481                           psect	stringtext
   482                           	
   483  08BB                     STR_6:	
   484  08BB  3452               	retlw	82	;'R'
   485  08BC  3445               	retlw	69	;'E'
   486  08BD  3441               	retlw	65	;'A'
   487  08BE  3444               	retlw	68	;'D'
   488  08BF  3449               	retlw	73	;'I'
   489  08C0  344E               	retlw	78	;'N'
   490  08C1  3447               	retlw	71	;'G'
   491  08C2  342E               	retlw	46	;'.'
   492  08C3  342E               	retlw	46	;'.'
   493  08C4  3420               	retlw	32	;' '
   494  08C5  3421               	retlw	33	;'!'
   495  08C6  3400               	retlw	0
   496                           psect	stringtext
   497                           	
   498  08C7                     STR_7:	
   499  08C7  3453               	retlw	83	;'S'
   500  08C8  3465               	retlw	101	;'e'
   501  08C9  346E               	retlw	110	;'n'
   502  08CA  3473               	retlw	115	;'s'
   503  08CB  3469               	retlw	105	;'i'
   504  08CC  346E               	retlw	110	;'n'
   505  08CD  3467               	retlw	103	;'g'
   506  08CE  342E               	retlw	46	;'.'
   507  08CF  342E               	retlw	46	;'.'
   508  08D0  342E               	retlw	46	;'.'
   509  08D1  3400               	retlw	0
   510                           psect	stringtext
   511                           	
   512  08D2                     STR_4:	
   513  08D2  3433               	retlw	51	;'3'
   514  08D3  342E               	retlw	46	;'.'
   515  08D4  3452               	retlw	82	;'R'
   516  08D5  3445               	retlw	69	;'E'
   517  08D6  3453               	retlw	83	;'S'
   518  08D7  3445               	retlw	69	;'E'
   519  08D8  3454               	retlw	84	;'T'
   520  08D9  3400               	retlw	0
   521                           psect	stringtext
   522                           	
   523  08DA                     STR_20:	
   524  08DA  3430               	retlw	48	;'0'
   525  08DB  3430               	retlw	48	;'0'
   526  08DC  3430               	retlw	48	;'0'
   527  08DD  3430               	retlw	48	;'0'
   528  08DE  3400               	retlw	0
   529                           psect	stringtext
   530                           	
   531  08DF                     STR_28:	
   532  08DF  3431               	retlw	49	;'1'
   533  08E0  3430               	retlw	48	;'0'
   534  08E1  3430               	retlw	48	;'0'
   535  08E2  3430               	retlw	48	;'0'
   536  08E3  3400               	retlw	0
   537                           psect	stringtext
   538                           	
   539  08E4                     STR_24:	
   540  08E4  3430               	retlw	48	;'0'
   541  08E5  3431               	retlw	49	;'1'
   542  08E6  3430               	retlw	48	;'0'
   543  08E7  3430               	retlw	48	;'0'
   544  08E8  3400               	retlw	0
   545                           psect	stringtext
   546                           	
   547  08E9                     STR_32:	
   548  08E9  3431               	retlw	49	;'1'
   549  08EA  3431               	retlw	49	;'1'
   550  08EB  3430               	retlw	48	;'0'
   551  08EC  3430               	retlw	48	;'0'
   552  08ED  3400               	retlw	0
   553                           psect	stringtext
   554                           	
   555  08EE                     STR_22:	
   556  08EE  3430               	retlw	48	;'0'
   557  08EF  3430               	retlw	48	;'0'
   558  08F0  3431               	retlw	49	;'1'
   559  08F1  3430               	retlw	48	;'0'
   560  08F2  3400               	retlw	0
   561                           psect	stringtext
   562                           	
   563  08F3                     STR_30:	
   564  08F3  3431               	retlw	49	;'1'
   565  08F4  3430               	retlw	48	;'0'
   566  08F5  3431               	retlw	49	;'1'
   567  08F6  3430               	retlw	48	;'0'
   568  08F7  3400               	retlw	0
   569                           psect	stringtext
   570                           	
   571  08F8                     STR_26:	
   572  08F8  3430               	retlw	48	;'0'
   573  08F9  3431               	retlw	49	;'1'
   574  08FA  3431               	retlw	49	;'1'
   575  08FB  3430               	retlw	48	;'0'
   576  08FC  3400               	retlw	0
   577                           psect	stringtext
   578                           	
   579  08FD                     STR_34:	
   580  08FD  3431               	retlw	49	;'1'
   581  08FE  3431               	retlw	49	;'1'
   582  08FF  3431               	retlw	49	;'1'
   583  0900  3430               	retlw	48	;'0'
   584  0901  3400               	retlw	0
   585                           psect	stringtext
   586                           	
   587  0902                     STR_21:	
   588  0902  3430               	retlw	48	;'0'
   589  0903  3430               	retlw	48	;'0'
   590  0904  3430               	retlw	48	;'0'
   591  0905  3431               	retlw	49	;'1'
   592  0906  3400               	retlw	0
   593                           psect	stringtext
   594                           	
   595  0907                     STR_29:	
   596  0907  3431               	retlw	49	;'1'
   597  0908  3430               	retlw	48	;'0'
   598  0909  3430               	retlw	48	;'0'
   599  090A  3431               	retlw	49	;'1'
   600  090B  3400               	retlw	0
   601                           psect	stringtext
   602                           	
   603  090C                     STR_25:	
   604  090C  3430               	retlw	48	;'0'
   605  090D  3431               	retlw	49	;'1'
   606  090E  3430               	retlw	48	;'0'
   607  090F  3431               	retlw	49	;'1'
   608  0910  3400               	retlw	0
   609                           psect	stringtext
   610                           	
   611  0911                     STR_33:	
   612  0911  3431               	retlw	49	;'1'
   613  0912  3431               	retlw	49	;'1'
   614  0913  3430               	retlw	48	;'0'
   615  0914  3431               	retlw	49	;'1'
   616  0915  3400               	retlw	0
   617                           psect	stringtext
   618                           	
   619  0916                     STR_23:	
   620  0916  3430               	retlw	48	;'0'
   621  0917  3430               	retlw	48	;'0'
   622  0918  3431               	retlw	49	;'1'
   623  0919  3431               	retlw	49	;'1'
   624  091A  3400               	retlw	0
   625                           psect	stringtext
   626                           	
   627  091B                     STR_31:	
   628  091B  3431               	retlw	49	;'1'
   629  091C  3430               	retlw	48	;'0'
   630  091D  3431               	retlw	49	;'1'
   631  091E  3431               	retlw	49	;'1'
   632  091F  3400               	retlw	0
   633                           psect	stringtext
   634                           	
   635  0920                     STR_27:	
   636  0920  3430               	retlw	48	;'0'
   637  0921  3431               	retlw	49	;'1'
   638  0922  3431               	retlw	49	;'1'
   639  0923  3431               	retlw	49	;'1'
   640  0924  3400               	retlw	0
   641                           psect	stringtext
   642                           	
   643  0925                     STR_35:	
   644  0925  3431               	retlw	49	;'1'
   645  0926  3431               	retlw	49	;'1'
   646  0927  3431               	retlw	49	;'1'
   647  0928  3431               	retlw	49	;'1'
   648  0929  3400               	retlw	0
   649                           psect	stringtext
   650                           	
   651  092A                     STR_13:	
   652  092A  342D               	retlw	45	;'-'
   653  092B  342D               	retlw	45	;'-'
   654  092C  342D               	retlw	45	;'-'
   655  092D  3400               	retlw	0
   656                           psect	stringtext
   657  08DB                     STR_8	equ	STR_20+1
   658  092A                     STR_16	equ	STR_13+0
   659  092A                     STR_19	equ	STR_13+0
   660  0845                     STR_12	equ	STR_11+19
   661  0845                     STR_15	equ	STR_11+19
   662  0845                     STR_18	equ	STR_11+19
   663                           	file	"prev1.as"
   664                           	line	#
   665                           psect cinit,class=CODE,delta=2
   666                           global start_initialization
   667  0B2E                     start_initialization:
   668                           
   669                           psect	bssBANK0,class=BANK0,space=1
   670                           global __pbssBANK0
   671  006B                     __pbssBANK0:
   672  006B                     _dev:
   673  006B                            ds      2
   674                           
   675  006D                     _num:
   676  006D                            ds      2
   677                           
   678                           psect	bssBANK1,class=BANK1,space=1
   679                           global __pbssBANK1
   680  00C3                     __pbssBANK1:
   681  00C3                     getlogicseq@F1874:
   682  00C3                            ds      16
   683                           
   684  00D3                     _done_init:
   685  00D3                            ds      2
   686                           
   687  00D5                     _f1:
   688  00D5                            ds      2
   689                           
   690  00D7                     _f2:
   691  00D7                            ds      2
   692                           
   693  00D9                     _f3:
   694  00D9                            ds      2
   695                           
   696  00DB                     _pdev:
   697  00DB                            ds      2
   698                           
   699  00DD                     _retm:
   700  00DD                            ds      2
   701                           
   702                           psect	dataBANK1,class=BANK1,space=1
   703                           global __pdataBANK1
   704  00A0                     __pdataBANK1:
   705                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   706                           	line	858
   707  00A0                     read_log@F1918:
   708  00A0                            ds      5
   709                           
   710                           psect	dataBANK1
   711                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   712                           	line	208
   713  00A5                     _lo:
   714  00A5                            ds      5
   715                           
   716                           psect	dataBANK1
   717                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   718                           	line	204
   719  00AA                     _logic_d1:
   720  00AA                            ds      5
   721                           
   722                           psect	dataBANK1
   723                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   724                           	line	205
   725  00AF                     _logic_d2:
   726  00AF                            ds      5
   727                           
   728                           psect	dataBANK1
   729                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   730                           	line	206
   731  00B4                     _logic_d3:
   732  00B4                            ds      5
   733                           
   734                           psect	dataBANK1
   735                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   736                           	line	207
   737  00B9                     _logic_d4:
   738  00B9                            ds      5
   739                           
   740                           psect	dataBANK1
   741                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   742                           	line	209
   743  00BE                     _plo:
   744  00BE                            ds      5
   745                           
   746                           psect clrtext,class=CODE,delta=2
   747                           global clear_ram
   748                           ;	Called with FSR containing the base address, and
   749                           ;	W with the last address+1
   750  0A73                     clear_ram:
   751  0A73  0064               	clrwdt			;clear the watchdog before getting into this loop
   752  0A74                     clrloop:
   753  0A74  0180               	clrf	indf		;clear RAM location pointed to by FSR
   754  0A75  0A84               	incf	fsr,f		;increment pointer
   755  0A76  0604               	xorwf	fsr,w		;XOR with final address
   756  0A77  1903               	btfsc	status,2	;have we reached the end yet?
   757  0A78  3400               	retlw	0		;all done for this memory range, return
   758  0A79  0604               	xorwf	fsr,w		;XOR again to restore value
   759  0A7A  2A74               	goto	clrloop		;do the next byte
   760                           
   761                           ; Clear objects allocated to BANK0
   762                           psect cinit,class=CODE,delta=2
   763  0B2E  01EB               	clrf	((__pbssBANK0)+0)&07Fh
   764  0B2F  01EC               	clrf	((__pbssBANK0)+1)&07Fh
   765  0B30  01ED               	clrf	((__pbssBANK0)+2)&07Fh
   766  0B31  01EE               	clrf	((__pbssBANK0)+3)&07Fh
   767                           ; Clear objects allocated to BANK1
   768                           psect cinit,class=CODE,delta=2
   769  0B32  1383               	bcf	status, 7	;select IRP bank0
   770  0B33  30C3               	movlw	low(__pbssBANK1)
   771  0B34  0084               	movwf	fsr
   772  0B35  30DF               	movlw	low((__pbssBANK1)+01Ch)
   773  0B36  120A  158A  2273   	fcall	clear_ram
              120A  158A         
   774                           global btemp
   775                           psect inittext,class=CODE,delta=2
   776                           global init_fetch,btemp
   777                           ;	Called with low address in FSR and high address in W
   778  0AB7                     init_fetch:
   779  0AB7  087E               	movf btemp,w
   780  0AB8  008A               	movwf pclath
   781  0AB9  087F               	movf btemp+1,w
   782  0ABA  0082               	movwf pc
   783                           global init_ram
   784                           ;Called with:
   785                           ;	high address of idata address in btemp 
   786                           ;	low address of idata address in btemp+1 
   787                           ;	low address of data in FSR
   788                           ;	high address + 1 of data in btemp-1
   789  0ABB                     init_ram:
   790  0ABB  22B7  120A  158A   	fcall init_fetch
   791  0ABE  0080               	movwf indf,f
   792  0ABF  0A84               	incf fsr,f
   793  0AC0  0804               	movf fsr,w
   794  0AC1  067D               	xorwf btemp-1,w
   795  0AC2  1903               	btfsc status,2
   796  0AC3  3400               	retlw 0
   797  0AC4  0AFF               	incf btemp+1,f
   798  0AC5  1903               	btfsc status,2
   799  0AC6  0AFE               	incf btemp,f
   800  0AC7  2ABB               	goto init_ram
   801                           ; Initialize objects allocated to BANK1
   802                           psect cinit,class=CODE,delta=2
   803                           global init_ram, __pidataBANK1
   804  0B3B  30C3               	movlw low(__pdataBANK1+35)
   805  0B3C  00FD               	movwf btemp-1,f
   806  0B3D  300B               	movlw high(__pidataBANK1)
   807  0B3E  00FE               	movwf btemp,f
   808  0B3F  304C               	movlw low(__pidataBANK1)
   809  0B40  00FF               	movwf btemp+1,f
   810  0B41  30A0               	movlw low(__pdataBANK1)
   811  0B42  0084               	movwf fsr,f
   812  0B43  120A  158A  22BB   	fcall init_ram
              120A  158A         
   813                           psect cinit,class=CODE,delta=2
   814                           global end_of_initialization
   815                           
   816                           ;End of C runtime variable initialization code
   817                           
   818  0B48                     end_of_initialization:
   819  0B48  0183               clrf status
   820  0B49  120A  118A  2803   ljmp _main	;jump to C main() function
   821                           psect	cstackCOMMON,class=COMMON,space=1
   822                           global __pcstackCOMMON
   823  0070                     __pcstackCOMMON:
   824                           	global	?_initlcd
   825  0070                     ?_initlcd:	; 0 bytes @ 0x0
   826                           	global	?_initkeypad
   827  0070                     ?_initkeypad:	; 0 bytes @ 0x0
   828                           	global	??_initkeypad
   829  0070                     ??_initkeypad:	; 0 bytes @ 0x0
   830                           	global	?_start
   831  0070                     ?_start:	; 0 bytes @ 0x0
   832                           	global	?_getlogic
   833  0070                     ?_getlogic:	; 0 bytes @ 0x0
   834                           	global	?_startswitch
   835  0070                     ?_startswitch:	; 0 bytes @ 0x0
   836                           	global	?_getlogicseq
   837  0070                     ?_getlogicseq:	; 0 bytes @ 0x0
   838                           	global	?_delay
   839  0070                     ?_delay:	; 0 bytes @ 0x0
   840                           	global	?_cmd
   841  0070                     ?_cmd:	; 0 bytes @ 0x0
   842                           	global	?_setLCD
   843  0070                     ?_setLCD:	; 0 bytes @ 0x0
   844                           	global	?_buzz
   845  0070                     ?_buzz:	; 0 bytes @ 0x0
   846                           	global	?_setlogic
   847  0070                     ?_setlogic:	; 0 bytes @ 0x0
   848                           	global	?_init_fun
   849  0070                     ?_init_fun:	; 0 bytes @ 0x0
   850                           	global	?_clearlcd
   851  0070                     ?_clearlcd:	; 0 bytes @ 0x0
   852                           	global	?_latch
   853  0070                     ?_latch:	; 0 bytes @ 0x0
   854                           	global	?__dat
   855  0070                     ?__dat:	; 0 bytes @ 0x0
   856                           	global	?__cmd
   857  0070                     ?__cmd:	; 0 bytes @ 0x0
   858                           	global	?_dat
   859  0070                     ?_dat:	; 0 bytes @ 0x0
   860                           	global	?_resetout
   861  0070                     ?_resetout:	; 0 bytes @ 0x0
   862                           	global	??_resetout
   863  0070                     ??_resetout:	; 0 bytes @ 0x0
   864                           	global	?_strcat
   865  0070                     ?_strcat:	; 1 bytes @ 0x0
   866                           	global	?_getn
   867  0070                     ?_getn:	; 1 bytes @ 0x0
   868                           	global	?_strcmp
   869  0070                     ?_strcmp:	; 2 bytes @ 0x0
   870                           	global	?_main
   871  0070                     ?_main:	; 2 bytes @ 0x0
   872                           	global	?_check
   873  0070                     ?_check:	; 2 bytes @ 0x0
   874                           	global	?___wmul
   875  0070                     ?___wmul:	; 2 bytes @ 0x0
   876                           	global	?___awdiv
   877  0070                     ?___awdiv:	; 2 bytes @ 0x0
   878                           	global	?___awmod
   879  0070                     ?___awmod:	; 2 bytes @ 0x0
   880                           	global	check@logic
   881  0070                     check@logic:	; 1 bytes @ 0x0
   882                           	global	getn@n
   883  0070                     getn@n:	; 1 bytes @ 0x0
   884                           	global	strcat@from
   885  0070                     strcat@from:	; 1 bytes @ 0x0
   886                           	global	buzz@val
   887  0070                     buzz@val:	; 2 bytes @ 0x0
   888                           	global	delay@x
   889  0070                     delay@x:	; 2 bytes @ 0x0
   890                           	global	strcmp@s2
   891  0070                     strcmp@s2:	; 2 bytes @ 0x0
   892                           	global	___wmul@multiplier
   893  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   894                           	global	___awdiv@divisor
   895  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   896                           	global	___awmod@divisor
   897  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   898  0070                     	ds	1
   899                           	global	??_strcat
   900  0071                     ??_strcat:	; 0 bytes @ 0x1
   901                           	global	??_getn
   902  0071                     ??_getn:	; 0 bytes @ 0x1
   903  0071                     	ds	1
   904                           	global	?_write_eep
   905  0072                     ?_write_eep:	; 0 bytes @ 0x2
   906                           	global	??_delay
   907  0072                     ??_delay:	; 0 bytes @ 0x2
   908                           	global	??_strcmp
   909  0072                     ??_strcmp:	; 0 bytes @ 0x2
   910                           	global	?_actrow
   911  0072                     ?_actrow:	; 0 bytes @ 0x2
   912                           	global	??_buzz
   913  0072                     ??_buzz:	; 0 bytes @ 0x2
   914                           	global	??_check
   915  0072                     ??_check:	; 0 bytes @ 0x2
   916                           	global	??_latch
   917  0072                     ??_latch:	; 0 bytes @ 0x2
   918                           	global	??__dat
   919  0072                     ??__dat:	; 0 bytes @ 0x2
   920                           	global	??__cmd
   921  0072                     ??__cmd:	; 0 bytes @ 0x2
   922                           	global	?_strcpy
   923  0072                     ?_strcpy:	; 1 bytes @ 0x2
   924                           	global	strcat@to
   925  0072                     strcat@to:	; 1 bytes @ 0x2
   926                           	global	actrow@n
   927  0072                     actrow@n:	; 2 bytes @ 0x2
   928                           	global	write_eep@x
   929  0072                     write_eep@x:	; 2 bytes @ 0x2
   930                           	global	strcpy@from
   931  0072                     strcpy@from:	; 2 bytes @ 0x2
   932                           	global	___wmul@multiplicand
   933  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   934                           	global	___awdiv@dividend
   935  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   936                           	global	___awmod@dividend
   937  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   938  0072                     	ds	1
   939                           	global	check@input
   940  0073                     check@input:	; 1 bytes @ 0x3
   941                           	global	getn@c
   942  0073                     getn@c:	; 1 bytes @ 0x3
   943                           	global	strcat@cp
   944  0073                     strcat@cp:	; 1 bytes @ 0x3
   945  0073                     	ds	1
   946                           	global	??_strcpy
   947  0074                     ??_strcpy:	; 0 bytes @ 0x4
   948                           	global	??_actrow
   949  0074                     ??_actrow:	; 0 bytes @ 0x4
   950                           	global	??___wmul
   951  0074                     ??___wmul:	; 0 bytes @ 0x4
   952                           	global	??___awdiv
   953  0074                     ??___awdiv:	; 0 bytes @ 0x4
   954                           	global	??___awmod
   955  0074                     ??___awmod:	; 0 bytes @ 0x4
   956                           	global	?_scan
   957  0074                     ?_scan:	; 2 bytes @ 0x4
   958                           	global	getn@tmp
   959  0074                     getn@tmp:	; 1 bytes @ 0x4
   960                           	global	write_eep@y
   961  0074                     write_eep@y:	; 1 bytes @ 0x4
   962                           	global	check@i
   963  0074                     check@i:	; 2 bytes @ 0x4
   964                           	global	___wmul@product
   965  0074                     ___wmul@product:	; 2 bytes @ 0x4
   966  0074                     	ds	1
   967                           	global	?_write_log
   968  0075                     ?_write_log:	; 0 bytes @ 0x5
   969                           	global	??_write_eep
   970  0075                     ??_write_eep:	; 0 bytes @ 0x5
   971                           	global	??_setLCD
   972  0075                     ??_setLCD:	; 0 bytes @ 0x5
   973                           	global	___awdiv@counter
   974  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   975                           	global	___awmod@counter
   976  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   977                           	global	write_log@devno
   978  0075                     write_log@devno:	; 2 bytes @ 0x5
   979  0075                     	ds	1
   980                           	global	??_scan
   981  0076                     ??_scan:	; 0 bytes @ 0x6
   982                           	global	strcmp@r
   983  0076                     strcmp@r:	; 1 bytes @ 0x6
   984                           	global	___awdiv@sign
   985  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   986                           	global	___awmod@sign
   987  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   988  0076                     	ds	1
   989                           	global	setLCD@number
   990  0077                     setLCD@number:	; 1 bytes @ 0x7
   991                           	global	write_log@logic
   992  0077                     write_log@logic:	; 1 bytes @ 0x7
   993                           	global	strcmp@s1
   994  0077                     strcmp@s1:	; 1 bytes @ 0x7
   995                           	global	strcpy@to
   996  0077                     strcpy@to:	; 1 bytes @ 0x7
   997                           	global	___awdiv@quotient
   998  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   999  0077                     	ds	1
  1000                           	global	??_write_log
  1001  0078                     ??_write_log:	; 0 bytes @ 0x8
  1002                           	global	??_cmd
  1003  0078                     ??_cmd:	; 0 bytes @ 0x8
  1004                           	global	??_dat
  1005  0078                     ??_dat:	; 0 bytes @ 0x8
  1006                           	global	cmd@Command
  1007  0078                     cmd@Command:	; 1 bytes @ 0x8
  1008                           	global	dat@Command
  1009  0078                     dat@Command:	; 1 bytes @ 0x8
  1010                           	global	strcpy@cp
  1011  0078                     strcpy@cp:	; 1 bytes @ 0x8
  1012  0078                     	ds	1
  1013                           	global	??_initlcd
  1014  0079                     ??_initlcd:	; 0 bytes @ 0x9
  1015                           	global	??_write
  1016  0079                     ??_write:	; 0 bytes @ 0x9
  1017                           	global	??_clearlcd
  1018  0079                     ??_clearlcd:	; 0 bytes @ 0x9
  1019                           	global	?_read_eep
  1020  0079                     ?_read_eep:	; 1 bytes @ 0x9
  1021                           	global	?_itoaa
  1022  0079                     ?_itoaa:	; 2 bytes @ 0x9
  1023                           	global	itoaa@value
  1024  0079                     itoaa@value:	; 2 bytes @ 0x9
  1025                           	global	write@i
  1026  0079                     write@i:	; 2 bytes @ 0x9
  1027                           	global	read_eep@a
  1028  0079                     read_eep@a:	; 2 bytes @ 0x9
  1029  0079                     	ds	2
  1030                           	global	??_startswitch
  1031  007B                     ??_startswitch:	; 0 bytes @ 0xB
  1032                           	global	??_read_eep
  1033  007B                     ??_read_eep:	; 0 bytes @ 0xB
  1034                           	global	??_init_fun
  1035  007B                     ??_init_fun:	; 0 bytes @ 0xB
  1036                           	global	itoaa@ptr
  1037  007B                     itoaa@ptr:	; 1 bytes @ 0xB
  1038                           	global	write_log@ads
  1039  007B                     write_log@ads:	; 1 bytes @ 0xB
  1040  007B                     	ds	1
  1041                           	global	??_itoaa
  1042  007C                     ??_itoaa:	; 0 bytes @ 0xC
  1043                           	global	??_setlogic
  1044  007C                     ??_setlogic:	; 0 bytes @ 0xC
  1045  007C                     	ds	1
  1046                           	global	??_getlogic
  1047  007D                     ??_getlogic:	; 0 bytes @ 0xD
  1048  007D                     	ds	1
  1049                           	global	??_start
  1050  007E                     ??_start:	; 0 bytes @ 0xE
  1051                           	global	??_main
  1052  007E                     ??_main:	; 0 bytes @ 0xE
  1053                           psect	cstackBANK0,class=BANK0,space=1
  1054                           global __pcstackBANK0
  1055  0020                     __pcstackBANK0:
  1056                           	global	?_write
  1057  0020                     ?_write:	; 0 bytes @ 0x0
  1058                           	global	itoaa@count
  1059  0020                     itoaa@count:	; 2 bytes @ 0x0
  1060                           	global	write@str
  1061  0020                     write@str:	; 2 bytes @ 0x0
  1062                           	global	read_eep@d
  1063  0020                     read_eep@d:	; 2 bytes @ 0x0
  1064  0020                     	ds	2
  1065                           	global	?_read_log
  1066  0022                     ?_read_log:	; 1 bytes @ 0x2
  1067                           	global	itoaa@temp
  1068  0022                     itoaa@temp:	; 2 bytes @ 0x2
  1069                           	global	write@line
  1070  0022                     write@line:	; 2 bytes @ 0x2
  1071                           	global	read_log@devno
  1072  0022                     read_log@devno:	; 2 bytes @ 0x2
  1073  0022                     	ds	2
  1074                           	global	??_read_log
  1075  0024                     ??_read_log:	; 0 bytes @ 0x4
  1076                           	global	write@erase
  1077  0024                     write@erase:	; 2 bytes @ 0x4
  1078  0024                     	ds	3
  1079                           	global	read_log@logic
  1080  0027                     read_log@logic:	; 5 bytes @ 0x7
  1081  0027                     	ds	5
  1082                           	global	read_log@ads
  1083  002C                     read_log@ads:	; 1 bytes @ 0xC
  1084  002C                     	ds	1
  1085                           	global	??_getlogicseq
  1086  002D                     ??_getlogicseq:	; 0 bytes @ 0xD
  1087  002D                     	ds	4
  1088                           	global	getlogicseq@str
  1089  0031                     getlogicseq@str:	; 32 bytes @ 0x11
  1090  0031                     	ds	32
  1091                           	global	getlogicseq@bf
  1092  0051                     getlogicseq@bf:	; 2 bytes @ 0x31
  1093  0051                     	ds	2
  1094                           	global	getlogicseq@snum
  1095  0053                     getlogicseq@snum:	; 16 bytes @ 0x33
  1096  0053                     	ds	16
  1097                           	global	getlogicseq@nf
  1098  0063                     getlogicseq@nf:	; 2 bytes @ 0x43
  1099  0063                     	ds	2
  1100                           	global	getlogicseq@wf
  1101  0065                     getlogicseq@wf:	; 2 bytes @ 0x45
  1102  0065                     	ds	2
  1103                           	global	getlogicseq@ccount
  1104  0067                     getlogicseq@ccount:	; 2 bytes @ 0x47
  1105  0067                     	ds	2
  1106                           	global	getlogicseq@num
  1107  0069                     getlogicseq@num:	; 2 bytes @ 0x49
  1108  0069                     	ds	2
  1109 ;;Data sizes: Strings 279, constant 5, data 35, bss 32, persistent 0 stack 0
  1110 ;;Auto spaces:   Size  Autos    Used
  1111 ;; COMMON          14     14      14
  1112 ;; BANK0           80     75      79
  1113 ;; BANK1           80      0      63
  1114 ;; BANK3           96      0       0
  1115 ;; BANK2           96      0       0
  1116                           
  1117 ;;
  1118 ;; Pointer list with targets:
  1119                           
  1120 ;; ?___awmod	int  size(1) Largest target is 0
  1121 ;;
  1122 ;; ?___awdiv	int  size(1) Largest target is 0
  1123 ;;
  1124 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1125 ;;
  1126 ;; ?_strcat	PTR unsigned char  size(1) Largest target is 5
  1127 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1128 ;;
  1129 ;; ?_itoaa	int  size(1) Largest target is 0
  1130 ;;
  1131 ;; ?_strcmp	int  size(1) Largest target is 0
  1132 ;;
  1133 ;; ?_strcpy	PTR unsigned char  size(1) Largest target is 32
  1134 ;;		 -> getlogicseq@str(BANK0[32]), lo(BANK1[5]), plo(BANK1[5]), logic_d4(BANK1[5]), 
  1135 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1136 ;;
  1137 ;; ?_read_log	PTR unsigned char  size(1) Largest target is 5
  1138 ;;		 -> read_log@logic(BANK0[5]), 
  1139 ;;
  1140 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 20
  1141 ;;		 -> read_log@logic(BANK0[5]), STR_18(CODE[1]), STR_17(CODE[20]), STR_15(CODE[1]), 
  1142 ;;		 -> STR_14(CODE[20]), STR_12(CODE[1]), STR_11(CODE[20]), STR_8(CODE[4]), 
  1143 ;;		 -> lo(BANK1[5]), 
  1144 ;;
  1145 ;; strcpy@to	PTR unsigned char  size(1) Largest target is 32
  1146 ;;		 -> getlogicseq@str(BANK0[32]), lo(BANK1[5]), plo(BANK1[5]), logic_d4(BANK1[5]), 
  1147 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1148 ;;
  1149 ;; strcpy@cp	PTR unsigned char  size(1) Largest target is 32
  1150 ;;		 -> getlogicseq@str(BANK0[32]), lo(BANK1[5]), plo(BANK1[5]), logic_d4(BANK1[5]), 
  1151 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1152 ;;
  1153 ;; strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
  1154 ;;		 -> STR_35(CODE[5]), STR_34(CODE[5]), STR_33(CODE[5]), STR_32(CODE[5]), 
  1155 ;;		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[5]), STR_28(CODE[5]), 
  1156 ;;		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), 
  1157 ;;		 -> STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 
  1158 ;;		 -> plo(BANK1[5]), 
  1159 ;;
  1160 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
  1161 ;;		 -> lo(BANK1[5]), 
  1162 ;;
  1163 ;; strcat@from	PTR const unsigned char  size(1) Largest target is 16
  1164 ;;		 -> getlogicseq@snum(BANK0[16]), 
  1165 ;;
  1166 ;; strcat@to	PTR unsigned char  size(1) Largest target is 5
  1167 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1168 ;;
  1169 ;; strcat@cp	PTR unsigned char  size(1) Largest target is 5
  1170 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1171 ;;
  1172 ;; write_log@logic	PTR unsigned char  size(1) Largest target is 5
  1173 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1174 ;;
  1175 ;; write@str	PTR unsigned char  size(2) Largest target is 32
  1176 ;;		 -> STR_19(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), getlogicseq@str(BANK0[32]), 
  1177 ;;		 -> STR_10(CODE[27]), STR_9(CODE[17]), lo(BANK1[5]), STR_7(CODE[11]), 
  1178 ;;		 -> STR_6(CODE[12]), STR_5(CODE[13]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
  1179 ;;		 -> logic_d1(BANK1[5]), STR_4(CODE[8]), STR_3(CODE[15]), STR_2(CODE[17]), 
  1180 ;;		 -> STR_1(CODE[15]), 
  1181 ;;
  1182 ;; itoaa@ptr	PTR unsigned char  size(1) Largest target is 16
  1183 ;;		 -> getlogicseq@snum(BANK0[16]), 
  1184 ;;
  1185 ;; sp__strcat	PTR unsigned char  size(1) Largest target is 5
  1186 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1187 ;;
  1188 ;; check@logic	PTR unsigned char  size(1) Largest target is 5
  1189 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1190 ;;
  1191 ;; check@input	PTR unsigned char  size(1) Largest target is 5
  1192 ;;		 -> lo(BANK1[5]), 
  1193 ;;
  1194 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 32
  1195 ;;		 -> getlogicseq@str(BANK0[32]), lo(BANK1[5]), plo(BANK1[5]), logic_d4(BANK1[5]), 
  1196 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1197 ;;
  1198 ;; sp__read_log	PTR unsigned char  size(1) Largest target is 5
  1199 ;;		 -> read_log@logic(BANK0[5]), 
  1200 ;;
  1201                           
  1202                           
  1203 ;;
  1204 ;; Critical Paths under _main in COMMON
  1205 ;;
  1206 ;;   _start->_getlogic
  1207 ;;   _getlogicseq->_getlogic
  1208 ;;   _startswitch->_write
  1209 ;;   _init_fun->_write
  1210 ;;   _getlogic->_read_eep
  1211 ;;   _write->_cmd
  1212 ;;   _write->_dat
  1213 ;;   _clearlcd->_cmd
  1214 ;;   _initlcd->_cmd
  1215 ;;   _dat->_setLCD
  1216 ;;   _cmd->_setLCD
  1217 ;;   _setlogic->_write_log
  1218 ;;   _read_log->_read_eep
  1219 ;;   _write_log->_write_eep
  1220 ;;   _scan->_actrow
  1221 ;;   _actrow->_delay
  1222 ;;   _setLCD->_getn
  1223 ;;   _latch->_delay
  1224 ;;   _itoaa->___awdiv
  1225 ;;   _write_eep->_delay
  1226 ;;   _read_eep->_strcpy
  1227 ;;   _strcpy->_delay
  1228 ;;
  1229 ;; Critical Paths under _main in BANK0
  1230 ;;
  1231 ;;   _start->_getlogicseq
  1232 ;;   _startswitch->_write
  1233 ;;   _init_fun->_write
  1234 ;;   _getlogic->_read_log
  1235 ;;   _read_log->_read_eep
  1236 ;;
  1237 ;; Critical Paths under _main in BANK1
  1238 ;;
  1239 ;;   None.
  1240 ;;
  1241 ;; Critical Paths under _main in BANK3
  1242 ;;
  1243 ;;   None.
  1244 ;;
  1245 ;; Critical Paths under _main in BANK2
  1246 ;;
  1247 ;;   None.
  1248                           
  1249 ;;
  1250 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1251 ;;
  1252                           
  1253 ;;
  1254 ;;Call Graph Tables:
  1255 ;;
  1256 ;; ---------------------------------------------------------------------------------
  1257 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1258 ;; ---------------------------------------------------------------------------------
  1259 ;; (0) _main                                                 0     0      0   10786
  1260 ;;                            _initlcd
  1261 ;;                         _initkeypad
  1262 ;;                              _start
  1263 ;; ---------------------------------------------------------------------------------
  1264 ;; (1) _start                                                0     0      0   10477
  1265 ;;                           _getlogic
  1266 ;;                              _write
  1267 ;;                               _scan
  1268 ;;                               _buzz
  1269 ;;                        _startswitch
  1270 ;;                        _getlogicseq
  1271 ;; ---------------------------------------------------------------------------------
  1272 ;; (2) _getlogicseq                                         62    62      0    5257
  1273 ;;                                             13 BANK0     62    62      0
  1274 ;;                           _getlogic
  1275 ;;                              _write
  1276 ;;                              _delay
  1277 ;;                             _strcpy
  1278 ;;                               _scan
  1279 ;;                               _buzz
  1280 ;;                              _itoaa
  1281 ;;                             _strcat
  1282 ;;                           _setlogic
  1283 ;; ---------------------------------------------------------------------------------
  1284 ;; (2) _startswitch                                          2     2      0    2463
  1285 ;;                                             11 COMMON     2     2      0
  1286 ;;                           _init_fun
  1287 ;;                             _strcpy
  1288 ;;                              _write
  1289 ;;                               _buzz
  1290 ;;                             _strcmp
  1291 ;;                              _delay
  1292 ;;                              _check
  1293 ;; ---------------------------------------------------------------------------------
  1294 ;; (3) _init_fun                                             0     0      0    1061
  1295 ;;                              _write
  1296 ;; ---------------------------------------------------------------------------------
  1297 ;; (3) _getlogic                                             1     1      0    1564
  1298 ;;                                             13 COMMON     1     1      0
  1299 ;;                           _read_eep
  1300 ;;                          _write_eep
  1301 ;;                              _write
  1302 ;;                              _delay
  1303 ;;                           _read_log
  1304 ;;                             _strcpy
  1305 ;; ---------------------------------------------------------------------------------
  1306 ;; (3) _write                                                8     2      6    1061
  1307 ;;                                              9 COMMON     2     2      0
  1308 ;;                                              0 BANK0      6     0      6
  1309 ;;                           _clearlcd
  1310 ;;                                _cmd
  1311 ;;                                _dat
  1312 ;; ---------------------------------------------------------------------------------
  1313 ;; (4) _clearlcd                                             0     0      0     309
  1314 ;;                                _cmd
  1315 ;; ---------------------------------------------------------------------------------
  1316 ;; (1) _initlcd                                              0     0      0     309
  1317 ;;                                _cmd
  1318 ;; ---------------------------------------------------------------------------------
  1319 ;; (4) _dat                                                  1     1      0     309
  1320 ;;                                              8 COMMON     1     1      0
  1321 ;;                             _setLCD
  1322 ;;                               __dat
  1323 ;; ---------------------------------------------------------------------------------
  1324 ;; (4) _cmd                                                  1     1      0     309
  1325 ;;                                              8 COMMON     1     1      0
  1326 ;;                             _setLCD
  1327 ;;                               __cmd
  1328 ;; ---------------------------------------------------------------------------------
  1329 ;; (3) _setlogic                                             1     1      0     265
  1330 ;;                                             12 COMMON     1     1      0
  1331 ;;                          _write_log
  1332 ;; ---------------------------------------------------------------------------------
  1333 ;; (5) __cmd                                                 0     0      0      22
  1334 ;;                              _latch
  1335 ;; ---------------------------------------------------------------------------------
  1336 ;; (5) __dat                                                 0     0      0      22
  1337 ;;                              _latch
  1338 ;; ---------------------------------------------------------------------------------
  1339 ;; (4) _read_log                                            11     9      2     275
  1340 ;;                                              2 BANK0     11     9      2
  1341 ;;                           _read_eep
  1342 ;;                             _strcpy (ARG)
  1343 ;; ---------------------------------------------------------------------------------
  1344 ;; (4) _write_log                                            7     4      3     265
  1345 ;;                                              5 COMMON     7     4      3
  1346 ;;                          _write_eep
  1347 ;; ---------------------------------------------------------------------------------
  1348 ;; (3) _scan                                                 2     0      2     110
  1349 ;;                                              4 COMMON     2     0      2
  1350 ;;                             _actrow
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (4) _actrow                                               2     0      2     110
  1353 ;;                                              2 COMMON     2     0      2
  1354 ;;                           _resetout
  1355 ;;                              _delay
  1356 ;; ---------------------------------------------------------------------------------
  1357 ;; (5) _setLCD                                               3     3      0     265
  1358 ;;                                              5 COMMON     3     3      0
  1359 ;;                               _getn
  1360 ;; ---------------------------------------------------------------------------------
  1361 ;; (6) _latch                                                0     0      0      22
  1362 ;;                              _delay
  1363 ;; ---------------------------------------------------------------------------------
  1364 ;; (3) _itoaa                                                8     5      3    1078
  1365 ;;                                              9 COMMON     4     1      3
  1366 ;;                                              0 BANK0      4     4      0
  1367 ;;                             ___wmul
  1368 ;;                            ___awdiv
  1369 ;;                            ___awmod
  1370 ;; ---------------------------------------------------------------------------------
  1371 ;; (5) _write_eep                                            3     0      3      66
  1372 ;;                                              2 COMMON     3     0      3
  1373 ;;                              _delay
  1374 ;; ---------------------------------------------------------------------------------
  1375 ;; (5) _read_eep                                             6     4      2      67
  1376 ;;                                              9 COMMON     4     2      2
  1377 ;;                                              0 BANK0      2     2      0
  1378 ;;                              _delay
  1379 ;;                             _strcpy (ARG)
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; (4) ___awmod                                              7     3      4     296
  1382 ;;                                              0 COMMON     7     3      4
  1383 ;; ---------------------------------------------------------------------------------
  1384 ;; (4) ___awdiv                                              9     5      4     300
  1385 ;;                                              0 COMMON     9     5      4
  1386 ;; ---------------------------------------------------------------------------------
  1387 ;; (4) ___wmul                                               6     2      4      92
  1388 ;;                                              0 COMMON     6     2      4
  1389 ;; ---------------------------------------------------------------------------------
  1390 ;; (5) _resetout                                             0     0      0       0
  1391 ;; ---------------------------------------------------------------------------------
  1392 ;; (6) _getn                                                 5     4      1      89
  1393 ;;                                              0 COMMON     5     4      1
  1394 ;; ---------------------------------------------------------------------------------
  1395 ;; (3) _strcat                                               4     3      1      96
  1396 ;;                                              0 COMMON     4     3      1
  1397 ;; ---------------------------------------------------------------------------------
  1398 ;; (4) _strcmp                                               8     6      2      89
  1399 ;;                                              0 COMMON     8     6      2
  1400 ;; ---------------------------------------------------------------------------------
  1401 ;; (3) _check                                                6     4      2     135
  1402 ;;                                              0 COMMON     6     4      2
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (4) _strcpy                                               7     5      2      73
  1405 ;;                                              2 COMMON     7     5      2
  1406 ;;                              _delay (ARG)
  1407 ;; ---------------------------------------------------------------------------------
  1408 ;; (6) _delay                                                2     0      2      22
  1409 ;;                                              0 COMMON     2     0      2
  1410 ;; ---------------------------------------------------------------------------------
  1411 ;; (1) _initkeypad                                           0     0      0       0
  1412 ;; ---------------------------------------------------------------------------------
  1413 ;; (3) _buzz                                                 2     0      2      22
  1414 ;;                                              0 COMMON     2     0      2
  1415 ;; ---------------------------------------------------------------------------------
  1416 ;; Estimated maximum stack depth 6
  1417 ;; ---------------------------------------------------------------------------------
  1418                           
  1419 ;; Call Graph Graphs:
  1420                           
  1421 ;; _main (ROOT)
  1422 ;;   _initlcd
  1423 ;;     _cmd
  1424 ;;       _setLCD
  1425 ;;         _getn
  1426 ;;       __cmd
  1427 ;;         _latch
  1428 ;;           _delay
  1429 ;;   _initkeypad
  1430 ;;   _start
  1431 ;;     _getlogic
  1432 ;;       _read_eep
  1433 ;;         _delay
  1434 ;;         _strcpy (ARG)
  1435 ;;           _delay (ARG)
  1436 ;;       _write_eep
  1437 ;;         _delay
  1438 ;;       _write
  1439 ;;         _clearlcd
  1440 ;;           _cmd
  1441 ;;             _setLCD
  1442 ;;               _getn
  1443 ;;             __cmd
  1444 ;;               _latch
  1445 ;;                 _delay
  1446 ;;         _cmd
  1447 ;;           _setLCD
  1448 ;;             _getn
  1449 ;;           __cmd
  1450 ;;             _latch
  1451 ;;               _delay
  1452 ;;         _dat
  1453 ;;           _setLCD
  1454 ;;             _getn
  1455 ;;           __dat
  1456 ;;             _latch
  1457 ;;               _delay
  1458 ;;       _delay
  1459 ;;       _read_log
  1460 ;;         _read_eep
  1461 ;;           _delay
  1462 ;;           _strcpy (ARG)
  1463 ;;             _delay (ARG)
  1464 ;;         _strcpy (ARG)
  1465 ;;           _delay (ARG)
  1466 ;;       _strcpy
  1467 ;;         _delay (ARG)
  1468 ;;     _write
  1469 ;;       _clearlcd
  1470 ;;         _cmd
  1471 ;;           _setLCD
  1472 ;;             _getn
  1473 ;;           __cmd
  1474 ;;             _latch
  1475 ;;               _delay
  1476 ;;       _cmd
  1477 ;;         _setLCD
  1478 ;;           _getn
  1479 ;;         __cmd
  1480 ;;           _latch
  1481 ;;             _delay
  1482 ;;       _dat
  1483 ;;         _setLCD
  1484 ;;           _getn
  1485 ;;         __dat
  1486 ;;           _latch
  1487 ;;             _delay
  1488 ;;     _scan
  1489 ;;       _actrow
  1490 ;;         _resetout
  1491 ;;         _delay
  1492 ;;     _buzz
  1493 ;;     _startswitch
  1494 ;;       _init_fun
  1495 ;;         _write
  1496 ;;           _clearlcd
  1497 ;;             _cmd
  1498 ;;               _setLCD
  1499 ;;                 _getn
  1500 ;;               __cmd
  1501 ;;                 _latch
  1502 ;;                   _delay
  1503 ;;           _cmd
  1504 ;;             _setLCD
  1505 ;;               _getn
  1506 ;;             __cmd
  1507 ;;               _latch
  1508 ;;                 _delay
  1509 ;;           _dat
  1510 ;;             _setLCD
  1511 ;;               _getn
  1512 ;;             __dat
  1513 ;;               _latch
  1514 ;;                 _delay
  1515 ;;       _strcpy
  1516 ;;         _delay (ARG)
  1517 ;;       _write
  1518 ;;         _clearlcd
  1519 ;;           _cmd
  1520 ;;             _setLCD
  1521 ;;               _getn
  1522 ;;             __cmd
  1523 ;;               _latch
  1524 ;;                 _delay
  1525 ;;         _cmd
  1526 ;;           _setLCD
  1527 ;;             _getn
  1528 ;;           __cmd
  1529 ;;             _latch
  1530 ;;               _delay
  1531 ;;         _dat
  1532 ;;           _setLCD
  1533 ;;             _getn
  1534 ;;           __dat
  1535 ;;             _latch
  1536 ;;               _delay
  1537 ;;       _buzz
  1538 ;;       _strcmp
  1539 ;;       _delay
  1540 ;;       _check
  1541 ;;     _getlogicseq
  1542 ;;       _getlogic
  1543 ;;         _read_eep
  1544 ;;           _delay
  1545 ;;           _strcpy (ARG)
  1546 ;;             _delay (ARG)
  1547 ;;         _write_eep
  1548 ;;           _delay
  1549 ;;         _write
  1550 ;;           _clearlcd
  1551 ;;             _cmd
  1552 ;;               _setLCD
  1553 ;;                 _getn
  1554 ;;               __cmd
  1555 ;;                 _latch
  1556 ;;                   _delay
  1557 ;;           _cmd
  1558 ;;             _setLCD
  1559 ;;               _getn
  1560 ;;             __cmd
  1561 ;;               _latch
  1562 ;;                 _delay
  1563 ;;           _dat
  1564 ;;             _setLCD
  1565 ;;               _getn
  1566 ;;             __dat
  1567 ;;               _latch
  1568 ;;                 _delay
  1569 ;;         _delay
  1570 ;;         _read_log
  1571 ;;           _read_eep
  1572 ;;             _delay
  1573 ;;             _strcpy (ARG)
  1574 ;;               _delay (ARG)
  1575 ;;           _strcpy (ARG)
  1576 ;;             _delay (ARG)
  1577 ;;         _strcpy
  1578 ;;           _delay (ARG)
  1579 ;;       _write
  1580 ;;         _clearlcd
  1581 ;;           _cmd
  1582 ;;             _setLCD
  1583 ;;               _getn
  1584 ;;             __cmd
  1585 ;;               _latch
  1586 ;;                 _delay
  1587 ;;         _cmd
  1588 ;;           _setLCD
  1589 ;;             _getn
  1590 ;;           __cmd
  1591 ;;             _latch
  1592 ;;               _delay
  1593 ;;         _dat
  1594 ;;           _setLCD
  1595 ;;             _getn
  1596 ;;           __dat
  1597 ;;             _latch
  1598 ;;               _delay
  1599 ;;       _delay
  1600 ;;       _strcpy
  1601 ;;         _delay (ARG)
  1602 ;;       _scan
  1603 ;;         _actrow
  1604 ;;           _resetout
  1605 ;;           _delay
  1606 ;;       _buzz
  1607 ;;       _itoaa
  1608 ;;         ___wmul
  1609 ;;         ___awdiv
  1610 ;;         ___awmod
  1611 ;;       _strcat
  1612 ;;       _setlogic
  1613 ;;         _write_log
  1614 ;;           _write_eep
  1615 ;;             _delay
  1616 ;;
  1617                           
  1618 ;; Address spaces:
  1619                           
  1620 ;;Name               Size   Autos  Total    Cost      Usage
  1621 ;;BANK3               60      0       0       9        0.0%
  1622 ;;BITBANK3            60      0       0       8        0.0%
  1623 ;;SFR3                 0      0       0       4        0.0%
  1624 ;;BITSFR3              0      0       0       4        0.0%
  1625 ;;BANK2               60      0       0      11        0.0%
  1626 ;;BITBANK2            60      0       0      10        0.0%
  1627 ;;SFR2                 0      0       0       5        0.0%
  1628 ;;BITSFR2              0      0       0       5        0.0%
  1629 ;;SFR1                 0      0       0       2        0.0%
  1630 ;;BITSFR1              0      0       0       2        0.0%
  1631 ;;BANK1               50      0      3F       7       78.8%
  1632 ;;BITBANK1            50      0       0       6        0.0%
  1633 ;;CODE                 0      0       0       0        0.0%
  1634 ;;DATA                 0      0      A5      12        0.0%
  1635 ;;ABS                  0      0      9C       3        0.0%
  1636 ;;NULL                 0      0       0       0        0.0%
  1637 ;;STACK                0      0       9       2        0.0%
  1638 ;;BANK0               50     4B      4F       5       98.8%
  1639 ;;BITBANK0            50      0       0       4        0.0%
  1640 ;;SFR0                 0      0       0       1        0.0%
  1641 ;;BITSFR0              0      0       0       1        0.0%
  1642 ;;COMMON               E      E       E       1      100.0%
  1643 ;;BITCOMMON            E      0       0       0        0.0%
  1644 ;;EEDATA             100      0       0       0        0.0%
  1645                           
  1646                           	global	_main
  1647                           psect	maintext,global,class=CODE,delta=2
  1648                           global __pmaintext
  1649  0003                     __pmaintext:
  1650                           
  1651 ;; *************** function _main *****************
  1652 ;; Defined at:
  1653 ;;		line 105 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  2  1099[COMMON] int 
  1660 ;; Registers used:
  1661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 17F/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1667 ;;      Params:         0       0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0
  1670 ;;      Totals:         0       0       0       0       0
  1671 ;;Total ram usage:        0 bytes
  1672 ;; Hardware stack levels required when called:    9
  1673 ;; This function calls:
  1674 ;;		_initlcd
  1675 ;;		_initkeypad
  1676 ;;		_start
  1677 ;; This function is called by:
  1678 ;;		Startup code after reset
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           psect	maintext
  1682                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  1683                           	line	105
  1684                           	global	__size_of_main
  1685  0016                     	__size_of_main	equ	__end_of_main-_main
  1686                           	
  1687  0003                     _main:	
  1688 ;; hardware stack exceeded
  1689                           	opt	stack 0
  1690                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1691                           	line	109
  1692                           	
  1693  0003                     l4198:	
  1694                           ;prev13.c: 109: TRISB = 0b00001111;
  1695  0003  300F               	movlw	(0Fh)
  1696  0004  1683               	bsf	status, 5	;RP0=1, select bank1
  1697  0005  1303               	bcf	status, 6	;RP1=0, select bank1
  1698  0006  0086               	movwf	(134)^080h	;volatile
  1699                           	line	111
  1700                           	
  1701  0007                     l4200:	
  1702                           ;prev13.c: 111: initlcd();
  1703  0007  120A  158A  2310   	fcall	_initlcd
              120A  118A         
  1704                           	line	112
  1705                           	
  1706  000C                     l4202:	
  1707                           ;prev13.c: 112: initkeypad();
  1708  000C  120A  158A  226B   	fcall	_initkeypad
              120A  118A         
  1709                           	line	133
  1710                           	
  1711  0011                     l4204:	
  1712                           ;prev13.c: 133: start();
  1713  0011  120A  118A  2290   	fcall	_start
              120A  118A         
  1714                           	line	140
  1715                           	
  1716  0016                     l1100:	
  1717                           	global	start
  1718  0016  120A  118A  2800   	ljmp	start
  1719                           	opt stack 0
  1720                           GLOBAL	__end_of_main
  1721  0019                     	__end_of_main:
  1722 ;; =============== function _main ends ============
  1723                           
  1724                           	signat	_main,90
  1725                           	global	_start
  1726                           psect	text746,local,class=CODE,delta=2
  1727                           global __ptext746
  1728  0290                     __ptext746:
  1729                           
  1730 ;; *************** function _start *****************
  1731 ;; Defined at:
  1732 ;;		line 143 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    8
  1753 ;; This function calls:
  1754 ;;		_getlogic
  1755 ;;		_write
  1756 ;;		_scan
  1757 ;;		_buzz
  1758 ;;		_startswitch
  1759 ;;		_getlogicseq
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           psect	text746
  1765                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  1766                           	line	143
  1767                           	global	__size_of_start
  1768  00EE                     	__size_of_start	equ	__end_of_start-_start
  1769                           	
  1770  0290                     _start:	
  1771 ;; hardware stack exceeded
  1772                           	opt	stack 0
  1773                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1774                           	line	144
  1775                           ;prev13.c: 144: START:
  1776                           	
  1777  0290                     l1103:	
  1778                           	line	145
  1779                           	
  1780  0290                     l4148:	
  1781                           ;prev13.c: 145: getlogic();
  1782  0290  120A  118A  2019   	fcall	_getlogic
              120A  118A         
  1783                           	line	146
  1784                           	
  1785  0295                     l4150:	
  1786                           ;prev13.c: 146: done_init=0;
  1787  0295  1683               	bsf	status, 5	;RP0=1, select bank1
  1788  0296  1303               	bcf	status, 6	;RP1=0, select bank1
  1789  0297  01D3               	clrf	(_done_init)^080h
  1790  0298  01D4               	clrf	(_done_init+1)^080h
  1791                           	line	148
  1792                           	
  1793  0299                     l4152:	
  1794                           ;prev13.c: 148: write("FP Home Atomn.",1,1);
  1795  0299  3090               	movlw	low(STR_1|8000h)
  1796  029A  1283               	bcf	status, 5	;RP0=0, select bank0
  1797  029B  1303               	bcf	status, 6	;RP1=0, select bank0
  1798  029C  00A0               	movwf	(?_write)
  1799  029D  3088               	movlw	high(STR_1|8000h)
  1800  029E  00A1               	movwf	((?_write))+1
  1801  029F  3001               	movlw	low(01h)
  1802  02A0  00A2               	movwf	0+(?_write)+02h
  1803  02A1  3000               	movlw	high(01h)
  1804  02A2  00A3               	movwf	(0+(?_write)+02h)+1
  1805  02A3  3001               	movlw	low(01h)
  1806  02A4  00A4               	movwf	0+(?_write)+04h
  1807  02A5  3000               	movlw	high(01h)
  1808  02A6  00A5               	movwf	(0+(?_write)+04h)+1
  1809  02A7  120A  158A  255C   	fcall	_write
              120A  118A         
  1810                           	line	149
  1811                           	
  1812  02AC                     l4154:	
  1813                           ;prev13.c: 149: write("Press 0 to Cont.",2,0);
  1814  02AC  306E               	movlw	low(STR_2|8000h)
  1815  02AD  1283               	bcf	status, 5	;RP0=0, select bank0
  1816  02AE  1303               	bcf	status, 6	;RP1=0, select bank0
  1817  02AF  00A0               	movwf	(?_write)
  1818  02B0  3088               	movlw	high(STR_2|8000h)
  1819  02B1  00A1               	movwf	((?_write))+1
  1820  02B2  3002               	movlw	low(02h)
  1821  02B3  00A2               	movwf	0+(?_write)+02h
  1822  02B4  3000               	movlw	high(02h)
  1823  02B5  00A3               	movwf	(0+(?_write)+02h)+1
  1824  02B6  3000               	movlw	low(0)
  1825  02B7  00A4               	movwf	0+(?_write)+04h
  1826  02B8  3000               	movlw	high(0)
  1827  02B9  00A5               	movwf	(0+(?_write)+04h)+1
  1828  02BA  120A  158A  255C   	fcall	_write
              120A  118A         
  1829                           	line	152
  1830                           ;prev13.c: 152: while(scan()!=0);
  1831  02BF  2AC1               	goto	l4156
  1832                           	
  1833  02C0                     l1105:	
  1834  02C0  2AC1               	goto	l4156
  1835                           	
  1836  02C1                     l1104:	
  1837                           	
  1838  02C1                     l4156:	
  1839  02C1  120A  118A  20BF   	fcall	_scan
              120A  118A         
  1840  02C6  0875               	movf	((1+(?_scan))),w
  1841  02C7  0474               	iorwf	((0+(?_scan))),w
  1842  02C8  1D03               	skipz
  1843  02C9  2ACB               	goto	u4941
  1844  02CA  2ACC               	goto	u4940
  1845  02CB                     u4941:
  1846  02CB  2AC1               	goto	l4156
  1847  02CC                     u4940:
  1848  02CC  2ACD               	goto	l4158
  1849                           	
  1850  02CD                     l1106:	
  1851                           	line	155
  1852                           	
  1853  02CD                     l4158:	
  1854                           ;prev13.c: 155: write("1.SWT  2.REPRG",1,1);
  1855  02CD  309F               	movlw	low(STR_3|8000h)
  1856  02CE  1283               	bcf	status, 5	;RP0=0, select bank0
  1857  02CF  1303               	bcf	status, 6	;RP1=0, select bank0
  1858  02D0  00A0               	movwf	(?_write)
  1859  02D1  3088               	movlw	high(STR_3|8000h)
  1860  02D2  00A1               	movwf	((?_write))+1
  1861  02D3  3001               	movlw	low(01h)
  1862  02D4  00A2               	movwf	0+(?_write)+02h
  1863  02D5  3000               	movlw	high(01h)
  1864  02D6  00A3               	movwf	(0+(?_write)+02h)+1
  1865  02D7  3001               	movlw	low(01h)
  1866  02D8  00A4               	movwf	0+(?_write)+04h
  1867  02D9  3000               	movlw	high(01h)
  1868  02DA  00A5               	movwf	(0+(?_write)+04h)+1
  1869  02DB  120A  158A  255C   	fcall	_write
              120A  118A         
  1870                           	line	156
  1871                           ;prev13.c: 156: write("3.RESET",2,0);
  1872  02E0  30D2               	movlw	low(STR_4|8000h)
  1873  02E1  1283               	bcf	status, 5	;RP0=0, select bank0
  1874  02E2  1303               	bcf	status, 6	;RP1=0, select bank0
  1875  02E3  00A0               	movwf	(?_write)
  1876  02E4  3088               	movlw	high(STR_4|8000h)
  1877  02E5  00A1               	movwf	((?_write))+1
  1878  02E6  3002               	movlw	low(02h)
  1879  02E7  00A2               	movwf	0+(?_write)+02h
  1880  02E8  3000               	movlw	high(02h)
  1881  02E9  00A3               	movwf	(0+(?_write)+02h)+1
  1882  02EA  3000               	movlw	low(0)
  1883  02EB  00A4               	movwf	0+(?_write)+04h
  1884  02EC  3000               	movlw	high(0)
  1885  02ED  00A5               	movwf	(0+(?_write)+04h)+1
  1886  02EE  120A  158A  255C   	fcall	_write
              120A  118A         
  1887  02F3  2AF4               	goto	l4160
  1888                           	line	157
  1889                           ;prev13.c: 157: while(1)
  1890                           	
  1891  02F4                     l1107:	
  1892                           	line	160
  1893                           	
  1894  02F4                     l4160:	
  1895                           ;prev13.c: 158: {
  1896                           ;prev13.c: 160: num=scan();
  1897  02F4  120A  118A  20BF   	fcall	_scan
              120A  118A         
  1898  02F9  0875               	movf	(1+(?_scan)),w
  1899  02FA  1283               	bcf	status, 5	;RP0=0, select bank0
  1900  02FB  1303               	bcf	status, 6	;RP1=0, select bank0
  1901  02FC  01EE               	clrf	(_num+1)
  1902  02FD  07EE               	addwf	(_num+1)
  1903  02FE  0874               	movf	(0+(?_scan)),w
  1904  02FF  01ED               	clrf	(_num)
  1905  0300  07ED               	addwf	(_num)
  1906                           
  1907                           	line	161
  1908                           	
  1909  0301                     l4162:	
  1910                           ;prev13.c: 161: buzz(num);
  1911  0301  086E               	movf	(_num+1),w
  1912  0302  01F1               	clrf	(?_buzz+1)
  1913  0303  07F1               	addwf	(?_buzz+1)
  1914  0304  086D               	movf	(_num),w
  1915  0305  01F0               	clrf	(?_buzz)
  1916  0306  07F0               	addwf	(?_buzz)
  1917                           
  1918  0307  120A  158A  22A7   	fcall	_buzz
              120A  118A         
  1919                           	line	162
  1920                           	
  1921  030C                     l4164:	
  1922                           ;prev13.c: 162: if(num==1)
  1923  030C  3001               	movlw	01h
  1924  030D  1283               	bcf	status, 5	;RP0=0, select bank0
  1925  030E  1303               	bcf	status, 6	;RP1=0, select bank0
  1926  030F  066D               	xorwf	(_num),w
  1927  0310  046E               	iorwf	(_num+1),w
  1928  0311  1D03               	skipz
  1929  0312  2B14               	goto	u4951
  1930  0313  2B15               	goto	u4950
  1931  0314                     u4951:
  1932  0314  2B1F               	goto	l1108
  1933  0315                     u4950:
  1934                           	line	164
  1935                           	
  1936  0315                     l4166:	
  1937                           ;prev13.c: 163: {
  1938                           ;prev13.c: 164: f1=1;
  1939  0315  3001               	movlw	low(01h)
  1940  0316  1683               	bsf	status, 5	;RP0=1, select bank1
  1941  0317  1303               	bcf	status, 6	;RP1=0, select bank1
  1942  0318  00D5               	movwf	(_f1)^080h
  1943  0319  3000               	movlw	high(01h)
  1944  031A  00D6               	movwf	((_f1)^080h)+1
  1945                           	line	165
  1946                           	
  1947  031B                     l4168:	
  1948                           ;prev13.c: 165: f2=0;
  1949  031B  01D7               	clrf	(_f2)^080h
  1950  031C  01D8               	clrf	(_f2+1)^080h
  1951                           	line	166
  1952                           	
  1953  031D                     l4170:	
  1954                           ;prev13.c: 166: f3=0;
  1955  031D  01D9               	clrf	(_f3)^080h
  1956  031E  01DA               	clrf	(_f3+1)^080h
  1957                           	line	167
  1958                           	
  1959  031F                     l1108:	
  1960                           	line	168
  1961                           ;prev13.c: 167: }
  1962                           ;prev13.c: 168: if(num==2)
  1963  031F  3002               	movlw	02h
  1964  0320  1283               	bcf	status, 5	;RP0=0, select bank0
  1965  0321  066D               	xorwf	(_num),w
  1966  0322  046E               	iorwf	(_num+1),w
  1967  0323  1D03               	skipz
  1968  0324  2B26               	goto	u4961
  1969  0325  2B27               	goto	u4960
  1970  0326                     u4961:
  1971  0326  2B31               	goto	l1109
  1972  0327                     u4960:
  1973                           	line	170
  1974                           	
  1975  0327                     l4172:	
  1976                           ;prev13.c: 169: {
  1977                           ;prev13.c: 170: f1=0;
  1978  0327  1683               	bsf	status, 5	;RP0=1, select bank1
  1979  0328  1303               	bcf	status, 6	;RP1=0, select bank1
  1980  0329  01D5               	clrf	(_f1)^080h
  1981  032A  01D6               	clrf	(_f1+1)^080h
  1982                           	line	171
  1983                           	
  1984  032B                     l4174:	
  1985                           ;prev13.c: 171: f2=1;
  1986  032B  3001               	movlw	low(01h)
  1987  032C  00D7               	movwf	(_f2)^080h
  1988  032D  3000               	movlw	high(01h)
  1989  032E  00D8               	movwf	((_f2)^080h)+1
  1990                           	line	172
  1991                           	
  1992  032F                     l4176:	
  1993                           ;prev13.c: 172: f3=0;
  1994  032F  01D9               	clrf	(_f3)^080h
  1995  0330  01DA               	clrf	(_f3+1)^080h
  1996                           	line	173
  1997                           	
  1998  0331                     l1109:	
  1999                           	line	174
  2000                           ;prev13.c: 173: }
  2001                           ;prev13.c: 174: if(num==3)
  2002  0331  3003               	movlw	03h
  2003  0332  1283               	bcf	status, 5	;RP0=0, select bank0
  2004  0333  066D               	xorwf	(_num),w
  2005  0334  046E               	iorwf	(_num+1),w
  2006  0335  1D03               	skipz
  2007  0336  2B38               	goto	u4971
  2008  0337  2B39               	goto	u4970
  2009  0338                     u4971:
  2010  0338  2B48               	goto	l4184
  2011  0339                     u4970:
  2012                           	line	176
  2013                           	
  2014  0339                     l4178:	
  2015                           ;prev13.c: 175: {
  2016                           ;prev13.c: 176: f1=0;
  2017  0339  1683               	bsf	status, 5	;RP0=1, select bank1
  2018  033A  1303               	bcf	status, 6	;RP1=0, select bank1
  2019  033B  01D5               	clrf	(_f1)^080h
  2020  033C  01D6               	clrf	(_f1+1)^080h
  2021                           	line	177
  2022                           ;prev13.c: 177: f2=0;
  2023  033D  01D7               	clrf	(_f2)^080h
  2024  033E  01D8               	clrf	(_f2+1)^080h
  2025                           	line	178
  2026                           	
  2027  033F                     l4180:	
  2028                           ;prev13.c: 178: f3=1;
  2029  033F  3001               	movlw	low(01h)
  2030  0340  00D9               	movwf	(_f3)^080h
  2031  0341  3000               	movlw	high(01h)
  2032  0342  00DA               	movwf	((_f3)^080h)+1
  2033                           	line	179
  2034                           	
  2035  0343                     l4182:	
  2036                           ;prev13.c: 179: retm=1;
  2037  0343  3001               	movlw	low(01h)
  2038  0344  00DD               	movwf	(_retm)^080h
  2039  0345  3000               	movlw	high(01h)
  2040  0346  00DE               	movwf	((_retm)^080h)+1
  2041  0347  2B48               	goto	l4184
  2042                           	line	180
  2043                           	
  2044  0348                     l1110:	
  2045                           	line	182
  2046                           	
  2047  0348                     l4184:	
  2048                           ;prev13.c: 180: }
  2049                           ;prev13.c: 182: if(f1){
  2050  0348  1683               	bsf	status, 5	;RP0=1, select bank1
  2051  0349  1303               	bcf	status, 6	;RP1=0, select bank1
  2052  034A  0856               	movf	(_f1+1)^080h,w
  2053  034B  0455               	iorwf	(_f1)^080h,w
  2054  034C  1903               	skipnz
  2055  034D  2B4F               	goto	u4981
  2056  034E  2B50               	goto	u4980
  2057  034F                     u4981:
  2058  034F  2B56               	goto	l4188
  2059  0350                     u4980:
  2060                           	line	183
  2061                           	
  2062  0350                     l4186:	
  2063                           ;prev13.c: 183: startswitch();
  2064  0350  120A  118A  237E   	fcall	_startswitch
              120A  118A         
  2065                           	line	184
  2066                           ;prev13.c: 184: }
  2067  0355  2AF4               	goto	l4160
  2068                           	line	185
  2069                           	
  2070  0356                     l1111:	
  2071                           	
  2072  0356                     l4188:	
  2073                           ;prev13.c: 185: else if(f2){ f1=0; f2=0; f3=0;
  2074  0356  1683               	bsf	status, 5	;RP0=1, select bank1
  2075  0357  1303               	bcf	status, 6	;RP1=0, select bank1
  2076  0358  0858               	movf	(_f2+1)^080h,w
  2077  0359  0457               	iorwf	(_f2)^080h,w
  2078  035A  1903               	skipnz
  2079  035B  2B5D               	goto	u4991
  2080  035C  2B5E               	goto	u4990
  2081  035D                     u4991:
  2082  035D  2B6A               	goto	l4194
  2083  035E                     u4990:
  2084                           	
  2085  035E                     l4190:	
  2086  035E  01D5               	clrf	(_f1)^080h
  2087  035F  01D6               	clrf	(_f1+1)^080h
  2088  0360  01D7               	clrf	(_f2)^080h
  2089  0361  01D8               	clrf	(_f2+1)^080h
  2090  0362  01D9               	clrf	(_f3)^080h
  2091  0363  01DA               	clrf	(_f3+1)^080h
  2092                           	line	186
  2093                           	
  2094  0364                     l4192:	
  2095                           ;prev13.c: 186: getlogicseq();
  2096  0364  120A  118A  24C1   	fcall	_getlogicseq
              120A  118A         
  2097                           	line	187
  2098                           ;prev13.c: 187: }
  2099  0369  2AF4               	goto	l4160
  2100                           	line	188
  2101                           	
  2102  036A                     l1113:	
  2103                           	
  2104  036A                     l4194:	
  2105                           ;prev13.c: 188: else if(f3){ f1=0; f2=0; f3=0;
  2106  036A  1683               	bsf	status, 5	;RP0=1, select bank1
  2107  036B  1303               	bcf	status, 6	;RP1=0, select bank1
  2108  036C  085A               	movf	(_f3+1)^080h,w
  2109  036D  0459               	iorwf	(_f3)^080h,w
  2110  036E  1903               	skipnz
  2111  036F  2B71               	goto	u5001
  2112  0370  2B72               	goto	u5000
  2113  0371                     u5001:
  2114  0371  2AF4               	goto	l4160
  2115  0372                     u5000:
  2116                           	
  2117  0372                     l4196:	
  2118  0372  01D5               	clrf	(_f1)^080h
  2119  0373  01D6               	clrf	(_f1+1)^080h
  2120  0374  01D7               	clrf	(_f2)^080h
  2121  0375  01D8               	clrf	(_f2+1)^080h
  2122  0376  01D9               	clrf	(_f3)^080h
  2123  0377  01DA               	clrf	(_f3+1)^080h
  2124                           	line	189
  2125                           ;prev13.c: 189: goto START;
  2126  0378  2A90               	goto	l1103
  2127                           	line	191
  2128                           	
  2129  0379                     l1115:	
  2130  0379  2AF4               	goto	l4160
  2131                           	line	192
  2132                           	
  2133  037A                     l1114:	
  2134  037A  2AF4               	goto	l4160
  2135                           	
  2136  037B                     l1112:	
  2137  037B  2AF4               	goto	l4160
  2138                           	
  2139  037C                     l1116:	
  2140                           	line	157
  2141  037C  2AF4               	goto	l4160
  2142                           	
  2143  037D                     l1117:	
  2144                           	line	195
  2145                           	
  2146  037D                     l1118:	
  2147  037D  0008               	return
  2148                           	opt stack 0
  2149                           GLOBAL	__end_of_start
  2150  037E                     	__end_of_start:
  2151 ;; =============== function _start ends ============
  2152                           
  2153                           	signat	_start,88
  2154                           	global	_getlogicseq
  2155                           psect	text747,local,class=CODE,delta=2
  2156                           global __ptext747
  2157  04C1                     __ptext747:
  2158                           
  2159 ;; *************** function _getlogicseq *****************
  2160 ;; Defined at:
  2161 ;;		line 320 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  str            32   17[BANK0 ] unsigned char [32]
  2166 ;;  snum           16   51[BANK0 ] unsigned char [16]
  2167 ;;  num             2   73[BANK0 ] int 
  2168 ;;  ccount          2   71[BANK0 ] int 
  2169 ;;  wf              2   69[BANK0 ] int 
  2170 ;;  nf              2   67[BANK0 ] int 
  2171 ;;  bf              2   49[BANK0 ] int 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;		None               void
  2174 ;; Registers used:
  2175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         0       0       0       0       0
  2182 ;;      Locals:         0      58       0       0       0
  2183 ;;      Temps:          0       4       0       0       0
  2184 ;;      Totals:         0      62       0       0       0
  2185 ;;Total ram usage:       62 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    7
  2188 ;; This function calls:
  2189 ;;		_getlogic
  2190 ;;		_write
  2191 ;;		_delay
  2192 ;;		_strcpy
  2193 ;;		_scan
  2194 ;;		_buzz
  2195 ;;		_itoaa
  2196 ;;		_strcat
  2197 ;;		_setlogic
  2198 ;; This function is called by:
  2199 ;;		_start
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           psect	text747
  2203                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  2204                           	line	320
  2205                           	global	__size_of_getlogicseq
  2206  033F                     	__size_of_getlogicseq	equ	__end_of_getlogicseq-_getlogicseq
  2207                           	
  2208  04C1                     _getlogicseq:	
  2209 ;; hardware stack exceeded
  2210                           	opt	stack 0
  2211                           ; Regs used in _getlogicseq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2212                           	line	326
  2213                           	
  2214  04C1                     l3984:	
  2215                           ;prev13.c: 325: int num ;
  2216                           ;prev13.c: 326: char snum[16]="";
  2217  04C1  3053               	movlw	(getlogicseq@snum)&0ffh
  2218  04C2  0084               	movwf	fsr0
  2219  04C3  30C3               	movlw	low(getlogicseq@F1874)
  2220  04C4  1283               	bcf	status, 5	;RP0=0, select bank0
  2221  04C5  1303               	bcf	status, 6	;RP1=0, select bank0
  2222  04C6  00AD               	movwf	(??_getlogicseq+0)+0
  2223  04C7  0804               	movf	fsr0,w
  2224  04C8  00AE               	movwf	((??_getlogicseq+0)+0+1)
  2225  04C9  3010               	movlw	16
  2226  04CA  00AF               	movwf	((??_getlogicseq+0)+0+2)
  2227  04CB                     u4690:
  2228  04CB  082D               	movf	(??_getlogicseq+0)+0,w
  2229  04CC  0084               	movwf	fsr0
  2230  04CD  1383               	bcf	status, 7	;select IRP bank1
  2231                           	
  2232  04CE  0800               	movf	indf,w
  2233  04CF  00B0               	movwf	((??_getlogicseq+0)+0+3)
  2234  04D0  0AAD               	incf	(??_getlogicseq+0)+0,f
  2235  04D1  082E               	movf	((??_getlogicseq+0)+0+1),w
  2236  04D2  0084               	movwf	fsr0
  2237                           	
  2238  04D3  0830               	movf	((??_getlogicseq+0)+0+3),w
  2239  04D4  0080               	movwf	indf
  2240  04D5  0AAE               	incf	((??_getlogicseq+0)+0+1),f
  2241  04D6  0BAF               	decfsz	((??_getlogicseq+0)+0+2),f
  2242  04D7  2CCB               	goto	u4690
  2243                           	line	327
  2244                           	
  2245  04D8                     l3986:	
  2246                           ;prev13.c: 327: int wf=0;
  2247  04D8  01E5               	clrf	(getlogicseq@wf)
  2248  04D9  01E6               	clrf	(getlogicseq@wf+1)
  2249                           	line	328
  2250                           	
  2251  04DA                     l3988:	
  2252                           ;prev13.c: 328: int nf=0;
  2253  04DA  01E3               	clrf	(getlogicseq@nf)
  2254  04DB  01E4               	clrf	(getlogicseq@nf+1)
  2255                           	line	329
  2256                           	
  2257  04DC                     l3990:	
  2258                           ;prev13.c: 329: int bf=0;
  2259  04DC  01D1               	clrf	(getlogicseq@bf)
  2260  04DD  01D2               	clrf	(getlogicseq@bf+1)
  2261                           	line	330
  2262                           	
  2263  04DE                     l3992:	
  2264                           ;prev13.c: 330: int ccount=0;
  2265  04DE  01E7               	clrf	(getlogicseq@ccount)
  2266  04DF  01E8               	clrf	(getlogicseq@ccount+1)
  2267                           	line	334
  2268                           	
  2269  04E0                     l3994:	
  2270                           ;prev13.c: 331: char str[32];
  2271                           ;prev13.c: 334: getlogic();
  2272  04E0  120A  118A  2019   	fcall	_getlogic
              120A  118A         
  2273  04E5  2CE6               	goto	l3996
  2274                           	line	335
  2275                           ;prev13.c: 335: START_SEQ:
  2276                           	
  2277  04E6                     l1153:	
  2278                           	line	336
  2279                           	
  2280  04E6                     l3996:	
  2281                           ;prev13.c: 336: write("Press 2. - Skip for Device",1,1);
  2282  04E6  3017               	movlw	low(STR_10|8000h)
  2283  04E7  1283               	bcf	status, 5	;RP0=0, select bank0
  2284  04E8  1303               	bcf	status, 6	;RP1=0, select bank0
  2285  04E9  00A0               	movwf	(?_write)
  2286  04EA  3088               	movlw	high(STR_10|8000h)
  2287  04EB  00A1               	movwf	((?_write))+1
  2288  04EC  3001               	movlw	low(01h)
  2289  04ED  00A2               	movwf	0+(?_write)+02h
  2290  04EE  3000               	movlw	high(01h)
  2291  04EF  00A3               	movwf	(0+(?_write)+02h)+1
  2292  04F0  3001               	movlw	low(01h)
  2293  04F1  00A4               	movwf	0+(?_write)+04h
  2294  04F2  3000               	movlw	high(01h)
  2295  04F3  00A5               	movwf	(0+(?_write)+04h)+1
  2296  04F4  120A  158A  255C   	fcall	_write
              120A  118A         
  2297                           	line	337
  2298                           	
  2299  04F9                     l3998:	
  2300                           ;prev13.c: 337: delay(5000);
  2301  04F9  3088               	movlw	low(01388h)
  2302  04FA  00F0               	movwf	(?_delay)
  2303  04FB  3013               	movlw	high(01388h)
  2304  04FC  00F1               	movwf	((?_delay))+1
  2305  04FD  120A  158A  22C8   	fcall	_delay
              120A  118A         
  2306                           	line	339
  2307                           	
  2308  0502                     l4000:	
  2309                           ;prev13.c: 339: wf=0;ccount=0;
  2310  0502  1283               	bcf	status, 5	;RP0=0, select bank0
  2311  0503  1303               	bcf	status, 6	;RP1=0, select bank0
  2312  0504  01E5               	clrf	(getlogicseq@wf)
  2313  0505  01E6               	clrf	(getlogicseq@wf+1)
  2314                           	
  2315  0506                     l4002:	
  2316  0506  01E7               	clrf	(getlogicseq@ccount)
  2317  0507  01E8               	clrf	(getlogicseq@ccount+1)
  2318                           	line	340
  2319                           	
  2320  0508                     l4004:	
  2321                           ;prev13.c: 340: strcpy(str,"Enter Logic DEV1:  ");
  2322  0508  3032               	movlw	low(STR_11|8000h)
  2323  0509  00F2               	movwf	(?_strcpy)
  2324  050A  3088               	movlw	high(STR_11|8000h)
  2325  050B  00F3               	movwf	((?_strcpy))+1
  2326  050C  3031               	movlw	(getlogicseq@str)&0ffh
  2327  050D  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  2328                           	line	341
  2329                           	
  2330  0512                     l4006:	
  2331                           ;prev13.c: 341: write(str,1,1);
  2332  0512  3031               	movlw	(getlogicseq@str&0ffh)
  2333  0513  1283               	bcf	status, 5	;RP0=0, select bank0
  2334  0514  1303               	bcf	status, 6	;RP1=0, select bank0
  2335  0515  00A0               	movwf	(?_write)
  2336  0516  3000               	movlw	(0x0/2)
  2337  0517  00A1               	movwf	(?_write+1)
  2338  0518  3001               	movlw	low(01h)
  2339  0519  00A2               	movwf	0+(?_write)+02h
  2340  051A  3000               	movlw	high(01h)
  2341  051B  00A3               	movwf	(0+(?_write)+02h)+1
  2342  051C  3001               	movlw	low(01h)
  2343  051D  00A4               	movwf	0+(?_write)+04h
  2344  051E  3000               	movlw	high(01h)
  2345  051F  00A5               	movwf	(0+(?_write)+04h)+1
  2346  0520  120A  158A  255C   	fcall	_write
              120A  118A         
  2347                           	line	342
  2348                           	
  2349  0525                     l4008:	
  2350                           ;prev13.c: 342: write(logic_d1,2,0);
  2351  0525  30AA               	movlw	(_logic_d1&0ffh)
  2352  0526  1283               	bcf	status, 5	;RP0=0, select bank0
  2353  0527  1303               	bcf	status, 6	;RP1=0, select bank0
  2354  0528  00A0               	movwf	(?_write)
  2355  0529  3000               	movlw	(0x1/2)
  2356  052A  00A1               	movwf	(?_write+1)
  2357  052B  3002               	movlw	low(02h)
  2358  052C  00A2               	movwf	0+(?_write)+02h
  2359  052D  3000               	movlw	high(02h)
  2360  052E  00A3               	movwf	(0+(?_write)+02h)+1
  2361  052F  3000               	movlw	low(0)
  2362  0530  00A4               	movwf	0+(?_write)+04h
  2363  0531  3000               	movlw	high(0)
  2364  0532  00A5               	movwf	(0+(?_write)+04h)+1
  2365  0533  120A  158A  255C   	fcall	_write
              120A  118A         
  2366  0538  2D39               	goto	l4010
  2367                           	line	344
  2368                           ;prev13.c: 344: while(1)
  2369                           	
  2370  0539                     l1154:	
  2371                           	line	346
  2372                           	
  2373  0539                     l4010:	
  2374                           ;prev13.c: 345: {
  2375                           ;prev13.c: 346: num=scan();
  2376  0539  120A  118A  20BF   	fcall	_scan
              120A  118A         
  2377  053E  0875               	movf	(1+(?_scan)),w
  2378  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  2379  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  2380  0541  01EA               	clrf	(getlogicseq@num+1)
  2381  0542  07EA               	addwf	(getlogicseq@num+1)
  2382  0543  0874               	movf	(0+(?_scan)),w
  2383  0544  01E9               	clrf	(getlogicseq@num)
  2384  0545  07E9               	addwf	(getlogicseq@num)
  2385                           
  2386                           	line	347
  2387                           	
  2388  0546                     l4012:	
  2389                           ;prev13.c: 347: buzz(num);
  2390  0546  086A               	movf	(getlogicseq@num+1),w
  2391  0547  01F1               	clrf	(?_buzz+1)
  2392  0548  07F1               	addwf	(?_buzz+1)
  2393  0549  0869               	movf	(getlogicseq@num),w
  2394  054A  01F0               	clrf	(?_buzz)
  2395  054B  07F0               	addwf	(?_buzz)
  2396                           
  2397  054C  120A  158A  22A7   	fcall	_buzz
              120A  118A         
  2398                           	line	348
  2399                           	
  2400  0551                     l4014:	
  2401                           ;prev13.c: 348: if(num==1||num==0){
  2402  0551  3001               	movlw	01h
  2403  0552  1283               	bcf	status, 5	;RP0=0, select bank0
  2404  0553  1303               	bcf	status, 6	;RP1=0, select bank0
  2405  0554  0669               	xorwf	(getlogicseq@num),w
  2406  0555  046A               	iorwf	(getlogicseq@num+1),w
  2407  0556  1903               	skipnz
  2408  0557  2D59               	goto	u4701
  2409  0558  2D5A               	goto	u4700
  2410  0559                     u4701:
  2411  0559  2D61               	goto	l4018
  2412  055A                     u4700:
  2413                           	
  2414  055A                     l4016:	
  2415  055A  086A               	movf	((getlogicseq@num+1)),w
  2416  055B  0469               	iorwf	((getlogicseq@num)),w
  2417  055C  1D03               	skipz
  2418  055D  2D5F               	goto	u4711
  2419  055E  2D60               	goto	u4710
  2420  055F                     u4711:
  2421  055F  2DC8               	goto	l4032
  2422  0560                     u4710:
  2423  0560  2D61               	goto	l4018
  2424                           	
  2425  0561                     l1157:	
  2426                           	line	349
  2427                           	
  2428  0561                     l4018:	
  2429                           ;prev13.c: 349: if(wf==0)
  2430  0561  0866               	movf	((getlogicseq@wf+1)),w
  2431  0562  0465               	iorwf	((getlogicseq@wf)),w
  2432  0563  1D03               	skipz
  2433  0564  2D66               	goto	u4721
  2434  0565  2D67               	goto	u4720
  2435  0566                     u4721:
  2436  0566  2DCB               	goto	l4034
  2437  0567                     u4720:
  2438                           	line	351
  2439                           	
  2440  0567                     l4020:	
  2441                           ;prev13.c: 350: {
  2442                           ;prev13.c: 351: if(ccount==0)
  2443  0567  0868               	movf	((getlogicseq@ccount+1)),w
  2444  0568  0467               	iorwf	((getlogicseq@ccount)),w
  2445  0569  1D03               	skipz
  2446  056A  2D6C               	goto	u4731
  2447  056B  2D6D               	goto	u4730
  2448  056C                     u4731:
  2449  056C  2D77               	goto	l1159
  2450  056D                     u4730:
  2451                           	line	352
  2452                           	
  2453  056D                     l4022:	
  2454                           ;prev13.c: 352: strcpy(logic_d1,"");
  2455  056D  3045               	movlw	low(STR_12|8000h)
  2456  056E  00F2               	movwf	(?_strcpy)
  2457  056F  3088               	movlw	high(STR_12|8000h)
  2458  0570  00F3               	movwf	((?_strcpy))+1
  2459  0571  30AA               	movlw	(_logic_d1)&0ffh
  2460  0572  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  2461                           	
  2462  0577                     l1159:	
  2463                           	line	353
  2464                           ;prev13.c: 353: write("---",2,0);
  2465  0577  302A               	movlw	low(STR_13|8000h)
  2466  0578  1283               	bcf	status, 5	;RP0=0, select bank0
  2467  0579  1303               	bcf	status, 6	;RP1=0, select bank0
  2468  057A  00A0               	movwf	(?_write)
  2469  057B  3089               	movlw	high(STR_13|8000h)
  2470  057C  00A1               	movwf	((?_write))+1
  2471  057D  3002               	movlw	low(02h)
  2472  057E  00A2               	movwf	0+(?_write)+02h
  2473  057F  3000               	movlw	high(02h)
  2474  0580  00A3               	movwf	(0+(?_write)+02h)+1
  2475  0581  3000               	movlw	low(0)
  2476  0582  00A4               	movwf	0+(?_write)+04h
  2477  0583  3000               	movlw	high(0)
  2478  0584  00A5               	movwf	(0+(?_write)+04h)+1
  2479  0585  120A  158A  255C   	fcall	_write
              120A  118A         
  2480                           	line	354
  2481                           ;prev13.c: 354: itoaa(num, snum);
  2482  058A  1283               	bcf	status, 5	;RP0=0, select bank0
  2483  058B  1303               	bcf	status, 6	;RP1=0, select bank0
  2484  058C  086A               	movf	(getlogicseq@num+1),w
  2485  058D  01FA               	clrf	(?_itoaa+1)
  2486  058E  07FA               	addwf	(?_itoaa+1)
  2487  058F  0869               	movf	(getlogicseq@num),w
  2488  0590  01F9               	clrf	(?_itoaa)
  2489  0591  07F9               	addwf	(?_itoaa)
  2490                           
  2491  0592  3053               	movlw	(getlogicseq@snum)&0ffh
  2492  0593  00AD               	movwf	(??_getlogicseq+0)+0
  2493  0594  082D               	movf	(??_getlogicseq+0)+0,w
  2494  0595  00FB               	movwf	0+(?_itoaa)+02h
  2495  0596  120A  118A  21A5   	fcall	_itoaa
              120A  118A         
  2496                           	line	355
  2497                           	
  2498  059B                     l4024:	
  2499                           ;prev13.c: 355: strcat(logic_d1,snum);
  2500  059B  3053               	movlw	(getlogicseq@snum)&0ffh
  2501  059C  1283               	bcf	status, 5	;RP0=0, select bank0
  2502  059D  1303               	bcf	status, 6	;RP1=0, select bank0
  2503  059E  00AD               	movwf	(??_getlogicseq+0)+0
  2504  059F  082D               	movf	(??_getlogicseq+0)+0,w
  2505  05A0  00F0               	movwf	(?_strcat)
  2506  05A1  30AA               	movlw	(_logic_d1)&0ffh
  2507  05A2  120A  158A  23E7   	fcall	_strcat
              120A  118A         
  2508                           	line	356
  2509                           	
  2510  05A7                     l4026:	
  2511                           ;prev13.c: 356: write( logic_d1,2,0); ;
  2512  05A7  30AA               	movlw	(_logic_d1&0ffh)
  2513  05A8  1283               	bcf	status, 5	;RP0=0, select bank0
  2514  05A9  1303               	bcf	status, 6	;RP1=0, select bank0
  2515  05AA  00A0               	movwf	(?_write)
  2516  05AB  3000               	movlw	(0x1/2)
  2517  05AC  00A1               	movwf	(?_write+1)
  2518  05AD  3002               	movlw	low(02h)
  2519  05AE  00A2               	movwf	0+(?_write)+02h
  2520  05AF  3000               	movlw	high(02h)
  2521  05B0  00A3               	movwf	(0+(?_write)+02h)+1
  2522  05B1  3000               	movlw	low(0)
  2523  05B2  00A4               	movwf	0+(?_write)+04h
  2524  05B3  3000               	movlw	high(0)
  2525  05B4  00A5               	movwf	(0+(?_write)+04h)+1
  2526  05B5  120A  158A  255C   	fcall	_write
              120A  118A         
  2527                           	line	357
  2528                           	
  2529  05BA                     l4028:	
  2530                           ;prev13.c: 357: wf=1;
  2531  05BA  3001               	movlw	low(01h)
  2532  05BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2533  05BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2534  05BD  00E5               	movwf	(getlogicseq@wf)
  2535  05BE  3000               	movlw	high(01h)
  2536  05BF  00E6               	movwf	((getlogicseq@wf))+1
  2537                           	line	358
  2538                           	
  2539  05C0                     l4030:	
  2540                           ;prev13.c: 358: ccount++;
  2541  05C0  3001               	movlw	low(01h)
  2542  05C1  07E7               	addwf	(getlogicseq@ccount),f
  2543  05C2  1803               	skipnc
  2544  05C3  0AE8               	incf	(getlogicseq@ccount+1),f
  2545  05C4  3000               	movlw	high(01h)
  2546  05C5  07E8               	addwf	(getlogicseq@ccount+1),f
  2547  05C6  2DCB               	goto	l4034
  2548                           	line	359
  2549                           	
  2550  05C7                     l1158:	
  2551                           	line	360
  2552                           ;prev13.c: 359: }
  2553                           ;prev13.c: 360: }
  2554  05C7  2DCB               	goto	l4034
  2555                           	line	361
  2556                           	
  2557  05C8                     l1155:	
  2558                           	line	362
  2559                           	
  2560  05C8                     l4032:	
  2561                           ;prev13.c: 361: else{
  2562                           ;prev13.c: 362: wf=0;
  2563  05C8  01E5               	clrf	(getlogicseq@wf)
  2564  05C9  01E6               	clrf	(getlogicseq@wf+1)
  2565  05CA  2DCB               	goto	l4034
  2566                           	line	363
  2567                           	
  2568  05CB                     l1160:	
  2569                           	line	364
  2570                           	
  2571  05CB                     l4034:	
  2572                           ;prev13.c: 363: }
  2573                           ;prev13.c: 364: if(ccount>=3)
  2574  05CB  0868               	movf	(getlogicseq@ccount+1),w
  2575  05CC  3A80               	xorlw	80h
  2576  05CD  00FF               	movwf	btemp+1
  2577  05CE  3080               	movlw	(high(03h))^80h
  2578  05CF  027F               	subwf	btemp+1,w
  2579  05D0  1D03               	skipz
  2580  05D1  2DD4               	goto	u4745
  2581  05D2  3003               	movlw	low(03h)
  2582  05D3  0267               	subwf	(getlogicseq@ccount),w
  2583  05D4                     u4745:
  2584                           
  2585  05D4  1C03               	skipc
  2586  05D5  2DD7               	goto	u4741
  2587  05D6  2DD8               	goto	u4740
  2588  05D7                     u4741:
  2589  05D7  2DDA               	goto	l4038
  2590  05D8                     u4740:
  2591  05D8  2DFC               	goto	l4048
  2592                           	line	365
  2593                           	
  2594  05D9                     l4036:	
  2595                           ;prev13.c: 365: break;
  2596  05D9  2DFC               	goto	l4048
  2597                           	
  2598  05DA                     l1161:	
  2599                           	line	368
  2600                           	
  2601  05DA                     l4038:	
  2602                           ;prev13.c: 368: if(num==2)
  2603  05DA  3002               	movlw	02h
  2604  05DB  1283               	bcf	status, 5	;RP0=0, select bank0
  2605  05DC  1303               	bcf	status, 6	;RP1=0, select bank0
  2606  05DD  0669               	xorwf	(getlogicseq@num),w
  2607  05DE  046A               	iorwf	(getlogicseq@num+1),w
  2608  05DF  1D03               	skipz
  2609  05E0  2DE2               	goto	u4751
  2610  05E1  2DE3               	goto	u4750
  2611  05E2                     u4751:
  2612  05E2  2DEF               	goto	l4044
  2613  05E3                     u4750:
  2614                           	line	370
  2615                           	
  2616  05E3                     l4040:	
  2617                           ;prev13.c: 369: {
  2618                           ;prev13.c: 370: if(nf==0){
  2619  05E3  0864               	movf	((getlogicseq@nf+1)),w
  2620  05E4  0463               	iorwf	((getlogicseq@nf)),w
  2621  05E5  1D03               	skipz
  2622  05E6  2DE8               	goto	u4761
  2623  05E7  2DE9               	goto	u4760
  2624  05E8                     u4761:
  2625  05E8  2D39               	goto	l4010
  2626  05E9                     u4760:
  2627                           	line	371
  2628                           	
  2629  05E9                     l4042:	
  2630                           ;prev13.c: 371: nf=1;
  2631  05E9  3001               	movlw	low(01h)
  2632  05EA  00E3               	movwf	(getlogicseq@nf)
  2633  05EB  3000               	movlw	high(01h)
  2634  05EC  00E4               	movwf	((getlogicseq@nf))+1
  2635                           	line	372
  2636                           ;prev13.c: 372: break;
  2637  05ED  2DFC               	goto	l4048
  2638                           	line	373
  2639                           	
  2640  05EE                     l1164:	
  2641                           	line	374
  2642                           ;prev13.c: 373: }
  2643                           ;prev13.c: 374: }
  2644  05EE  2D39               	goto	l4010
  2645                           	line	375
  2646                           	
  2647  05EF                     l1163:	
  2648                           	
  2649  05EF                     l4044:	
  2650                           ;prev13.c: 375: else if(num==99){
  2651  05EF  3063               	movlw	063h
  2652  05F0  0669               	xorwf	(getlogicseq@num),w
  2653  05F1  046A               	iorwf	(getlogicseq@num+1),w
  2654  05F2  1D03               	skipz
  2655  05F3  2DF5               	goto	u4771
  2656  05F4  2DF6               	goto	u4770
  2657  05F5                     u4771:
  2658  05F5  2D39               	goto	l4010
  2659  05F6                     u4770:
  2660                           	line	376
  2661                           	
  2662  05F6                     l4046:	
  2663                           ;prev13.c: 376: nf=0;
  2664  05F6  01E3               	clrf	(getlogicseq@nf)
  2665  05F7  01E4               	clrf	(getlogicseq@nf+1)
  2666  05F8  2D39               	goto	l4010
  2667                           	line	377
  2668                           	
  2669  05F9                     l1166:	
  2670  05F9  2D39               	goto	l4010
  2671                           	line	378
  2672                           	
  2673  05FA                     l1165:	
  2674  05FA  2D39               	goto	l4010
  2675                           	
  2676  05FB                     l1167:	
  2677                           	line	344
  2678  05FB  2D39               	goto	l4010
  2679                           	
  2680  05FC                     l1162:	
  2681                           	line	381
  2682                           	
  2683  05FC                     l4048:	
  2684                           ;prev13.c: 377: }
  2685                           ;prev13.c: 378: }
  2686                           ;prev13.c: 381: wf=0;ccount=0;
  2687  05FC  1283               	bcf	status, 5	;RP0=0, select bank0
  2688  05FD  1303               	bcf	status, 6	;RP1=0, select bank0
  2689  05FE  01E5               	clrf	(getlogicseq@wf)
  2690  05FF  01E6               	clrf	(getlogicseq@wf+1)
  2691  0600  01E7               	clrf	(getlogicseq@ccount)
  2692  0601  01E8               	clrf	(getlogicseq@ccount+1)
  2693                           	line	382
  2694                           	
  2695  0602                     l4050:	
  2696                           ;prev13.c: 382: strcpy(str,"Enter Logic DEV2:  ");
  2697  0602  3046               	movlw	low(STR_14|8000h)
  2698  0603  00F2               	movwf	(?_strcpy)
  2699  0604  3088               	movlw	high(STR_14|8000h)
  2700  0605  00F3               	movwf	((?_strcpy))+1
  2701  0606  3031               	movlw	(getlogicseq@str)&0ffh
  2702  0607  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  2703                           	line	383
  2704                           	
  2705  060C                     l4052:	
  2706                           ;prev13.c: 383: write(str,1,1);
  2707  060C  3031               	movlw	(getlogicseq@str&0ffh)
  2708  060D  1283               	bcf	status, 5	;RP0=0, select bank0
  2709  060E  1303               	bcf	status, 6	;RP1=0, select bank0
  2710  060F  00A0               	movwf	(?_write)
  2711  0610  3000               	movlw	(0x0/2)
  2712  0611  00A1               	movwf	(?_write+1)
  2713  0612  3001               	movlw	low(01h)
  2714  0613  00A2               	movwf	0+(?_write)+02h
  2715  0614  3000               	movlw	high(01h)
  2716  0615  00A3               	movwf	(0+(?_write)+02h)+1
  2717  0616  3001               	movlw	low(01h)
  2718  0617  00A4               	movwf	0+(?_write)+04h
  2719  0618  3000               	movlw	high(01h)
  2720  0619  00A5               	movwf	(0+(?_write)+04h)+1
  2721  061A  120A  158A  255C   	fcall	_write
              120A  118A         
  2722                           	line	384
  2723                           	
  2724  061F                     l4054:	
  2725                           ;prev13.c: 384: write(logic_d2,2,0);
  2726  061F  30AF               	movlw	(_logic_d2&0ffh)
  2727  0620  1283               	bcf	status, 5	;RP0=0, select bank0
  2728  0621  1303               	bcf	status, 6	;RP1=0, select bank0
  2729  0622  00A0               	movwf	(?_write)
  2730  0623  3000               	movlw	(0x1/2)
  2731  0624  00A1               	movwf	(?_write+1)
  2732  0625  3002               	movlw	low(02h)
  2733  0626  00A2               	movwf	0+(?_write)+02h
  2734  0627  3000               	movlw	high(02h)
  2735  0628  00A3               	movwf	(0+(?_write)+02h)+1
  2736  0629  3000               	movlw	low(0)
  2737  062A  00A4               	movwf	0+(?_write)+04h
  2738  062B  3000               	movlw	high(0)
  2739  062C  00A5               	movwf	(0+(?_write)+04h)+1
  2740  062D  120A  158A  255C   	fcall	_write
              120A  118A         
  2741  0632  2E33               	goto	l4056
  2742                           	line	386
  2743                           ;prev13.c: 386: while(1)
  2744                           	
  2745  0633                     l1168:	
  2746                           	line	388
  2747                           	
  2748  0633                     l4056:	
  2749                           ;prev13.c: 387: {
  2750                           ;prev13.c: 388: num=scan();
  2751  0633  120A  118A  20BF   	fcall	_scan
              120A  118A         
  2752  0638  0875               	movf	(1+(?_scan)),w
  2753  0639  1283               	bcf	status, 5	;RP0=0, select bank0
  2754  063A  1303               	bcf	status, 6	;RP1=0, select bank0
  2755  063B  01EA               	clrf	(getlogicseq@num+1)
  2756  063C  07EA               	addwf	(getlogicseq@num+1)
  2757  063D  0874               	movf	(0+(?_scan)),w
  2758  063E  01E9               	clrf	(getlogicseq@num)
  2759  063F  07E9               	addwf	(getlogicseq@num)
  2760                           
  2761                           	line	389
  2762                           	
  2763  0640                     l4058:	
  2764                           ;prev13.c: 389: buzz(num);
  2765  0640  086A               	movf	(getlogicseq@num+1),w
  2766  0641  01F1               	clrf	(?_buzz+1)
  2767  0642  07F1               	addwf	(?_buzz+1)
  2768  0643  0869               	movf	(getlogicseq@num),w
  2769  0644  01F0               	clrf	(?_buzz)
  2770  0645  07F0               	addwf	(?_buzz)
  2771                           
  2772  0646  120A  158A  22A7   	fcall	_buzz
              120A  118A         
  2773                           	line	390
  2774                           	
  2775  064B                     l4060:	
  2776                           ;prev13.c: 390: if(num==1||num==0){
  2777  064B  3001               	movlw	01h
  2778  064C  1283               	bcf	status, 5	;RP0=0, select bank0
  2779  064D  1303               	bcf	status, 6	;RP1=0, select bank0
  2780  064E  0669               	xorwf	(getlogicseq@num),w
  2781  064F  046A               	iorwf	(getlogicseq@num+1),w
  2782  0650  1903               	skipnz
  2783  0651  2E53               	goto	u4781
  2784  0652  2E54               	goto	u4780
  2785  0653                     u4781:
  2786  0653  2E5B               	goto	l4064
  2787  0654                     u4780:
  2788                           	
  2789  0654                     l4062:	
  2790  0654  086A               	movf	((getlogicseq@num+1)),w
  2791  0655  0469               	iorwf	((getlogicseq@num)),w
  2792  0656  1D03               	skipz
  2793  0657  2E59               	goto	u4791
  2794  0658  2E5A               	goto	u4790
  2795  0659                     u4791:
  2796  0659  2EC2               	goto	l4078
  2797  065A                     u4790:
  2798  065A  2E5B               	goto	l4064
  2799                           	
  2800  065B                     l1171:	
  2801                           	line	391
  2802                           	
  2803  065B                     l4064:	
  2804                           ;prev13.c: 391: if(wf==0)
  2805  065B  0866               	movf	((getlogicseq@wf+1)),w
  2806  065C  0465               	iorwf	((getlogicseq@wf)),w
  2807  065D  1D03               	skipz
  2808  065E  2E60               	goto	u4801
  2809  065F  2E61               	goto	u4800
  2810  0660                     u4801:
  2811  0660  2EC5               	goto	l4080
  2812  0661                     u4800:
  2813                           	line	392
  2814                           	
  2815  0661                     l4066:	
  2816                           ;prev13.c: 392: { if(ccount==0)
  2817  0661  0868               	movf	((getlogicseq@ccount+1)),w
  2818  0662  0467               	iorwf	((getlogicseq@ccount)),w
  2819  0663  1D03               	skipz
  2820  0664  2E66               	goto	u4811
  2821  0665  2E67               	goto	u4810
  2822  0666                     u4811:
  2823  0666  2E71               	goto	l1173
  2824  0667                     u4810:
  2825                           	line	393
  2826                           	
  2827  0667                     l4068:	
  2828                           ;prev13.c: 393: strcpy(logic_d2,"");
  2829  0667  3045               	movlw	low(STR_15|8000h)
  2830  0668  00F2               	movwf	(?_strcpy)
  2831  0669  3088               	movlw	high(STR_15|8000h)
  2832  066A  00F3               	movwf	((?_strcpy))+1
  2833  066B  30AF               	movlw	(_logic_d2)&0ffh
  2834  066C  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  2835                           	
  2836  0671                     l1173:	
  2837                           	line	394
  2838                           ;prev13.c: 394: write("---",2,0);
  2839  0671  302A               	movlw	low(STR_16|8000h)
  2840  0672  1283               	bcf	status, 5	;RP0=0, select bank0
  2841  0673  1303               	bcf	status, 6	;RP1=0, select bank0
  2842  0674  00A0               	movwf	(?_write)
  2843  0675  3089               	movlw	high(STR_16|8000h)
  2844  0676  00A1               	movwf	((?_write))+1
  2845  0677  3002               	movlw	low(02h)
  2846  0678  00A2               	movwf	0+(?_write)+02h
  2847  0679  3000               	movlw	high(02h)
  2848  067A  00A3               	movwf	(0+(?_write)+02h)+1
  2849  067B  3000               	movlw	low(0)
  2850  067C  00A4               	movwf	0+(?_write)+04h
  2851  067D  3000               	movlw	high(0)
  2852  067E  00A5               	movwf	(0+(?_write)+04h)+1
  2853  067F  120A  158A  255C   	fcall	_write
              120A  118A         
  2854                           	line	395
  2855                           ;prev13.c: 395: itoaa(num, snum);
  2856  0684  1283               	bcf	status, 5	;RP0=0, select bank0
  2857  0685  1303               	bcf	status, 6	;RP1=0, select bank0
  2858  0686  086A               	movf	(getlogicseq@num+1),w
  2859  0687  01FA               	clrf	(?_itoaa+1)
  2860  0688  07FA               	addwf	(?_itoaa+1)
  2861  0689  0869               	movf	(getlogicseq@num),w
  2862  068A  01F9               	clrf	(?_itoaa)
  2863  068B  07F9               	addwf	(?_itoaa)
  2864                           
  2865  068C  3053               	movlw	(getlogicseq@snum)&0ffh
  2866  068D  00AD               	movwf	(??_getlogicseq+0)+0
  2867  068E  082D               	movf	(??_getlogicseq+0)+0,w
  2868  068F  00FB               	movwf	0+(?_itoaa)+02h
  2869  0690  120A  118A  21A5   	fcall	_itoaa
              120A  118A         
  2870                           	line	396
  2871                           	
  2872  0695                     l4070:	
  2873                           ;prev13.c: 396: strcat(logic_d2,snum);
  2874  0695  3053               	movlw	(getlogicseq@snum)&0ffh
  2875  0696  1283               	bcf	status, 5	;RP0=0, select bank0
  2876  0697  1303               	bcf	status, 6	;RP1=0, select bank0
  2877  0698  00AD               	movwf	(??_getlogicseq+0)+0
  2878  0699  082D               	movf	(??_getlogicseq+0)+0,w
  2879  069A  00F0               	movwf	(?_strcat)
  2880  069B  30AF               	movlw	(_logic_d2)&0ffh
  2881  069C  120A  158A  23E7   	fcall	_strcat
              120A  118A         
  2882                           	line	397
  2883                           	
  2884  06A1                     l4072:	
  2885                           ;prev13.c: 397: write( logic_d2,2,0); ;
  2886  06A1  30AF               	movlw	(_logic_d2&0ffh)
  2887  06A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2888  06A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2889  06A4  00A0               	movwf	(?_write)
  2890  06A5  3000               	movlw	(0x1/2)
  2891  06A6  00A1               	movwf	(?_write+1)
  2892  06A7  3002               	movlw	low(02h)
  2893  06A8  00A2               	movwf	0+(?_write)+02h
  2894  06A9  3000               	movlw	high(02h)
  2895  06AA  00A3               	movwf	(0+(?_write)+02h)+1
  2896  06AB  3000               	movlw	low(0)
  2897  06AC  00A4               	movwf	0+(?_write)+04h
  2898  06AD  3000               	movlw	high(0)
  2899  06AE  00A5               	movwf	(0+(?_write)+04h)+1
  2900  06AF  120A  158A  255C   	fcall	_write
              120A  118A         
  2901                           	line	398
  2902                           	
  2903  06B4                     l4074:	
  2904                           ;prev13.c: 398: wf=1;
  2905  06B4  3001               	movlw	low(01h)
  2906  06B5  1283               	bcf	status, 5	;RP0=0, select bank0
  2907  06B6  1303               	bcf	status, 6	;RP1=0, select bank0
  2908  06B7  00E5               	movwf	(getlogicseq@wf)
  2909  06B8  3000               	movlw	high(01h)
  2910  06B9  00E6               	movwf	((getlogicseq@wf))+1
  2911                           	line	399
  2912                           	
  2913  06BA                     l4076:	
  2914                           ;prev13.c: 399: ccount++;
  2915  06BA  3001               	movlw	low(01h)
  2916  06BB  07E7               	addwf	(getlogicseq@ccount),f
  2917  06BC  1803               	skipnc
  2918  06BD  0AE8               	incf	(getlogicseq@ccount+1),f
  2919  06BE  3000               	movlw	high(01h)
  2920  06BF  07E8               	addwf	(getlogicseq@ccount+1),f
  2921  06C0  2EC5               	goto	l4080
  2922                           	line	400
  2923                           	
  2924  06C1                     l1172:	
  2925                           	line	401
  2926                           ;prev13.c: 400: }
  2927                           ;prev13.c: 401: }
  2928  06C1  2EC5               	goto	l4080
  2929                           	line	402
  2930                           	
  2931  06C2                     l1169:	
  2932                           	line	403
  2933                           	
  2934  06C2                     l4078:	
  2935                           ;prev13.c: 402: else{
  2936                           ;prev13.c: 403: wf=0;
  2937  06C2  01E5               	clrf	(getlogicseq@wf)
  2938  06C3  01E6               	clrf	(getlogicseq@wf+1)
  2939  06C4  2EC5               	goto	l4080
  2940                           	line	404
  2941                           	
  2942  06C5                     l1174:	
  2943                           	line	405
  2944                           	
  2945  06C5                     l4080:	
  2946                           ;prev13.c: 404: }
  2947                           ;prev13.c: 405: if(ccount>=3)
  2948  06C5  0868               	movf	(getlogicseq@ccount+1),w
  2949  06C6  3A80               	xorlw	80h
  2950  06C7  00FF               	movwf	btemp+1
  2951  06C8  3080               	movlw	(high(03h))^80h
  2952  06C9  027F               	subwf	btemp+1,w
  2953  06CA  1D03               	skipz
  2954  06CB  2ECE               	goto	u4825
  2955  06CC  3003               	movlw	low(03h)
  2956  06CD  0267               	subwf	(getlogicseq@ccount),w
  2957  06CE                     u4825:
  2958                           
  2959  06CE  1C03               	skipc
  2960  06CF  2ED1               	goto	u4821
  2961  06D0  2ED2               	goto	u4820
  2962  06D1                     u4821:
  2963  06D1  2ED4               	goto	l4084
  2964  06D2                     u4820:
  2965  06D2  2EF6               	goto	l4094
  2966                           	line	406
  2967                           	
  2968  06D3                     l4082:	
  2969                           ;prev13.c: 406: break;
  2970  06D3  2EF6               	goto	l4094
  2971                           	
  2972  06D4                     l1175:	
  2973                           	line	408
  2974                           	
  2975  06D4                     l4084:	
  2976                           ;prev13.c: 408: if(num==2)
  2977  06D4  3002               	movlw	02h
  2978  06D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2979  06D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2980  06D7  0669               	xorwf	(getlogicseq@num),w
  2981  06D8  046A               	iorwf	(getlogicseq@num+1),w
  2982  06D9  1D03               	skipz
  2983  06DA  2EDC               	goto	u4831
  2984  06DB  2EDD               	goto	u4830
  2985  06DC                     u4831:
  2986  06DC  2EE9               	goto	l4090
  2987  06DD                     u4830:
  2988                           	line	410
  2989                           	
  2990  06DD                     l4086:	
  2991                           ;prev13.c: 409: {
  2992                           ;prev13.c: 410: if(nf==0){
  2993  06DD  0864               	movf	((getlogicseq@nf+1)),w
  2994  06DE  0463               	iorwf	((getlogicseq@nf)),w
  2995  06DF  1D03               	skipz
  2996  06E0  2EE2               	goto	u4841
  2997  06E1  2EE3               	goto	u4840
  2998  06E2                     u4841:
  2999  06E2  2E33               	goto	l4056
  3000  06E3                     u4840:
  3001                           	line	411
  3002                           	
  3003  06E3                     l4088:	
  3004                           ;prev13.c: 411: nf=1;
  3005  06E3  3001               	movlw	low(01h)
  3006  06E4  00E3               	movwf	(getlogicseq@nf)
  3007  06E5  3000               	movlw	high(01h)
  3008  06E6  00E4               	movwf	((getlogicseq@nf))+1
  3009                           	line	412
  3010                           ;prev13.c: 412: break;
  3011  06E7  2EF6               	goto	l4094
  3012                           	line	413
  3013                           	
  3014  06E8                     l1178:	
  3015                           	line	414
  3016                           ;prev13.c: 413: }
  3017                           ;prev13.c: 414: }
  3018  06E8  2E33               	goto	l4056
  3019                           	line	415
  3020                           	
  3021  06E9                     l1177:	
  3022                           	
  3023  06E9                     l4090:	
  3024                           ;prev13.c: 415: else if(num==99){
  3025  06E9  3063               	movlw	063h
  3026  06EA  0669               	xorwf	(getlogicseq@num),w
  3027  06EB  046A               	iorwf	(getlogicseq@num+1),w
  3028  06EC  1D03               	skipz
  3029  06ED  2EEF               	goto	u4851
  3030  06EE  2EF0               	goto	u4850
  3031  06EF                     u4851:
  3032  06EF  2E33               	goto	l4056
  3033  06F0                     u4850:
  3034                           	line	416
  3035                           	
  3036  06F0                     l4092:	
  3037                           ;prev13.c: 416: nf=0;
  3038  06F0  01E3               	clrf	(getlogicseq@nf)
  3039  06F1  01E4               	clrf	(getlogicseq@nf+1)
  3040  06F2  2E33               	goto	l4056
  3041                           	line	417
  3042                           	
  3043  06F3                     l1180:	
  3044  06F3  2E33               	goto	l4056
  3045                           	line	418
  3046                           	
  3047  06F4                     l1179:	
  3048  06F4  2E33               	goto	l4056
  3049                           	
  3050  06F5                     l1181:	
  3051                           	line	386
  3052  06F5  2E33               	goto	l4056
  3053                           	
  3054  06F6                     l1176:	
  3055                           	line	421
  3056                           	
  3057  06F6                     l4094:	
  3058                           ;prev13.c: 417: }
  3059                           ;prev13.c: 418: }
  3060                           ;prev13.c: 421: wf=0;ccount=0;
  3061  06F6  1283               	bcf	status, 5	;RP0=0, select bank0
  3062  06F7  1303               	bcf	status, 6	;RP1=0, select bank0
  3063  06F8  01E5               	clrf	(getlogicseq@wf)
  3064  06F9  01E6               	clrf	(getlogicseq@wf+1)
  3065  06FA  01E7               	clrf	(getlogicseq@ccount)
  3066  06FB  01E8               	clrf	(getlogicseq@ccount+1)
  3067                           	line	422
  3068                           	
  3069  06FC                     l4096:	
  3070                           ;prev13.c: 422: strcpy(str,"Enter Logic DEV3:  ");
  3071  06FC  305A               	movlw	low(STR_17|8000h)
  3072  06FD  00F2               	movwf	(?_strcpy)
  3073  06FE  3088               	movlw	high(STR_17|8000h)
  3074  06FF  00F3               	movwf	((?_strcpy))+1
  3075  0700  3031               	movlw	(getlogicseq@str)&0ffh
  3076  0701  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  3077                           	line	423
  3078                           	
  3079  0706                     l4098:	
  3080                           ;prev13.c: 423: write(str,1,1);
  3081  0706  3031               	movlw	(getlogicseq@str&0ffh)
  3082  0707  1283               	bcf	status, 5	;RP0=0, select bank0
  3083  0708  1303               	bcf	status, 6	;RP1=0, select bank0
  3084  0709  00A0               	movwf	(?_write)
  3085  070A  3000               	movlw	(0x0/2)
  3086  070B  00A1               	movwf	(?_write+1)
  3087  070C  3001               	movlw	low(01h)
  3088  070D  00A2               	movwf	0+(?_write)+02h
  3089  070E  3000               	movlw	high(01h)
  3090  070F  00A3               	movwf	(0+(?_write)+02h)+1
  3091  0710  3001               	movlw	low(01h)
  3092  0711  00A4               	movwf	0+(?_write)+04h
  3093  0712  3000               	movlw	high(01h)
  3094  0713  00A5               	movwf	(0+(?_write)+04h)+1
  3095  0714  120A  158A  255C   	fcall	_write
              120A  118A         
  3096                           	line	424
  3097                           	
  3098  0719                     l4100:	
  3099                           ;prev13.c: 424: write(logic_d3,2,0);
  3100  0719  30B4               	movlw	(_logic_d3&0ffh)
  3101  071A  1283               	bcf	status, 5	;RP0=0, select bank0
  3102  071B  1303               	bcf	status, 6	;RP1=0, select bank0
  3103  071C  00A0               	movwf	(?_write)
  3104  071D  3000               	movlw	(0x1/2)
  3105  071E  00A1               	movwf	(?_write+1)
  3106  071F  3002               	movlw	low(02h)
  3107  0720  00A2               	movwf	0+(?_write)+02h
  3108  0721  3000               	movlw	high(02h)
  3109  0722  00A3               	movwf	(0+(?_write)+02h)+1
  3110  0723  3000               	movlw	low(0)
  3111  0724  00A4               	movwf	0+(?_write)+04h
  3112  0725  3000               	movlw	high(0)
  3113  0726  00A5               	movwf	(0+(?_write)+04h)+1
  3114  0727  120A  158A  255C   	fcall	_write
              120A  118A         
  3115  072C  2F2D               	goto	l4102
  3116                           	line	426
  3117                           ;prev13.c: 426: while(1)
  3118                           	
  3119  072D                     l1182:	
  3120                           	line	428
  3121                           	
  3122  072D                     l4102:	
  3123                           ;prev13.c: 427: {
  3124                           ;prev13.c: 428: num=scan();
  3125  072D  120A  118A  20BF   	fcall	_scan
              120A  118A         
  3126  0732  0875               	movf	(1+(?_scan)),w
  3127  0733  1283               	bcf	status, 5	;RP0=0, select bank0
  3128  0734  1303               	bcf	status, 6	;RP1=0, select bank0
  3129  0735  01EA               	clrf	(getlogicseq@num+1)
  3130  0736  07EA               	addwf	(getlogicseq@num+1)
  3131  0737  0874               	movf	(0+(?_scan)),w
  3132  0738  01E9               	clrf	(getlogicseq@num)
  3133  0739  07E9               	addwf	(getlogicseq@num)
  3134                           
  3135                           	line	429
  3136                           	
  3137  073A                     l4104:	
  3138                           ;prev13.c: 429: buzz(num);
  3139  073A  086A               	movf	(getlogicseq@num+1),w
  3140  073B  01F1               	clrf	(?_buzz+1)
  3141  073C  07F1               	addwf	(?_buzz+1)
  3142  073D  0869               	movf	(getlogicseq@num),w
  3143  073E  01F0               	clrf	(?_buzz)
  3144  073F  07F0               	addwf	(?_buzz)
  3145                           
  3146  0740  120A  158A  22A7   	fcall	_buzz
              120A  118A         
  3147                           	line	430
  3148                           	
  3149  0745                     l4106:	
  3150                           ;prev13.c: 430: if(num==1||num==0){
  3151  0745  3001               	movlw	01h
  3152  0746  1283               	bcf	status, 5	;RP0=0, select bank0
  3153  0747  1303               	bcf	status, 6	;RP1=0, select bank0
  3154  0748  0669               	xorwf	(getlogicseq@num),w
  3155  0749  046A               	iorwf	(getlogicseq@num+1),w
  3156  074A  1903               	skipnz
  3157  074B  2F4D               	goto	u4861
  3158  074C  2F4E               	goto	u4860
  3159  074D                     u4861:
  3160  074D  2F55               	goto	l4110
  3161  074E                     u4860:
  3162                           	
  3163  074E                     l4108:	
  3164  074E  086A               	movf	((getlogicseq@num+1)),w
  3165  074F  0469               	iorwf	((getlogicseq@num)),w
  3166  0750  1D03               	skipz
  3167  0751  2F53               	goto	u4871
  3168  0752  2F54               	goto	u4870
  3169  0753                     u4871:
  3170  0753  2FBC               	goto	l4124
  3171  0754                     u4870:
  3172  0754  2F55               	goto	l4110
  3173                           	
  3174  0755                     l1185:	
  3175                           	line	431
  3176                           	
  3177  0755                     l4110:	
  3178                           ;prev13.c: 431: if(wf==0)
  3179  0755  0866               	movf	((getlogicseq@wf+1)),w
  3180  0756  0465               	iorwf	((getlogicseq@wf)),w
  3181  0757  1D03               	skipz
  3182  0758  2F5A               	goto	u4881
  3183  0759  2F5B               	goto	u4880
  3184  075A                     u4881:
  3185  075A  2FBF               	goto	l4126
  3186  075B                     u4880:
  3187                           	line	432
  3188                           	
  3189  075B                     l4112:	
  3190                           ;prev13.c: 432: { if(ccount==0)
  3191  075B  0868               	movf	((getlogicseq@ccount+1)),w
  3192  075C  0467               	iorwf	((getlogicseq@ccount)),w
  3193  075D  1D03               	skipz
  3194  075E  2F60               	goto	u4891
  3195  075F  2F61               	goto	u4890
  3196  0760                     u4891:
  3197  0760  2F6B               	goto	l1187
  3198  0761                     u4890:
  3199                           	line	433
  3200                           	
  3201  0761                     l4114:	
  3202                           ;prev13.c: 433: strcpy(logic_d3,"");
  3203  0761  3045               	movlw	low(STR_18|8000h)
  3204  0762  00F2               	movwf	(?_strcpy)
  3205  0763  3088               	movlw	high(STR_18|8000h)
  3206  0764  00F3               	movwf	((?_strcpy))+1
  3207  0765  30B4               	movlw	(_logic_d3)&0ffh
  3208  0766  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  3209                           	
  3210  076B                     l1187:	
  3211                           	line	434
  3212                           ;prev13.c: 434: write("---",2,0);
  3213  076B  302A               	movlw	low(STR_19|8000h)
  3214  076C  1283               	bcf	status, 5	;RP0=0, select bank0
  3215  076D  1303               	bcf	status, 6	;RP1=0, select bank0
  3216  076E  00A0               	movwf	(?_write)
  3217  076F  3089               	movlw	high(STR_19|8000h)
  3218  0770  00A1               	movwf	((?_write))+1
  3219  0771  3002               	movlw	low(02h)
  3220  0772  00A2               	movwf	0+(?_write)+02h
  3221  0773  3000               	movlw	high(02h)
  3222  0774  00A3               	movwf	(0+(?_write)+02h)+1
  3223  0775  3000               	movlw	low(0)
  3224  0776  00A4               	movwf	0+(?_write)+04h
  3225  0777  3000               	movlw	high(0)
  3226  0778  00A5               	movwf	(0+(?_write)+04h)+1
  3227  0779  120A  158A  255C   	fcall	_write
              120A  118A         
  3228                           	line	435
  3229                           ;prev13.c: 435: itoaa(num, snum);
  3230  077E  1283               	bcf	status, 5	;RP0=0, select bank0
  3231  077F  1303               	bcf	status, 6	;RP1=0, select bank0
  3232  0780  086A               	movf	(getlogicseq@num+1),w
  3233  0781  01FA               	clrf	(?_itoaa+1)
  3234  0782  07FA               	addwf	(?_itoaa+1)
  3235  0783  0869               	movf	(getlogicseq@num),w
  3236  0784  01F9               	clrf	(?_itoaa)
  3237  0785  07F9               	addwf	(?_itoaa)
  3238                           
  3239  0786  3053               	movlw	(getlogicseq@snum)&0ffh
  3240  0787  00AD               	movwf	(??_getlogicseq+0)+0
  3241  0788  082D               	movf	(??_getlogicseq+0)+0,w
  3242  0789  00FB               	movwf	0+(?_itoaa)+02h
  3243  078A  120A  118A  21A5   	fcall	_itoaa
              120A  118A         
  3244                           	line	436
  3245                           	
  3246  078F                     l4116:	
  3247                           ;prev13.c: 436: strcat(logic_d3,snum);
  3248  078F  3053               	movlw	(getlogicseq@snum)&0ffh
  3249  0790  1283               	bcf	status, 5	;RP0=0, select bank0
  3250  0791  1303               	bcf	status, 6	;RP1=0, select bank0
  3251  0792  00AD               	movwf	(??_getlogicseq+0)+0
  3252  0793  082D               	movf	(??_getlogicseq+0)+0,w
  3253  0794  00F0               	movwf	(?_strcat)
  3254  0795  30B4               	movlw	(_logic_d3)&0ffh
  3255  0796  120A  158A  23E7   	fcall	_strcat
              120A  118A         
  3256                           	line	437
  3257                           	
  3258  079B                     l4118:	
  3259                           ;prev13.c: 437: write( logic_d3,2,0); ;
  3260  079B  30B4               	movlw	(_logic_d3&0ffh)
  3261  079C  1283               	bcf	status, 5	;RP0=0, select bank0
  3262  079D  1303               	bcf	status, 6	;RP1=0, select bank0
  3263  079E  00A0               	movwf	(?_write)
  3264  079F  3000               	movlw	(0x1/2)
  3265  07A0  00A1               	movwf	(?_write+1)
  3266  07A1  3002               	movlw	low(02h)
  3267  07A2  00A2               	movwf	0+(?_write)+02h
  3268  07A3  3000               	movlw	high(02h)
  3269  07A4  00A3               	movwf	(0+(?_write)+02h)+1
  3270  07A5  3000               	movlw	low(0)
  3271  07A6  00A4               	movwf	0+(?_write)+04h
  3272  07A7  3000               	movlw	high(0)
  3273  07A8  00A5               	movwf	(0+(?_write)+04h)+1
  3274  07A9  120A  158A  255C   	fcall	_write
              120A  118A         
  3275                           	line	438
  3276                           	
  3277  07AE                     l4120:	
  3278                           ;prev13.c: 438: wf=1;
  3279  07AE  3001               	movlw	low(01h)
  3280  07AF  1283               	bcf	status, 5	;RP0=0, select bank0
  3281  07B0  1303               	bcf	status, 6	;RP1=0, select bank0
  3282  07B1  00E5               	movwf	(getlogicseq@wf)
  3283  07B2  3000               	movlw	high(01h)
  3284  07B3  00E6               	movwf	((getlogicseq@wf))+1
  3285                           	line	439
  3286                           	
  3287  07B4                     l4122:	
  3288                           ;prev13.c: 439: ccount++;
  3289  07B4  3001               	movlw	low(01h)
  3290  07B5  07E7               	addwf	(getlogicseq@ccount),f
  3291  07B6  1803               	skipnc
  3292  07B7  0AE8               	incf	(getlogicseq@ccount+1),f
  3293  07B8  3000               	movlw	high(01h)
  3294  07B9  07E8               	addwf	(getlogicseq@ccount+1),f
  3295  07BA  2FBF               	goto	l4126
  3296                           	line	440
  3297                           	
  3298  07BB                     l1186:	
  3299                           	line	441
  3300                           ;prev13.c: 440: }
  3301                           ;prev13.c: 441: }
  3302  07BB  2FBF               	goto	l4126
  3303                           	line	442
  3304                           	
  3305  07BC                     l1183:	
  3306                           	line	443
  3307                           	
  3308  07BC                     l4124:	
  3309                           ;prev13.c: 442: else{
  3310                           ;prev13.c: 443: wf=0;
  3311  07BC  01E5               	clrf	(getlogicseq@wf)
  3312  07BD  01E6               	clrf	(getlogicseq@wf+1)
  3313  07BE  2FBF               	goto	l4126
  3314                           	line	444
  3315                           	
  3316  07BF                     l1188:	
  3317                           	line	445
  3318                           	
  3319  07BF                     l4126:	
  3320                           ;prev13.c: 444: }
  3321                           ;prev13.c: 445: if(ccount>=3)
  3322  07BF  0868               	movf	(getlogicseq@ccount+1),w
  3323  07C0  3A80               	xorlw	80h
  3324  07C1  00FF               	movwf	btemp+1
  3325  07C2  3080               	movlw	(high(03h))^80h
  3326  07C3  027F               	subwf	btemp+1,w
  3327  07C4  1D03               	skipz
  3328  07C5  2FC8               	goto	u4905
  3329  07C6  3003               	movlw	low(03h)
  3330  07C7  0267               	subwf	(getlogicseq@ccount),w
  3331  07C8                     u4905:
  3332                           
  3333  07C8  1C03               	skipc
  3334  07C9  2FCB               	goto	u4901
  3335  07CA  2FCC               	goto	u4900
  3336  07CB                     u4901:
  3337  07CB  2FCE               	goto	l4130
  3338  07CC                     u4900:
  3339  07CC  2FF0               	goto	l4140
  3340                           	line	446
  3341                           	
  3342  07CD                     l4128:	
  3343                           ;prev13.c: 446: break;
  3344  07CD  2FF0               	goto	l4140
  3345                           	
  3346  07CE                     l1189:	
  3347                           	line	448
  3348                           	
  3349  07CE                     l4130:	
  3350                           ;prev13.c: 448: if(num==2)
  3351  07CE  3002               	movlw	02h
  3352  07CF  1283               	bcf	status, 5	;RP0=0, select bank0
  3353  07D0  1303               	bcf	status, 6	;RP1=0, select bank0
  3354  07D1  0669               	xorwf	(getlogicseq@num),w
  3355  07D2  046A               	iorwf	(getlogicseq@num+1),w
  3356  07D3  1D03               	skipz
  3357  07D4  2FD6               	goto	u4911
  3358  07D5  2FD7               	goto	u4910
  3359  07D6                     u4911:
  3360  07D6  2FE3               	goto	l4136
  3361  07D7                     u4910:
  3362                           	line	450
  3363                           	
  3364  07D7                     l4132:	
  3365                           ;prev13.c: 449: {
  3366                           ;prev13.c: 450: if(nf==0){
  3367  07D7  0864               	movf	((getlogicseq@nf+1)),w
  3368  07D8  0463               	iorwf	((getlogicseq@nf)),w
  3369  07D9  1D03               	skipz
  3370  07DA  2FDC               	goto	u4921
  3371  07DB  2FDD               	goto	u4920
  3372  07DC                     u4921:
  3373  07DC  2F2D               	goto	l4102
  3374  07DD                     u4920:
  3375                           	line	451
  3376                           	
  3377  07DD                     l4134:	
  3378                           ;prev13.c: 451: nf=1;
  3379  07DD  3001               	movlw	low(01h)
  3380  07DE  00E3               	movwf	(getlogicseq@nf)
  3381  07DF  3000               	movlw	high(01h)
  3382  07E0  00E4               	movwf	((getlogicseq@nf))+1
  3383                           	line	452
  3384                           ;prev13.c: 452: break;
  3385  07E1  2FF0               	goto	l4140
  3386                           	line	453
  3387                           	
  3388  07E2                     l1192:	
  3389                           	line	454
  3390                           ;prev13.c: 453: }
  3391                           ;prev13.c: 454: }
  3392  07E2  2F2D               	goto	l4102
  3393                           	line	455
  3394                           	
  3395  07E3                     l1191:	
  3396                           	
  3397  07E3                     l4136:	
  3398                           ;prev13.c: 455: else if(num==99){
  3399  07E3  3063               	movlw	063h
  3400  07E4  0669               	xorwf	(getlogicseq@num),w
  3401  07E5  046A               	iorwf	(getlogicseq@num+1),w
  3402  07E6  1D03               	skipz
  3403  07E7  2FE9               	goto	u4931
  3404  07E8  2FEA               	goto	u4930
  3405  07E9                     u4931:
  3406  07E9  2F2D               	goto	l4102
  3407  07EA                     u4930:
  3408                           	line	456
  3409                           	
  3410  07EA                     l4138:	
  3411                           ;prev13.c: 456: nf=0;
  3412  07EA  01E3               	clrf	(getlogicseq@nf)
  3413  07EB  01E4               	clrf	(getlogicseq@nf+1)
  3414  07EC  2F2D               	goto	l4102
  3415                           	line	457
  3416                           	
  3417  07ED                     l1194:	
  3418  07ED  2F2D               	goto	l4102
  3419                           	line	458
  3420                           	
  3421  07EE                     l1193:	
  3422  07EE  2F2D               	goto	l4102
  3423                           	
  3424  07EF                     l1195:	
  3425                           	line	426
  3426  07EF  2F2D               	goto	l4102
  3427                           	
  3428  07F0                     l1190:	
  3429                           	line	460
  3430                           	
  3431  07F0                     l4140:	
  3432                           ;prev13.c: 457: }
  3433                           ;prev13.c: 458: }
  3434                           ;prev13.c: 460: setlogic();
  3435  07F0  120A  158A  2467   	fcall	_setlogic
              120A  118A         
  3436                           	line	502
  3437                           	
  3438  07F5                     l4142:	
  3439                           ;prev13.c: 502: f1=0;
  3440  07F5  1683               	bsf	status, 5	;RP0=1, select bank1
  3441  07F6  1303               	bcf	status, 6	;RP1=0, select bank1
  3442  07F7  01D5               	clrf	(_f1)^080h
  3443  07F8  01D6               	clrf	(_f1+1)^080h
  3444                           	line	503
  3445                           	
  3446  07F9                     l4144:	
  3447                           ;prev13.c: 503: f2=0;
  3448  07F9  01D7               	clrf	(_f2)^080h
  3449  07FA  01D8               	clrf	(_f2+1)^080h
  3450                           	line	504
  3451                           	
  3452  07FB                     l4146:	
  3453                           ;prev13.c: 504: f3=1;
  3454  07FB  3001               	movlw	low(01h)
  3455  07FC  00D9               	movwf	(_f3)^080h
  3456  07FD  3000               	movlw	high(01h)
  3457  07FE  00DA               	movwf	((_f3)^080h)+1
  3458                           	line	506
  3459                           	
  3460  07FF                     l1196:	
  3461  07FF  0008               	return
  3462                           	opt stack 0
  3463                           GLOBAL	__end_of_getlogicseq
  3464  0800                     	__end_of_getlogicseq:
  3465 ;; =============== function _getlogicseq ends ============
  3466                           
  3467                           	signat	_getlogicseq,88
  3468                           	global	_startswitch
  3469                           psect	text748,local,class=CODE,delta=2
  3470                           global __ptext748
  3471  037E                     __ptext748:
  3472                           
  3473 ;; *************** function _startswitch *****************
  3474 ;; Defined at:
  3475 ;;		line 263 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;		None               void
  3482 ;; Registers used:
  3483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3489 ;;      Params:         0       0       0       0       0
  3490 ;;      Locals:         0       0       0       0       0
  3491 ;;      Temps:          2       0       0       0       0
  3492 ;;      Totals:         2       0       0       0       0
  3493 ;;Total ram usage:        2 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    7
  3496 ;; This function calls:
  3497 ;;		_init_fun
  3498 ;;		_strcpy
  3499 ;;		_write
  3500 ;;		_buzz
  3501 ;;		_strcmp
  3502 ;;		_delay
  3503 ;;		_check
  3504 ;; This function is called by:
  3505 ;;		_start
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           psect	text748
  3509                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  3510                           	line	263
  3511                           	global	__size_of_startswitch
  3512  0143                     	__size_of_startswitch	equ	__end_of_startswitch-_startswitch
  3513                           	
  3514  037E                     _startswitch:	
  3515 ;; hardware stack exceeded
  3516                           	opt	stack 0
  3517                           ; Regs used in _startswitch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3518                           	line	264
  3519                           	
  3520  037E                     l3930:	
  3521                           ;prev13.c: 264: init_fun();
  3522  037E  120A  158A  2396   	fcall	_init_fun
              120A  118A         
  3523                           	line	267
  3524                           ;prev13.c: 267: strcpy(plo,lo);
  3525  0383  30A5               	movlw	(_lo&0ffh)
  3526  0384  00F2               	movwf	(?_strcpy)
  3527  0385  3000               	movlw	(0x1/2)
  3528  0386  00F3               	movwf	(?_strcpy+1)
  3529  0387  30BE               	movlw	(_plo)&0ffh
  3530  0388  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  3531                           	line	268
  3532                           ;prev13.c: 268: strcpy(lo,"000");;
  3533  038D  30DB               	movlw	low(STR_8|8000h)
  3534  038E  00F2               	movwf	(?_strcpy)
  3535  038F  3088               	movlw	high(STR_8|8000h)
  3536  0390  00F3               	movwf	((?_strcpy))+1
  3537  0391  30A5               	movlw	(_lo)&0ffh
  3538  0392  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  3539                           	line	269
  3540                           	
  3541  0397                     l3932:	
  3542                           ;prev13.c: 269: if(RA0==1)
  3543  0397  1283               	bcf	status, 5	;RP0=0, select bank0
  3544  0398  1303               	bcf	status, 6	;RP1=0, select bank0
  3545  0399  1C05               	btfss	(40/8),(40)&7
  3546  039A  2B9C               	goto	u4541
  3547  039B  2B9D               	goto	u4540
  3548  039C                     u4541:
  3549  039C  2BA4               	goto	l3936
  3550  039D                     u4540:
  3551                           	line	270
  3552                           	
  3553  039D                     l3934:	
  3554                           ;prev13.c: 270: lo[0]='1';
  3555  039D  3031               	movlw	(031h)
  3556  039E  00FB               	movwf	(??_startswitch+0)+0
  3557  039F  087B               	movf	(??_startswitch+0)+0,w
  3558  03A0  1683               	bsf	status, 5	;RP0=1, select bank1
  3559  03A1  1303               	bcf	status, 6	;RP1=0, select bank1
  3560  03A2  00A5               	movwf	(_lo)^080h
  3561  03A3  2BA4               	goto	l3936
  3562                           	
  3563  03A4                     l1138:	
  3564                           	line	271
  3565                           	
  3566  03A4                     l3936:	
  3567                           ;prev13.c: 271: if(RA1==1)
  3568  03A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3569  03A5  1C85               	btfss	(41/8),(41)&7
  3570  03A6  2BA8               	goto	u4551
  3571  03A7  2BA9               	goto	u4550
  3572  03A8                     u4551:
  3573  03A8  2BB0               	goto	l3940
  3574  03A9                     u4550:
  3575                           	line	272
  3576                           	
  3577  03A9                     l3938:	
  3578                           ;prev13.c: 272: lo[1]='1';
  3579  03A9  3031               	movlw	(031h)
  3580  03AA  00FB               	movwf	(??_startswitch+0)+0
  3581  03AB  087B               	movf	(??_startswitch+0)+0,w
  3582  03AC  1683               	bsf	status, 5	;RP0=1, select bank1
  3583  03AD  1303               	bcf	status, 6	;RP1=0, select bank1
  3584  03AE  00A6               	movwf	0+(_lo)^080h+01h
  3585  03AF  2BB0               	goto	l3940
  3586                           	
  3587  03B0                     l1139:	
  3588                           	line	273
  3589                           	
  3590  03B0                     l3940:	
  3591                           ;prev13.c: 273: if(RA2==1)
  3592  03B0  1283               	bcf	status, 5	;RP0=0, select bank0
  3593  03B1  1D05               	btfss	(42/8),(42)&7
  3594  03B2  2BB4               	goto	u4561
  3595  03B3  2BB5               	goto	u4560
  3596  03B4                     u4561:
  3597  03B4  2BBC               	goto	l3944
  3598  03B5                     u4560:
  3599                           	line	274
  3600                           	
  3601  03B5                     l3942:	
  3602                           ;prev13.c: 274: lo[2]='1';
  3603  03B5  3031               	movlw	(031h)
  3604  03B6  00FB               	movwf	(??_startswitch+0)+0
  3605  03B7  087B               	movf	(??_startswitch+0)+0,w
  3606  03B8  1683               	bsf	status, 5	;RP0=1, select bank1
  3607  03B9  1303               	bcf	status, 6	;RP1=0, select bank1
  3608  03BA  00A7               	movwf	0+(_lo)^080h+02h
  3609  03BB  2BBC               	goto	l3944
  3610                           	
  3611  03BC                     l1140:	
  3612                           	line	277
  3613                           	
  3614  03BC                     l3944:	
  3615                           ;prev13.c: 277: pdev=dev;
  3616  03BC  1283               	bcf	status, 5	;RP0=0, select bank0
  3617  03BD  086C               	movf	(_dev+1),w
  3618  03BE  1683               	bsf	status, 5	;RP0=1, select bank1
  3619  03BF  1303               	bcf	status, 6	;RP1=0, select bank1
  3620  03C0  01DC               	clrf	(_pdev+1)^080h
  3621  03C1  07DC               	addwf	(_pdev+1)^080h
  3622  03C2  1283               	bcf	status, 5	;RP0=0, select bank0
  3623  03C3  1303               	bcf	status, 6	;RP1=0, select bank0
  3624  03C4  086B               	movf	(_dev),w
  3625  03C5  1683               	bsf	status, 5	;RP0=1, select bank1
  3626  03C6  1303               	bcf	status, 6	;RP1=0, select bank1
  3627  03C7  01DB               	clrf	(_pdev)^080h
  3628  03C8  07DB               	addwf	(_pdev)^080h
  3629                           
  3630                           	line	278
  3631                           	
  3632  03C9                     l3946:	
  3633                           ;prev13.c: 278: dev=0b0000;
  3634  03C9  1283               	bcf	status, 5	;RP0=0, select bank0
  3635  03CA  1303               	bcf	status, 6	;RP1=0, select bank0
  3636  03CB  01EB               	clrf	(_dev)
  3637  03CC  01EC               	clrf	(_dev+1)
  3638                           	line	279
  3639                           	
  3640  03CD                     l3948:	
  3641                           ;prev13.c: 279: write("Press 2 to REPRG",2,0);
  3642  03CD  307F               	movlw	low(STR_9|8000h)
  3643  03CE  00A0               	movwf	(?_write)
  3644  03CF  3088               	movlw	high(STR_9|8000h)
  3645  03D0  00A1               	movwf	((?_write))+1
  3646  03D1  3002               	movlw	low(02h)
  3647  03D2  00A2               	movwf	0+(?_write)+02h
  3648  03D3  3000               	movlw	high(02h)
  3649  03D4  00A3               	movwf	(0+(?_write)+02h)+1
  3650  03D5  3000               	movlw	low(0)
  3651  03D6  00A4               	movwf	0+(?_write)+04h
  3652  03D7  3000               	movlw	high(0)
  3653  03D8  00A5               	movwf	(0+(?_write)+04h)+1
  3654  03D9  120A  158A  255C   	fcall	_write
              120A  118A         
  3655                           	line	280
  3656                           	
  3657  03DE                     l3950:	
  3658                           ;prev13.c: 280: buzz(99);
  3659  03DE  3063               	movlw	low(063h)
  3660  03DF  00F0               	movwf	(?_buzz)
  3661  03E0  3000               	movlw	high(063h)
  3662  03E1  00F1               	movwf	((?_buzz))+1
  3663  03E2  120A  158A  22A7   	fcall	_buzz
              120A  118A         
  3664                           	line	282
  3665                           	
  3666  03E7                     l3952:	
  3667                           ;prev13.c: 282: if(strcmp(lo,plo)!=0)
  3668  03E7  30BE               	movlw	(_plo&0ffh)
  3669  03E8  00F0               	movwf	(?_strcmp)
  3670  03E9  3000               	movlw	(0x1/2)
  3671  03EA  00F1               	movwf	(?_strcmp+1)
  3672  03EB  30A5               	movlw	(_lo)&0ffh
  3673  03EC  120A  158A  249C   	fcall	_strcmp
              120A  118A         
  3674  03F1  0871               	movf	(1+(?_strcmp)),w
  3675  03F2  0470               	iorwf	(0+(?_strcmp)),w
  3676  03F3  1903               	skipnz
  3677  03F4  2BF6               	goto	u4571
  3678  03F5  2BF7               	goto	u4570
  3679  03F6                     u4571:
  3680  03F6  2CC0               	goto	l1148
  3681  03F7                     u4570:
  3682                           	line	285
  3683                           	
  3684  03F7                     l3954:	
  3685                           ;prev13.c: 283: {
  3686                           ;prev13.c: 285: write(lo,1,1);
  3687  03F7  30A5               	movlw	(_lo&0ffh)
  3688  03F8  1283               	bcf	status, 5	;RP0=0, select bank0
  3689  03F9  1303               	bcf	status, 6	;RP1=0, select bank0
  3690  03FA  00A0               	movwf	(?_write)
  3691  03FB  3000               	movlw	(0x1/2)
  3692  03FC  00A1               	movwf	(?_write+1)
  3693  03FD  3001               	movlw	low(01h)
  3694  03FE  00A2               	movwf	0+(?_write)+02h
  3695  03FF  3000               	movlw	high(01h)
  3696  0400  00A3               	movwf	(0+(?_write)+02h)+1
  3697  0401  3001               	movlw	low(01h)
  3698  0402  00A4               	movwf	0+(?_write)+04h
  3699  0403  3000               	movlw	high(01h)
  3700  0404  00A5               	movwf	(0+(?_write)+04h)+1
  3701  0405  120A  158A  255C   	fcall	_write
              120A  118A         
  3702                           	line	286
  3703                           	
  3704  040A                     l3956:	
  3705                           ;prev13.c: 286: buzz(7);
  3706  040A  3007               	movlw	low(07h)
  3707  040B  00F0               	movwf	(?_buzz)
  3708  040C  3000               	movlw	high(07h)
  3709  040D  00F1               	movwf	((?_buzz))+1
  3710  040E  120A  158A  22A7   	fcall	_buzz
              120A  118A         
  3711                           	line	287
  3712                           	
  3713  0413                     l3958:	
  3714                           ;prev13.c: 287: delay(3000);
  3715  0413  30B8               	movlw	low(0BB8h)
  3716  0414  00F0               	movwf	(?_delay)
  3717  0415  300B               	movlw	high(0BB8h)
  3718  0416  00F1               	movwf	((?_delay))+1
  3719  0417  120A  158A  22C8   	fcall	_delay
              120A  118A         
  3720                           	line	290
  3721                           ;prev13.c: 290: if(check(lo,logic_d1))
  3722  041C  30AA               	movlw	(_logic_d1)&0ffh
  3723  041D  00FB               	movwf	(??_startswitch+0)+0
  3724  041E  087B               	movf	(??_startswitch+0)+0,w
  3725  041F  00F0               	movwf	(?_check)
  3726  0420  30A5               	movlw	(_lo)&0ffh
  3727  0421  120A  158A  2513   	fcall	_check
              120A  118A         
  3728  0426  0871               	movf	(1+(?_check)),w
  3729  0427  0470               	iorwf	(0+(?_check)),w
  3730  0428  1903               	skipnz
  3731  0429  2C2B               	goto	u4581
  3732  042A  2C2C               	goto	u4580
  3733  042B                     u4581:
  3734  042B  2C35               	goto	l3962
  3735  042C                     u4580:
  3736                           	line	291
  3737                           	
  3738  042C                     l3960:	
  3739                           ;prev13.c: 291: dev=dev|0b0001;
  3740  042C  3001               	movlw	low(01h)
  3741  042D  1283               	bcf	status, 5	;RP0=0, select bank0
  3742  042E  1303               	bcf	status, 6	;RP1=0, select bank0
  3743  042F  046B               	iorwf	(_dev),w
  3744  0430  00EB               	movwf	(_dev)
  3745  0431  3000               	movlw	high(01h)
  3746  0432  046C               	iorwf	(_dev+1),w
  3747  0433  00EC               	movwf	1+(_dev)
  3748  0434  2C3E               	goto	l3964
  3749                           	line	292
  3750                           	
  3751  0435                     l1142:	
  3752                           	line	293
  3753                           	
  3754  0435                     l3962:	
  3755                           ;prev13.c: 292: else
  3756                           ;prev13.c: 293: dev=dev&0b0110;
  3757  0435  3006               	movlw	low(06h)
  3758  0436  1283               	bcf	status, 5	;RP0=0, select bank0
  3759  0437  1303               	bcf	status, 6	;RP1=0, select bank0
  3760  0438  056B               	andwf	(_dev),w
  3761  0439  00EB               	movwf	(_dev)
  3762  043A  3000               	movlw	high(06h)
  3763  043B  056C               	andwf	(_dev+1),w
  3764  043C  00EC               	movwf	1+(_dev)
  3765  043D  2C3E               	goto	l3964
  3766                           	
  3767  043E                     l1143:	
  3768                           	line	295
  3769                           	
  3770  043E                     l3964:	
  3771                           ;prev13.c: 295: if(check(lo,logic_d2))
  3772  043E  30AF               	movlw	(_logic_d2)&0ffh
  3773  043F  00FB               	movwf	(??_startswitch+0)+0
  3774  0440  087B               	movf	(??_startswitch+0)+0,w
  3775  0441  00F0               	movwf	(?_check)
  3776  0442  30A5               	movlw	(_lo)&0ffh
  3777  0443  120A  158A  2513   	fcall	_check
              120A  118A         
  3778  0448  0871               	movf	(1+(?_check)),w
  3779  0449  0470               	iorwf	(0+(?_check)),w
  3780  044A  1903               	skipnz
  3781  044B  2C4D               	goto	u4591
  3782  044C  2C4E               	goto	u4590
  3783  044D                     u4591:
  3784  044D  2C57               	goto	l3968
  3785  044E                     u4590:
  3786                           	line	296
  3787                           	
  3788  044E                     l3966:	
  3789                           ;prev13.c: 296: dev=dev|0b0010;
  3790  044E  3002               	movlw	low(02h)
  3791  044F  1283               	bcf	status, 5	;RP0=0, select bank0
  3792  0450  1303               	bcf	status, 6	;RP1=0, select bank0
  3793  0451  046B               	iorwf	(_dev),w
  3794  0452  00EB               	movwf	(_dev)
  3795  0453  3000               	movlw	high(02h)
  3796  0454  046C               	iorwf	(_dev+1),w
  3797  0455  00EC               	movwf	1+(_dev)
  3798  0456  2C60               	goto	l3970
  3799                           	line	297
  3800                           	
  3801  0457                     l1144:	
  3802                           	line	298
  3803                           	
  3804  0457                     l3968:	
  3805                           ;prev13.c: 297: else
  3806                           ;prev13.c: 298: dev=dev&0b0101;
  3807  0457  3005               	movlw	low(05h)
  3808  0458  1283               	bcf	status, 5	;RP0=0, select bank0
  3809  0459  1303               	bcf	status, 6	;RP1=0, select bank0
  3810  045A  056B               	andwf	(_dev),w
  3811  045B  00EB               	movwf	(_dev)
  3812  045C  3000               	movlw	high(05h)
  3813  045D  056C               	andwf	(_dev+1),w
  3814  045E  00EC               	movwf	1+(_dev)
  3815  045F  2C60               	goto	l3970
  3816                           	
  3817  0460                     l1145:	
  3818                           	line	301
  3819                           	
  3820  0460                     l3970:	
  3821                           ;prev13.c: 301: if(check(lo,logic_d3))
  3822  0460  30B4               	movlw	(_logic_d3)&0ffh
  3823  0461  00FB               	movwf	(??_startswitch+0)+0
  3824  0462  087B               	movf	(??_startswitch+0)+0,w
  3825  0463  00F0               	movwf	(?_check)
  3826  0464  30A5               	movlw	(_lo)&0ffh
  3827  0465  120A  158A  2513   	fcall	_check
              120A  118A         
  3828  046A  0871               	movf	(1+(?_check)),w
  3829  046B  0470               	iorwf	(0+(?_check)),w
  3830  046C  1903               	skipnz
  3831  046D  2C6F               	goto	u4601
  3832  046E  2C70               	goto	u4600
  3833  046F                     u4601:
  3834  046F  2C79               	goto	l3974
  3835  0470                     u4600:
  3836                           	line	302
  3837                           	
  3838  0470                     l3972:	
  3839                           ;prev13.c: 302: dev=dev|0b0100;
  3840  0470  3004               	movlw	low(04h)
  3841  0471  1283               	bcf	status, 5	;RP0=0, select bank0
  3842  0472  1303               	bcf	status, 6	;RP1=0, select bank0
  3843  0473  046B               	iorwf	(_dev),w
  3844  0474  00EB               	movwf	(_dev)
  3845  0475  3000               	movlw	high(04h)
  3846  0476  046C               	iorwf	(_dev+1),w
  3847  0477  00EC               	movwf	1+(_dev)
  3848  0478  2C82               	goto	l3976
  3849                           	line	303
  3850                           	
  3851  0479                     l1146:	
  3852                           	line	304
  3853                           	
  3854  0479                     l3974:	
  3855                           ;prev13.c: 303: else
  3856                           ;prev13.c: 304: dev=dev&0b0011;
  3857  0479  3003               	movlw	low(03h)
  3858  047A  1283               	bcf	status, 5	;RP0=0, select bank0
  3859  047B  1303               	bcf	status, 6	;RP1=0, select bank0
  3860  047C  056B               	andwf	(_dev),w
  3861  047D  00EB               	movwf	(_dev)
  3862  047E  3000               	movlw	high(03h)
  3863  047F  056C               	andwf	(_dev+1),w
  3864  0480  00EC               	movwf	1+(_dev)
  3865  0481  2C82               	goto	l3976
  3866                           	
  3867  0482                     l1147:	
  3868                           	line	309
  3869                           	
  3870  0482                     l3976:	
  3871                           ;prev13.c: 309: RC4=dev&0b0001;
  3872  0482  186B               	btfsc	(_dev),0
  3873  0483  2C85               	goto	u4611
  3874  0484  2C89               	goto	u4610
  3875                           	
  3876  0485                     u4611:
  3877  0485  1283               	bcf	status, 5	;RP0=0, select bank0
  3878  0486  1303               	bcf	status, 6	;RP1=0, select bank0
  3879  0487  1607               	bsf	(60/8),(60)&7
  3880  0488  2C8C               	goto	u4624
  3881  0489                     u4610:
  3882  0489  1283               	bcf	status, 5	;RP0=0, select bank0
  3883  048A  1303               	bcf	status, 6	;RP1=0, select bank0
  3884  048B  1207               	bcf	(60/8),(60)&7
  3885  048C                     u4624:
  3886                           	line	310
  3887                           	
  3888  048C                     l3978:	
  3889                           ;prev13.c: 310: RC5=(dev>>1)&0b0001;
  3890  048C  086C               	movf	(_dev+1),w
  3891  048D  00FC               	movwf	(??_startswitch+0)+0+1
  3892  048E  086B               	movf	(_dev),w
  3893  048F  00FB               	movwf	(??_startswitch+0)+0
  3894  0490  3001               	movlw	01h
  3895  0491  00FF               	movwf	btemp+1
  3896  0492                     u4635:
  3897  0492  0D7C               	rlf	(??_startswitch+0)+1,w
  3898  0493  0CFC               	rrf	(??_startswitch+0)+1,f
  3899  0494  0CFB               	rrf	(??_startswitch+0)+0,f
  3900  0495  0BFF               	decfsz	btemp+1,f
  3901  0496  2C92               	goto	u4635
  3902  0497  187B               	btfsc	0+(??_startswitch+0)+0,0
  3903  0498  2C9A               	goto	u4641
  3904  0499  2C9E               	goto	u4640
  3905                           	
  3906  049A                     u4641:
  3907  049A  1283               	bcf	status, 5	;RP0=0, select bank0
  3908  049B  1303               	bcf	status, 6	;RP1=0, select bank0
  3909  049C  1687               	bsf	(61/8),(61)&7
  3910  049D  2CA1               	goto	u4654
  3911  049E                     u4640:
  3912  049E  1283               	bcf	status, 5	;RP0=0, select bank0
  3913  049F  1303               	bcf	status, 6	;RP1=0, select bank0
  3914  04A0  1287               	bcf	(61/8),(61)&7
  3915  04A1                     u4654:
  3916                           	line	311
  3917                           	
  3918  04A1                     l3980:	
  3919                           ;prev13.c: 311: RC6=(dev>>2)&0b0001;
  3920  04A1  086C               	movf	(_dev+1),w
  3921  04A2  00FC               	movwf	(??_startswitch+0)+0+1
  3922  04A3  086B               	movf	(_dev),w
  3923  04A4  00FB               	movwf	(??_startswitch+0)+0
  3924  04A5  3002               	movlw	02h
  3925  04A6  00FF               	movwf	btemp+1
  3926  04A7                     u4665:
  3927  04A7  0D7C               	rlf	(??_startswitch+0)+1,w
  3928  04A8  0CFC               	rrf	(??_startswitch+0)+1,f
  3929  04A9  0CFB               	rrf	(??_startswitch+0)+0,f
  3930  04AA  0BFF               	decfsz	btemp+1,f
  3931  04AB  2CA7               	goto	u4665
  3932  04AC  187B               	btfsc	0+(??_startswitch+0)+0,0
  3933  04AD  2CAF               	goto	u4671
  3934  04AE  2CB3               	goto	u4670
  3935                           	
  3936  04AF                     u4671:
  3937  04AF  1283               	bcf	status, 5	;RP0=0, select bank0
  3938  04B0  1303               	bcf	status, 6	;RP1=0, select bank0
  3939  04B1  1707               	bsf	(62/8),(62)&7
  3940  04B2  2CB6               	goto	u4684
  3941  04B3                     u4670:
  3942  04B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3943  04B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3944  04B5  1307               	bcf	(62/8),(62)&7
  3945  04B6                     u4684:
  3946                           	line	312
  3947                           	
  3948  04B6                     l3982:	
  3949                           ;prev13.c: 312: delay(200);
  3950  04B6  30C8               	movlw	low(0C8h)
  3951  04B7  00F0               	movwf	(?_delay)
  3952  04B8  3000               	movlw	high(0C8h)
  3953  04B9  00F1               	movwf	((?_delay))+1
  3954  04BA  120A  158A  22C8   	fcall	_delay
              120A  118A         
  3955  04BF  2CC0               	goto	l1148
  3956                           	line	313
  3957                           	
  3958  04C0                     l1141:	
  3959                           	line	316
  3960                           	
  3961  04C0                     l1148:	
  3962  04C0  0008               	return
  3963                           	opt stack 0
  3964                           GLOBAL	__end_of_startswitch
  3965  04C1                     	__end_of_startswitch:
  3966 ;; =============== function _startswitch ends ============
  3967                           
  3968                           	signat	_startswitch,88
  3969                           	global	_init_fun
  3970                           psect	text749,local,class=CODE,delta=2
  3971                           global __ptext749
  3972  0B96                     __ptext749:
  3973                           
  3974 ;; *************** function _init_fun *****************
  3975 ;; Defined at:
  3976 ;;		line 252 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;		None               void
  3983 ;; Registers used:
  3984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3990 ;;      Params:         0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0
  3993 ;;      Totals:         0       0       0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    6
  3997 ;; This function calls:
  3998 ;;		_write
  3999 ;; This function is called by:
  4000 ;;		_startswitch
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           psect	text749
  4004                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4005                           	line	252
  4006                           	global	__size_of_init_fun
  4007  0028                     	__size_of_init_fun	equ	__end_of_init_fun-_init_fun
  4008                           	
  4009  0B96                     _init_fun:	
  4010 ;; hardware stack exceeded
  4011                           	opt	stack 0
  4012                           ; Regs used in _init_fun: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4013                           	line	253
  4014                           	
  4015  0B96                     l3920:	
  4016                           ;prev13.c: 253: if(done_init==0)
  4017  0B96  1683               	bsf	status, 5	;RP0=1, select bank1
  4018  0B97  1303               	bcf	status, 6	;RP1=0, select bank1
  4019  0B98  0854               	movf	((_done_init+1)^080h),w
  4020  0B99  0453               	iorwf	((_done_init)^080h),w
  4021  0B9A  1D03               	skipz
  4022  0B9B  2B9D               	goto	u4531
  4023  0B9C  2B9E               	goto	u4530
  4024  0B9D                     u4531:
  4025  0B9D  2BBD               	goto	l1135
  4026  0B9E                     u4530:
  4027                           	line	256
  4028                           	
  4029  0B9E                     l3922:	
  4030                           ;prev13.c: 254: {
  4031                           ;prev13.c: 256: TRISA=0x0F;
  4032  0B9E  300F               	movlw	(0Fh)
  4033  0B9F  0085               	movwf	(133)^080h	;volatile
  4034                           	line	257
  4035                           	
  4036  0BA0                     l3924:	
  4037                           ;prev13.c: 257: ANSEL=0x0;
  4038  0BA0  1683               	bsf	status, 5	;RP0=1, select bank3
  4039  0BA1  1703               	bsf	status, 6	;RP1=1, select bank3
  4040  0BA2  0188               	clrf	(392)^0180h	;volatile
  4041                           	line	258
  4042                           	
  4043  0BA3                     l3926:	
  4044                           ;prev13.c: 258: done_init=1;
  4045  0BA3  3001               	movlw	low(01h)
  4046  0BA4  1683               	bsf	status, 5	;RP0=1, select bank1
  4047  0BA5  1303               	bcf	status, 6	;RP1=0, select bank1
  4048  0BA6  00D3               	movwf	(_done_init)^080h
  4049  0BA7  3000               	movlw	high(01h)
  4050  0BA8  00D4               	movwf	((_done_init)^080h)+1
  4051                           	line	259
  4052                           	
  4053  0BA9                     l3928:	
  4054                           ;prev13.c: 259: write("Sensing...",1,1);
  4055  0BA9  30C7               	movlw	low(STR_7|8000h)
  4056  0BAA  1283               	bcf	status, 5	;RP0=0, select bank0
  4057  0BAB  1303               	bcf	status, 6	;RP1=0, select bank0
  4058  0BAC  00A0               	movwf	(?_write)
  4059  0BAD  3088               	movlw	high(STR_7|8000h)
  4060  0BAE  00A1               	movwf	((?_write))+1
  4061  0BAF  3001               	movlw	low(01h)
  4062  0BB0  00A2               	movwf	0+(?_write)+02h
  4063  0BB1  3000               	movlw	high(01h)
  4064  0BB2  00A3               	movwf	(0+(?_write)+02h)+1
  4065  0BB3  3001               	movlw	low(01h)
  4066  0BB4  00A4               	movwf	0+(?_write)+04h
  4067  0BB5  3000               	movlw	high(01h)
  4068  0BB6  00A5               	movwf	(0+(?_write)+04h)+1
  4069  0BB7  120A  158A  255C   	fcall	_write
              120A  158A         
  4070  0BBC  2BBD               	goto	l1135
  4071                           	line	260
  4072                           	
  4073  0BBD                     l1134:	
  4074                           	line	261
  4075                           	
  4076  0BBD                     l1135:	
  4077  0BBD  0008               	return
  4078                           	opt stack 0
  4079                           GLOBAL	__end_of_init_fun
  4080  0BBE                     	__end_of_init_fun:
  4081 ;; =============== function _init_fun ends ============
  4082                           
  4083                           	signat	_init_fun,88
  4084                           	global	_getlogic
  4085                           psect	text750,local,class=CODE,delta=2
  4086                           global __ptext750
  4087  0019                     __ptext750:
  4088                           
  4089 ;; *************** function _getlogic *****************
  4090 ;; Defined at:
  4091 ;;		line 220 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0
  4107 ;;      Temps:          1       0       0       0       0
  4108 ;;      Totals:         1       0       0       0       0
  4109 ;;Total ram usage:        1 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    6
  4112 ;; This function calls:
  4113 ;;		_read_eep
  4114 ;;		_write_eep
  4115 ;;		_write
  4116 ;;		_delay
  4117 ;;		_read_log
  4118 ;;		_strcpy
  4119 ;; This function is called by:
  4120 ;;		_start
  4121 ;;		_getlogicseq
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           psect	text750
  4125                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4126                           	line	220
  4127                           	global	__size_of_getlogic
  4128  00A6                     	__size_of_getlogic	equ	__end_of_getlogic-_getlogic
  4129                           	
  4130  0019                     _getlogic:	
  4131 ;; hardware stack exceeded
  4132                           	opt	stack 0
  4133                           ; Regs used in _getlogic: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4134                           	line	221
  4135                           	
  4136  0019                     l3898:	
  4137                           ;prev13.c: 221: if(read_eep(0xF0)!='X')
  4138  0019  30F0               	movlw	low(0F0h)
  4139  001A  00F9               	movwf	(?_read_eep)
  4140  001B  3000               	movlw	high(0F0h)
  4141  001C  00FA               	movwf	((?_read_eep))+1
  4142  001D  120A  158A  243A   	fcall	_read_eep
              120A  118A         
  4143  0022  3A58               	xorlw	058h
  4144  0023  1903               	skipnz
  4145  0024  2826               	goto	u4521
  4146  0025  2827               	goto	u4520
  4147  0026                     u4521:
  4148  0026  2852               	goto	l3908
  4149  0027                     u4520:
  4150                           	line	223
  4151                           	
  4152  0027                     l3900:	
  4153                           ;prev13.c: 222: {
  4154                           ;prev13.c: 223: write_eep(0xF0,'X');
  4155  0027  30F0               	movlw	low(0F0h)
  4156  0028  00F2               	movwf	(?_write_eep)
  4157  0029  3000               	movlw	high(0F0h)
  4158  002A  00F3               	movwf	((?_write_eep))+1
  4159  002B  3058               	movlw	(058h)
  4160  002C  00FD               	movwf	(??_getlogic+0)+0
  4161  002D  087D               	movf	(??_getlogic+0)+0,w
  4162  002E  00F4               	movwf	0+(?_write_eep)+02h
  4163  002F  120A  158A  236F   	fcall	_write_eep
              120A  118A         
  4164                           	line	224
  4165                           	
  4166  0034                     l3902:	
  4167                           ;prev13.c: 224: write("CONFIGURED !",1,1);
  4168  0034  30AE               	movlw	low(STR_5|8000h)
  4169  0035  1283               	bcf	status, 5	;RP0=0, select bank0
  4170  0036  1303               	bcf	status, 6	;RP1=0, select bank0
  4171  0037  00A0               	movwf	(?_write)
  4172  0038  3088               	movlw	high(STR_5|8000h)
  4173  0039  00A1               	movwf	((?_write))+1
  4174  003A  3001               	movlw	low(01h)
  4175  003B  00A2               	movwf	0+(?_write)+02h
  4176  003C  3000               	movlw	high(01h)
  4177  003D  00A3               	movwf	(0+(?_write)+02h)+1
  4178  003E  3001               	movlw	low(01h)
  4179  003F  00A4               	movwf	0+(?_write)+04h
  4180  0040  3000               	movlw	high(01h)
  4181  0041  00A5               	movwf	(0+(?_write)+04h)+1
  4182  0042  120A  158A  255C   	fcall	_write
              120A  118A         
  4183                           	line	225
  4184                           	
  4185  0047                     l3904:	
  4186                           ;prev13.c: 225: delay(2000);
  4187  0047  30D0               	movlw	low(07D0h)
  4188  0048  00F0               	movwf	(?_delay)
  4189  0049  3007               	movlw	high(07D0h)
  4190  004A  00F1               	movwf	((?_delay))+1
  4191  004B  120A  158A  22C8   	fcall	_delay
              120A  118A         
  4192  0050  28BE               	goto	l1125
  4193                           	line	226
  4194                           	
  4195  0051                     l3906:	
  4196                           ;prev13.c: 226: return;
  4197  0051  28BE               	goto	l1125
  4198                           	line	228
  4199                           	
  4200  0052                     l1124:	
  4201                           	line	229
  4202                           	
  4203  0052                     l3908:	
  4204                           ;prev13.c: 228: }
  4205                           ;prev13.c: 229: write("READING.. !",1,1);
  4206  0052  30BB               	movlw	low(STR_6|8000h)
  4207  0053  1283               	bcf	status, 5	;RP0=0, select bank0
  4208  0054  1303               	bcf	status, 6	;RP1=0, select bank0
  4209  0055  00A0               	movwf	(?_write)
  4210  0056  3088               	movlw	high(STR_6|8000h)
  4211  0057  00A1               	movwf	((?_write))+1
  4212  0058  3001               	movlw	low(01h)
  4213  0059  00A2               	movwf	0+(?_write)+02h
  4214  005A  3000               	movlw	high(01h)
  4215  005B  00A3               	movwf	(0+(?_write)+02h)+1
  4216  005C  3001               	movlw	low(01h)
  4217  005D  00A4               	movwf	0+(?_write)+04h
  4218  005E  3000               	movlw	high(01h)
  4219  005F  00A5               	movwf	(0+(?_write)+04h)+1
  4220  0060  120A  158A  255C   	fcall	_write
              120A  118A         
  4221                           	line	230
  4222                           	
  4223  0065                     l3910:	
  4224                           ;prev13.c: 230: delay(2000);
  4225  0065  30D0               	movlw	low(07D0h)
  4226  0066  00F0               	movwf	(?_delay)
  4227  0067  3007               	movlw	high(07D0h)
  4228  0068  00F1               	movwf	((?_delay))+1
  4229  0069  120A  158A  22C8   	fcall	_delay
              120A  118A         
  4230                           	line	231
  4231                           	
  4232  006E                     l3912:	
  4233                           ;prev13.c: 231: strcpy(logic_d1,read_log(0));
  4234  006E  3000               	movlw	low(0)
  4235  006F  1283               	bcf	status, 5	;RP0=0, select bank0
  4236  0070  1303               	bcf	status, 6	;RP1=0, select bank0
  4237  0071  00A2               	movwf	(?_read_log)
  4238  0072  3000               	movlw	high(0)
  4239  0073  00A3               	movwf	((?_read_log))+1
  4240  0074  120A  158A  267B   	fcall	_read_log
              120A  118A         
  4241  0079  00F2               	movwf	(?_strcpy)
  4242  007A  3000               	movlw	(0x0/2)
  4243  007B  00F3               	movwf	(?_strcpy+1)
  4244  007C  30AA               	movlw	(_logic_d1)&0ffh
  4245  007D  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  4246                           	line	232
  4247                           	
  4248  0082                     l3914:	
  4249                           ;prev13.c: 232: strcpy(logic_d2,read_log(1));
  4250  0082  3001               	movlw	low(01h)
  4251  0083  1283               	bcf	status, 5	;RP0=0, select bank0
  4252  0084  1303               	bcf	status, 6	;RP1=0, select bank0
  4253  0085  00A2               	movwf	(?_read_log)
  4254  0086  3000               	movlw	high(01h)
  4255  0087  00A3               	movwf	((?_read_log))+1
  4256  0088  120A  158A  267B   	fcall	_read_log
              120A  118A         
  4257  008D  00F2               	movwf	(?_strcpy)
  4258  008E  3000               	movlw	(0x0/2)
  4259  008F  00F3               	movwf	(?_strcpy+1)
  4260  0090  30AF               	movlw	(_logic_d2)&0ffh
  4261  0091  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  4262                           	line	233
  4263                           	
  4264  0096                     l3916:	
  4265                           ;prev13.c: 233: strcpy(logic_d3,read_log(2));
  4266  0096  3002               	movlw	low(02h)
  4267  0097  1283               	bcf	status, 5	;RP0=0, select bank0
  4268  0098  1303               	bcf	status, 6	;RP1=0, select bank0
  4269  0099  00A2               	movwf	(?_read_log)
  4270  009A  3000               	movlw	high(02h)
  4271  009B  00A3               	movwf	((?_read_log))+1
  4272  009C  120A  158A  267B   	fcall	_read_log
              120A  118A         
  4273  00A1  00F2               	movwf	(?_strcpy)
  4274  00A2  3000               	movlw	(0x0/2)
  4275  00A3  00F3               	movwf	(?_strcpy+1)
  4276  00A4  30B4               	movlw	(_logic_d3)&0ffh
  4277  00A5  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  4278                           	line	234
  4279                           	
  4280  00AA                     l3918:	
  4281                           ;prev13.c: 234: strcpy(logic_d4,read_log(3));
  4282  00AA  3003               	movlw	low(03h)
  4283  00AB  1283               	bcf	status, 5	;RP0=0, select bank0
  4284  00AC  1303               	bcf	status, 6	;RP1=0, select bank0
  4285  00AD  00A2               	movwf	(?_read_log)
  4286  00AE  3000               	movlw	high(03h)
  4287  00AF  00A3               	movwf	((?_read_log))+1
  4288  00B0  120A  158A  267B   	fcall	_read_log
              120A  118A         
  4289  00B5  00F2               	movwf	(?_strcpy)
  4290  00B6  3000               	movlw	(0x0/2)
  4291  00B7  00F3               	movwf	(?_strcpy+1)
  4292  00B8  30B9               	movlw	(_logic_d4)&0ffh
  4293  00B9  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  4294                           	line	236
  4295                           	
  4296  00BE                     l1125:	
  4297  00BE  0008               	return
  4298                           	opt stack 0
  4299                           GLOBAL	__end_of_getlogic
  4300  00BF                     	__end_of_getlogic:
  4301 ;; =============== function _getlogic ends ============
  4302                           
  4303                           	signat	_getlogic,88
  4304                           	global	_write
  4305                           psect	text751,local,class=CODE,delta=2
  4306                           global __ptext751
  4307  0D5C                     __ptext751:
  4308                           
  4309 ;; *************** function _write *****************
  4310 ;; Defined at:
  4311 ;;		line 687 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  str             2    0[BANK0 ] PTR unsigned char 
  4314 ;;		 -> STR_19(4), STR_16(4), STR_13(4), getlogicseq@str(32), 
  4315 ;;		 -> STR_10(27), STR_9(17), lo(5), STR_7(11), 
  4316 ;;		 -> STR_6(12), STR_5(13), logic_d3(5), logic_d2(5), 
  4317 ;;		 -> logic_d1(5), STR_4(8), STR_3(15), STR_2(17), 
  4318 ;;		 -> STR_1(15), 
  4319 ;;  line            2    2[BANK0 ] int 
  4320 ;;  erase           2    4[BANK0 ] int 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  i               2    9[COMMON] int 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;		None               void
  4325 ;; Registers used:
  4326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4332 ;;      Params:         0       6       0       0       0
  4333 ;;      Locals:         2       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0
  4335 ;;      Totals:         2       6       0       0       0
  4336 ;;Total ram usage:        8 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    5
  4339 ;; This function calls:
  4340 ;;		_clearlcd
  4341 ;;		_cmd
  4342 ;;		_dat
  4343 ;; This function is called by:
  4344 ;;		_start
  4345 ;;		_getlogic
  4346 ;;		_init_fun
  4347 ;;		_startswitch
  4348 ;;		_getlogicseq
  4349 ;;		_scroll
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           psect	text751
  4353                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4354                           	line	687
  4355                           	global	__size_of_write
  4356  0058                     	__size_of_write	equ	__end_of_write-_write
  4357                           	
  4358  0D5C                     _write:	
  4359 ;; using string table level
  4360                           	opt	stack 1
  4361                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4362                           	line	688
  4363                           	
  4364  0D5C                     l3880:	
  4365                           ;prev13.c: 688: if(erase==1)
  4366  0D5C  3001               	movlw	01h
  4367  0D5D  1283               	bcf	status, 5	;RP0=0, select bank0
  4368  0D5E  1303               	bcf	status, 6	;RP1=0, select bank0
  4369  0D5F  0624               	xorwf	(write@erase),w
  4370  0D60  0425               	iorwf	(write@erase+1),w
  4371  0D61  1D03               	skipz
  4372  0D62  2D64               	goto	u4491
  4373  0D63  2D65               	goto	u4490
  4374  0D64                     u4491:
  4375  0D64  2D6B               	goto	l3884
  4376  0D65                     u4490:
  4377                           	line	689
  4378                           	
  4379  0D65                     l3882:	
  4380                           ;prev13.c: 689: clearlcd();
  4381  0D65  120A  158A  2264   	fcall	_clearlcd
              120A  158A         
  4382  0D6A  2D6B               	goto	l3884
  4383                           	
  4384  0D6B                     l1276:	
  4385                           	line	691
  4386                           	
  4387  0D6B                     l3884:	
  4388                           ;prev13.c: 691: if(line==2)
  4389  0D6B  3002               	movlw	02h
  4390  0D6C  1283               	bcf	status, 5	;RP0=0, select bank0
  4391  0D6D  1303               	bcf	status, 6	;RP1=0, select bank0
  4392  0D6E  0622               	xorwf	(write@line),w
  4393  0D6F  0423               	iorwf	(write@line+1),w
  4394  0D70  1D03               	skipz
  4395  0D71  2D73               	goto	u4501
  4396  0D72  2D74               	goto	u4500
  4397  0D73                     u4501:
  4398  0D73  2D7B               	goto	l3888
  4399  0D74                     u4500:
  4400                           	line	692
  4401                           	
  4402  0D74                     l3886:	
  4403                           ;prev13.c: 692: cmd(0xC0);
  4404  0D74  30C0               	movlw	(0C0h)
  4405  0D75  120A  158A  228D   	fcall	_cmd
              120A  158A         
  4406  0D7A  2D82               	goto	l3890
  4407                           	line	693
  4408                           	
  4409  0D7B                     l1277:	
  4410                           	line	694
  4411                           	
  4412  0D7B                     l3888:	
  4413                           ;prev13.c: 693: else
  4414                           ;prev13.c: 694: cmd(0x2);
  4415  0D7B  3002               	movlw	(02h)
  4416  0D7C  120A  158A  228D   	fcall	_cmd
              120A  158A         
  4417  0D81  2D82               	goto	l3890
  4418                           	
  4419  0D82                     l1278:	
  4420                           	line	696
  4421                           	
  4422  0D82                     l3890:	
  4423                           ;prev13.c: 696: int i=0;
  4424  0D82  01F9               	clrf	(write@i)
  4425  0D83  01FA               	clrf	(write@i+1)
  4426                           	line	697
  4427                           ;prev13.c: 697: while(str[i]!='\0')
  4428  0D84  2D9F               	goto	l3896
  4429                           	
  4430  0D85                     l1280:	
  4431                           	line	699
  4432                           	
  4433  0D85                     l3892:	
  4434                           ;prev13.c: 698: {
  4435                           ;prev13.c: 699: dat(str[i]);
  4436  0D85  0879               	movf	(write@i),w
  4437  0D86  1283               	bcf	status, 5	;RP0=0, select bank0
  4438  0D87  1303               	bcf	status, 6	;RP1=0, select bank0
  4439  0D88  0720               	addwf	(write@str),w
  4440  0D89  0084               	movwf	fsr0
  4441  0D8A  0821               	movf	(write@str+1),w
  4442  0D8B  1803               	skipnc
  4443  0D8C  0A21               	incf	(write@str+1),w
  4444  0D8D  00FF               	movwf	btemp+1
  4445  0D8E  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4446  0D93  120A  158A  229A   	fcall	_dat
              120A  158A         
  4447                           	line	700
  4448                           	
  4449  0D98                     l3894:	
  4450                           ;prev13.c: 700: i++;
  4451  0D98  3001               	movlw	low(01h)
  4452  0D99  07F9               	addwf	(write@i),f
  4453  0D9A  1803               	skipnc
  4454  0D9B  0AFA               	incf	(write@i+1),f
  4455  0D9C  3000               	movlw	high(01h)
  4456  0D9D  07FA               	addwf	(write@i+1),f
  4457  0D9E  2D9F               	goto	l3896
  4458                           	line	701
  4459                           	
  4460  0D9F                     l1279:	
  4461                           	line	697
  4462                           	
  4463  0D9F                     l3896:	
  4464  0D9F  0879               	movf	(write@i),w
  4465  0DA0  1283               	bcf	status, 5	;RP0=0, select bank0
  4466  0DA1  1303               	bcf	status, 6	;RP1=0, select bank0
  4467  0DA2  0720               	addwf	(write@str),w
  4468  0DA3  0084               	movwf	fsr0
  4469  0DA4  0821               	movf	(write@str+1),w
  4470  0DA5  1803               	skipnc
  4471  0DA6  0A21               	incf	(write@str+1),w
  4472  0DA7  00FF               	movwf	btemp+1
  4473  0DA8  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4474  0DAD  3800               	iorlw	0
  4475  0DAE  1D03               	skipz
  4476  0DAF  2DB1               	goto	u4511
  4477  0DB0  2DB2               	goto	u4510
  4478  0DB1                     u4511:
  4479  0DB1  2D85               	goto	l3892
  4480  0DB2                     u4510:
  4481  0DB2  2DB3               	goto	l1282
  4482                           	
  4483  0DB3                     l1281:	
  4484                           	line	704
  4485                           	
  4486  0DB3                     l1282:	
  4487  0DB3  0008               	return
  4488                           	opt stack 0
  4489                           GLOBAL	__end_of_write
  4490  0DB4                     	__end_of_write:
  4491 ;; =============== function _write ends ============
  4492                           
  4493                           	signat	_write,12408
  4494                           	global	_clearlcd
  4495                           psect	text752,local,class=CODE,delta=2
  4496                           global __ptext752
  4497  0A64                     __ptext752:
  4498                           
  4499 ;; *************** function _clearlcd *****************
  4500 ;; Defined at:
  4501 ;;		line 617 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;		None
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;		None               void
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0, pclath, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4515 ;;      Params:         0       0       0       0       0
  4516 ;;      Locals:         0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0
  4518 ;;      Totals:         0       0       0       0       0
  4519 ;;Total ram usage:        0 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    4
  4522 ;; This function calls:
  4523 ;;		_cmd
  4524 ;; This function is called by:
  4525 ;;		_write
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           psect	text752
  4529                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4530                           	line	617
  4531                           	global	__size_of_clearlcd
  4532  0007                     	__size_of_clearlcd	equ	__end_of_clearlcd-_clearlcd
  4533                           	
  4534  0A64                     _clearlcd:	
  4535                           	opt	stack 0
  4536                           ; Regs used in _clearlcd: [wreg+status,2+status,0+pclath+cstack]
  4537                           	line	618
  4538                           	
  4539  0A64                     l3878:	
  4540                           ;prev13.c: 618: cmd(0x01);
  4541  0A64  3001               	movlw	(01h)
  4542  0A65  120A  158A  228D   	fcall	_cmd
              120A  158A         
  4543                           	line	619
  4544                           	
  4545  0A6A                     l1252:	
  4546  0A6A  0008               	return
  4547                           	opt stack 0
  4548                           GLOBAL	__end_of_clearlcd
  4549  0A6B                     	__end_of_clearlcd:
  4550 ;; =============== function _clearlcd ends ============
  4551                           
  4552                           	signat	_clearlcd,88
  4553                           	global	_initlcd
  4554                           psect	text753,local,class=CODE,delta=2
  4555                           global __ptext753
  4556  0B10                     __ptext753:
  4557                           
  4558 ;; *************** function _initlcd *****************
  4559 ;; Defined at:
  4560 ;;		line 599 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;		None               void
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    4
  4581 ;; This function calls:
  4582 ;;		_cmd
  4583 ;; This function is called by:
  4584 ;;		_main
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           psect	text753
  4588                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4589                           	line	599
  4590                           	global	__size_of_initlcd
  4591  001E                     	__size_of_initlcd	equ	__end_of_initlcd-_initlcd
  4592                           	
  4593  0B10                     _initlcd:	
  4594                           	opt	stack 3
  4595                           ; Regs used in _initlcd: [wreg+status,2+status,0+pclath+cstack]
  4596                           	line	601
  4597                           	
  4598  0B10                     l3866:	
  4599                           ;prev13.c: 601: TRISC=0b0000000;
  4600  0B10  1683               	bsf	status, 5	;RP0=1, select bank1
  4601  0B11  1303               	bcf	status, 6	;RP1=0, select bank1
  4602  0B12  0187               	clrf	(135)^080h	;volatile
  4603                           	line	603
  4604                           	
  4605  0B13                     l3868:	
  4606                           ;prev13.c: 603: TRISD=0b11000000;
  4607  0B13  30C0               	movlw	(0C0h)
  4608  0B14  0088               	movwf	(136)^080h	;volatile
  4609                           	line	605
  4610                           	
  4611  0B15                     l3870:	
  4612                           ;prev13.c: 605: cmd(0x38);
  4613  0B15  3038               	movlw	(038h)
  4614  0B16  120A  158A  228D   	fcall	_cmd
              120A  158A         
  4615                           	line	607
  4616                           	
  4617  0B1B                     l3872:	
  4618                           ;prev13.c: 607: cmd(0x0C);
  4619  0B1B  300C               	movlw	(0Ch)
  4620  0B1C  120A  158A  228D   	fcall	_cmd
              120A  158A         
  4621                           	line	609
  4622                           	
  4623  0B21                     l3874:	
  4624                           ;prev13.c: 609: cmd(0x01);
  4625  0B21  3001               	movlw	(01h)
  4626  0B22  120A  158A  228D   	fcall	_cmd
              120A  158A         
  4627                           	line	611
  4628                           	
  4629  0B27                     l3876:	
  4630                           ;prev13.c: 611: cmd(0x80);
  4631  0B27  3080               	movlw	(080h)
  4632  0B28  120A  158A  228D   	fcall	_cmd
              120A  158A         
  4633                           	line	615
  4634                           	
  4635  0B2D                     l1249:	
  4636  0B2D  0008               	return
  4637                           	opt stack 0
  4638                           GLOBAL	__end_of_initlcd
  4639  0B2E                     	__end_of_initlcd:
  4640 ;; =============== function _initlcd ends ============
  4641                           
  4642                           	signat	_initlcd,88
  4643                           	global	_dat
  4644                           psect	text754,local,class=CODE,delta=2
  4645                           global __ptext754
  4646  0A9A                     __ptext754:
  4647                           
  4648 ;; *************** function _dat *****************
  4649 ;; Defined at:
  4650 ;;		line 654 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  Command         1    wreg     unsigned char 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  Command         1    8[COMMON] unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;		None               void
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4664 ;;      Params:         0       0       0       0       0
  4665 ;;      Locals:         1       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0
  4667 ;;      Totals:         1       0       0       0       0
  4668 ;;Total ram usage:        1 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    3
  4671 ;; This function calls:
  4672 ;;		_setLCD
  4673 ;;		__dat
  4674 ;; This function is called by:
  4675 ;;		_write
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           psect	text754
  4679                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4680                           	line	654
  4681                           	global	__size_of_dat
  4682  000D                     	__size_of_dat	equ	__end_of_dat-_dat
  4683                           	
  4684  0A9A                     _dat:	
  4685                           	opt	stack 1
  4686                           ; Regs used in _dat: [wreg+status,2+status,0+pclath+cstack]
  4687                           ;dat@Command stored from wreg
  4688  0A9A  00F8               	movwf	(dat@Command)
  4689                           	line	655
  4690                           	
  4691  0A9B                     l3864:	
  4692                           ;prev13.c: 655: setLCD(Command);
  4693  0A9B  0878               	movf	(dat@Command),w
  4694  0A9C  120A  158A  275A   	fcall	_setLCD
              120A  158A         
  4695                           	line	656
  4696                           ;prev13.c: 656: _dat();
  4697  0AA1  120A  158A  227B   	fcall	__dat
              120A  158A         
  4698                           	line	662
  4699                           	
  4700  0AA6                     l1267:	
  4701  0AA6  0008               	return
  4702                           	opt stack 0
  4703                           GLOBAL	__end_of_dat
  4704  0AA7                     	__end_of_dat:
  4705 ;; =============== function _dat ends ============
  4706                           
  4707                           	signat	_dat,4216
  4708                           	global	_cmd
  4709                           psect	text755,local,class=CODE,delta=2
  4710                           global __ptext755
  4711  0A8D                     __ptext755:
  4712                           
  4713 ;; *************** function _cmd *****************
  4714 ;; Defined at:
  4715 ;;		line 646 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  Command         1    wreg     unsigned char 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  Command         1    8[COMMON] unsigned char 
  4720 ;; Return value:  Size  Location     Type
  4721 ;;		None               void
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0, pclath, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4729 ;;      Params:         0       0       0       0       0
  4730 ;;      Locals:         1       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0
  4732 ;;      Totals:         1       0       0       0       0
  4733 ;;Total ram usage:        1 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    3
  4736 ;; This function calls:
  4737 ;;		_setLCD
  4738 ;;		__cmd
  4739 ;; This function is called by:
  4740 ;;		_initlcd
  4741 ;;		_clearlcd
  4742 ;;		_write
  4743 ;;		_scroll
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           psect	text755
  4747                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4748                           	line	646
  4749                           	global	__size_of_cmd
  4750  000D                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  4751                           	
  4752  0A8D                     _cmd:	
  4753                           	opt	stack 1
  4754                           ; Regs used in _cmd: [wreg+status,2+status,0+pclath+cstack]
  4755                           ;cmd@Command stored from wreg
  4756                           	line	648
  4757  0A8D  00F8               	movwf	(cmd@Command)
  4758                           	
  4759  0A8E                     l3862:	
  4760                           ;prev13.c: 648: setLCD(Command);
  4761  0A8E  0878               	movf	(cmd@Command),w
  4762  0A8F  120A  158A  275A   	fcall	_setLCD
              120A  158A         
  4763                           	line	649
  4764                           ;prev13.c: 649: _cmd();
  4765  0A94  120A  158A  2284   	fcall	__cmd
              120A  158A         
  4766                           	line	651
  4767                           	
  4768  0A99                     l1264:	
  4769  0A99  0008               	return
  4770                           	opt stack 0
  4771                           GLOBAL	__end_of_cmd
  4772  0A9A                     	__end_of_cmd:
  4773 ;; =============== function _cmd ends ============
  4774                           
  4775                           	signat	_cmd,4216
  4776                           	global	_setlogic
  4777                           psect	text756,local,class=CODE,delta=2
  4778                           global __ptext756
  4779  0C67                     __ptext756:
  4780                           
  4781 ;; *************** function _setlogic *****************
  4782 ;; Defined at:
  4783 ;;		line 213 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;		None               void
  4790 ;; Registers used:
  4791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4797 ;;      Params:         0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0
  4799 ;;      Temps:          1       0       0       0       0
  4800 ;;      Totals:         1       0       0       0       0
  4801 ;;Total ram usage:        1 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    3
  4804 ;; This function calls:
  4805 ;;		_write_log
  4806 ;; This function is called by:
  4807 ;;		_getlogicseq
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           psect	text756
  4811                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4812                           	line	213
  4813                           	global	__size_of_setlogic
  4814  0035                     	__size_of_setlogic	equ	__end_of_setlogic-_setlogic
  4815                           	
  4816  0C67                     _setlogic:	
  4817                           	opt	stack 2
  4818                           ; Regs used in _setlogic: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4819                           	line	214
  4820                           	
  4821  0C67                     l3860:	
  4822                           ;prev13.c: 214: write_log(0,logic_d1);
  4823  0C67  3000               	movlw	low(0)
  4824  0C68  00F5               	movwf	(?_write_log)
  4825  0C69  3000               	movlw	high(0)
  4826  0C6A  00F6               	movwf	((?_write_log))+1
  4827  0C6B  30AA               	movlw	(_logic_d1)&0ffh
  4828  0C6C  00FC               	movwf	(??_setlogic+0)+0
  4829  0C6D  087C               	movf	(??_setlogic+0)+0,w
  4830  0C6E  00F7               	movwf	0+(?_write_log)+02h
  4831  0C6F  120A  158A  25B4   	fcall	_write_log
              120A  158A         
  4832                           	line	215
  4833                           ;prev13.c: 215: write_log(1,logic_d2);
  4834  0C74  3001               	movlw	low(01h)
  4835  0C75  00F5               	movwf	(?_write_log)
  4836  0C76  3000               	movlw	high(01h)
  4837  0C77  00F6               	movwf	((?_write_log))+1
  4838  0C78  30AF               	movlw	(_logic_d2)&0ffh
  4839  0C79  00FC               	movwf	(??_setlogic+0)+0
  4840  0C7A  087C               	movf	(??_setlogic+0)+0,w
  4841  0C7B  00F7               	movwf	0+(?_write_log)+02h
  4842  0C7C  120A  158A  25B4   	fcall	_write_log
              120A  158A         
  4843                           	line	216
  4844                           ;prev13.c: 216: write_log(2,logic_d3);
  4845  0C81  3002               	movlw	low(02h)
  4846  0C82  00F5               	movwf	(?_write_log)
  4847  0C83  3000               	movlw	high(02h)
  4848  0C84  00F6               	movwf	((?_write_log))+1
  4849  0C85  30B4               	movlw	(_logic_d3)&0ffh
  4850  0C86  00FC               	movwf	(??_setlogic+0)+0
  4851  0C87  087C               	movf	(??_setlogic+0)+0,w
  4852  0C88  00F7               	movwf	0+(?_write_log)+02h
  4853  0C89  120A  158A  25B4   	fcall	_write_log
              120A  158A         
  4854                           	line	217
  4855                           ;prev13.c: 217: write_log(3,logic_d4);
  4856  0C8E  3003               	movlw	low(03h)
  4857  0C8F  00F5               	movwf	(?_write_log)
  4858  0C90  3000               	movlw	high(03h)
  4859  0C91  00F6               	movwf	((?_write_log))+1
  4860  0C92  30B9               	movlw	(_logic_d4)&0ffh
  4861  0C93  00FC               	movwf	(??_setlogic+0)+0
  4862  0C94  087C               	movf	(??_setlogic+0)+0,w
  4863  0C95  00F7               	movwf	0+(?_write_log)+02h
  4864  0C96  120A  158A  25B4   	fcall	_write_log
              120A  158A         
  4865                           	line	218
  4866                           	
  4867  0C9B                     l1121:	
  4868  0C9B  0008               	return
  4869                           	opt stack 0
  4870                           GLOBAL	__end_of_setlogic
  4871  0C9C                     	__end_of_setlogic:
  4872 ;; =============== function _setlogic ends ============
  4873                           
  4874                           	signat	_setlogic,88
  4875                           	global	__cmd
  4876                           psect	text757,local,class=CODE,delta=2
  4877                           global __ptext757
  4878  0A84                     __ptext757:
  4879                           
  4880 ;; *************** function __cmd *****************
  4881 ;; Defined at:
  4882 ;;		line 638 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;		None               void
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0, pclath, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4896 ;;      Params:         0       0       0       0       0
  4897 ;;      Locals:         0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0
  4899 ;;      Totals:         0       0       0       0       0
  4900 ;;Total ram usage:        0 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    2
  4903 ;; This function calls:
  4904 ;;		_latch
  4905 ;; This function is called by:
  4906 ;;		_cmd
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           psect	text757
  4910                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4911                           	line	638
  4912                           	global	__size_of__cmd
  4913  0009                     	__size_of__cmd	equ	__end_of__cmd-__cmd
  4914                           	
  4915  0A84                     __cmd:	
  4916                           	opt	stack 1
  4917                           ; Regs used in __cmd: [wreg+status,2+status,0+pclath+cstack]
  4918                           	line	639
  4919                           	
  4920  0A84                     l3856:	
  4921                           ;prev13.c: 639: RD5=0;
  4922  0A84  1283               	bcf	status, 5	;RP0=0, select bank0
  4923  0A85  1303               	bcf	status, 6	;RP1=0, select bank0
  4924  0A86  1288               	bcf	(69/8),(69)&7
  4925                           	line	640
  4926                           	
  4927  0A87                     l3858:	
  4928                           ;prev13.c: 640: latch();
  4929  0A87  120A  158A  22DC   	fcall	_latch
              120A  158A         
  4930                           	line	641
  4931                           	
  4932  0A8C                     l1261:	
  4933  0A8C  0008               	return
  4934                           	opt stack 0
  4935                           GLOBAL	__end_of__cmd
  4936  0A8D                     	__end_of__cmd:
  4937 ;; =============== function __cmd ends ============
  4938                           
  4939                           	signat	__cmd,88
  4940                           	global	__dat
  4941                           psect	text758,local,class=CODE,delta=2
  4942                           global __ptext758
  4943  0A7B                     __ptext758:
  4944                           
  4945 ;; *************** function __dat *****************
  4946 ;; Defined at:
  4947 ;;		line 632 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;		None               void
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0, pclath, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4961 ;;      Params:         0       0       0       0       0
  4962 ;;      Locals:         0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0
  4964 ;;      Totals:         0       0       0       0       0
  4965 ;;Total ram usage:        0 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    2
  4968 ;; This function calls:
  4969 ;;		_latch
  4970 ;; This function is called by:
  4971 ;;		_dat
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           psect	text758
  4975                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4976                           	line	632
  4977                           	global	__size_of__dat
  4978  0009                     	__size_of__dat	equ	__end_of__dat-__dat
  4979                           	
  4980  0A7B                     __dat:	
  4981                           	opt	stack 1
  4982                           ; Regs used in __dat: [wreg+status,2+status,0+pclath+cstack]
  4983                           	line	633
  4984                           	
  4985  0A7B                     l3852:	
  4986                           ;prev13.c: 633: RD5=1;
  4987  0A7B  1283               	bcf	status, 5	;RP0=0, select bank0
  4988  0A7C  1303               	bcf	status, 6	;RP1=0, select bank0
  4989  0A7D  1688               	bsf	(69/8),(69)&7
  4990                           	line	634
  4991                           	
  4992  0A7E                     l3854:	
  4993                           ;prev13.c: 634: latch();
  4994  0A7E  120A  158A  22DC   	fcall	_latch
              120A  158A         
  4995                           	line	635
  4996                           	
  4997  0A83                     l1258:	
  4998  0A83  0008               	return
  4999                           	opt stack 0
  5000                           GLOBAL	__end_of__dat
  5001  0A84                     	__end_of__dat:
  5002 ;; =============== function __dat ends ============
  5003                           
  5004                           	signat	__dat,88
  5005                           	global	_read_log
  5006                           psect	text759,local,class=CODE,delta=2
  5007                           global __ptext759
  5008  0E7B                     __ptext759:
  5009                           
  5010 ;; *************** function _read_log *****************
  5011 ;; Defined at:
  5012 ;;		line 857 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  devno           2    2[BANK0 ] int 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  logic           5    7[BANK0 ] unsigned char [5]
  5017 ;;  ads             1   12[BANK0 ] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      PTR unsigned char 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5027 ;;      Params:         0       2       0       0       0
  5028 ;;      Locals:         0       6       0       0       0
  5029 ;;      Temps:          0       3       0       0       0
  5030 ;;      Totals:         0      11       0       0       0
  5031 ;;Total ram usage:       11 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    2
  5034 ;; This function calls:
  5035 ;;		_read_eep
  5036 ;; This function is called by:
  5037 ;;		_getlogic
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           psect	text759
  5041                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5042                           	line	857
  5043                           	global	__size_of_read_log
  5044  006B                     	__size_of_read_log	equ	__end_of_read_log-_read_log
  5045                           	
  5046  0E7B                     _read_log:	
  5047                           	opt	stack 2
  5048                           ; Regs used in _read_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5049                           	line	858
  5050                           	
  5051  0E7B                     l3836:	
  5052                           ;prev13.c: 858: char logic[]="0000";
  5053  0E7B  3027               	movlw	(read_log@logic)&0ffh
  5054  0E7C  0084               	movwf	fsr0
  5055  0E7D  1683               	bsf	status, 5	;RP0=1, select bank1
  5056  0E7E  1303               	bcf	status, 6	;RP1=0, select bank1
  5057  0E7F  0820               	movf	(read_log@F1918)^080h,w
  5058  0E80  1383               	bcf	status, 7	;select IRP bank0
  5059  0E81  0080               	movwf	indf
  5060  0E82  0A84               	incf	fsr0,f
  5061  0E83  0821               	movf	(read_log@F1918)^080h+1,w
  5062  0E84  0080               	movwf	indf
  5063  0E85  0A84               	incf	fsr0,f
  5064  0E86  0822               	movf	(read_log@F1918)^080h+2,w
  5065  0E87  0080               	movwf	indf
  5066  0E88  0A84               	incf	fsr0,f
  5067  0E89  0823               	movf	(read_log@F1918)^080h+3,w
  5068  0E8A  0080               	movwf	indf
  5069  0E8B  0A84               	incf	fsr0,f
  5070  0E8C  0824               	movf	(read_log@F1918)^080h+4,w
  5071  0E8D  0080               	movwf	indf
  5072                           	line	860
  5073                           	
  5074  0E8E                     l3838:	
  5075                           ;prev13.c: 860: char ads=adr[devno];
  5076  0E8E  1283               	bcf	status, 5	;RP0=0, select bank0
  5077  0E8F  1303               	bcf	status, 6	;RP1=0, select bank0
  5078  0E90  0822               	movf	(read_log@devno),w
  5079  0E91  3E12               	addlw	low(_adr|8000h)
  5080  0E92  0084               	movwf	fsr0
  5081  0E93  3088               	movlw	high(_adr|8000h)
  5082  0E94  1803               	skipnc
  5083  0E95  3E01               	addlw	1
  5084  0E96  00FF               	movwf	btemp+1
  5085  0E97  120A  158A  2000   	fcall	stringtab
              120A  158A         
  5086  0E9C  00A4               	movwf	(??_read_log+0)+0
  5087  0E9D  0824               	movf	(??_read_log+0)+0,w
  5088  0E9E  00AC               	movwf	(read_log@ads)
  5089                           	line	862
  5090                           	
  5091  0E9F                     l3840:	
  5092                           ;prev13.c: 862: logic[0]=read_eep(ads);
  5093  0E9F  082C               	movf	(read_log@ads),w
  5094  0EA0  00A4               	movwf	(??_read_log+0)+0
  5095  0EA1  01A5               	clrf	(??_read_log+0)+0+1
  5096  0EA2  0824               	movf	0+(??_read_log+0)+0,w
  5097  0EA3  00F9               	movwf	(?_read_eep)
  5098  0EA4  0825               	movf	1+(??_read_log+0)+0,w
  5099  0EA5  00FA               	movwf	(?_read_eep+1)
  5100  0EA6  120A  158A  243A   	fcall	_read_eep
              120A  158A         
  5101  0EAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5102  0EAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5103  0EAD  00A6               	movwf	(??_read_log+2)+0
  5104  0EAE  0826               	movf	(??_read_log+2)+0,w
  5105  0EAF  00A7               	movwf	(read_log@logic)
  5106                           	line	863
  5107                           	
  5108  0EB0                     l3842:	
  5109                           ;prev13.c: 863: logic[1]=read_eep(ads+1);
  5110  0EB0  082C               	movf	(read_log@ads),w
  5111  0EB1  3E01               	addlw	low(01h)
  5112  0EB2  00F9               	movwf	(?_read_eep)
  5113  0EB3  3000               	movlw	high(01h)
  5114  0EB4  1803               	skipnc
  5115  0EB5  3001               	movlw	(high(01h)+1)&0ffh
  5116  0EB6  00FA               	movwf	((?_read_eep))+1
  5117  0EB7  120A  158A  243A   	fcall	_read_eep
              120A  158A         
  5118  0EBC  1283               	bcf	status, 5	;RP0=0, select bank0
  5119  0EBD  1303               	bcf	status, 6	;RP1=0, select bank0
  5120  0EBE  00A4               	movwf	(??_read_log+0)+0
  5121  0EBF  0824               	movf	(??_read_log+0)+0,w
  5122  0EC0  00A8               	movwf	0+(read_log@logic)+01h
  5123                           	line	864
  5124                           	
  5125  0EC1                     l3844:	
  5126                           ;prev13.c: 864: logic[2]=read_eep(ads+2);
  5127  0EC1  082C               	movf	(read_log@ads),w
  5128  0EC2  3E02               	addlw	low(02h)
  5129  0EC3  00F9               	movwf	(?_read_eep)
  5130  0EC4  3000               	movlw	high(02h)
  5131  0EC5  1803               	skipnc
  5132  0EC6  3001               	movlw	(high(02h)+1)&0ffh
  5133  0EC7  00FA               	movwf	((?_read_eep))+1
  5134  0EC8  120A  158A  243A   	fcall	_read_eep
              120A  158A         
  5135  0ECD  1283               	bcf	status, 5	;RP0=0, select bank0
  5136  0ECE  1303               	bcf	status, 6	;RP1=0, select bank0
  5137  0ECF  00A4               	movwf	(??_read_log+0)+0
  5138  0ED0  0824               	movf	(??_read_log+0)+0,w
  5139  0ED1  00A9               	movwf	0+(read_log@logic)+02h
  5140                           	line	865
  5141                           	
  5142  0ED2                     l3846:	
  5143                           ;prev13.c: 865: logic[3]=read_eep(ads+3);
  5144  0ED2  082C               	movf	(read_log@ads),w
  5145  0ED3  3E03               	addlw	low(03h)
  5146  0ED4  00F9               	movwf	(?_read_eep)
  5147  0ED5  3000               	movlw	high(03h)
  5148  0ED6  1803               	skipnc
  5149  0ED7  3001               	movlw	(high(03h)+1)&0ffh
  5150  0ED8  00FA               	movwf	((?_read_eep))+1
  5151  0ED9  120A  158A  243A   	fcall	_read_eep
              120A  158A         
  5152  0EDE  1283               	bcf	status, 5	;RP0=0, select bank0
  5153  0EDF  1303               	bcf	status, 6	;RP1=0, select bank0
  5154  0EE0  00A4               	movwf	(??_read_log+0)+0
  5155  0EE1  0824               	movf	(??_read_log+0)+0,w
  5156  0EE2  00AA               	movwf	0+(read_log@logic)+03h
  5157                           	line	867
  5158                           	
  5159  0EE3                     l3848:	
  5160                           ;prev13.c: 867: return logic;
  5161  0EE3  3027               	movlw	(read_log@logic)&0ffh
  5162  0EE4  2EE5               	goto	l1349
  5163                           	
  5164  0EE5                     l3850:	
  5165                           	line	868
  5166                           	
  5167  0EE5                     l1349:	
  5168  0EE5  0008               	return
  5169                           	opt stack 0
  5170                           GLOBAL	__end_of_read_log
  5171  0EE6                     	__end_of_read_log:
  5172 ;; =============== function _read_log ends ============
  5173                           
  5174                           	signat	_read_log,4217
  5175                           	global	_write_log
  5176                           psect	text760,local,class=CODE,delta=2
  5177                           global __ptext760
  5178  0DB4                     __ptext760:
  5179                           
  5180 ;; *************** function _write_log *****************
  5181 ;; Defined at:
  5182 ;;		line 887 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  devno           2    5[COMMON] int 
  5185 ;;  logic           1    7[COMMON] PTR unsigned char 
  5186 ;;		 -> logic_d4(5), logic_d3(5), logic_d2(5), logic_d1(5), 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  ads             1   11[COMMON] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;		None               void
  5191 ;; Registers used:
  5192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5198 ;;      Params:         3       0       0       0       0
  5199 ;;      Locals:         1       0       0       0       0
  5200 ;;      Temps:          3       0       0       0       0
  5201 ;;      Totals:         7       0       0       0       0
  5202 ;;Total ram usage:        7 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    2
  5205 ;; This function calls:
  5206 ;;		_write_eep
  5207 ;; This function is called by:
  5208 ;;		_setlogic
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           psect	text760
  5212                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5213                           	line	887
  5214                           	global	__size_of_write_log
  5215  0061                     	__size_of_write_log	equ	__end_of_write_log-_write_log
  5216                           	
  5217  0DB4                     _write_log:	
  5218                           	opt	stack 2
  5219                           ; Regs used in _write_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5220                           	line	890
  5221                           	
  5222  0DB4                     l3826:	
  5223                           ;prev13.c: 890: char ads=adr[devno];
  5224  0DB4  0875               	movf	(write_log@devno),w
  5225  0DB5  3E12               	addlw	low(_adr|8000h)
  5226  0DB6  0084               	movwf	fsr0
  5227  0DB7  3088               	movlw	high(_adr|8000h)
  5228  0DB8  1803               	skipnc
  5229  0DB9  3E01               	addlw	1
  5230  0DBA  1283               	bcf	status, 5	;RP0=0, select bank0
  5231  0DBB  1303               	bcf	status, 6	;RP1=0, select bank0
  5232  0DBC  00FF               	movwf	btemp+1
  5233  0DBD  120A  158A  2000   	fcall	stringtab
              120A  158A         
  5234  0DC2  00F8               	movwf	(??_write_log+0)+0
  5235  0DC3  0878               	movf	(??_write_log+0)+0,w
  5236  0DC4  00FB               	movwf	(write_log@ads)
  5237                           	line	892
  5238                           	
  5239  0DC5                     l3828:	
  5240                           ;prev13.c: 892: write_eep(ads,logic[0]);
  5241  0DC5  087B               	movf	(write_log@ads),w
  5242  0DC6  00F8               	movwf	(??_write_log+0)+0
  5243  0DC7  01F9               	clrf	(??_write_log+0)+0+1
  5244  0DC8  0878               	movf	0+(??_write_log+0)+0,w
  5245  0DC9  00F2               	movwf	(?_write_eep)
  5246  0DCA  0879               	movf	1+(??_write_log+0)+0,w
  5247  0DCB  00F3               	movwf	(?_write_eep+1)
  5248  0DCC  0877               	movf	(write_log@logic),w
  5249  0DCD  0084               	movwf	fsr0
  5250  0DCE  1383               	bcf	status, 7	;select IRP bank0
  5251  0DCF  0800               	movf	indf,w
  5252  0DD0  00FA               	movwf	(??_write_log+2)+0
  5253  0DD1  087A               	movf	(??_write_log+2)+0,w
  5254  0DD2  00F4               	movwf	0+(?_write_eep)+02h
  5255  0DD3  120A  158A  236F   	fcall	_write_eep
              120A  158A         
  5256                           	line	893
  5257                           	
  5258  0DD8                     l3830:	
  5259                           ;prev13.c: 893: write_eep(ads+1,logic[1]);
  5260  0DD8  087B               	movf	(write_log@ads),w
  5261  0DD9  3E01               	addlw	low(01h)
  5262  0DDA  00F2               	movwf	(?_write_eep)
  5263  0DDB  3000               	movlw	high(01h)
  5264  0DDC  1803               	skipnc
  5265  0DDD  3001               	movlw	(high(01h)+1)&0ffh
  5266  0DDE  00F3               	movwf	((?_write_eep))+1
  5267  0DDF  0877               	movf	(write_log@logic),w
  5268  0DE0  3E01               	addlw	01h
  5269  0DE1  0084               	movwf	fsr0
  5270  0DE2  1383               	bcf	status, 7	;select IRP bank0
  5271  0DE3  0800               	movf	indf,w
  5272  0DE4  00F8               	movwf	(??_write_log+0)+0
  5273  0DE5  0878               	movf	(??_write_log+0)+0,w
  5274  0DE6  00F4               	movwf	0+(?_write_eep)+02h
  5275  0DE7  120A  158A  236F   	fcall	_write_eep
              120A  158A         
  5276                           	line	894
  5277                           	
  5278  0DEC                     l3832:	
  5279                           ;prev13.c: 894: write_eep(ads+2,logic[2]);
  5280  0DEC  087B               	movf	(write_log@ads),w
  5281  0DED  3E02               	addlw	low(02h)
  5282  0DEE  00F2               	movwf	(?_write_eep)
  5283  0DEF  3000               	movlw	high(02h)
  5284  0DF0  1803               	skipnc
  5285  0DF1  3001               	movlw	(high(02h)+1)&0ffh
  5286  0DF2  00F3               	movwf	((?_write_eep))+1
  5287  0DF3  0877               	movf	(write_log@logic),w
  5288  0DF4  3E02               	addlw	02h
  5289  0DF5  0084               	movwf	fsr0
  5290  0DF6  1383               	bcf	status, 7	;select IRP bank0
  5291  0DF7  0800               	movf	indf,w
  5292  0DF8  00F8               	movwf	(??_write_log+0)+0
  5293  0DF9  0878               	movf	(??_write_log+0)+0,w
  5294  0DFA  00F4               	movwf	0+(?_write_eep)+02h
  5295  0DFB  120A  158A  236F   	fcall	_write_eep
              120A  158A         
  5296                           	line	895
  5297                           	
  5298  0E00                     l3834:	
  5299                           ;prev13.c: 895: write_eep(ads+3,logic[3]);
  5300  0E00  087B               	movf	(write_log@ads),w
  5301  0E01  3E03               	addlw	low(03h)
  5302  0E02  00F2               	movwf	(?_write_eep)
  5303  0E03  3000               	movlw	high(03h)
  5304  0E04  1803               	skipnc
  5305  0E05  3001               	movlw	(high(03h)+1)&0ffh
  5306  0E06  00F3               	movwf	((?_write_eep))+1
  5307  0E07  0877               	movf	(write_log@logic),w
  5308  0E08  3E03               	addlw	03h
  5309  0E09  0084               	movwf	fsr0
  5310  0E0A  1383               	bcf	status, 7	;select IRP bank0
  5311  0E0B  0800               	movf	indf,w
  5312  0E0C  00F8               	movwf	(??_write_log+0)+0
  5313  0E0D  0878               	movf	(??_write_log+0)+0,w
  5314  0E0E  00F4               	movwf	0+(?_write_eep)+02h
  5315  0E0F  120A  158A  236F   	fcall	_write_eep
              120A  158A         
  5316                           	line	901
  5317                           	
  5318  0E14                     l1358:	
  5319  0E14  0008               	return
  5320                           	opt stack 0
  5321                           GLOBAL	__end_of_write_log
  5322  0E15                     	__end_of_write_log:
  5323 ;; =============== function _write_log ends ============
  5324                           
  5325                           	signat	_write_log,8312
  5326                           	global	_scan
  5327                           psect	text761,local,class=CODE,delta=2
  5328                           global __ptext761
  5329  00BF                     __ptext761:
  5330                           
  5331 ;; *************** function _scan *****************
  5332 ;; Defined at:
  5333 ;;		line 769 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;		None
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  2    4[COMMON] int 
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0, pclath, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5347 ;;      Params:         2       0       0       0       0
  5348 ;;      Locals:         0       0       0       0       0
  5349 ;;      Temps:          0       0       0       0       0
  5350 ;;      Totals:         2       0       0       0       0
  5351 ;;Total ram usage:        2 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    2
  5354 ;; This function calls:
  5355 ;;		_actrow
  5356 ;; This function is called by:
  5357 ;;		_start
  5358 ;;		_getlogicseq
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           psect	text761
  5362                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5363                           	line	769
  5364                           	global	__size_of_scan
  5365  00E6                     	__size_of_scan	equ	__end_of_scan-_scan
  5366                           	
  5367  00BF                     _scan:	
  5368                           	opt	stack 3
  5369                           ; Regs used in _scan: [wreg+status,2+status,0+pclath+cstack]
  5370                           	line	771
  5371                           	
  5372  00BF                     l3718:	
  5373                           ;prev13.c: 771: actrow(1) ;
  5374  00BF  3001               	movlw	low(01h)
  5375  00C0  00F2               	movwf	(?_actrow)
  5376  00C1  3000               	movlw	high(01h)
  5377  00C2  00F3               	movwf	((?_actrow))+1
  5378  00C3  120A  158A  24D5   	fcall	_actrow
              120A  118A         
  5379                           	line	772
  5380                           	
  5381  00C8                     l3720:	
  5382                           ;prev13.c: 772: if( RD6==1)
  5383  00C8  1283               	bcf	status, 5	;RP0=0, select bank0
  5384  00C9  1303               	bcf	status, 6	;RP1=0, select bank0
  5385  00CA  1F08               	btfss	(70/8),(70)&7
  5386  00CB  28CD               	goto	u4331
  5387  00CC  28CE               	goto	u4330
  5388  00CD                     u4331:
  5389  00CD  28D3               	goto	l1303
  5390  00CE                     u4330:
  5391                           	line	773
  5392                           	
  5393  00CE                     l3722:	
  5394                           ;prev13.c: 773: return 0;
  5395  00CE  01F4               	clrf	(?_scan)
  5396  00CF  01F5               	clrf	(?_scan+1)
  5397  00D0  29A4               	goto	l1304
  5398                           	
  5399  00D1                     l3724:	
  5400  00D1  29A4               	goto	l1304
  5401                           	
  5402  00D2                     l3726:	
  5403  00D2  28F4               	goto	l3744
  5404                           	line	774
  5405                           	
  5406  00D3                     l1303:	
  5407                           ;prev13.c: 774: else if(RD7==1)
  5408  00D3  1F88               	btfss	(71/8),(71)&7
  5409  00D4  28D6               	goto	u4341
  5410  00D5  28D7               	goto	u4340
  5411  00D6                     u4341:
  5412  00D6  28DE               	goto	l1306
  5413  00D7                     u4340:
  5414                           	line	775
  5415                           	
  5416  00D7                     l3728:	
  5417                           ;prev13.c: 775: return 1;
  5418  00D7  3001               	movlw	low(01h)
  5419  00D8  00F4               	movwf	(?_scan)
  5420  00D9  3000               	movlw	high(01h)
  5421  00DA  00F5               	movwf	((?_scan))+1
  5422  00DB  29A4               	goto	l1304
  5423                           	
  5424  00DC                     l3730:	
  5425  00DC  29A4               	goto	l1304
  5426                           	
  5427  00DD                     l3732:	
  5428  00DD  28F4               	goto	l3744
  5429                           	line	776
  5430                           	
  5431  00DE                     l1306:	
  5432                           ;prev13.c: 776: else if(RB6==1)
  5433  00DE  1F06               	btfss	(54/8),(54)&7
  5434  00DF  28E1               	goto	u4351
  5435  00E0  28E2               	goto	u4350
  5436  00E1                     u4351:
  5437  00E1  28E9               	goto	l1308
  5438  00E2                     u4350:
  5439                           	line	777
  5440                           	
  5441  00E2                     l3734:	
  5442                           ;prev13.c: 777: return 2;
  5443  00E2  3002               	movlw	low(02h)
  5444  00E3  00F4               	movwf	(?_scan)
  5445  00E4  3000               	movlw	high(02h)
  5446  00E5  00F5               	movwf	((?_scan))+1
  5447  00E6  29A4               	goto	l1304
  5448                           	
  5449  00E7                     l3736:	
  5450  00E7  29A4               	goto	l1304
  5451                           	
  5452  00E8                     l3738:	
  5453  00E8  28F4               	goto	l3744
  5454                           	line	778
  5455                           	
  5456  00E9                     l1308:	
  5457                           ;prev13.c: 778: else if(RB7==1)
  5458  00E9  1F86               	btfss	(55/8),(55)&7
  5459  00EA  28EC               	goto	u4361
  5460  00EB  28ED               	goto	u4360
  5461  00EC                     u4361:
  5462  00EC  28F4               	goto	l3744
  5463  00ED                     u4360:
  5464                           	line	779
  5465                           	
  5466  00ED                     l3740:	
  5467                           ;prev13.c: 779: return 0;
  5468  00ED  01F4               	clrf	(?_scan)
  5469  00EE  01F5               	clrf	(?_scan+1)
  5470  00EF  29A4               	goto	l1304
  5471                           	
  5472  00F0                     l3742:	
  5473  00F0  29A4               	goto	l1304
  5474                           	
  5475  00F1                     l1310:	
  5476  00F1  28F4               	goto	l3744
  5477                           	line	781
  5478                           	
  5479  00F2                     l1309:	
  5480  00F2  28F4               	goto	l3744
  5481                           	
  5482  00F3                     l1307:	
  5483  00F3  28F4               	goto	l3744
  5484                           	
  5485  00F4                     l1305:	
  5486                           	
  5487  00F4                     l3744:	
  5488                           ;prev13.c: 781: actrow(2) ;
  5489  00F4  3002               	movlw	low(02h)
  5490  00F5  00F2               	movwf	(?_actrow)
  5491  00F6  3000               	movlw	high(02h)
  5492  00F7  00F3               	movwf	((?_actrow))+1
  5493  00F8  120A  158A  24D5   	fcall	_actrow
              120A  118A         
  5494                           	line	783
  5495                           	
  5496  00FD                     l3746:	
  5497                           ;prev13.c: 783: if( RD6==1)
  5498  00FD  1283               	bcf	status, 5	;RP0=0, select bank0
  5499  00FE  1303               	bcf	status, 6	;RP1=0, select bank0
  5500  00FF  1F08               	btfss	(70/8),(70)&7
  5501  0100  2902               	goto	u4371
  5502  0101  2903               	goto	u4370
  5503  0102                     u4371:
  5504  0102  290A               	goto	l1311
  5505  0103                     u4370:
  5506                           	line	784
  5507                           	
  5508  0103                     l3748:	
  5509                           ;prev13.c: 784: return 4;
  5510  0103  3004               	movlw	low(04h)
  5511  0104  00F4               	movwf	(?_scan)
  5512  0105  3000               	movlw	high(04h)
  5513  0106  00F5               	movwf	((?_scan))+1
  5514  0107  29A4               	goto	l1304
  5515                           	
  5516  0108                     l3750:	
  5517  0108  29A4               	goto	l1304
  5518                           	
  5519  0109                     l3752:	
  5520  0109  292D               	goto	l3770
  5521                           	line	785
  5522                           	
  5523  010A                     l1311:	
  5524                           ;prev13.c: 785: else if(RD7==1)
  5525  010A  1F88               	btfss	(71/8),(71)&7
  5526  010B  290D               	goto	u4381
  5527  010C  290E               	goto	u4380
  5528  010D                     u4381:
  5529  010D  2915               	goto	l1313
  5530  010E                     u4380:
  5531                           	line	786
  5532                           	
  5533  010E                     l3754:	
  5534                           ;prev13.c: 786: return 5;
  5535  010E  3005               	movlw	low(05h)
  5536  010F  00F4               	movwf	(?_scan)
  5537  0110  3000               	movlw	high(05h)
  5538  0111  00F5               	movwf	((?_scan))+1
  5539  0112  29A4               	goto	l1304
  5540                           	
  5541  0113                     l3756:	
  5542  0113  29A4               	goto	l1304
  5543                           	
  5544  0114                     l3758:	
  5545  0114  292D               	goto	l3770
  5546                           	line	787
  5547                           	
  5548  0115                     l1313:	
  5549                           ;prev13.c: 787: else if(RB6==1)
  5550  0115  1F06               	btfss	(54/8),(54)&7
  5551  0116  2918               	goto	u4391
  5552  0117  2919               	goto	u4390
  5553  0118                     u4391:
  5554  0118  2920               	goto	l1315
  5555  0119                     u4390:
  5556                           	line	788
  5557                           	
  5558  0119                     l3760:	
  5559                           ;prev13.c: 788: return 6;
  5560  0119  3006               	movlw	low(06h)
  5561  011A  00F4               	movwf	(?_scan)
  5562  011B  3000               	movlw	high(06h)
  5563  011C  00F5               	movwf	((?_scan))+1
  5564  011D  29A4               	goto	l1304
  5565                           	
  5566  011E                     l3762:	
  5567  011E  29A4               	goto	l1304
  5568                           	
  5569  011F                     l3764:	
  5570  011F  292D               	goto	l3770
  5571                           	line	789
  5572                           	
  5573  0120                     l1315:	
  5574                           ;prev13.c: 789: else if(RB7==1)
  5575  0120  1F86               	btfss	(55/8),(55)&7
  5576  0121  2923               	goto	u4401
  5577  0122  2924               	goto	u4400
  5578  0123                     u4401:
  5579  0123  292D               	goto	l3770
  5580  0124                     u4400:
  5581                           	line	790
  5582                           	
  5583  0124                     l3766:	
  5584                           ;prev13.c: 790: return 1;
  5585  0124  3001               	movlw	low(01h)
  5586  0125  00F4               	movwf	(?_scan)
  5587  0126  3000               	movlw	high(01h)
  5588  0127  00F5               	movwf	((?_scan))+1
  5589  0128  29A4               	goto	l1304
  5590                           	
  5591  0129                     l3768:	
  5592  0129  29A4               	goto	l1304
  5593                           	
  5594  012A                     l1317:	
  5595  012A  292D               	goto	l3770
  5596                           	line	792
  5597                           	
  5598  012B                     l1316:	
  5599  012B  292D               	goto	l3770
  5600                           	
  5601  012C                     l1314:	
  5602  012C  292D               	goto	l3770
  5603                           	
  5604  012D                     l1312:	
  5605                           	
  5606  012D                     l3770:	
  5607                           ;prev13.c: 792: actrow(3) ;
  5608  012D  3003               	movlw	low(03h)
  5609  012E  00F2               	movwf	(?_actrow)
  5610  012F  3000               	movlw	high(03h)
  5611  0130  00F3               	movwf	((?_actrow))+1
  5612  0131  120A  158A  24D5   	fcall	_actrow
              120A  118A         
  5613                           	line	794
  5614                           	
  5615  0136                     l3772:	
  5616                           ;prev13.c: 794: if( RD6==1)
  5617  0136  1283               	bcf	status, 5	;RP0=0, select bank0
  5618  0137  1303               	bcf	status, 6	;RP1=0, select bank0
  5619  0138  1F08               	btfss	(70/8),(70)&7
  5620  0139  293B               	goto	u4411
  5621  013A  293C               	goto	u4410
  5622  013B                     u4411:
  5623  013B  2943               	goto	l1318
  5624  013C                     u4410:
  5625                           	line	795
  5626                           	
  5627  013C                     l3774:	
  5628                           ;prev13.c: 795: return 8;
  5629  013C  3008               	movlw	low(08h)
  5630  013D  00F4               	movwf	(?_scan)
  5631  013E  3000               	movlw	high(08h)
  5632  013F  00F5               	movwf	((?_scan))+1
  5633  0140  29A4               	goto	l1304
  5634                           	
  5635  0141                     l3776:	
  5636  0141  29A4               	goto	l1304
  5637                           	
  5638  0142                     l3778:	
  5639  0142  2966               	goto	l3796
  5640                           	line	796
  5641                           	
  5642  0143                     l1318:	
  5643                           ;prev13.c: 796: else if(RD7==1)
  5644  0143  1F88               	btfss	(71/8),(71)&7
  5645  0144  2946               	goto	u4421
  5646  0145  2947               	goto	u4420
  5647  0146                     u4421:
  5648  0146  294E               	goto	l1320
  5649  0147                     u4420:
  5650                           	line	797
  5651                           	
  5652  0147                     l3780:	
  5653                           ;prev13.c: 797: return 9;
  5654  0147  3009               	movlw	low(09h)
  5655  0148  00F4               	movwf	(?_scan)
  5656  0149  3000               	movlw	high(09h)
  5657  014A  00F5               	movwf	((?_scan))+1
  5658  014B  29A4               	goto	l1304
  5659                           	
  5660  014C                     l3782:	
  5661  014C  29A4               	goto	l1304
  5662                           	
  5663  014D                     l3784:	
  5664  014D  2966               	goto	l3796
  5665                           	line	798
  5666                           	
  5667  014E                     l1320:	
  5668                           ;prev13.c: 798: else if(RB6==1)
  5669  014E  1F06               	btfss	(54/8),(54)&7
  5670  014F  2951               	goto	u4431
  5671  0150  2952               	goto	u4430
  5672  0151                     u4431:
  5673  0151  2959               	goto	l1322
  5674  0152                     u4430:
  5675                           	line	799
  5676                           	
  5677  0152                     l3786:	
  5678                           ;prev13.c: 799: return 10;
  5679  0152  300A               	movlw	low(0Ah)
  5680  0153  00F4               	movwf	(?_scan)
  5681  0154  3000               	movlw	high(0Ah)
  5682  0155  00F5               	movwf	((?_scan))+1
  5683  0156  29A4               	goto	l1304
  5684                           	
  5685  0157                     l3788:	
  5686  0157  29A4               	goto	l1304
  5687                           	
  5688  0158                     l3790:	
  5689  0158  2966               	goto	l3796
  5690                           	line	800
  5691                           	
  5692  0159                     l1322:	
  5693                           ;prev13.c: 800: else if(RB7==1)
  5694  0159  1F86               	btfss	(55/8),(55)&7
  5695  015A  295C               	goto	u4441
  5696  015B  295D               	goto	u4440
  5697  015C                     u4441:
  5698  015C  2966               	goto	l3796
  5699  015D                     u4440:
  5700                           	line	801
  5701                           	
  5702  015D                     l3792:	
  5703                           ;prev13.c: 801: return 2;
  5704  015D  3002               	movlw	low(02h)
  5705  015E  00F4               	movwf	(?_scan)
  5706  015F  3000               	movlw	high(02h)
  5707  0160  00F5               	movwf	((?_scan))+1
  5708  0161  29A4               	goto	l1304
  5709                           	
  5710  0162                     l3794:	
  5711  0162  29A4               	goto	l1304
  5712                           	
  5713  0163                     l1324:	
  5714  0163  2966               	goto	l3796
  5715                           	line	804
  5716                           	
  5717  0164                     l1323:	
  5718  0164  2966               	goto	l3796
  5719                           	
  5720  0165                     l1321:	
  5721  0165  2966               	goto	l3796
  5722                           	
  5723  0166                     l1319:	
  5724                           	
  5725  0166                     l3796:	
  5726                           ;prev13.c: 804: actrow(4) ;
  5727  0166  3004               	movlw	low(04h)
  5728  0167  00F2               	movwf	(?_actrow)
  5729  0168  3000               	movlw	high(04h)
  5730  0169  00F3               	movwf	((?_actrow))+1
  5731  016A  120A  158A  24D5   	fcall	_actrow
              120A  118A         
  5732                           	line	806
  5733                           	
  5734  016F                     l3798:	
  5735                           ;prev13.c: 806: if( RD6==1)
  5736  016F  1283               	bcf	status, 5	;RP0=0, select bank0
  5737  0170  1303               	bcf	status, 6	;RP1=0, select bank0
  5738  0171  1F08               	btfss	(70/8),(70)&7
  5739  0172  2974               	goto	u4451
  5740  0173  2975               	goto	u4450
  5741  0174                     u4451:
  5742  0174  297C               	goto	l1325
  5743  0175                     u4450:
  5744                           	line	807
  5745                           	
  5746  0175                     l3800:	
  5747                           ;prev13.c: 807: return 12;
  5748  0175  300C               	movlw	low(0Ch)
  5749  0176  00F4               	movwf	(?_scan)
  5750  0177  3000               	movlw	high(0Ch)
  5751  0178  00F5               	movwf	((?_scan))+1
  5752  0179  29A4               	goto	l1304
  5753                           	
  5754  017A                     l3802:	
  5755  017A  29A4               	goto	l1304
  5756                           	
  5757  017B                     l3804:	
  5758  017B  299F               	goto	l3822
  5759                           	line	808
  5760                           	
  5761  017C                     l1325:	
  5762                           ;prev13.c: 808: else if(RD7==1)
  5763  017C  1F88               	btfss	(71/8),(71)&7
  5764  017D  297F               	goto	u4461
  5765  017E  2980               	goto	u4460
  5766  017F                     u4461:
  5767  017F  2987               	goto	l1327
  5768  0180                     u4460:
  5769                           	line	809
  5770                           	
  5771  0180                     l3806:	
  5772                           ;prev13.c: 809: return 13;
  5773  0180  300D               	movlw	low(0Dh)
  5774  0181  00F4               	movwf	(?_scan)
  5775  0182  3000               	movlw	high(0Dh)
  5776  0183  00F5               	movwf	((?_scan))+1
  5777  0184  29A4               	goto	l1304
  5778                           	
  5779  0185                     l3808:	
  5780  0185  29A4               	goto	l1304
  5781                           	
  5782  0186                     l3810:	
  5783  0186  299F               	goto	l3822
  5784                           	line	810
  5785                           	
  5786  0187                     l1327:	
  5787                           ;prev13.c: 810: else if(RB6==1)
  5788  0187  1F06               	btfss	(54/8),(54)&7
  5789  0188  298A               	goto	u4471
  5790  0189  298B               	goto	u4470
  5791  018A                     u4471:
  5792  018A  2992               	goto	l1329
  5793  018B                     u4470:
  5794                           	line	811
  5795                           	
  5796  018B                     l3812:	
  5797                           ;prev13.c: 811: return 14;
  5798  018B  300E               	movlw	low(0Eh)
  5799  018C  00F4               	movwf	(?_scan)
  5800  018D  3000               	movlw	high(0Eh)
  5801  018E  00F5               	movwf	((?_scan))+1
  5802  018F  29A4               	goto	l1304
  5803                           	
  5804  0190                     l3814:	
  5805  0190  29A4               	goto	l1304
  5806                           	
  5807  0191                     l3816:	
  5808  0191  299F               	goto	l3822
  5809                           	line	812
  5810                           	
  5811  0192                     l1329:	
  5812                           ;prev13.c: 812: else if(RB7==1)
  5813  0192  1F86               	btfss	(55/8),(55)&7
  5814  0193  2995               	goto	u4481
  5815  0194  2996               	goto	u4480
  5816  0195                     u4481:
  5817  0195  299F               	goto	l3822
  5818  0196                     u4480:
  5819                           	line	813
  5820                           	
  5821  0196                     l3818:	
  5822                           ;prev13.c: 813: return 3;
  5823  0196  3003               	movlw	low(03h)
  5824  0197  00F4               	movwf	(?_scan)
  5825  0198  3000               	movlw	high(03h)
  5826  0199  00F5               	movwf	((?_scan))+1
  5827  019A  29A4               	goto	l1304
  5828                           	
  5829  019B                     l3820:	
  5830  019B  29A4               	goto	l1304
  5831                           	
  5832  019C                     l1331:	
  5833  019C  299F               	goto	l3822
  5834                           	line	817
  5835                           	
  5836  019D                     l1330:	
  5837  019D  299F               	goto	l3822
  5838                           	
  5839  019E                     l1328:	
  5840  019E  299F               	goto	l3822
  5841                           	
  5842  019F                     l1326:	
  5843                           	
  5844  019F                     l3822:	
  5845                           ;prev13.c: 817: return 99;
  5846  019F  3063               	movlw	low(063h)
  5847  01A0  00F4               	movwf	(?_scan)
  5848  01A1  3000               	movlw	high(063h)
  5849  01A2  00F5               	movwf	((?_scan))+1
  5850  01A3  29A4               	goto	l1304
  5851                           	
  5852  01A4                     l3824:	
  5853                           	line	821
  5854                           	
  5855  01A4                     l1304:	
  5856  01A4  0008               	return
  5857                           	opt stack 0
  5858                           GLOBAL	__end_of_scan
  5859  01A5                     	__end_of_scan:
  5860 ;; =============== function _scan ends ============
  5861                           
  5862                           	signat	_scan,90
  5863                           	global	_actrow
  5864                           psect	text762,local,class=CODE,delta=2
  5865                           global __ptext762
  5866  0CD5                     __ptext762:
  5867                           
  5868 ;; *************** function _actrow *****************
  5869 ;; Defined at:
  5870 ;;		line 830 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  n               2    2[COMMON] int 
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;		None               void
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0, pclath, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5884 ;;      Params:         2       0       0       0       0
  5885 ;;      Locals:         0       0       0       0       0
  5886 ;;      Temps:          0       0       0       0       0
  5887 ;;      Totals:         2       0       0       0       0
  5888 ;;Total ram usage:        2 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    1
  5891 ;; This function calls:
  5892 ;;		_resetout
  5893 ;;		_delay
  5894 ;; This function is called by:
  5895 ;;		_scan
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           psect	text762
  5899                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5900                           	line	830
  5901                           	global	__size_of_actrow
  5902  003E                     	__size_of_actrow	equ	__end_of_actrow-_actrow
  5903                           	
  5904  0CD5                     _actrow:	
  5905                           	opt	stack 3
  5906                           ; Regs used in _actrow: [wreg+status,2+status,0+pclath+cstack]
  5907                           	line	831
  5908                           	
  5909  0CD5                     l3698:	
  5910                           ;prev13.c: 831: resetout();
  5911  0CD5  120A  158A  225D   	fcall	_resetout
              120A  158A         
  5912                           	line	833
  5913                           	
  5914  0CDA                     l3700:	
  5915                           ;prev13.c: 833: if(n==1)
  5916  0CDA  3001               	movlw	01h
  5917  0CDB  0672               	xorwf	(actrow@n),w
  5918  0CDC  0473               	iorwf	(actrow@n+1),w
  5919  0CDD  1D03               	skipz
  5920  0CDE  2CE0               	goto	u4291
  5921  0CDF  2CE1               	goto	u4290
  5922  0CE0                     u4291:
  5923  0CE0  2CE5               	goto	l3704
  5924  0CE1                     u4290:
  5925                           	line	835
  5926                           	
  5927  0CE1                     l3702:	
  5928                           ;prev13.c: 834: {
  5929                           ;prev13.c: 835: RB3=1;
  5930  0CE1  1283               	bcf	status, 5	;RP0=0, select bank0
  5931  0CE2  1303               	bcf	status, 6	;RP1=0, select bank0
  5932  0CE3  1586               	bsf	(51/8),(51)&7
  5933                           	line	836
  5934                           ;prev13.c: 836: }
  5935  0CE4  2D09               	goto	l3716
  5936                           	line	837
  5937                           	
  5938  0CE5                     l1337:	
  5939                           	
  5940  0CE5                     l3704:	
  5941                           ;prev13.c: 837: else if(n==2)
  5942  0CE5  3002               	movlw	02h
  5943  0CE6  0672               	xorwf	(actrow@n),w
  5944  0CE7  0473               	iorwf	(actrow@n+1),w
  5945  0CE8  1D03               	skipz
  5946  0CE9  2CEB               	goto	u4301
  5947  0CEA  2CEC               	goto	u4300
  5948  0CEB                     u4301:
  5949  0CEB  2CF0               	goto	l3708
  5950  0CEC                     u4300:
  5951                           	line	839
  5952                           	
  5953  0CEC                     l3706:	
  5954                           ;prev13.c: 838: {
  5955                           ;prev13.c: 839: RB2=1;
  5956  0CEC  1283               	bcf	status, 5	;RP0=0, select bank0
  5957  0CED  1303               	bcf	status, 6	;RP1=0, select bank0
  5958  0CEE  1506               	bsf	(50/8),(50)&7
  5959                           	line	840
  5960                           ;prev13.c: 840: }
  5961  0CEF  2D09               	goto	l3716
  5962                           	line	841
  5963                           	
  5964  0CF0                     l1339:	
  5965                           	
  5966  0CF0                     l3708:	
  5967                           ;prev13.c: 841: else if(n==3)
  5968  0CF0  3003               	movlw	03h
  5969  0CF1  0672               	xorwf	(actrow@n),w
  5970  0CF2  0473               	iorwf	(actrow@n+1),w
  5971  0CF3  1D03               	skipz
  5972  0CF4  2CF6               	goto	u4311
  5973  0CF5  2CF7               	goto	u4310
  5974  0CF6                     u4311:
  5975  0CF6  2CFB               	goto	l3712
  5976  0CF7                     u4310:
  5977                           	line	843
  5978                           	
  5979  0CF7                     l3710:	
  5980                           ;prev13.c: 842: {
  5981                           ;prev13.c: 843: RB1=1;
  5982  0CF7  1283               	bcf	status, 5	;RP0=0, select bank0
  5983  0CF8  1303               	bcf	status, 6	;RP1=0, select bank0
  5984  0CF9  1486               	bsf	(49/8),(49)&7
  5985                           	line	844
  5986                           ;prev13.c: 844: }
  5987  0CFA  2D09               	goto	l3716
  5988                           	line	845
  5989                           	
  5990  0CFB                     l1341:	
  5991                           	
  5992  0CFB                     l3712:	
  5993                           ;prev13.c: 845: else if(n==4)
  5994  0CFB  3004               	movlw	04h
  5995  0CFC  0672               	xorwf	(actrow@n),w
  5996  0CFD  0473               	iorwf	(actrow@n+1),w
  5997  0CFE  1D03               	skipz
  5998  0CFF  2D01               	goto	u4321
  5999  0D00  2D02               	goto	u4320
  6000  0D01                     u4321:
  6001  0D01  2D09               	goto	l3716
  6002  0D02                     u4320:
  6003                           	line	847
  6004                           	
  6005  0D02                     l3714:	
  6006                           ;prev13.c: 846: {
  6007                           ;prev13.c: 847: RB0=1;
  6008  0D02  1283               	bcf	status, 5	;RP0=0, select bank0
  6009  0D03  1303               	bcf	status, 6	;RP1=0, select bank0
  6010  0D04  1406               	bsf	(48/8),(48)&7
  6011  0D05  2D09               	goto	l3716
  6012                           	line	848
  6013                           	
  6014  0D06                     l1343:	
  6015  0D06  2D09               	goto	l3716
  6016                           	line	849
  6017                           	
  6018  0D07                     l1342:	
  6019  0D07  2D09               	goto	l3716
  6020                           	
  6021  0D08                     l1340:	
  6022  0D08  2D09               	goto	l3716
  6023                           	
  6024  0D09                     l1338:	
  6025                           	
  6026  0D09                     l3716:	
  6027                           ;prev13.c: 848: }
  6028                           ;prev13.c: 849: delay(200);
  6029  0D09  30C8               	movlw	low(0C8h)
  6030  0D0A  00F0               	movwf	(?_delay)
  6031  0D0B  3000               	movlw	high(0C8h)
  6032  0D0C  00F1               	movwf	((?_delay))+1
  6033  0D0D  120A  158A  22C8   	fcall	_delay
              120A  158A         
  6034                           	line	852
  6035                           	
  6036  0D12                     l1344:	
  6037  0D12  0008               	return
  6038                           	opt stack 0
  6039                           GLOBAL	__end_of_actrow
  6040  0D13                     	__end_of_actrow:
  6041 ;; =============== function _actrow ends ============
  6042                           
  6043                           	signat	_actrow,4216
  6044                           	global	_setLCD
  6045                           psect	text763,local,class=CODE,delta=2
  6046                           global __ptext763
  6047  0F5A                     __ptext763:
  6048                           
  6049 ;; *************** function _setLCD *****************
  6050 ;; Defined at:
  6051 ;;		line 672 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  number          1    wreg     unsigned char 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  number          1    7[COMMON] unsigned char 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;		None               void
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0, pclath, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6065 ;;      Params:         0       0       0       0       0
  6066 ;;      Locals:         1       0       0       0       0
  6067 ;;      Temps:          2       0       0       0       0
  6068 ;;      Totals:         3       0       0       0       0
  6069 ;;Total ram usage:        3 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    1
  6072 ;; This function calls:
  6073 ;;		_getn
  6074 ;; This function is called by:
  6075 ;;		_cmd
  6076 ;;		_dat
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           psect	text763
  6080                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6081                           	line	672
  6082                           	global	__size_of_setLCD
  6083  00A6                     	__size_of_setLCD	equ	__end_of_setLCD-_setLCD
  6084                           	
  6085  0F5A                     _setLCD:	
  6086                           	opt	stack 2
  6087                           ; Regs used in _setLCD: [wreg+status,2+status,0+pclath+cstack]
  6088                           ;setLCD@number stored from wreg
  6089                           	line	675
  6090  0F5A  00F7               	movwf	(setLCD@number)
  6091                           	
  6092  0F5B                     l3696:	
  6093                           ;prev13.c: 675: RD3=getn(number,0);
  6094  0F5B  01F0               	clrf	(?_getn)
  6095  0F5C  0877               	movf	(setLCD@number),w
  6096  0F5D  120A  158A  22F5   	fcall	_getn
              120A  158A         
  6097  0F62  00F5               	movwf	(??_setLCD+0)+0
  6098  0F63  1875               	btfsc	0+(??_setLCD+0)+0,0
  6099  0F64  2F66               	goto	u4131
  6100  0F65  2F6A               	goto	u4130
  6101                           	
  6102  0F66                     u4131:
  6103  0F66  1283               	bcf	status, 5	;RP0=0, select bank0
  6104  0F67  1303               	bcf	status, 6	;RP1=0, select bank0
  6105  0F68  1588               	bsf	(67/8),(67)&7
  6106  0F69  2F6D               	goto	u4144
  6107  0F6A                     u4130:
  6108  0F6A  1283               	bcf	status, 5	;RP0=0, select bank0
  6109  0F6B  1303               	bcf	status, 6	;RP1=0, select bank0
  6110  0F6C  1188               	bcf	(67/8),(67)&7
  6111  0F6D                     u4144:
  6112                           	line	676
  6113                           ;prev13.c: 676: RD2=getn(number,1);
  6114  0F6D  01F0               	clrf	(?_getn)
  6115  0F6E  1403               	bsf	status,0
  6116  0F6F  0DF0               	rlf	(?_getn),f
  6117  0F70  0877               	movf	(setLCD@number),w
  6118  0F71  120A  158A  22F5   	fcall	_getn
              120A  158A         
  6119  0F76  00F5               	movwf	(??_setLCD+0)+0
  6120  0F77  1875               	btfsc	0+(??_setLCD+0)+0,0
  6121  0F78  2F7A               	goto	u4151
  6122  0F79  2F7E               	goto	u4150
  6123                           	
  6124  0F7A                     u4151:
  6125  0F7A  1283               	bcf	status, 5	;RP0=0, select bank0
  6126  0F7B  1303               	bcf	status, 6	;RP1=0, select bank0
  6127  0F7C  1508               	bsf	(66/8),(66)&7
  6128  0F7D  2F81               	goto	u4164
  6129  0F7E                     u4150:
  6130  0F7E  1283               	bcf	status, 5	;RP0=0, select bank0
  6131  0F7F  1303               	bcf	status, 6	;RP1=0, select bank0
  6132  0F80  1108               	bcf	(66/8),(66)&7
  6133  0F81                     u4164:
  6134                           	line	677
  6135                           ;prev13.c: 677: RD1=getn(number,2);
  6136  0F81  3002               	movlw	(02h)
  6137  0F82  00F5               	movwf	(??_setLCD+0)+0
  6138  0F83  0875               	movf	(??_setLCD+0)+0,w
  6139  0F84  00F0               	movwf	(?_getn)
  6140  0F85  0877               	movf	(setLCD@number),w
  6141  0F86  120A  158A  22F5   	fcall	_getn
              120A  158A         
  6142  0F8B  00F6               	movwf	(??_setLCD+1)+0
  6143  0F8C  1876               	btfsc	0+(??_setLCD+1)+0,0
  6144  0F8D  2F8F               	goto	u4171
  6145  0F8E  2F93               	goto	u4170
  6146                           	
  6147  0F8F                     u4171:
  6148  0F8F  1283               	bcf	status, 5	;RP0=0, select bank0
  6149  0F90  1303               	bcf	status, 6	;RP1=0, select bank0
  6150  0F91  1488               	bsf	(65/8),(65)&7
  6151  0F92  2F96               	goto	u4184
  6152  0F93                     u4170:
  6153  0F93  1283               	bcf	status, 5	;RP0=0, select bank0
  6154  0F94  1303               	bcf	status, 6	;RP1=0, select bank0
  6155  0F95  1088               	bcf	(65/8),(65)&7
  6156  0F96                     u4184:
  6157                           	line	678
  6158                           ;prev13.c: 678: RD0=getn(number,3);
  6159  0F96  3003               	movlw	(03h)
  6160  0F97  00F5               	movwf	(??_setLCD+0)+0
  6161  0F98  0875               	movf	(??_setLCD+0)+0,w
  6162  0F99  00F0               	movwf	(?_getn)
  6163  0F9A  0877               	movf	(setLCD@number),w
  6164  0F9B  120A  158A  22F5   	fcall	_getn
              120A  158A         
  6165  0FA0  00F6               	movwf	(??_setLCD+1)+0
  6166  0FA1  1876               	btfsc	0+(??_setLCD+1)+0,0
  6167  0FA2  2FA4               	goto	u4191
  6168  0FA3  2FA8               	goto	u4190
  6169                           	
  6170  0FA4                     u4191:
  6171  0FA4  1283               	bcf	status, 5	;RP0=0, select bank0
  6172  0FA5  1303               	bcf	status, 6	;RP1=0, select bank0
  6173  0FA6  1408               	bsf	(64/8),(64)&7
  6174  0FA7  2FAB               	goto	u4204
  6175  0FA8                     u4190:
  6176  0FA8  1283               	bcf	status, 5	;RP0=0, select bank0
  6177  0FA9  1303               	bcf	status, 6	;RP1=0, select bank0
  6178  0FAA  1008               	bcf	(64/8),(64)&7
  6179  0FAB                     u4204:
  6180                           	line	679
  6181                           ;prev13.c: 679: RC3=getn(number,4);
  6182  0FAB  3004               	movlw	(04h)
  6183  0FAC  00F5               	movwf	(??_setLCD+0)+0
  6184  0FAD  0875               	movf	(??_setLCD+0)+0,w
  6185  0FAE  00F0               	movwf	(?_getn)
  6186  0FAF  0877               	movf	(setLCD@number),w
  6187  0FB0  120A  158A  22F5   	fcall	_getn
              120A  158A         
  6188  0FB5  00F6               	movwf	(??_setLCD+1)+0
  6189  0FB6  1876               	btfsc	0+(??_setLCD+1)+0,0
  6190  0FB7  2FB9               	goto	u4211
  6191  0FB8  2FBD               	goto	u4210
  6192                           	
  6193  0FB9                     u4211:
  6194  0FB9  1283               	bcf	status, 5	;RP0=0, select bank0
  6195  0FBA  1303               	bcf	status, 6	;RP1=0, select bank0
  6196  0FBB  1587               	bsf	(59/8),(59)&7
  6197  0FBC  2FC0               	goto	u4224
  6198  0FBD                     u4210:
  6199  0FBD  1283               	bcf	status, 5	;RP0=0, select bank0
  6200  0FBE  1303               	bcf	status, 6	;RP1=0, select bank0
  6201  0FBF  1187               	bcf	(59/8),(59)&7
  6202  0FC0                     u4224:
  6203                           	line	680
  6204                           ;prev13.c: 680: RC2=getn(number,5);
  6205  0FC0  3005               	movlw	(05h)
  6206  0FC1  00F5               	movwf	(??_setLCD+0)+0
  6207  0FC2  0875               	movf	(??_setLCD+0)+0,w
  6208  0FC3  00F0               	movwf	(?_getn)
  6209  0FC4  0877               	movf	(setLCD@number),w
  6210  0FC5  120A  158A  22F5   	fcall	_getn
              120A  158A         
  6211  0FCA  00F6               	movwf	(??_setLCD+1)+0
  6212  0FCB  1876               	btfsc	0+(??_setLCD+1)+0,0
  6213  0FCC  2FCE               	goto	u4231
  6214  0FCD  2FD2               	goto	u4230
  6215                           	
  6216  0FCE                     u4231:
  6217  0FCE  1283               	bcf	status, 5	;RP0=0, select bank0
  6218  0FCF  1303               	bcf	status, 6	;RP1=0, select bank0
  6219  0FD0  1507               	bsf	(58/8),(58)&7
  6220  0FD1  2FD5               	goto	u4244
  6221  0FD2                     u4230:
  6222  0FD2  1283               	bcf	status, 5	;RP0=0, select bank0
  6223  0FD3  1303               	bcf	status, 6	;RP1=0, select bank0
  6224  0FD4  1107               	bcf	(58/8),(58)&7
  6225  0FD5                     u4244:
  6226                           	line	681
  6227                           ;prev13.c: 681: RC1=getn(number,6);
  6228  0FD5  3006               	movlw	(06h)
  6229  0FD6  00F5               	movwf	(??_setLCD+0)+0
  6230  0FD7  0875               	movf	(??_setLCD+0)+0,w
  6231  0FD8  00F0               	movwf	(?_getn)
  6232  0FD9  0877               	movf	(setLCD@number),w
  6233  0FDA  120A  158A  22F5   	fcall	_getn
              120A  158A         
  6234  0FDF  00F6               	movwf	(??_setLCD+1)+0
  6235  0FE0  1876               	btfsc	0+(??_setLCD+1)+0,0
  6236  0FE1  2FE3               	goto	u4251
  6237  0FE2  2FE7               	goto	u4250
  6238                           	
  6239  0FE3                     u4251:
  6240  0FE3  1283               	bcf	status, 5	;RP0=0, select bank0
  6241  0FE4  1303               	bcf	status, 6	;RP1=0, select bank0
  6242  0FE5  1487               	bsf	(57/8),(57)&7
  6243  0FE6  2FEA               	goto	u4264
  6244  0FE7                     u4250:
  6245  0FE7  1283               	bcf	status, 5	;RP0=0, select bank0
  6246  0FE8  1303               	bcf	status, 6	;RP1=0, select bank0
  6247  0FE9  1087               	bcf	(57/8),(57)&7
  6248  0FEA                     u4264:
  6249                           	line	682
  6250                           ;prev13.c: 682: RC0=getn(number,7);
  6251  0FEA  3007               	movlw	(07h)
  6252  0FEB  00F5               	movwf	(??_setLCD+0)+0
  6253  0FEC  0875               	movf	(??_setLCD+0)+0,w
  6254  0FED  00F0               	movwf	(?_getn)
  6255  0FEE  0877               	movf	(setLCD@number),w
  6256  0FEF  120A  158A  22F5   	fcall	_getn
              120A  158A         
  6257  0FF4  00F6               	movwf	(??_setLCD+1)+0
  6258  0FF5  1876               	btfsc	0+(??_setLCD+1)+0,0
  6259  0FF6  2FF8               	goto	u4271
  6260  0FF7  2FFC               	goto	u4270
  6261                           	
  6262  0FF8                     u4271:
  6263  0FF8  1283               	bcf	status, 5	;RP0=0, select bank0
  6264  0FF9  1303               	bcf	status, 6	;RP1=0, select bank0
  6265  0FFA  1407               	bsf	(56/8),(56)&7
  6266  0FFB  2FFF               	goto	u4284
  6267  0FFC                     u4270:
  6268  0FFC  1283               	bcf	status, 5	;RP0=0, select bank0
  6269  0FFD  1303               	bcf	status, 6	;RP1=0, select bank0
  6270  0FFE  1007               	bcf	(56/8),(56)&7
  6271  0FFF                     u4284:
  6272                           	line	685
  6273                           	
  6274  0FFF                     l1273:	
  6275  0FFF  0008               	return
  6276                           	opt stack 0
  6277                           GLOBAL	__end_of_setLCD
  6278  1000                     	__end_of_setLCD:
  6279 ;; =============== function _setLCD ends ============
  6280                           
  6281                           	signat	_setLCD,4216
  6282                           	global	_latch
  6283                           psect	text764,local,class=CODE,delta=2
  6284                           global __ptext764
  6285  0ADC                     __ptext764:
  6286                           
  6287 ;; *************** function _latch *****************
  6288 ;; Defined at:
  6289 ;;		line 623 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;		None               void
  6296 ;; Registers used:
  6297 ;;		wreg, status,2, status,0, pclath, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6303 ;;      Params:         0       0       0       0       0
  6304 ;;      Locals:         0       0       0       0       0
  6305 ;;      Temps:          0       0       0       0       0
  6306 ;;      Totals:         0       0       0       0       0
  6307 ;;Total ram usage:        0 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    1
  6310 ;; This function calls:
  6311 ;;		_delay
  6312 ;; This function is called by:
  6313 ;;		__dat
  6314 ;;		__cmd
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           psect	text764
  6318                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6319                           	line	623
  6320                           	global	__size_of_latch
  6321  0019                     	__size_of_latch	equ	__end_of_latch-_latch
  6322                           	
  6323  0ADC                     _latch:	
  6324                           	opt	stack 1
  6325                           ; Regs used in _latch: [wreg+status,2+status,0+pclath+cstack]
  6326                           	line	624
  6327                           	
  6328  0ADC                     l3690:	
  6329                           ;prev13.c: 624: RD4=1;
  6330  0ADC  1283               	bcf	status, 5	;RP0=0, select bank0
  6331  0ADD  1303               	bcf	status, 6	;RP1=0, select bank0
  6332  0ADE  1608               	bsf	(68/8),(68)&7
  6333                           	line	625
  6334                           	
  6335  0ADF                     l3692:	
  6336                           ;prev13.c: 625: delay(250);
  6337  0ADF  30FA               	movlw	low(0FAh)
  6338  0AE0  00F0               	movwf	(?_delay)
  6339  0AE1  3000               	movlw	high(0FAh)
  6340  0AE2  00F1               	movwf	((?_delay))+1
  6341  0AE3  120A  158A  22C8   	fcall	_delay
              120A  158A         
  6342                           	line	626
  6343                           	
  6344  0AE8                     l3694:	
  6345                           ;prev13.c: 626: RD4=0;
  6346  0AE8  1283               	bcf	status, 5	;RP0=0, select bank0
  6347  0AE9  1303               	bcf	status, 6	;RP1=0, select bank0
  6348  0AEA  1208               	bcf	(68/8),(68)&7
  6349                           	line	627
  6350                           ;prev13.c: 627: delay(300);
  6351  0AEB  302C               	movlw	low(012Ch)
  6352  0AEC  00F0               	movwf	(?_delay)
  6353  0AED  3001               	movlw	high(012Ch)
  6354  0AEE  00F1               	movwf	((?_delay))+1
  6355  0AEF  120A  158A  22C8   	fcall	_delay
              120A  158A         
  6356                           	line	628
  6357                           	
  6358  0AF4                     l1255:	
  6359  0AF4  0008               	return
  6360                           	opt stack 0
  6361                           GLOBAL	__end_of_latch
  6362  0AF5                     	__end_of_latch:
  6363 ;; =============== function _latch ends ============
  6364                           
  6365                           	signat	_latch,88
  6366                           	global	_itoaa
  6367                           psect	text765,local,class=CODE,delta=2
  6368                           global __ptext765
  6369  01A5                     __ptext765:
  6370                           
  6371 ;; *************** function _itoaa *****************
  6372 ;; Defined at:
  6373 ;;		line 572 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  value           2    9[COMMON] int 
  6376 ;;  ptr             1   11[COMMON] PTR unsigned char 
  6377 ;;		 -> getlogicseq@snum(16), 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  temp            2    2[BANK0 ] int 
  6380 ;;  count           2    0[BANK0 ] int 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  2    9[COMMON] int 
  6383 ;; Registers used:
  6384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6390 ;;      Params:         3       0       0       0       0
  6391 ;;      Locals:         0       4       0       0       0
  6392 ;;      Temps:          1       0       0       0       0
  6393 ;;      Totals:         4       4       0       0       0
  6394 ;;Total ram usage:        8 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    1
  6397 ;; This function calls:
  6398 ;;		___wmul
  6399 ;;		___awdiv
  6400 ;;		___awmod
  6401 ;; This function is called by:
  6402 ;;		_getlogicseq
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           psect	text765
  6406                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6407                           	line	572
  6408                           	global	__size_of_itoaa
  6409  00EB                     	__size_of_itoaa	equ	__end_of_itoaa-_itoaa
  6410                           	
  6411  01A5                     _itoaa:	
  6412                           	opt	stack 4
  6413                           ; Regs used in _itoaa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6414                           	line	573
  6415                           	
  6416  01A5                     l3642:	
  6417                           ;prev13.c: 573: int count=0,temp;
  6418  01A5  1283               	bcf	status, 5	;RP0=0, select bank0
  6419  01A6  1303               	bcf	status, 6	;RP1=0, select bank0
  6420  01A7  01A0               	clrf	(itoaa@count)
  6421  01A8  01A1               	clrf	(itoaa@count+1)
  6422                           	line	574
  6423                           	
  6424  01A9                     l3644:	
  6425                           ;prev13.c: 574: if(ptr==(0))
  6426  01A9  08FB               	movf	(itoaa@ptr),f
  6427  01AA  1D03               	skipz
  6428  01AB  29AD               	goto	u4061
  6429  01AC  29AE               	goto	u4060
  6430  01AD                     u4061:
  6431  01AD  29B0               	goto	l3648
  6432  01AE                     u4060:
  6433  01AE  2A8F               	goto	l1240
  6434                           	line	575
  6435                           	
  6436  01AF                     l3646:	
  6437                           ;prev13.c: 575: return 0;
  6438                           ;	Return value of _itoaa is never used
  6439  01AF  2A8F               	goto	l1240
  6440                           	
  6441  01B0                     l1239:	
  6442                           	line	576
  6443                           	
  6444  01B0                     l3648:	
  6445                           ;prev13.c: 576: if(value==0)
  6446  01B0  087A               	movf	((itoaa@value+1)),w
  6447  01B1  0479               	iorwf	((itoaa@value)),w
  6448  01B2  1D03               	skipz
  6449  01B3  29B5               	goto	u4071
  6450  01B4  29B6               	goto	u4070
  6451  01B5                     u4071:
  6452  01B5  29BF               	goto	l1241
  6453  01B6                     u4070:
  6454                           	line	578
  6455                           	
  6456  01B6                     l3650:	
  6457                           ;prev13.c: 577: {
  6458                           ;prev13.c: 578: *ptr='0';
  6459  01B6  3030               	movlw	(030h)
  6460  01B7  00FC               	movwf	(??_itoaa+0)+0
  6461  01B8  087B               	movf	(itoaa@ptr),w
  6462  01B9  0084               	movwf	fsr0
  6463  01BA  087C               	movf	(??_itoaa+0)+0,w
  6464  01BB  1383               	bcf	status, 7	;select IRP bank0
  6465  01BC  0080               	movwf	indf
  6466  01BD  2A8F               	goto	l1240
  6467                           	line	579
  6468                           	
  6469  01BE                     l3652:	
  6470                           ;prev13.c: 579: return 1;
  6471                           ;	Return value of _itoaa is never used
  6472  01BE  2A8F               	goto	l1240
  6473                           	line	580
  6474                           	
  6475  01BF                     l1241:	
  6476                           	line	582
  6477                           ;prev13.c: 580: }
  6478                           ;prev13.c: 582: if(value<0)
  6479  01BF  1FFA               	btfss	(itoaa@value+1),7
  6480  01C0  29C2               	goto	u4081
  6481  01C1  29C3               	goto	u4080
  6482  01C2                     u4081:
  6483  01C2  29EC               	goto	l3662
  6484  01C3                     u4080:
  6485                           	line	584
  6486                           	
  6487  01C3                     l3654:	
  6488                           ;prev13.c: 583: {
  6489                           ;prev13.c: 584: value*=(-1);
  6490  01C3  30FF               	movlw	low(-1)
  6491  01C4  00F0               	movwf	(?___wmul)
  6492  01C5  30FF               	movlw	high(-1)
  6493  01C6  00F1               	movwf	((?___wmul))+1
  6494  01C7  087A               	movf	(itoaa@value+1),w
  6495  01C8  01F3               	clrf	1+(?___wmul)+02h
  6496  01C9  07F3               	addwf	1+(?___wmul)+02h
  6497  01CA  0879               	movf	(itoaa@value),w
  6498  01CB  01F2               	clrf	0+(?___wmul)+02h
  6499  01CC  07F2               	addwf	0+(?___wmul)+02h
  6500                           
  6501  01CD  120A  158A  2410   	fcall	___wmul
              120A  118A         
  6502  01D2  0871               	movf	(1+(?___wmul)),w
  6503  01D3  01FA               	clrf	(itoaa@value+1)
  6504  01D4  07FA               	addwf	(itoaa@value+1)
  6505  01D5  0870               	movf	(0+(?___wmul)),w
  6506  01D6  01F9               	clrf	(itoaa@value)
  6507  01D7  07F9               	addwf	(itoaa@value)
  6508                           
  6509                           	line	585
  6510                           	
  6511  01D8                     l3656:	
  6512                           ;prev13.c: 585: *ptr++='-';
  6513  01D8  302D               	movlw	(02Dh)
  6514  01D9  00FC               	movwf	(??_itoaa+0)+0
  6515  01DA  087B               	movf	(itoaa@ptr),w
  6516  01DB  0084               	movwf	fsr0
  6517  01DC  087C               	movf	(??_itoaa+0)+0,w
  6518  01DD  1383               	bcf	status, 7	;select IRP bank0
  6519  01DE  0080               	movwf	indf
  6520                           	
  6521  01DF                     l3658:	
  6522  01DF  3001               	movlw	(01h)
  6523  01E0  00FC               	movwf	(??_itoaa+0)+0
  6524  01E1  087C               	movf	(??_itoaa+0)+0,w
  6525  01E2  07FB               	addwf	(itoaa@ptr),f
  6526                           	line	586
  6527                           	
  6528  01E3                     l3660:	
  6529                           ;prev13.c: 586: count++;
  6530  01E3  3001               	movlw	low(01h)
  6531  01E4  1283               	bcf	status, 5	;RP0=0, select bank0
  6532  01E5  1303               	bcf	status, 6	;RP1=0, select bank0
  6533  01E6  07A0               	addwf	(itoaa@count),f
  6534  01E7  1803               	skipnc
  6535  01E8  0AA1               	incf	(itoaa@count+1),f
  6536  01E9  3000               	movlw	high(01h)
  6537  01EA  07A1               	addwf	(itoaa@count+1),f
  6538  01EB  29EC               	goto	l3662
  6539                           	line	587
  6540                           	
  6541  01EC                     l1242:	
  6542                           	line	588
  6543                           	
  6544  01EC                     l3662:	
  6545                           ;prev13.c: 587: }
  6546                           ;prev13.c: 588: for(temp=value;temp>0;temp/=10,ptr++);
  6547  01EC  087A               	movf	(itoaa@value+1),w
  6548  01ED  01A3               	clrf	(itoaa@temp+1)
  6549  01EE  07A3               	addwf	(itoaa@temp+1)
  6550  01EF  0879               	movf	(itoaa@value),w
  6551  01F0  01A2               	clrf	(itoaa@temp)
  6552  01F1  07A2               	addwf	(itoaa@temp)
  6553                           
  6554                           	
  6555  01F2                     l3664:	
  6556  01F2  0823               	movf	(itoaa@temp+1),w
  6557  01F3  3A80               	xorlw	80h
  6558  01F4  00FF               	movwf	btemp+1
  6559  01F5  3080               	movlw	(high(01h))^80h
  6560  01F6  027F               	subwf	btemp+1,w
  6561  01F7  1D03               	skipz
  6562  01F8  29FB               	goto	u4095
  6563  01F9  3001               	movlw	low(01h)
  6564  01FA  0222               	subwf	(itoaa@temp),w
  6565  01FB                     u4095:
  6566                           
  6567  01FB  1803               	skipnc
  6568  01FC  29FE               	goto	u4091
  6569  01FD  29FF               	goto	u4090
  6570  01FE                     u4091:
  6571  01FE  2A01               	goto	l3668
  6572  01FF                     u4090:
  6573  01FF  2A2C               	goto	l3674
  6574                           	
  6575  0200                     l3666:	
  6576  0200  2A2C               	goto	l3674
  6577                           	
  6578  0201                     l1243:	
  6579                           	
  6580  0201                     l3668:	
  6581  0201  300A               	movlw	low(0Ah)
  6582  0202  00F0               	movwf	(?___awdiv)
  6583  0203  3000               	movlw	high(0Ah)
  6584  0204  00F1               	movwf	((?___awdiv))+1
  6585  0205  1283               	bcf	status, 5	;RP0=0, select bank0
  6586  0206  1303               	bcf	status, 6	;RP1=0, select bank0
  6587  0207  0823               	movf	(itoaa@temp+1),w
  6588  0208  01F3               	clrf	1+(?___awdiv)+02h
  6589  0209  07F3               	addwf	1+(?___awdiv)+02h
  6590  020A  0822               	movf	(itoaa@temp),w
  6591  020B  01F2               	clrf	0+(?___awdiv)+02h
  6592  020C  07F2               	addwf	0+(?___awdiv)+02h
  6593                           
  6594  020D  120A  158A  26E6   	fcall	___awdiv
              120A  118A         
  6595  0212  0871               	movf	(1+(?___awdiv)),w
  6596  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  6597  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  6598  0215  01A3               	clrf	(itoaa@temp+1)
  6599  0216  07A3               	addwf	(itoaa@temp+1)
  6600  0217  0870               	movf	(0+(?___awdiv)),w
  6601  0218  01A2               	clrf	(itoaa@temp)
  6602  0219  07A2               	addwf	(itoaa@temp)
  6603                           
  6604                           	
  6605  021A                     l3670:	
  6606  021A  3001               	movlw	(01h)
  6607  021B  00FC               	movwf	(??_itoaa+0)+0
  6608  021C  087C               	movf	(??_itoaa+0)+0,w
  6609  021D  07FB               	addwf	(itoaa@ptr),f
  6610                           	
  6611  021E                     l3672:	
  6612  021E  0823               	movf	(itoaa@temp+1),w
  6613  021F  3A80               	xorlw	80h
  6614  0220  00FF               	movwf	btemp+1
  6615  0221  3080               	movlw	(high(01h))^80h
  6616  0222  027F               	subwf	btemp+1,w
  6617  0223  1D03               	skipz
  6618  0224  2A27               	goto	u4105
  6619  0225  3001               	movlw	low(01h)
  6620  0226  0222               	subwf	(itoaa@temp),w
  6621  0227                     u4105:
  6622                           
  6623  0227  1803               	skipnc
  6624  0228  2A2A               	goto	u4101
  6625  0229  2A2B               	goto	u4100
  6626  022A                     u4101:
  6627  022A  2A01               	goto	l3668
  6628  022B                     u4100:
  6629  022B  2A2C               	goto	l3674
  6630                           	
  6631  022C                     l1244:	
  6632                           	line	589
  6633                           	
  6634  022C                     l3674:	
  6635                           ;prev13.c: 589: *ptr='\0';
  6636  022C  087B               	movf	(itoaa@ptr),w
  6637  022D  0084               	movwf	fsr0
  6638  022E  1383               	bcf	status, 7	;select IRP bank0
  6639  022F  0180               	clrf	indf
  6640                           	line	590
  6641                           	
  6642  0230                     l3676:	
  6643                           ;prev13.c: 590: for(temp=value;temp>0;temp/=10)
  6644  0230  087A               	movf	(itoaa@value+1),w
  6645  0231  1283               	bcf	status, 5	;RP0=0, select bank0
  6646  0232  1303               	bcf	status, 6	;RP1=0, select bank0
  6647  0233  01A3               	clrf	(itoaa@temp+1)
  6648  0234  07A3               	addwf	(itoaa@temp+1)
  6649  0235  0879               	movf	(itoaa@value),w
  6650  0236  01A2               	clrf	(itoaa@temp)
  6651  0237  07A2               	addwf	(itoaa@temp)
  6652                           
  6653                           	
  6654  0238                     l3678:	
  6655  0238  0823               	movf	(itoaa@temp+1),w
  6656  0239  3A80               	xorlw	80h
  6657  023A  00FF               	movwf	btemp+1
  6658  023B  3080               	movlw	(high(01h))^80h
  6659  023C  027F               	subwf	btemp+1,w
  6660  023D  1D03               	skipz
  6661  023E  2A41               	goto	u4115
  6662  023F  3001               	movlw	low(01h)
  6663  0240  0222               	subwf	(itoaa@temp),w
  6664  0241                     u4115:
  6665                           
  6666  0241  1803               	skipnc
  6667  0242  2A44               	goto	u4111
  6668  0243  2A45               	goto	u4110
  6669  0244                     u4111:
  6670  0244  2A47               	goto	l3682
  6671  0245                     u4110:
  6672  0245  2A8F               	goto	l1240
  6673                           	
  6674  0246                     l3680:	
  6675  0246  2A8F               	goto	l1240
  6676                           	line	591
  6677                           	
  6678  0247                     l1245:	
  6679                           	line	592
  6680                           	
  6681  0247                     l3682:	
  6682                           ;prev13.c: 591: {
  6683                           ;prev13.c: 592: *--ptr=temp%10+'0';
  6684  0247  300A               	movlw	low(0Ah)
  6685  0248  00F0               	movwf	(?___awmod)
  6686  0249  3000               	movlw	high(0Ah)
  6687  024A  00F1               	movwf	((?___awmod))+1
  6688  024B  1283               	bcf	status, 5	;RP0=0, select bank0
  6689  024C  1303               	bcf	status, 6	;RP1=0, select bank0
  6690  024D  0823               	movf	(itoaa@temp+1),w
  6691  024E  01F3               	clrf	1+(?___awmod)+02h
  6692  024F  07F3               	addwf	1+(?___awmod)+02h
  6693  0250  0822               	movf	(itoaa@temp),w
  6694  0251  01F2               	clrf	0+(?___awmod)+02h
  6695  0252  07F2               	addwf	0+(?___awmod)+02h
  6696                           
  6697  0253  120A  158A  2615   	fcall	___awmod
              120A  118A         
  6698  0258  0870               	movf	(0+(?___awmod)),w
  6699  0259  3E30               	addlw	030h
  6700  025A  00FC               	movwf	(??_itoaa+0)+0
  6701  025B  3001               	movlw	low(01h)
  6702  025C  02FB               	subwf	(itoaa@ptr),f
  6703  025D  087B               	movf	((itoaa@ptr)),w
  6704  025E  0084               	movwf	fsr0
  6705  025F  087C               	movf	(??_itoaa+0)+0,w
  6706  0260  1383               	bcf	status, 7	;select IRP bank0
  6707  0261  0080               	movwf	indf
  6708                           	line	593
  6709                           	
  6710  0262                     l3684:	
  6711                           ;prev13.c: 593: count++;
  6712  0262  3001               	movlw	low(01h)
  6713  0263  1283               	bcf	status, 5	;RP0=0, select bank0
  6714  0264  1303               	bcf	status, 6	;RP1=0, select bank0
  6715  0265  07A0               	addwf	(itoaa@count),f
  6716  0266  1803               	skipnc
  6717  0267  0AA1               	incf	(itoaa@count+1),f
  6718  0268  3000               	movlw	high(01h)
  6719  0269  07A1               	addwf	(itoaa@count+1),f
  6720                           	line	590
  6721                           	
  6722  026A                     l3686:	
  6723  026A  300A               	movlw	low(0Ah)
  6724  026B  00F0               	movwf	(?___awdiv)
  6725  026C  3000               	movlw	high(0Ah)
  6726  026D  00F1               	movwf	((?___awdiv))+1
  6727  026E  0823               	movf	(itoaa@temp+1),w
  6728  026F  01F3               	clrf	1+(?___awdiv)+02h
  6729  0270  07F3               	addwf	1+(?___awdiv)+02h
  6730  0271  0822               	movf	(itoaa@temp),w
  6731  0272  01F2               	clrf	0+(?___awdiv)+02h
  6732  0273  07F2               	addwf	0+(?___awdiv)+02h
  6733                           
  6734  0274  120A  158A  26E6   	fcall	___awdiv
              120A  118A         
  6735  0279  0871               	movf	(1+(?___awdiv)),w
  6736  027A  1283               	bcf	status, 5	;RP0=0, select bank0
  6737  027B  1303               	bcf	status, 6	;RP1=0, select bank0
  6738  027C  01A3               	clrf	(itoaa@temp+1)
  6739  027D  07A3               	addwf	(itoaa@temp+1)
  6740  027E  0870               	movf	(0+(?___awdiv)),w
  6741  027F  01A2               	clrf	(itoaa@temp)
  6742  0280  07A2               	addwf	(itoaa@temp)
  6743                           
  6744                           	
  6745  0281                     l3688:	
  6746  0281  0823               	movf	(itoaa@temp+1),w
  6747  0282  3A80               	xorlw	80h
  6748  0283  00FF               	movwf	btemp+1
  6749  0284  3080               	movlw	(high(01h))^80h
  6750  0285  027F               	subwf	btemp+1,w
  6751  0286  1D03               	skipz
  6752  0287  2A8A               	goto	u4125
  6753  0288  3001               	movlw	low(01h)
  6754  0289  0222               	subwf	(itoaa@temp),w
  6755  028A                     u4125:
  6756                           
  6757  028A  1803               	skipnc
  6758  028B  2A8D               	goto	u4121
  6759  028C  2A8E               	goto	u4120
  6760  028D                     u4121:
  6761  028D  2A47               	goto	l3682
  6762  028E                     u4120:
  6763  028E  2A8F               	goto	l1240
  6764                           	
  6765  028F                     l1246:	
  6766                           	line	596
  6767                           ;prev13.c: 594: }
  6768                           ;prev13.c: 595: return count;
  6769                           ;	Return value of _itoaa is never used
  6770                           	
  6771  028F                     l1240:	
  6772  028F  0008               	return
  6773                           	opt stack 0
  6774                           GLOBAL	__end_of_itoaa
  6775  0290                     	__end_of_itoaa:
  6776 ;; =============== function _itoaa ends ============
  6777                           
  6778                           	signat	_itoaa,8314
  6779                           	global	_write_eep
  6780                           psect	text766,local,class=CODE,delta=2
  6781                           global __ptext766
  6782  0B6F                     __ptext766:
  6783                           
  6784 ;; *************** function _write_eep *****************
  6785 ;; Defined at:
  6786 ;;		line 906 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  x               2    2[COMMON] unsigned int 
  6789 ;;  y               1    4[COMMON] unsigned char 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;		None               void
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0, pclath, cstack
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6801 ;;      Params:         3       0       0       0       0
  6802 ;;      Locals:         0       0       0       0       0
  6803 ;;      Temps:          0       0       0       0       0
  6804 ;;      Totals:         3       0       0       0       0
  6805 ;;Total ram usage:        3 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; Hardware stack levels required when called:    1
  6808 ;; This function calls:
  6809 ;;		_delay
  6810 ;; This function is called by:
  6811 ;;		_getlogic
  6812 ;;		_write_log
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           psect	text766
  6816                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6817                           	line	906
  6818                           	global	__size_of_write_eep
  6819  0027                     	__size_of_write_eep	equ	__end_of_write_eep-_write_eep
  6820                           	
  6821  0B6F                     _write_eep:	
  6822                           	opt	stack 2
  6823                           ; Regs used in _write_eep: [wreg+status,2+status,0+pclath+cstack]
  6824                           	line	907
  6825                           ;prev13.c: 907: again:
  6826                           	
  6827  0B6F                     l1361:	
  6828                           	line	908
  6829                           ;prev13.c: 908: EEPGD=0;
  6830  0B6F  1683               	bsf	status, 5	;RP0=1, select bank3
  6831  0B70  1703               	bsf	status, 6	;RP1=1, select bank3
  6832  0B71  138C               	bcf	(3175/8)^0180h,(3175)&7
  6833                           	line	909
  6834                           	
  6835  0B72                     l3630:	
  6836                           ;prev13.c: 909: EEADR=x;
  6837  0B72  0872               	movf	(write_eep@x),w
  6838  0B73  1283               	bcf	status, 5	;RP0=0, select bank2
  6839  0B74  1703               	bsf	status, 6	;RP1=1, select bank2
  6840  0B75  008D               	movwf	(269)^0100h	;volatile
  6841                           	line	910
  6842                           ;prev13.c: 910: EEDAT=y;
  6843  0B76  0874               	movf	(write_eep@y),w
  6844  0B77  008C               	movwf	(268)^0100h	;volatile
  6845                           	line	911
  6846                           	
  6847  0B78                     l3632:	
  6848                           ;prev13.c: 911: WRERR=0;
  6849  0B78  1683               	bsf	status, 5	;RP0=1, select bank3
  6850  0B79  1703               	bsf	status, 6	;RP1=1, select bank3
  6851  0B7A  118C               	bcf	(3171/8)^0180h,(3171)&7
  6852                           	line	912
  6853                           	
  6854  0B7B                     l3634:	
  6855                           ;prev13.c: 912: WREN=1;
  6856  0B7B  150C               	bsf	(3170/8)^0180h,(3170)&7
  6857                           	line	913
  6858                           ;prev13.c: 913: EECON2=0x55;
  6859  0B7C  3055               	movlw	(055h)
  6860  0B7D  008D               	movwf	(397)^0180h	;volatile
  6861                           	line	914
  6862                           ;prev13.c: 914: EECON2=0xAA;
  6863  0B7E  30AA               	movlw	(0AAh)
  6864  0B7F  008D               	movwf	(397)^0180h	;volatile
  6865                           	line	915
  6866                           	
  6867  0B80                     l3636:	
  6868                           ;prev13.c: 915: WR=1;
  6869  0B80  148C               	bsf	(3169/8)^0180h,(3169)&7
  6870                           	line	916
  6871                           ;prev13.c: 916: while(WR==1);
  6872  0B81  2B82               	goto	l1362
  6873                           	
  6874  0B82                     l1363:	
  6875                           	
  6876  0B82                     l1362:	
  6877  0B82  188C               	btfsc	(3169/8)^0180h,(3169)&7
  6878  0B83  2B85               	goto	u4041
  6879  0B84  2B86               	goto	u4040
  6880  0B85                     u4041:
  6881  0B85  2B82               	goto	l1362
  6882  0B86                     u4040:
  6883                           	
  6884  0B86                     l1364:	
  6885                           	line	917
  6886                           ;prev13.c: 917: if(WRERR==1)
  6887  0B86  1D8C               	btfss	(3171/8)^0180h,(3171)&7
  6888  0B87  2B89               	goto	u4051
  6889  0B88  2B8A               	goto	u4050
  6890  0B89                     u4051:
  6891  0B89  2B8C               	goto	l3640
  6892  0B8A                     u4050:
  6893  0B8A  2B6F               	goto	l1361
  6894                           	line	918
  6895                           	
  6896  0B8B                     l3638:	
  6897                           ;prev13.c: 918: goto again;
  6898  0B8B  2B6F               	goto	l1361
  6899                           	
  6900  0B8C                     l1365:	
  6901                           	line	919
  6902                           	
  6903  0B8C                     l3640:	
  6904                           ;prev13.c: 919: delay(200);
  6905  0B8C  30C8               	movlw	low(0C8h)
  6906  0B8D  00F0               	movwf	(?_delay)
  6907  0B8E  3000               	movlw	high(0C8h)
  6908  0B8F  00F1               	movwf	((?_delay))+1
  6909  0B90  120A  158A  22C8   	fcall	_delay
              120A  158A         
  6910                           	line	920
  6911                           	
  6912  0B95                     l1366:	
  6913  0B95  0008               	return
  6914                           	opt stack 0
  6915                           GLOBAL	__end_of_write_eep
  6916  0B96                     	__end_of_write_eep:
  6917 ;; =============== function _write_eep ends ============
  6918                           
  6919                           	signat	_write_eep,8312
  6920                           	global	_read_eep
  6921                           psect	text767,local,class=CODE,delta=2
  6922                           global __ptext767
  6923  0C3A                     __ptext767:
  6924                           
  6925 ;; *************** function _read_eep *****************
  6926 ;; Defined at:
  6927 ;;		line 872 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  a               2    9[COMMON] unsigned int 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;  d               2    0[BANK0 ] int 
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      unsigned char 
  6934 ;; Registers used:
  6935 ;;		wreg, status,2, status,0, pclath, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6941 ;;      Params:         2       0       0       0       0
  6942 ;;      Locals:         0       2       0       0       0
  6943 ;;      Temps:          2       0       0       0       0
  6944 ;;      Totals:         4       2       0       0       0
  6945 ;;Total ram usage:        6 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    1
  6948 ;; This function calls:
  6949 ;;		_delay
  6950 ;; This function is called by:
  6951 ;;		_getlogic
  6952 ;;		_read_log
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           psect	text767
  6956                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6957                           	line	872
  6958                           	global	__size_of_read_eep
  6959  002D                     	__size_of_read_eep	equ	__end_of_read_eep-_read_eep
  6960                           	
  6961  0C3A                     _read_eep:	
  6962                           	opt	stack 2
  6963                           ; Regs used in _read_eep: [wreg+status,2+status,0+pclath+cstack]
  6964                           	line	874
  6965                           	
  6966  0C3A                     l3612:	
  6967                           ;prev13.c: 873: int d;
  6968                           ;prev13.c: 874: EEADR=a;
  6969  0C3A  0879               	movf	(read_eep@a),w
  6970  0C3B  1283               	bcf	status, 5	;RP0=0, select bank2
  6971  0C3C  1703               	bsf	status, 6	;RP1=1, select bank2
  6972  0C3D  008D               	movwf	(269)^0100h	;volatile
  6973                           	line	876
  6974                           	
  6975  0C3E                     l3614:	
  6976                           ;prev13.c: 876: EEPGD=0;
  6977  0C3E  1683               	bsf	status, 5	;RP0=1, select bank3
  6978  0C3F  1703               	bsf	status, 6	;RP1=1, select bank3
  6979  0C40  138C               	bcf	(3175/8)^0180h,(3175)&7
  6980                           	line	877
  6981                           	
  6982  0C41                     l3616:	
  6983                           ;prev13.c: 877: EEIF=0;
  6984  0C41  1283               	bcf	status, 5	;RP0=0, select bank0
  6985  0C42  1303               	bcf	status, 6	;RP1=0, select bank0
  6986  0C43  120D               	bcf	(108/8),(108)&7
  6987                           	line	878
  6988                           	
  6989  0C44                     l3618:	
  6990                           ;prev13.c: 878: RD=1;
  6991  0C44  1683               	bsf	status, 5	;RP0=1, select bank3
  6992  0C45  1703               	bsf	status, 6	;RP1=1, select bank3
  6993  0C46  140C               	bsf	(3168/8)^0180h,(3168)&7
  6994                           	line	879
  6995                           	
  6996  0C47                     l3620:	
  6997                           ;prev13.c: 879: WREN=0;
  6998  0C47  110C               	bcf	(3170/8)^0180h,(3170)&7
  6999                           	line	880
  7000                           ;prev13.c: 880: while(RD==1);
  7001  0C48  2C49               	goto	l1352
  7002                           	
  7003  0C49                     l1353:	
  7004                           	
  7005  0C49                     l1352:	
  7006  0C49  180C               	btfsc	(3168/8)^0180h,(3168)&7
  7007  0C4A  2C4C               	goto	u4031
  7008  0C4B  2C4D               	goto	u4030
  7009  0C4C                     u4031:
  7010  0C4C  2C49               	goto	l1352
  7011  0C4D                     u4030:
  7012  0C4D  2C4E               	goto	l3622
  7013                           	
  7014  0C4E                     l1354:	
  7015                           	line	881
  7016                           	
  7017  0C4E                     l3622:	
  7018                           ;prev13.c: 881: d=EEDAT;
  7019  0C4E  1283               	bcf	status, 5	;RP0=0, select bank2
  7020  0C4F  1703               	bsf	status, 6	;RP1=1, select bank2
  7021  0C50  080C               	movf	(268)^0100h,w	;volatile
  7022  0C51  00FB               	movwf	(??_read_eep+0)+0
  7023  0C52  01FC               	clrf	(??_read_eep+0)+0+1
  7024  0C53  087B               	movf	0+(??_read_eep+0)+0,w
  7025  0C54  1283               	bcf	status, 5	;RP0=0, select bank0
  7026  0C55  1303               	bcf	status, 6	;RP1=0, select bank0
  7027  0C56  00A0               	movwf	(read_eep@d)
  7028  0C57  087C               	movf	1+(??_read_eep+0)+0,w
  7029  0C58  00A1               	movwf	(read_eep@d+1)
  7030                           	line	882
  7031                           	
  7032  0C59                     l3624:	
  7033                           ;prev13.c: 882: delay(200);
  7034  0C59  30C8               	movlw	low(0C8h)
  7035  0C5A  00F0               	movwf	(?_delay)
  7036  0C5B  3000               	movlw	high(0C8h)
  7037  0C5C  00F1               	movwf	((?_delay))+1
  7038  0C5D  120A  158A  22C8   	fcall	_delay
              120A  158A         
  7039                           	line	883
  7040                           	
  7041  0C62                     l3626:	
  7042                           ;prev13.c: 883: return d;
  7043  0C62  1283               	bcf	status, 5	;RP0=0, select bank0
  7044  0C63  1303               	bcf	status, 6	;RP1=0, select bank0
  7045  0C64  0820               	movf	(read_eep@d),w
  7046  0C65  2C66               	goto	l1355
  7047                           	
  7048  0C66                     l3628:	
  7049                           	line	884
  7050                           	
  7051  0C66                     l1355:	
  7052  0C66  0008               	return
  7053                           	opt stack 0
  7054                           GLOBAL	__end_of_read_eep
  7055  0C67                     	__end_of_read_eep:
  7056 ;; =============== function _read_eep ends ============
  7057                           
  7058                           	signat	_read_eep,4217
  7059                           	global	___awmod
  7060                           psect	text768,local,class=CODE,delta=2
  7061                           global __ptext768
  7062  0E15                     __ptext768:
  7063                           
  7064 ;; *************** function ___awmod *****************
  7065 ;; Defined at:
  7066 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  divisor         2    0[COMMON] int 
  7069 ;;  dividend        2    2[COMMON] int 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  sign            1    6[COMMON] unsigned char 
  7072 ;;  counter         1    5[COMMON] unsigned char 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  2    0[COMMON] int 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7082 ;;      Params:         4       0       0       0       0
  7083 ;;      Locals:         2       0       0       0       0
  7084 ;;      Temps:          1       0       0       0       0
  7085 ;;      Totals:         7       0       0       0       0
  7086 ;;Total ram usage:        7 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; This function calls:
  7089 ;;		Nothing
  7090 ;; This function is called by:
  7091 ;;		_itoaa
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           psect	text768
  7095                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  7096                           	line	5
  7097                           	global	__size_of___awmod
  7098  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  7099                           	
  7100  0E15                     ___awmod:	
  7101                           	opt	stack 4
  7102                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7103                           	line	8
  7104                           	
  7105  0E15                     l3578:	
  7106  0E15  01F6               	clrf	(___awmod@sign)
  7107                           	line	9
  7108  0E16  1FF3               	btfss	(___awmod@dividend+1),7
  7109  0E17  2E19               	goto	u3941
  7110  0E18  2E1A               	goto	u3940
  7111  0E19                     u3941:
  7112  0E19  2E23               	goto	l3582
  7113  0E1A                     u3940:
  7114                           	line	10
  7115                           	
  7116  0E1A                     l3580:	
  7117  0E1A  09F2               	comf	(___awmod@dividend),f
  7118  0E1B  09F3               	comf	(___awmod@dividend+1),f
  7119  0E1C  0AF2               	incf	(___awmod@dividend),f
  7120  0E1D  1903               	skipnz
  7121  0E1E  0AF3               	incf	(___awmod@dividend+1),f
  7122                           	line	11
  7123  0E1F  01F6               	clrf	(___awmod@sign)
  7124  0E20  1403               	bsf	status,0
  7125  0E21  0DF6               	rlf	(___awmod@sign),f
  7126  0E22  2E23               	goto	l3582
  7127                           	line	12
  7128                           	
  7129  0E23                     l1606:	
  7130                           	line	13
  7131                           	
  7132  0E23                     l3582:	
  7133  0E23  1FF1               	btfss	(___awmod@divisor+1),7
  7134  0E24  2E26               	goto	u3951
  7135  0E25  2E27               	goto	u3950
  7136  0E26                     u3951:
  7137  0E26  2E2D               	goto	l3586
  7138  0E27                     u3950:
  7139                           	line	14
  7140                           	
  7141  0E27                     l3584:	
  7142  0E27  09F0               	comf	(___awmod@divisor),f
  7143  0E28  09F1               	comf	(___awmod@divisor+1),f
  7144  0E29  0AF0               	incf	(___awmod@divisor),f
  7145  0E2A  1903               	skipnz
  7146  0E2B  0AF1               	incf	(___awmod@divisor+1),f
  7147  0E2C  2E2D               	goto	l3586
  7148                           	
  7149  0E2D                     l1607:	
  7150                           	line	15
  7151                           	
  7152  0E2D                     l3586:	
  7153  0E2D  0871               	movf	(___awmod@divisor+1),w
  7154  0E2E  0470               	iorwf	(___awmod@divisor),w
  7155  0E2F  1903               	skipnz
  7156  0E30  2E32               	goto	u3961
  7157  0E31  2E33               	goto	u3960
  7158  0E32                     u3961:
  7159  0E32  2E69               	goto	l3604
  7160  0E33                     u3960:
  7161                           	line	16
  7162                           	
  7163  0E33                     l3588:	
  7164  0E33  01F5               	clrf	(___awmod@counter)
  7165  0E34  1403               	bsf	status,0
  7166  0E35  0DF5               	rlf	(___awmod@counter),f
  7167                           	line	17
  7168  0E36  2E43               	goto	l3594
  7169                           	
  7170  0E37                     l1610:	
  7171                           	line	18
  7172                           	
  7173  0E37                     l3590:	
  7174  0E37  3001               	movlw	01h
  7175                           	
  7176  0E38                     u3975:
  7177  0E38  1003               	clrc
  7178  0E39  0DF0               	rlf	(___awmod@divisor),f
  7179  0E3A  0DF1               	rlf	(___awmod@divisor+1),f
  7180  0E3B  3EFF               	addlw	-1
  7181  0E3C  1D03               	skipz
  7182  0E3D  2E38               	goto	u3975
  7183                           	line	19
  7184                           	
  7185  0E3E                     l3592:	
  7186  0E3E  3001               	movlw	(01h)
  7187  0E3F  00F4               	movwf	(??___awmod+0)+0
  7188  0E40  0874               	movf	(??___awmod+0)+0,w
  7189  0E41  07F5               	addwf	(___awmod@counter),f
  7190  0E42  2E43               	goto	l3594
  7191                           	line	20
  7192                           	
  7193  0E43                     l1609:	
  7194                           	line	17
  7195                           	
  7196  0E43                     l3594:	
  7197  0E43  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  7198  0E44  2E46               	goto	u3981
  7199  0E45  2E47               	goto	u3980
  7200  0E46                     u3981:
  7201  0E46  2E37               	goto	l3590
  7202  0E47                     u3980:
  7203  0E47  2E49               	goto	l3596
  7204                           	
  7205  0E48                     l1611:	
  7206  0E48  2E49               	goto	l3596
  7207                           	line	21
  7208                           	
  7209  0E49                     l1612:	
  7210                           	line	22
  7211                           	
  7212  0E49                     l3596:	
  7213  0E49  0871               	movf	(___awmod@divisor+1),w
  7214  0E4A  0273               	subwf	(___awmod@dividend+1),w
  7215  0E4B  1D03               	skipz
  7216  0E4C  2E4F               	goto	u3995
  7217  0E4D  0870               	movf	(___awmod@divisor),w
  7218  0E4E  0272               	subwf	(___awmod@dividend),w
  7219  0E4F                     u3995:
  7220  0E4F  1C03               	skipc
  7221  0E50  2E52               	goto	u3991
  7222  0E51  2E53               	goto	u3990
  7223  0E52                     u3991:
  7224  0E52  2E5A               	goto	l3600
  7225  0E53                     u3990:
  7226                           	line	23
  7227                           	
  7228  0E53                     l3598:	
  7229  0E53  0870               	movf	(___awmod@divisor),w
  7230  0E54  02F2               	subwf	(___awmod@dividend),f
  7231  0E55  0871               	movf	(___awmod@divisor+1),w
  7232  0E56  1C03               	skipc
  7233  0E57  03F3               	decf	(___awmod@dividend+1),f
  7234  0E58  02F3               	subwf	(___awmod@dividend+1),f
  7235  0E59  2E5A               	goto	l3600
  7236                           	
  7237  0E5A                     l1613:	
  7238                           	line	24
  7239                           	
  7240  0E5A                     l3600:	
  7241  0E5A  3001               	movlw	01h
  7242                           	
  7243  0E5B                     u4005:
  7244  0E5B  1003               	clrc
  7245  0E5C  0CF1               	rrf	(___awmod@divisor+1),f
  7246  0E5D  0CF0               	rrf	(___awmod@divisor),f
  7247  0E5E  3EFF               	addlw	-1
  7248  0E5F  1D03               	skipz
  7249  0E60  2E5B               	goto	u4005
  7250                           	line	25
  7251                           	
  7252  0E61                     l3602:	
  7253  0E61  3001               	movlw	low(01h)
  7254  0E62  02F5               	subwf	(___awmod@counter),f
  7255  0E63  1D03               	btfss	status,2
  7256  0E64  2E66               	goto	u4011
  7257  0E65  2E67               	goto	u4010
  7258  0E66                     u4011:
  7259  0E66  2E49               	goto	l3596
  7260  0E67                     u4010:
  7261  0E67  2E69               	goto	l3604
  7262                           	
  7263  0E68                     l1614:	
  7264  0E68  2E69               	goto	l3604
  7265                           	line	26
  7266                           	
  7267  0E69                     l1608:	
  7268                           	line	27
  7269                           	
  7270  0E69                     l3604:	
  7271  0E69  0876               	movf	(___awmod@sign),w
  7272  0E6A  1D03               	skipz
  7273  0E6B  2E6D               	goto	u4020
  7274  0E6C  2E73               	goto	l3608
  7275  0E6D                     u4020:
  7276                           	line	28
  7277                           	
  7278  0E6D                     l3606:	
  7279  0E6D  09F2               	comf	(___awmod@dividend),f
  7280  0E6E  09F3               	comf	(___awmod@dividend+1),f
  7281  0E6F  0AF2               	incf	(___awmod@dividend),f
  7282  0E70  1903               	skipnz
  7283  0E71  0AF3               	incf	(___awmod@dividend+1),f
  7284  0E72  2E73               	goto	l3608
  7285                           	
  7286  0E73                     l1615:	
  7287                           	line	29
  7288                           	
  7289  0E73                     l3608:	
  7290  0E73  0873               	movf	(___awmod@dividend+1),w
  7291  0E74  01F1               	clrf	(?___awmod+1)
  7292  0E75  07F1               	addwf	(?___awmod+1)
  7293  0E76  0872               	movf	(___awmod@dividend),w
  7294  0E77  01F0               	clrf	(?___awmod)
  7295  0E78  07F0               	addwf	(?___awmod)
  7296                           
  7297  0E79  2E7A               	goto	l1616
  7298                           	
  7299  0E7A                     l3610:	
  7300                           	line	30
  7301                           	
  7302  0E7A                     l1616:	
  7303  0E7A  0008               	return
  7304                           	opt stack 0
  7305                           GLOBAL	__end_of___awmod
  7306  0E7B                     	__end_of___awmod:
  7307 ;; =============== function ___awmod ends ============
  7308                           
  7309                           	signat	___awmod,8314
  7310                           	global	___awdiv
  7311                           psect	text769,local,class=CODE,delta=2
  7312                           global __ptext769
  7313  0EE6                     __ptext769:
  7314                           
  7315 ;; *************** function ___awdiv *****************
  7316 ;; Defined at:
  7317 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  divisor         2    0[COMMON] int 
  7320 ;;  dividend        2    2[COMMON] int 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  quotient        2    7[COMMON] int 
  7323 ;;  sign            1    6[COMMON] unsigned char 
  7324 ;;  counter         1    5[COMMON] unsigned char 
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  2    0[COMMON] int 
  7327 ;; Registers used:
  7328 ;;		wreg, status,2, status,0
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7334 ;;      Params:         4       0       0       0       0
  7335 ;;      Locals:         4       0       0       0       0
  7336 ;;      Temps:          1       0       0       0       0
  7337 ;;      Totals:         9       0       0       0       0
  7338 ;;Total ram usage:        9 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_itoaa
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           psect	text769
  7347                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  7348                           	line	5
  7349                           	global	__size_of___awdiv
  7350  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  7351                           	
  7352  0EE6                     ___awdiv:	
  7353                           	opt	stack 4
  7354                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7355                           	line	9
  7356                           	
  7357  0EE6                     l3538:	
  7358  0EE6  01F6               	clrf	(___awdiv@sign)
  7359                           	line	10
  7360  0EE7  1FF1               	btfss	(___awdiv@divisor+1),7
  7361  0EE8  2EEA               	goto	u3841
  7362  0EE9  2EEB               	goto	u3840
  7363  0EEA                     u3841:
  7364  0EEA  2EF4               	goto	l3542
  7365  0EEB                     u3840:
  7366                           	line	11
  7367                           	
  7368  0EEB                     l3540:	
  7369  0EEB  09F0               	comf	(___awdiv@divisor),f
  7370  0EEC  09F1               	comf	(___awdiv@divisor+1),f
  7371  0EED  0AF0               	incf	(___awdiv@divisor),f
  7372  0EEE  1903               	skipnz
  7373  0EEF  0AF1               	incf	(___awdiv@divisor+1),f
  7374                           	line	12
  7375  0EF0  01F6               	clrf	(___awdiv@sign)
  7376  0EF1  1403               	bsf	status,0
  7377  0EF2  0DF6               	rlf	(___awdiv@sign),f
  7378  0EF3  2EF4               	goto	l3542
  7379                           	line	13
  7380                           	
  7381  0EF4                     l1538:	
  7382                           	line	14
  7383                           	
  7384  0EF4                     l3542:	
  7385  0EF4  1FF3               	btfss	(___awdiv@dividend+1),7
  7386  0EF5  2EF7               	goto	u3851
  7387  0EF6  2EF8               	goto	u3850
  7388  0EF7                     u3851:
  7389  0EF7  2F02               	goto	l3548
  7390  0EF8                     u3850:
  7391                           	line	15
  7392                           	
  7393  0EF8                     l3544:	
  7394  0EF8  09F2               	comf	(___awdiv@dividend),f
  7395  0EF9  09F3               	comf	(___awdiv@dividend+1),f
  7396  0EFA  0AF2               	incf	(___awdiv@dividend),f
  7397  0EFB  1903               	skipnz
  7398  0EFC  0AF3               	incf	(___awdiv@dividend+1),f
  7399                           	line	16
  7400                           	
  7401  0EFD                     l3546:	
  7402  0EFD  3001               	movlw	(01h)
  7403  0EFE  00F4               	movwf	(??___awdiv+0)+0
  7404  0EFF  0874               	movf	(??___awdiv+0)+0,w
  7405  0F00  06F6               	xorwf	(___awdiv@sign),f
  7406  0F01  2F02               	goto	l3548
  7407                           	line	17
  7408                           	
  7409  0F02                     l1539:	
  7410                           	line	18
  7411                           	
  7412  0F02                     l3548:	
  7413  0F02  01F7               	clrf	(___awdiv@quotient)
  7414  0F03  01F8               	clrf	(___awdiv@quotient+1)
  7415                           	line	19
  7416                           	
  7417  0F04                     l3550:	
  7418  0F04  0871               	movf	(___awdiv@divisor+1),w
  7419  0F05  0470               	iorwf	(___awdiv@divisor),w
  7420  0F06  1903               	skipnz
  7421  0F07  2F09               	goto	u3861
  7422  0F08  2F0A               	goto	u3860
  7423  0F09                     u3861:
  7424  0F09  2F48               	goto	l3570
  7425  0F0A                     u3860:
  7426                           	line	20
  7427                           	
  7428  0F0A                     l3552:	
  7429  0F0A  01F5               	clrf	(___awdiv@counter)
  7430  0F0B  1403               	bsf	status,0
  7431  0F0C  0DF5               	rlf	(___awdiv@counter),f
  7432                           	line	21
  7433  0F0D  2F1A               	goto	l3558
  7434                           	
  7435  0F0E                     l1542:	
  7436                           	line	22
  7437                           	
  7438  0F0E                     l3554:	
  7439  0F0E  3001               	movlw	01h
  7440                           	
  7441  0F0F                     u3875:
  7442  0F0F  1003               	clrc
  7443  0F10  0DF0               	rlf	(___awdiv@divisor),f
  7444  0F11  0DF1               	rlf	(___awdiv@divisor+1),f
  7445  0F12  3EFF               	addlw	-1
  7446  0F13  1D03               	skipz
  7447  0F14  2F0F               	goto	u3875
  7448                           	line	23
  7449                           	
  7450  0F15                     l3556:	
  7451  0F15  3001               	movlw	(01h)
  7452  0F16  00F4               	movwf	(??___awdiv+0)+0
  7453  0F17  0874               	movf	(??___awdiv+0)+0,w
  7454  0F18  07F5               	addwf	(___awdiv@counter),f
  7455  0F19  2F1A               	goto	l3558
  7456                           	line	24
  7457                           	
  7458  0F1A                     l1541:	
  7459                           	line	21
  7460                           	
  7461  0F1A                     l3558:	
  7462  0F1A  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  7463  0F1B  2F1D               	goto	u3881
  7464  0F1C  2F1E               	goto	u3880
  7465  0F1D                     u3881:
  7466  0F1D  2F0E               	goto	l3554
  7467  0F1E                     u3880:
  7468  0F1E  2F20               	goto	l3560
  7469                           	
  7470  0F1F                     l1543:	
  7471  0F1F  2F20               	goto	l3560
  7472                           	line	25
  7473                           	
  7474  0F20                     l1544:	
  7475                           	line	26
  7476                           	
  7477  0F20                     l3560:	
  7478  0F20  3001               	movlw	01h
  7479                           	
  7480  0F21                     u3895:
  7481  0F21  1003               	clrc
  7482  0F22  0DF7               	rlf	(___awdiv@quotient),f
  7483  0F23  0DF8               	rlf	(___awdiv@quotient+1),f
  7484  0F24  3EFF               	addlw	-1
  7485  0F25  1D03               	skipz
  7486  0F26  2F21               	goto	u3895
  7487                           	line	27
  7488  0F27  0871               	movf	(___awdiv@divisor+1),w
  7489  0F28  0273               	subwf	(___awdiv@dividend+1),w
  7490  0F29  1D03               	skipz
  7491  0F2A  2F2D               	goto	u3905
  7492  0F2B  0870               	movf	(___awdiv@divisor),w
  7493  0F2C  0272               	subwf	(___awdiv@dividend),w
  7494  0F2D                     u3905:
  7495  0F2D  1C03               	skipc
  7496  0F2E  2F30               	goto	u3901
  7497  0F2F  2F31               	goto	u3900
  7498  0F30                     u3901:
  7499  0F30  2F39               	goto	l3566
  7500  0F31                     u3900:
  7501                           	line	28
  7502                           	
  7503  0F31                     l3562:	
  7504  0F31  0870               	movf	(___awdiv@divisor),w
  7505  0F32  02F2               	subwf	(___awdiv@dividend),f
  7506  0F33  0871               	movf	(___awdiv@divisor+1),w
  7507  0F34  1C03               	skipc
  7508  0F35  03F3               	decf	(___awdiv@dividend+1),f
  7509  0F36  02F3               	subwf	(___awdiv@dividend+1),f
  7510                           	line	29
  7511                           	
  7512  0F37                     l3564:	
  7513  0F37  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  7514  0F38  2F39               	goto	l3566
  7515                           	line	30
  7516                           	
  7517  0F39                     l1545:	
  7518                           	line	31
  7519                           	
  7520  0F39                     l3566:	
  7521  0F39  3001               	movlw	01h
  7522                           	
  7523  0F3A                     u3915:
  7524  0F3A  1003               	clrc
  7525  0F3B  0CF1               	rrf	(___awdiv@divisor+1),f
  7526  0F3C  0CF0               	rrf	(___awdiv@divisor),f
  7527  0F3D  3EFF               	addlw	-1
  7528  0F3E  1D03               	skipz
  7529  0F3F  2F3A               	goto	u3915
  7530                           	line	32
  7531                           	
  7532  0F40                     l3568:	
  7533  0F40  3001               	movlw	low(01h)
  7534  0F41  02F5               	subwf	(___awdiv@counter),f
  7535  0F42  1D03               	btfss	status,2
  7536  0F43  2F45               	goto	u3921
  7537  0F44  2F46               	goto	u3920
  7538  0F45                     u3921:
  7539  0F45  2F20               	goto	l3560
  7540  0F46                     u3920:
  7541  0F46  2F48               	goto	l3570
  7542                           	
  7543  0F47                     l1546:	
  7544  0F47  2F48               	goto	l3570
  7545                           	line	33
  7546                           	
  7547  0F48                     l1540:	
  7548                           	line	34
  7549                           	
  7550  0F48                     l3570:	
  7551  0F48  0876               	movf	(___awdiv@sign),w
  7552  0F49  1D03               	skipz
  7553  0F4A  2F4C               	goto	u3930
  7554  0F4B  2F52               	goto	l3574
  7555  0F4C                     u3930:
  7556                           	line	35
  7557                           	
  7558  0F4C                     l3572:	
  7559  0F4C  09F7               	comf	(___awdiv@quotient),f
  7560  0F4D  09F8               	comf	(___awdiv@quotient+1),f
  7561  0F4E  0AF7               	incf	(___awdiv@quotient),f
  7562  0F4F  1903               	skipnz
  7563  0F50  0AF8               	incf	(___awdiv@quotient+1),f
  7564  0F51  2F52               	goto	l3574
  7565                           	
  7566  0F52                     l1547:	
  7567                           	line	36
  7568                           	
  7569  0F52                     l3574:	
  7570  0F52  0878               	movf	(___awdiv@quotient+1),w
  7571  0F53  01F1               	clrf	(?___awdiv+1)
  7572  0F54  07F1               	addwf	(?___awdiv+1)
  7573  0F55  0877               	movf	(___awdiv@quotient),w
  7574  0F56  01F0               	clrf	(?___awdiv)
  7575  0F57  07F0               	addwf	(?___awdiv)
  7576                           
  7577  0F58  2F59               	goto	l1548
  7578                           	
  7579  0F59                     l3576:	
  7580                           	line	37
  7581                           	
  7582  0F59                     l1548:	
  7583  0F59  0008               	return
  7584                           	opt stack 0
  7585                           GLOBAL	__end_of___awdiv
  7586  0F5A                     	__end_of___awdiv:
  7587 ;; =============== function ___awdiv ends ============
  7588                           
  7589                           	signat	___awdiv,8314
  7590                           	global	___wmul
  7591                           psect	text770,local,class=CODE,delta=2
  7592                           global __ptext770
  7593  0C10                     __ptext770:
  7594                           
  7595 ;; *************** function ___wmul *****************
  7596 ;; Defined at:
  7597 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  multiplier      2    0[COMMON] unsigned int 
  7600 ;;  multiplicand    2    2[COMMON] unsigned int 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  product         2    4[COMMON] unsigned int 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  2    0[COMMON] unsigned int 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2, status,0
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7612 ;;      Params:         4       0       0       0       0
  7613 ;;      Locals:         2       0       0       0       0
  7614 ;;      Temps:          0       0       0       0       0
  7615 ;;      Totals:         6       0       0       0       0
  7616 ;;Total ram usage:        6 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; This function calls:
  7619 ;;		Nothing
  7620 ;; This function is called by:
  7621 ;;		_itoaa
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           psect	text770
  7625                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  7626                           	line	3
  7627                           	global	__size_of___wmul
  7628  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  7629                           	
  7630  0C10                     ___wmul:	
  7631                           	opt	stack 4
  7632                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7633                           	line	4
  7634                           	
  7635  0C10                     l3526:	
  7636  0C10  01F4               	clrf	(___wmul@product)
  7637  0C11  01F5               	clrf	(___wmul@product+1)
  7638  0C12  2C13               	goto	l3528
  7639                           	line	6
  7640                           	
  7641  0C13                     l1398:	
  7642                           	line	7
  7643                           	
  7644  0C13                     l3528:	
  7645  0C13  1C70               	btfss	(___wmul@multiplier),(0)&7
  7646  0C14  2C16               	goto	u3801
  7647  0C15  2C17               	goto	u3800
  7648  0C16                     u3801:
  7649  0C16  2C1D               	goto	l1399
  7650  0C17                     u3800:
  7651                           	line	8
  7652                           	
  7653  0C17                     l3530:	
  7654  0C17  0872               	movf	(___wmul@multiplicand),w
  7655  0C18  07F4               	addwf	(___wmul@product),f
  7656  0C19  1803               	skipnc
  7657  0C1A  0AF5               	incf	(___wmul@product+1),f
  7658  0C1B  0873               	movf	(___wmul@multiplicand+1),w
  7659  0C1C  07F5               	addwf	(___wmul@product+1),f
  7660                           	
  7661  0C1D                     l1399:	
  7662                           	line	9
  7663  0C1D  3001               	movlw	01h
  7664                           	
  7665  0C1E                     u3815:
  7666  0C1E  1003               	clrc
  7667  0C1F  0DF2               	rlf	(___wmul@multiplicand),f
  7668  0C20  0DF3               	rlf	(___wmul@multiplicand+1),f
  7669  0C21  3EFF               	addlw	-1
  7670  0C22  1D03               	skipz
  7671  0C23  2C1E               	goto	u3815
  7672                           	line	10
  7673                           	
  7674  0C24                     l3532:	
  7675  0C24  3001               	movlw	01h
  7676                           	
  7677  0C25                     u3825:
  7678  0C25  1003               	clrc
  7679  0C26  0CF1               	rrf	(___wmul@multiplier+1),f
  7680  0C27  0CF0               	rrf	(___wmul@multiplier),f
  7681  0C28  3EFF               	addlw	-1
  7682  0C29  1D03               	skipz
  7683  0C2A  2C25               	goto	u3825
  7684                           	line	11
  7685  0C2B  0871               	movf	((___wmul@multiplier+1)),w
  7686  0C2C  0470               	iorwf	((___wmul@multiplier)),w
  7687  0C2D  1D03               	skipz
  7688  0C2E  2C30               	goto	u3831
  7689  0C2F  2C31               	goto	u3830
  7690  0C30                     u3831:
  7691  0C30  2C13               	goto	l3528
  7692  0C31                     u3830:
  7693  0C31  2C32               	goto	l3534
  7694                           	
  7695  0C32                     l1400:	
  7696                           	line	12
  7697                           	
  7698  0C32                     l3534:	
  7699  0C32  0875               	movf	(___wmul@product+1),w
  7700  0C33  01F1               	clrf	(?___wmul+1)
  7701  0C34  07F1               	addwf	(?___wmul+1)
  7702  0C35  0874               	movf	(___wmul@product),w
  7703  0C36  01F0               	clrf	(?___wmul)
  7704  0C37  07F0               	addwf	(?___wmul)
  7705                           
  7706  0C38  2C39               	goto	l1401
  7707                           	
  7708  0C39                     l3536:	
  7709                           	line	13
  7710                           	
  7711  0C39                     l1401:	
  7712  0C39  0008               	return
  7713                           	opt stack 0
  7714                           GLOBAL	__end_of___wmul
  7715  0C3A                     	__end_of___wmul:
  7716 ;; =============== function ___wmul ends ============
  7717                           
  7718                           	signat	___wmul,8314
  7719                           	global	_resetout
  7720                           psect	text771,local,class=CODE,delta=2
  7721                           global __ptext771
  7722  0A5D                     __ptext771:
  7723                           
  7724 ;; *************** function _resetout *****************
  7725 ;; Defined at:
  7726 ;;		line 826 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;		None
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;		None
  7731 ;; Return value:  Size  Location     Type
  7732 ;;		None               void
  7733 ;; Registers used:
  7734 ;;		None
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7740 ;;      Params:         0       0       0       0       0
  7741 ;;      Locals:         0       0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0
  7743 ;;      Totals:         0       0       0       0       0
  7744 ;;Total ram usage:        0 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; This function calls:
  7747 ;;		Nothing
  7748 ;; This function is called by:
  7749 ;;		_actrow
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           psect	text771
  7753                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  7754                           	line	826
  7755                           	global	__size_of_resetout
  7756  0007                     	__size_of_resetout	equ	__end_of_resetout-_resetout
  7757                           	
  7758  0A5D                     _resetout:	
  7759                           	opt	stack 3
  7760                           ; Regs used in _resetout: []
  7761                           	line	827
  7762                           	
  7763  0A5D                     l3524:	
  7764                           ;prev13.c: 827: RD6=0;RD7=0;RB6=0;RB7=0;
  7765  0A5D  1283               	bcf	status, 5	;RP0=0, select bank0
  7766  0A5E  1303               	bcf	status, 6	;RP1=0, select bank0
  7767  0A5F  1308               	bcf	(70/8),(70)&7
  7768  0A60  1388               	bcf	(71/8),(71)&7
  7769  0A61  1306               	bcf	(54/8),(54)&7
  7770  0A62  1386               	bcf	(55/8),(55)&7
  7771                           	line	828
  7772                           	
  7773  0A63                     l1334:	
  7774  0A63  0008               	return
  7775                           	opt stack 0
  7776                           GLOBAL	__end_of_resetout
  7777  0A64                     	__end_of_resetout:
  7778 ;; =============== function _resetout ends ============
  7779                           
  7780                           	signat	_resetout,88
  7781                           	global	_getn
  7782                           psect	text772,local,class=CODE,delta=2
  7783                           global __ptext772
  7784  0AF5                     __ptext772:
  7785                           
  7786 ;; *************** function _getn *****************
  7787 ;; Defined at:
  7788 ;;		line 666 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  c               1    wreg     unsigned char 
  7791 ;;  n               1    0[COMMON] unsigned char 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  c               1    3[COMMON] unsigned char 
  7794 ;;  tmp             1    4[COMMON] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      unsigned char 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7804 ;;      Params:         1       0       0       0       0
  7805 ;;      Locals:         2       0       0       0       0
  7806 ;;      Temps:          2       0       0       0       0
  7807 ;;      Totals:         5       0       0       0       0
  7808 ;;Total ram usage:        5 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; This function calls:
  7811 ;;		Nothing
  7812 ;; This function is called by:
  7813 ;;		_setLCD
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           psect	text772
  7817                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  7818                           	line	666
  7819                           	global	__size_of_getn
  7820  001B                     	__size_of_getn	equ	__end_of_getn-_getn
  7821                           	
  7822  0AF5                     _getn:	
  7823                           	opt	stack 2
  7824                           ; Regs used in _getn: [wreg+status,2+status,0]
  7825                           ;getn@c stored from wreg
  7826  0AF5  00F3               	movwf	(getn@c)
  7827                           	line	667
  7828                           	
  7829  0AF6                     l3484:	
  7830                           ;prev13.c: 667: unsigned char tmp=1<<n;
  7831  0AF6  3001               	movlw	(01h)
  7832  0AF7  00F1               	movwf	(??_getn+0)+0
  7833  0AF8  0A70               	incf	(getn@n),w
  7834  0AF9  2AFC               	goto	u3734
  7835  0AFA                     u3735:
  7836  0AFA  1003               	clrc
  7837  0AFB  0DF1               	rlf	(??_getn+0)+0,f
  7838  0AFC                     u3734:
  7839  0AFC  3EFF               	addlw	-1
  7840  0AFD  1D03               	skipz
  7841  0AFE  2AFA               	goto	u3735
  7842  0AFF  0871               	movf	0+(??_getn+0)+0,w
  7843  0B00  00F2               	movwf	(??_getn+1)+0
  7844  0B01  0872               	movf	(??_getn+1)+0,w
  7845  0B02  00F4               	movwf	(getn@tmp)
  7846                           	line	668
  7847                           ;prev13.c: 668: return (c & tmp)>>n;
  7848  0B03  0873               	movf	(getn@c),w
  7849  0B04  0574               	andwf	(getn@tmp),w
  7850  0B05  00F1               	movwf	(??_getn+0)+0
  7851  0B06  0A70               	incf	(getn@n),w
  7852  0B07  2B0A               	goto	u3744
  7853  0B08                     u3745:
  7854  0B08  1003               	clrc
  7855  0B09  0CF1               	rrf	(??_getn+0)+0,f
  7856  0B0A                     u3744:
  7857  0B0A  3EFF               	addlw	-1
  7858  0B0B  1D03               	skipz
  7859  0B0C  2B08               	goto	u3745
  7860  0B0D  0871               	movf	0+(??_getn+0)+0,w
  7861  0B0E  2B0F               	goto	l1270
  7862                           	
  7863  0B0F                     l3486:	
  7864                           	line	669
  7865                           	
  7866  0B0F                     l1270:	
  7867  0B0F  0008               	return
  7868                           	opt stack 0
  7869                           GLOBAL	__end_of_getn
  7870  0B10                     	__end_of_getn:
  7871 ;; =============== function _getn ends ============
  7872                           
  7873                           	signat	_getn,8313
  7874                           	global	_strcat
  7875                           psect	text773,local,class=CODE,delta=2
  7876                           global __ptext773
  7877  0BE7                     __ptext773:
  7878                           
  7879 ;; *************** function _strcat *****************
  7880 ;; Defined at:
  7881 ;;		line 10 in file "../../common/strcat.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  to              1    wreg     PTR unsigned char 
  7884 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  7885 ;;  from            1    0[COMMON] PTR const unsigned char 
  7886 ;;		 -> getlogicseq@snum(16), 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  to              1    2[COMMON] PTR unsigned char 
  7889 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  7890 ;;  cp              1    3[COMMON] PTR unsigned char 
  7891 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  1    wreg      PTR unsigned char 
  7894 ;; Registers used:
  7895 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7901 ;;      Params:         1       0       0       0       0
  7902 ;;      Locals:         2       0       0       0       0
  7903 ;;      Temps:          1       0       0       0       0
  7904 ;;      Totals:         4       0       0       0       0
  7905 ;;Total ram usage:        4 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; This function calls:
  7908 ;;		Nothing
  7909 ;; This function is called by:
  7910 ;;		_getlogicseq
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           psect	text773
  7914                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcat.c"
  7915                           	line	10
  7916                           	global	__size_of_strcat
  7917  0029                     	__size_of_strcat	equ	__end_of_strcat-_strcat
  7918                           	
  7919  0BE7                     _strcat:	
  7920                           	opt	stack 5
  7921                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  7922                           ;strcat@to stored from wreg
  7923                           	line	18
  7924  0BE7  00F2               	movwf	(strcat@to)
  7925                           	
  7926  0BE8                     l3408:	
  7927  0BE8  0872               	movf	(strcat@to),w
  7928  0BE9  00F1               	movwf	(??_strcat+0)+0
  7929  0BEA  0871               	movf	(??_strcat+0)+0,w
  7930  0BEB  00F3               	movwf	(strcat@cp)
  7931                           	line	19
  7932  0BEC  2BF2               	goto	l3412
  7933                           	
  7934  0BED                     l1370:	
  7935                           	line	20
  7936                           	
  7937  0BED                     l3410:	
  7938  0BED  3001               	movlw	(01h)
  7939  0BEE  00F1               	movwf	(??_strcat+0)+0
  7940  0BEF  0871               	movf	(??_strcat+0)+0,w
  7941  0BF0  07F3               	addwf	(strcat@cp),f
  7942  0BF1  2BF2               	goto	l3412
  7943                           	
  7944  0BF2                     l1369:	
  7945                           	line	19
  7946                           	
  7947  0BF2                     l3412:	
  7948  0BF2  0873               	movf	(strcat@cp),w
  7949  0BF3  0084               	movwf	fsr0
  7950  0BF4  1383               	bcf	status, 7	;select IRP bank0
  7951  0BF5  0880               	movf	indf,f
  7952  0BF6  1D03               	skipz
  7953  0BF7  2BF9               	goto	u3551
  7954  0BF8  2BFA               	goto	u3550
  7955  0BF9                     u3551:
  7956  0BF9  2BED               	goto	l3410
  7957  0BFA                     u3550:
  7958  0BFA  2BFD               	goto	l3414
  7959                           	
  7960  0BFB                     l1371:	
  7961                           	line	21
  7962  0BFB  2BFD               	goto	l3414
  7963                           	
  7964  0BFC                     l1373:	
  7965                           	line	22
  7966  0BFC  2BFD               	goto	l3414
  7967                           	
  7968  0BFD                     l1372:	
  7969                           	line	21
  7970                           	
  7971  0BFD                     l3414:	
  7972  0BFD  0870               	movf	(strcat@from),w
  7973  0BFE  0084               	movwf	fsr0
  7974  0BFF  3001               	movlw	01h
  7975  0C00  07F0               	addwf	(strcat@from),f
  7976  0C01  0800               	movf	indf,w
  7977  0C02  00F1               	movwf	(??_strcat+0)+0
  7978  0C03  0873               	movf	(strcat@cp),w
  7979  0C04  0084               	movwf	fsr0
  7980  0C05  3001               	movlw	01h
  7981  0C06  07F3               	addwf	(strcat@cp),f
  7982  0C07  0871               	movf	(??_strcat+0)+0,w
  7983  0C08  0080               	movwf	indf
  7984  0C09  0880               	movf	(indf),f
  7985  0C0A  1D03               	skipz
  7986  0C0B  2C0D               	goto	u3561
  7987  0C0C  2C0E               	goto	u3560
  7988  0C0D                     u3561:
  7989  0C0D  2BFD               	goto	l3414
  7990  0C0E                     u3560:
  7991  0C0E  2C0F               	goto	l1375
  7992                           	
  7993  0C0F                     l1374:	
  7994                           	line	24
  7995                           ;	Return value of _strcat is never used
  7996                           	
  7997  0C0F                     l1375:	
  7998  0C0F  0008               	return
  7999                           	opt stack 0
  8000                           GLOBAL	__end_of_strcat
  8001  0C10                     	__end_of_strcat:
  8002 ;; =============== function _strcat ends ============
  8003                           
  8004                           	signat	_strcat,8313
  8005                           	global	_strcmp
  8006                           psect	text774,local,class=CODE,delta=2
  8007                           global __ptext774
  8008  0C9C                     __ptext774:
  8009                           
  8010 ;; *************** function _strcmp *****************
  8011 ;; Defined at:
  8012 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;  s1              1    wreg     PTR const unsigned char 
  8015 ;;		 -> lo(5), 
  8016 ;;  s2              2    0[COMMON] PTR const unsigned char 
  8017 ;;		 -> STR_35(5), STR_34(5), STR_33(5), STR_32(5), 
  8018 ;;		 -> STR_31(5), STR_30(5), STR_29(5), STR_28(5), 
  8019 ;;		 -> STR_27(5), STR_26(5), STR_25(5), STR_24(5), 
  8020 ;;		 -> STR_23(5), STR_22(5), STR_21(5), STR_20(5), 
  8021 ;;		 -> plo(5), 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;  s1              1    7[COMMON] PTR const unsigned char 
  8024 ;;		 -> lo(5), 
  8025 ;;  r               1    6[COMMON] char 
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  2    0[COMMON] int 
  8028 ;; Registers used:
  8029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8035 ;;      Params:         2       0       0       0       0
  8036 ;;      Locals:         2       0       0       0       0
  8037 ;;      Temps:          4       0       0       0       0
  8038 ;;      Totals:         8       0       0       0       0
  8039 ;;Total ram usage:        8 bytes
  8040 ;; Hardware stack levels used:    2
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_startswitch
  8045 ;;		_parselogic
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           psect	text774
  8049                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  8050                           	line	34
  8051                           	global	__size_of_strcmp
  8052  0039                     	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  8053                           	
  8054  0C9C                     _strcmp:	
  8055                           	opt	stack 4
  8056                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  8057                           ;strcmp@s1 stored from wreg
  8058  0C9C  00F7               	movwf	(strcmp@s1)
  8059                           	line	37
  8060                           	
  8061  0C9D                     l3398:	
  8062  0C9D  2C9F               	goto	l3400
  8063                           	
  8064  0C9E                     l1379:	
  8065                           	line	38
  8066  0C9E  2C9F               	goto	l3400
  8067                           	
  8068  0C9F                     l1378:	
  8069                           	line	37
  8070                           	
  8071  0C9F                     l3400:	
  8072  0C9F  0877               	movf	(strcmp@s1),w
  8073  0CA0  0084               	movwf	fsr
  8074  0CA1  1383               	bcf	status, 7	;select IRP bank0
  8075  0CA2  0800               	movf	indf,w
  8076  0CA3  00F2               	movwf	(??_strcmp+0)+0
  8077  0CA4  0871               	movf	(strcmp@s2+1),w
  8078  0CA5  00F4               	movwf	(??_strcmp+1)+0+1
  8079  0CA6  0870               	movf	(strcmp@s2),w
  8080  0CA7  00F3               	movwf	(??_strcmp+1)+0
  8081  0CA8  3001               	movlw	(01h)
  8082  0CA9  07F0               	addwf	(strcmp@s2),f
  8083  0CAA  1803               	skipnc
  8084  0CAB  0AF1               	incf	(strcmp@s2+1),f
  8085  0CAC  0874               	movf	1+(??_strcmp+1)+0,w
  8086  0CAD  1283               	bcf	status, 5	;RP0=0, select bank0
  8087  0CAE  1303               	bcf	status, 6	;RP1=0, select bank0
  8088  0CAF  00FF               	movwf	btemp+1
  8089  0CB0  0873               	movf	0+(??_strcmp+1)+0,w
  8090  0CB1  0084               	movwf	fsr0
  8091  0CB2  120A  158A  2000   	fcall	stringtab
              120A  158A         
  8092  0CB7  3AFF               	xorlw	0ffh
  8093  0CB8  3E01               	addlw	1
  8094  0CB9  0772               	addwf	(??_strcmp+0)+0,w
  8095  0CBA  00F5               	movwf	(??_strcmp+3)+0
  8096  0CBB  0875               	movf	(??_strcmp+3)+0,w
  8097  0CBC  00F6               	movwf	(strcmp@r)
  8098  0CBD  08F6               	movf	((strcmp@r)),f
  8099  0CBE  1D03               	skipz
  8100  0CBF  2CC1               	goto	u3531
  8101  0CC0  2CC2               	goto	u3530
  8102  0CC1                     u3531:
  8103  0CC1  2CCE               	goto	l3404
  8104  0CC2                     u3530:
  8105                           	
  8106  0CC2                     l3402:	
  8107  0CC2  0877               	movf	(strcmp@s1),w
  8108  0CC3  0084               	movwf	fsr0
  8109  0CC4  3001               	movlw	01h
  8110  0CC5  07F7               	addwf	(strcmp@s1),f
  8111  0CC6  1383               	bcf	status, 7	;select IRP bank0
  8112  0CC7  0880               	movf	indf,f
  8113  0CC8  1D03               	skipz
  8114  0CC9  2CCB               	goto	u3541
  8115  0CCA  2CCC               	goto	u3540
  8116  0CCB                     u3541:
  8117  0CCB  2C9F               	goto	l3400
  8118  0CCC                     u3540:
  8119  0CCC  2CCE               	goto	l3404
  8120                           	
  8121  0CCD                     l1381:	
  8122  0CCD  2CCE               	goto	l3404
  8123                           	
  8124  0CCE                     l1382:	
  8125                           	line	39
  8126                           	
  8127  0CCE                     l3404:	
  8128  0CCE  0876               	movf	(strcmp@r),w
  8129  0CCF  00F0               	movwf	(?_strcmp)
  8130  0CD0  01F1               	clrf	(?_strcmp+1)
  8131  0CD1  1BF0               	btfsc	(?_strcmp),7
  8132  0CD2  03F1               	decf	(?_strcmp+1),f
  8133  0CD3  2CD4               	goto	l1383
  8134                           	
  8135  0CD4                     l3406:	
  8136                           	line	40
  8137                           	
  8138  0CD4                     l1383:	
  8139  0CD4  0008               	return
  8140                           	opt stack 0
  8141                           GLOBAL	__end_of_strcmp
  8142  0CD5                     	__end_of_strcmp:
  8143 ;; =============== function _strcmp ends ============
  8144                           
  8145                           	signat	_strcmp,8314
  8146                           	global	_check
  8147                           psect	text775,local,class=CODE,delta=2
  8148                           global __ptext775
  8149  0D13                     __ptext775:
  8150                           
  8151 ;; *************** function _check *****************
  8152 ;; Defined at:
  8153 ;;		line 240 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  input           1    wreg     PTR unsigned char 
  8156 ;;		 -> lo(5), 
  8157 ;;  logic           1    0[COMMON] PTR unsigned char 
  8158 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;  input           1    3[COMMON] PTR unsigned char 
  8161 ;;		 -> lo(5), 
  8162 ;;  i               2    4[COMMON] int 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  2    0[COMMON] int 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8172 ;;      Params:         2       0       0       0       0
  8173 ;;      Locals:         3       0       0       0       0
  8174 ;;      Temps:          1       0       0       0       0
  8175 ;;      Totals:         6       0       0       0       0
  8176 ;;Total ram usage:        6 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		_startswitch
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           psect	text775
  8185                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8186                           	line	240
  8187                           	global	__size_of_check
  8188  0049                     	__size_of_check	equ	__end_of_check-_check
  8189                           	
  8190  0D13                     _check:	
  8191                           	opt	stack 5
  8192                           ; Regs used in _check: [wreg-fsr0h+status,2+status,0+btemp+1]
  8193                           ;check@input stored from wreg
  8194                           	line	242
  8195  0D13  00F3               	movwf	(check@input)
  8196                           	
  8197  0D14                     l3376:	
  8198                           ;prev13.c: 242: int i=0;
  8199  0D14  01F4               	clrf	(check@i)
  8200  0D15  01F5               	clrf	(check@i+1)
  8201                           	line	244
  8202                           ;prev13.c: 244: for(i=0;i<4;i++)
  8203  0D16  01F4               	clrf	(check@i)
  8204  0D17  01F5               	clrf	(check@i+1)
  8205                           	
  8206  0D18                     l3378:	
  8207  0D18  0875               	movf	(check@i+1),w
  8208  0D19  3A80               	xorlw	80h
  8209  0D1A  00FF               	movwf	btemp+1
  8210  0D1B  3080               	movlw	(high(04h))^80h
  8211  0D1C  027F               	subwf	btemp+1,w
  8212  0D1D  1D03               	skipz
  8213  0D1E  2D21               	goto	u3495
  8214  0D1F  3004               	movlw	low(04h)
  8215  0D20  0274               	subwf	(check@i),w
  8216  0D21                     u3495:
  8217                           
  8218  0D21  1C03               	skipc
  8219  0D22  2D24               	goto	u3491
  8220  0D23  2D25               	goto	u3490
  8221  0D24                     u3491:
  8222  0D24  2D27               	goto	l3382
  8223  0D25                     u3490:
  8224  0D25  2D56               	goto	l3394
  8225                           	
  8226  0D26                     l3380:	
  8227  0D26  2D56               	goto	l3394
  8228                           	line	245
  8229                           	
  8230  0D27                     l1128:	
  8231                           	line	246
  8232                           	
  8233  0D27                     l3382:	
  8234                           ;prev13.c: 245: {
  8235                           ;prev13.c: 246: if(input[i]=='0'&&logic[i]=='1')
  8236  0D27  0874               	movf	(check@i),w
  8237  0D28  0773               	addwf	(check@input),w
  8238  0D29  00F2               	movwf	(??_check+0)+0
  8239  0D2A  0872               	movf	0+(??_check+0)+0,w
  8240  0D2B  0084               	movwf	fsr0
  8241  0D2C  1383               	bcf	status, 7	;select IRP bank0
  8242  0D2D  0800               	movf	indf,w
  8243  0D2E  3A30               	xorlw	030h
  8244  0D2F  1D03               	skipz
  8245  0D30  2D32               	goto	u3501
  8246  0D31  2D33               	goto	u3500
  8247  0D32                     u3501:
  8248  0D32  2D42               	goto	l3390
  8249  0D33                     u3500:
  8250                           	
  8251  0D33                     l3384:	
  8252  0D33  0874               	movf	(check@i),w
  8253  0D34  0770               	addwf	(check@logic),w
  8254  0D35  00F2               	movwf	(??_check+0)+0
  8255  0D36  0872               	movf	0+(??_check+0)+0,w
  8256  0D37  0084               	movwf	fsr0
  8257  0D38  0800               	movf	indf,w
  8258  0D39  3A31               	xorlw	031h
  8259  0D3A  1D03               	skipz
  8260  0D3B  2D3D               	goto	u3511
  8261  0D3C  2D3E               	goto	u3510
  8262  0D3D                     u3511:
  8263  0D3D  2D42               	goto	l3390
  8264  0D3E                     u3510:
  8265                           	line	247
  8266                           	
  8267  0D3E                     l3386:	
  8268                           ;prev13.c: 247: return 0;
  8269  0D3E  01F0               	clrf	(?_check)
  8270  0D3F  01F1               	clrf	(?_check+1)
  8271  0D40  2D5B               	goto	l1131
  8272                           	
  8273  0D41                     l3388:	
  8274  0D41  2D5B               	goto	l1131
  8275                           	
  8276  0D42                     l1130:	
  8277                           	line	244
  8278                           	
  8279  0D42                     l3390:	
  8280  0D42  3001               	movlw	low(01h)
  8281  0D43  07F4               	addwf	(check@i),f
  8282  0D44  1803               	skipnc
  8283  0D45  0AF5               	incf	(check@i+1),f
  8284  0D46  3000               	movlw	high(01h)
  8285  0D47  07F5               	addwf	(check@i+1),f
  8286                           	
  8287  0D48                     l3392:	
  8288  0D48  0875               	movf	(check@i+1),w
  8289  0D49  3A80               	xorlw	80h
  8290  0D4A  00FF               	movwf	btemp+1
  8291  0D4B  3080               	movlw	(high(04h))^80h
  8292  0D4C  027F               	subwf	btemp+1,w
  8293  0D4D  1D03               	skipz
  8294  0D4E  2D51               	goto	u3525
  8295  0D4F  3004               	movlw	low(04h)
  8296  0D50  0274               	subwf	(check@i),w
  8297  0D51                     u3525:
  8298                           
  8299  0D51  1C03               	skipc
  8300  0D52  2D54               	goto	u3521
  8301  0D53  2D55               	goto	u3520
  8302  0D54                     u3521:
  8303  0D54  2D27               	goto	l3382
  8304  0D55                     u3520:
  8305  0D55  2D56               	goto	l3394
  8306                           	
  8307  0D56                     l1129:	
  8308                           	line	249
  8309                           	
  8310  0D56                     l3394:	
  8311                           ;prev13.c: 248: }
  8312                           ;prev13.c: 249: return 1;
  8313  0D56  3001               	movlw	low(01h)
  8314  0D57  00F0               	movwf	(?_check)
  8315  0D58  3000               	movlw	high(01h)
  8316  0D59  00F1               	movwf	((?_check))+1
  8317  0D5A  2D5B               	goto	l1131
  8318                           	
  8319  0D5B                     l3396:	
  8320                           	line	250
  8321                           	
  8322  0D5B                     l1131:	
  8323  0D5B  0008               	return
  8324                           	opt stack 0
  8325                           GLOBAL	__end_of_check
  8326  0D5C                     	__end_of_check:
  8327 ;; =============== function _check ends ============
  8328                           
  8329                           	signat	_check,8314
  8330                           	global	_strcpy
  8331                           psect	text776,local,class=CODE,delta=2
  8332                           global __ptext776
  8333  0BBE                     __ptext776:
  8334                           
  8335 ;; *************** function _strcpy *****************
  8336 ;; Defined at:
  8337 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  to              1    wreg     PTR unsigned char 
  8340 ;;		 -> getlogicseq@str(32), lo(5), plo(5), logic_d4(5), 
  8341 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  8342 ;;  from            2    2[COMMON] PTR const unsigned char 
  8343 ;;		 -> read_log@logic(5), STR_18(1), STR_17(20), STR_15(1), 
  8344 ;;		 -> STR_14(20), STR_12(1), STR_11(20), STR_8(4), 
  8345 ;;		 -> lo(5), 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;  to              1    7[COMMON] PTR unsigned char 
  8348 ;;		 -> getlogicseq@str(32), lo(5), plo(5), logic_d4(5), 
  8349 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  8350 ;;  cp              1    8[COMMON] PTR unsigned char 
  8351 ;;		 -> getlogicseq@str(32), lo(5), plo(5), logic_d4(5), 
  8352 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      PTR unsigned char 
  8355 ;; Registers used:
  8356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8362 ;;      Params:         2       0       0       0       0
  8363 ;;      Locals:         2       0       0       0       0
  8364 ;;      Temps:          3       0       0       0       0
  8365 ;;      Totals:         7       0       0       0       0
  8366 ;;Total ram usage:        7 bytes
  8367 ;; Hardware stack levels used:    2
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_getlogic
  8372 ;;		_startswitch
  8373 ;;		_getlogicseq
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           psect	text776
  8377                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  8378                           	line	10
  8379                           	global	__size_of_strcpy
  8380  0029                     	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  8381                           	
  8382  0BBE                     _strcpy:	
  8383                           	opt	stack 4
  8384                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  8385                           ;strcpy@to stored from wreg
  8386                           	line	18
  8387  0BBE  00F7               	movwf	(strcpy@to)
  8388                           	
  8389  0BBF                     l3372:	
  8390  0BBF  0877               	movf	(strcpy@to),w
  8391  0BC0  00F4               	movwf	(??_strcpy+0)+0
  8392  0BC1  0874               	movf	(??_strcpy+0)+0,w
  8393  0BC2  00F8               	movwf	(strcpy@cp)
  8394                           	line	19
  8395  0BC3  2BC5               	goto	l3374
  8396                           	
  8397  0BC4                     l1387:	
  8398                           	line	20
  8399  0BC4  2BC5               	goto	l3374
  8400                           	
  8401  0BC5                     l1386:	
  8402                           	line	19
  8403                           	
  8404  0BC5                     l3374:	
  8405  0BC5  0873               	movf	(strcpy@from+1),w
  8406  0BC6  00F5               	movwf	(??_strcpy+0)+0+1
  8407  0BC7  0872               	movf	(strcpy@from),w
  8408  0BC8  00F4               	movwf	(??_strcpy+0)+0
  8409  0BC9  3001               	movlw	(01h)
  8410  0BCA  07F2               	addwf	(strcpy@from),f
  8411  0BCB  1803               	skipnc
  8412  0BCC  0AF3               	incf	(strcpy@from+1),f
  8413  0BCD  0875               	movf	1+(??_strcpy+0)+0,w
  8414  0BCE  1283               	bcf	status, 5	;RP0=0, select bank0
  8415  0BCF  1303               	bcf	status, 6	;RP1=0, select bank0
  8416  0BD0  00FF               	movwf	btemp+1
  8417  0BD1  0874               	movf	0+(??_strcpy+0)+0,w
  8418  0BD2  0084               	movwf	fsr0
  8419  0BD3  120A  158A  2000   	fcall	stringtab
              120A  158A         
  8420  0BD8  00F6               	movwf	(??_strcpy+2)+0
  8421  0BD9  0878               	movf	(strcpy@cp),w
  8422  0BDA  0084               	movwf	fsr0
  8423  0BDB  3001               	movlw	01h
  8424  0BDC  07F8               	addwf	(strcpy@cp),f
  8425  0BDD  0876               	movf	(??_strcpy+2)+0,w
  8426  0BDE  1383               	bcf	status, 7	;select IRP bank0
  8427  0BDF  0080               	movwf	indf
  8428  0BE0  0880               	movf	(indf),f
  8429  0BE1  1D03               	skipz
  8430  0BE2  2BE4               	goto	u3481
  8431  0BE3  2BE5               	goto	u3480
  8432  0BE4                     u3481:
  8433  0BE4  2BC5               	goto	l3374
  8434  0BE5                     u3480:
  8435  0BE5  2BE6               	goto	l1389
  8436                           	
  8437  0BE6                     l1388:	
  8438                           	line	22
  8439                           ;	Return value of _strcpy is never used
  8440                           	
  8441  0BE6                     l1389:	
  8442  0BE6  0008               	return
  8443                           	opt stack 0
  8444                           GLOBAL	__end_of_strcpy
  8445  0BE7                     	__end_of_strcpy:
  8446 ;; =============== function _strcpy ends ============
  8447                           
  8448                           	signat	_strcpy,8313
  8449                           	global	_delay
  8450                           psect	text777,local,class=CODE,delta=2
  8451                           global __ptext777
  8452  0AC8                     __ptext777:
  8453                           
  8454 ;; *************** function _delay *****************
  8455 ;; Defined at:
  8456 ;;		line 566 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  x               2    0[COMMON] unsigned int 
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;		None
  8461 ;; Return value:  Size  Location     Type
  8462 ;;		None               void
  8463 ;; Registers used:
  8464 ;;		wreg
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8470 ;;      Params:         2       0       0       0       0
  8471 ;;      Locals:         0       0       0       0       0
  8472 ;;      Temps:          0       0       0       0       0
  8473 ;;      Totals:         2       0       0       0       0
  8474 ;;Total ram usage:        2 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; This function calls:
  8477 ;;		Nothing
  8478 ;; This function is called by:
  8479 ;;		_getlogic
  8480 ;;		_startswitch
  8481 ;;		_getlogicseq
  8482 ;;		_latch
  8483 ;;		_actrow
  8484 ;;		_read_eep
  8485 ;;		_write_eep
  8486 ;;		_scroll
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           psect	text777
  8490                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8491                           	line	566
  8492                           	global	__size_of_delay
  8493  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  8494                           	
  8495  0AC8                     _delay:	
  8496                           	opt	stack 2
  8497                           ; Regs used in _delay: [wreg]
  8498                           	line	567
  8499                           	
  8500  0AC8                     l3368:	
  8501                           ;prev13.c: 567: while(x-->0);
  8502  0AC8  2ACA               	goto	l3370
  8503                           	
  8504  0AC9                     l1234:	
  8505  0AC9  2ACA               	goto	l3370
  8506                           	
  8507  0ACA                     l1233:	
  8508                           	
  8509  0ACA                     l3370:	
  8510  0ACA  3001               	movlw	low(01h)
  8511  0ACB  02F0               	subwf	(delay@x),f
  8512  0ACC  3000               	movlw	high(01h)
  8513  0ACD  1C03               	skipc
  8514  0ACE  03F1               	decf	(delay@x+1),f
  8515  0ACF  02F1               	subwf	(delay@x+1),f
  8516  0AD0  30FF               	movlw	high(0FFFFh)
  8517  0AD1  0671               	xorwf	((delay@x+1)),w
  8518  0AD2  1D03               	skipz
  8519  0AD3  2AD6               	goto	u3475
  8520  0AD4  30FF               	movlw	low(0FFFFh)
  8521  0AD5  0670               	xorwf	((delay@x)),w
  8522  0AD6                     u3475:
  8523                           
  8524  0AD6  1D03               	skipz
  8525  0AD7  2AD9               	goto	u3471
  8526  0AD8  2ADA               	goto	u3470
  8527  0AD9                     u3471:
  8528  0AD9  2ACA               	goto	l3370
  8529  0ADA                     u3470:
  8530  0ADA  2ADB               	goto	l1236
  8531                           	
  8532  0ADB                     l1235:	
  8533                           	line	568
  8534                           	
  8535  0ADB                     l1236:	
  8536  0ADB  0008               	return
  8537                           	opt stack 0
  8538                           GLOBAL	__end_of_delay
  8539  0ADC                     	__end_of_delay:
  8540 ;; =============== function _delay ends ============
  8541                           
  8542                           	signat	_delay,4216
  8543                           	global	_initkeypad
  8544                           psect	text778,local,class=CODE,delta=2
  8545                           global __ptext778
  8546  0A6B                     __ptext778:
  8547                           
  8548 ;; *************** function _initkeypad *****************
  8549 ;; Defined at:
  8550 ;;		line 762 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;		None
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;		None               void
  8557 ;; Registers used:
  8558 ;;		wreg, status,2
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8564 ;;      Params:         0       0       0       0       0
  8565 ;;      Locals:         0       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0
  8567 ;;      Totals:         0       0       0       0       0
  8568 ;;Total ram usage:        0 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; This function calls:
  8571 ;;		Nothing
  8572 ;; This function is called by:
  8573 ;;		_main
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           psect	text778
  8577                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8578                           	line	762
  8579                           	global	__size_of_initkeypad
  8580  0008                     	__size_of_initkeypad	equ	__end_of_initkeypad-_initkeypad
  8581                           	
  8582  0A6B                     _initkeypad:	
  8583                           	opt	stack 7
  8584                           ; Regs used in _initkeypad: [wreg+status,2]
  8585                           	line	763
  8586                           	
  8587  0A6B                     l1822:	
  8588                           ;prev13.c: 763: PORTB = 0;
  8589  0A6B  1283               	bcf	status, 5	;RP0=0, select bank0
  8590  0A6C  1303               	bcf	status, 6	;RP1=0, select bank0
  8591  0A6D  0186               	clrf	(6)	;volatile
  8592                           	line	764
  8593                           	
  8594  0A6E                     l1824:	
  8595                           ;prev13.c: 764: TRISB = 0b11010000;
  8596  0A6E  30D0               	movlw	(0D0h)
  8597  0A6F  1683               	bsf	status, 5	;RP0=1, select bank1
  8598  0A70  1303               	bcf	status, 6	;RP1=0, select bank1
  8599  0A71  0086               	movwf	(134)^080h	;volatile
  8600                           	line	766
  8601                           	
  8602  0A72                     l1300:	
  8603  0A72  0008               	return
  8604                           	opt stack 0
  8605                           GLOBAL	__end_of_initkeypad
  8606  0A73                     	__end_of_initkeypad:
  8607 ;; =============== function _initkeypad ends ============
  8608                           
  8609                           	signat	_initkeypad,88
  8610                           	global	_buzz
  8611                           psect	text779,local,class=CODE,delta=2
  8612                           global __ptext779
  8613  0AA7                     __ptext779:
  8614                           
  8615 ;; *************** function _buzz *****************
  8616 ;; Defined at:
  8617 ;;		line 44 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  val             2    0[COMMON] int 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;		None               void
  8624 ;; Registers used:
  8625 ;;		wreg
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8631 ;;      Params:         2       0       0       0       0
  8632 ;;      Locals:         0       0       0       0       0
  8633 ;;      Temps:          0       0       0       0       0
  8634 ;;      Totals:         2       0       0       0       0
  8635 ;;Total ram usage:        2 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_start
  8641 ;;		_startswitch
  8642 ;;		_getlogicseq
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           psect	text779
  8646                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8647                           	line	44
  8648                           	global	__size_of_buzz
  8649  0010                     	__size_of_buzz	equ	__end_of_buzz-_buzz
  8650                           	
  8651  0AA7                     _buzz:	
  8652                           	opt	stack 5
  8653                           ; Regs used in _buzz: [wreg]
  8654                           	line	45
  8655                           	
  8656  0AA7                     l3364:	
  8657                           ;prev13.c: 45: if(val!=99)
  8658  0AA7  3063               	movlw	063h
  8659  0AA8  0670               	xorwf	(buzz@val),w
  8660  0AA9  0471               	iorwf	(buzz@val+1),w
  8661  0AAA  1903               	skipnz
  8662  0AAB  2AAD               	goto	u3461
  8663  0AAC  2AAE               	goto	u3460
  8664  0AAD                     u3461:
  8665  0AAD  2AB2               	goto	l1095
  8666  0AAE                     u3460:
  8667                           	line	46
  8668                           	
  8669  0AAE                     l3366:	
  8670                           ;prev13.c: 46: RB5=1;
  8671  0AAE  1283               	bcf	status, 5	;RP0=0, select bank0
  8672  0AAF  1303               	bcf	status, 6	;RP1=0, select bank0
  8673  0AB0  1686               	bsf	(53/8),(53)&7
  8674  0AB1  2AB6               	goto	l1097
  8675                           	line	47
  8676                           	
  8677  0AB2                     l1095:	
  8678                           	line	48
  8679                           ;prev13.c: 47: else
  8680                           ;prev13.c: 48: RB5=0;
  8681  0AB2  1283               	bcf	status, 5	;RP0=0, select bank0
  8682  0AB3  1303               	bcf	status, 6	;RP1=0, select bank0
  8683  0AB4  1286               	bcf	(53/8),(53)&7
  8684  0AB5  2AB6               	goto	l1097
  8685                           	
  8686  0AB6                     l1096:	
  8687                           	line	49
  8688                           	
  8689  0AB6                     l1097:	
  8690  0AB6  0008               	return
  8691                           	opt stack 0
  8692                           GLOBAL	__end_of_buzz
  8693  0AB7                     	__end_of_buzz:
  8694 ;; =============== function _buzz ends ============
  8695                           
  8696                           	signat	_buzz,4216
  8697                           psect	text780,local,class=CODE,delta=2
  8698                           global __ptext780
  8699  0000                     __ptext780:
  8700                           	global	btemp
  8701  007E                     	btemp set 07Eh
  8702                           
  8703                           	DABS	1,126,2	;btemp
  8704                           	global	wtemp0
  8705  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Tue Aug 15 11:32:38 2017

                   pc 0002                    _RD 0C60                    _f1 00D5                    _f2 00D7  
                  _f3 00D9                    _WR 0C61          ___awdiv@sign 0076                    _lo 00A5  
                  fsr 0004   ___wmul@multiplicand 0072                   _RA0 0028                   _RA1 0029  
                 _RB0 0030                   _RA2 002A                   _RB1 0031                   _RC0 0038  
                 _RB2 0032                   _RC1 0039                   _RB3 0033                   _RD0 0040  
                 _RC2 003A                   _RD1 0041                   _RC3 003B                   _RB5 0035  
                 _RD2 0042                   _RC4 003C                   _RB6 0036                   _RD3 0043  
                 _RC5 003D                   _RB7 0037                   _RD4 0044                   _RC6 003E  
                 _RD5 0045                   _RD6 0046                   _RD7 0047                   _adr 0812  
                 _dat 0A9A                   _cmd 0A8D                   _dev 006B                   _plo 00BE  
        ?_getlogicseq 0070                   _num 006D                   fsr0 0004                   indf 0000  
        ___awmod@sign 0076           _startswitch 037E                  l1100 0016                  l1110 0348  
                l1111 0356                  l1103 0290                  l1112 037B                  l1104 02C1  
                l1121 0C9B                  l1113 036A                  l1105 02C0                  l1130 0D42  
                l1114 037A                  l1106 02CD                  l1131 0D5B                  l1115 0379  
                l1107 02F4                  l1300 0A72                  l1124 0052                  l1140 03BC  
                l1116 037C                  l1108 031F                  l1125 00BE                  l1141 04C0  
                l1117 037D                  l1109 0331                  l1310 00F1                  l1134 0BBD  
                l1142 0435                  l1118 037D                  l1311 010A                  l1303 00D3  
                l1135 0BBD                  l1143 043E                  l1128 0D27                  l1400 0C32  
                l1240 028F                  l1320 014E                  l1312 012D                  l1304 01A4  
                l1144 0457                  l1160 05CB                  l1233 0ACA                  l1129 0D56  
                l1401 0C39                  l1241 01BF                  l1321 0165                  l1313 0115  
                l1305 00F4                  l1145 0460                  l1161 05DA                  l1153 04E6  
                l1234 0AC9                  l1242 01EC                  l1330 019D                  l1322 0159  
                l1314 012C                  l1306 00DE                  l1146 0479                  l1138 03A4  
                l1162 05FC                  l1154 0539                  l1235 0ADB                  l1243 0201  
                l1331 019C                  l1323 0164                  l1315 0120                  l1307 00F3  
                l1147 0482                  l1139 03B0                  l1171 065B                  l1163 05EF  
                l1155 05C8                  l1236 0ADB                  l1244 022C                  l1340 0D08  
                l1324 0163                  l1316 012B                  l1308 00E9                  l1252 0A6A  
                l1148 04C0                  l1180 06F3                  l1172 06C1                  l1164 05EE  
                l1245 0247                  l1341 0CFB                  l1325 017C                  l1317 012A  
                l1309 00F2                  l1261 0A8C                  l1181 06F5                  l1173 0671  
                l1165 05FA                  l1157 0561                  l1270 0B0F                  l1334 0A63  
                l1246 028F                  l1342 0D07                  l1326 019F                  l1318 0143  
                l1190 07F0                  l1182 072D                  l1174 06C5                  l1166 05F9  
                l1158 05C7                  ?_dat 0070                  l1095 0AB2                  l1239 01B0  
                l1255 0AF4                  l1343 0D06                  l1327 0187                  l1319 0166  
                l1191 07E3                  l1183 07BC                  l1175 06D4                  l1167 05FB  
                l1159 0577                  l1096 0AB6                  l1352 0C49                  l1344 0D12  
                l1328 019E                  l1264 0A99                  l1280 0D85                  l1192 07E2  
                l1176 06F6                  l1168 0633                  l4000 0502                  l1097 0AB6  
                l1353 0C49                  l1361 0B6F                  l1273 0FFF                  l1337 0CE5  
                l1329 0192                  l1249 0B2D                  l1281 0DB3                  l1193 07EE  
                l1185 0755                  l1177 06E9                  l1169 06C2                  l1370 0BED  
                l1610 0E37                  l1354 0C4E                  l1362 0B82                  l1338 0D09  
                l1258 0A83                  l1282 0DB3                  l1194 07ED                  l1186 07BB  
                l1178 06E8                  l4010 0539                  l4002 0506                  ?_cmd 0070  
                l1371 0BFB                  l1611 0E48                  l1355 0C66                  l1363 0B82  
                l1339 0CF0                  l1267 0AA6                  l1195 07EF                  l1187 076B  
                l1179 06F4                  l1372 0BFD                  l1540 0F48                  l1612 0E49  
                l1364 0B86                  l1276 0D6B                  l1196 07FF                  l1188 07BF  
                l4100 0719                  l4020 0567                  l4012 0546                  l4004 0508  
                l1381 0CCD                  l1373 0BFC                  l1541 0F1A                  l1613 0E5A  
                l1365 0B8C                  l1349 0EE5                  l1277 0D7B                  l1189 07CE  
                l1382 0CCE                  l1374 0C0F                  l1542 0F0E                  l1614 0E68  
                l1606 0E23                  l1366 0B95                  l1358 0E14                  l1278 0D82  
                l4110 0755                  l4102 072D                  l4030 05C0                  l4022 056D  
                l4014 0551                  l4006 0512                  l1383 0CD4                  l1375 0C0F  
                l1543 0F1F                  l1615 0E73                  l1607 0E2D                  l1279 0D9F  
                l3400 0C9F                  l1544 0F20                  l1616 0E7A                  l1608 0E69  
                l4120 07AE                  l4112 075B                  l4104 073A                  l4040 05E3  
                l4024 059B                  l4032 05C8                  l4016 055A                  l4008 0525  
                l4200 0007                  l1369 0BF2                  l1545 0F39                  l1609 0E43  
                l1386 0BC5                  l3402 0CC2                  l1378 0C9F                  l3410 0BED  
                l1546 0F47                  l1538 0EF4                  l4130 07CE                  l4122 07B4  
                l4114 0761                  l4106 0745                  l4050 0602                  l4042 05E9  
                l4026 05A7                  l4034 05CB                  l4018 0561                  l4202 000C  
                l1387 0BC4                  l1379 0C9E                  l1547 0F52                  l1539 0F02  
                l1388 0BE6                  l3404 0CCE                  l3412 0BF2                  l1548 0F59  
                l4132 07D7                  l4140 07F0                  l4116 078F                  l4124 07BC  
                l4108 074E                  l4060 064B                  l4052 060C                  l4044 05EF  
                l4036 05D9                  l4028 05BA                  l4204 0011                  l1389 0BE6  
                l1822 0A6B                  l3406 0CD4                  l3414 0BFD                  l1398 0C13  
                l4142 07F5                  l4134 07DD                  l4118 079B                  l4126 07BF  
                l4070 0695                  l4062 0654                  l4054 061F                  l4046 05F6  
                l4038 05DA                  l4150 0295                  l1399 0C1D                  l1824 0A6E  
                l3408 0BE8                  l3600 0E5A                  l4144 07F9                  l4136 07E3  
                l4128 07CD                  l4072 06A1                  l4080 06C5                  l4064 065B  
                l4056 0633                  l4048 05FC                  l4160 02F4                  l4152 0299  
                l3370 0ACA                  l3530 0C17                  l3610 0E7A                  l3602 0E61  
                l4146 07FB                  l4138 07EA                  l4090 06E9                  l4082 06D3  
                l4074 06B4                  l4066 0661                  l4058 0640                  l4170 031D  
                l4162 0301                  l4154 02AC                  l3364 0AA7                  l3372 0BBF  
                l3380 0D26                  l3524 0A5D                  l3532 0C24                  l3540 0EEB  
                l3604 0E69                  l3620 0C47                  l3612 0C3A                  l3700 0CDA  
                l4092 06F0                  l4084 06D4                  l4076 06BA                  l4068 0667  
                l4180 033F                  l4172 0327                  l4164 030C                  l4156 02C1  
                l4148 0290                  l3366 0AAE                  l3374 0BC5                  l3390 0D42  
                l3382 0D27                  l3534 0C32                  l3526 0C10                  l3550 0F04  
                l3542 0EF4                  l3606 0E6D                  l3622 0C4E                  l3614 0C3E  
                l3630 0B72                  l3710 0CF7                  l3702 0CE1                  l4086 06DD  
                l4094 06F6                  l4078 06C2                  l4190 035E                  l4182 0343  
                l4174 032B                  l4166 0315                  l4158 02CD                  l3368 0AC8  
                l3392 0D48                  l3384 0D33                  l3376 0D14                  l3536 0C39  
                l3528 0C13                  l3560 0F20                  l3552 0F0A                  l3544 0EF8  
                l3608 0E73                  l3624 0C59                  l3616 0C41                  l3640 0B8C  
                l3632 0B78                  l3712 0CFB                  l3704 0CE5                  l3800 0175  
                l3720 00C8                  l4096 06FC                  l4088 06E3                  l4192 0364  
                l4184 0348                  l4176 032F                  l4168 031B                  l3386 0D3E  
                l3394 0D56                  l3378 0D18                  l3562 0F31                  l3554 0F0E  
                l3570 0F48                  l3546 0EFD                  l3538 0EE6                  l3626 0C62  
                l3618 0C44                  l3634 0B7B                  l3650 01B6                  l3642 01A5  
                l3714 0D02                  l3706 0CEC                  l3810 0186                  l3802 017A  
                l3730 00DC                  l3722 00CE                  l4098 0706                  l4194 036A  
                l4186 0350                  l4178 0339                  l3396 0D5B                  l3388 0D41  
                l3484 0AF6                  l3572 0F4C                  l3564 0F37                  l3556 0F15  
                l3548 0F02                  l3580 0E1A                  l3628 0C66                  l3636 0B80  
                l3660 01E3                  l3652 01BE                  l3644 01A9                  l3708 0CF0  
                l3716 0D09                  l3820 019B                  l3812 018B                  l3804 017B  
                l3740 00ED                  l3732 00DD                  l3724 00D1                  l3900 0027  
                l4196 0372                  l4188 0356                  l3398 0C9D                  l3486 0B0F  
                l3574 0F52                  l3566 0F39                  l3558 0F1A                  l3590 0E37  
                l3582 0E23                  l3638 0B8B                  l3670 021A                  l3654 01C3  
                l3662 01EC                  l3646 01AF                  l3814 0190                  l3806 0180  
                l3822 019F                  l3750 0108                  l3742 00F0                  l3734 00E2  
                l3726 00D2                  l3718 00BF                  l3830 0DD8                  l3910 0065  
                l3902 0034                  l4198 0003                  l3576 0F59                  l3568 0F40  
                l3592 0E3E                  l3584 0E27                  l3680 0246                  l3672 021E  
                l3664 01F2                  l3656 01D8                  l3648 01B0                  l3824 01A4  
                l3816 0191                  l3808 0185                  l3760 0119                  l3752 0109  
                l3736 00E7                  l3728 00D7                  l3744 00F4                  l3832 0DEC  
                l3840 0E9F                  l3912 006E                  l3904 0047                  l3920 0B96  
                l3594 0E43                  l3586 0E2D                  l3578 0E15                  l3682 0247  
                l3666 0200                  l3674 022C                  l3658 01DF                  l3690 0ADC  
                l3818 0196                  l3762 011E                  l3754 010E                  l3770 012D  
                l3746 00FD                  l3738 00E8                  l3834 0E00                  l3826 0DB4  
                l3850 0EE5                  l3842 0EB0                  l3914 0082                  l3906 0051  
                l3922 0B9E                  l3930 037E                  l3596 0E49                  l3588 0E33  
                l3684 0262                  l3676 0230                  l3668 0201                  l3692 0ADF  
                l3780 0147                  l3772 0136                  l3764 011F                  l3756 0113  
                l3748 0103                  l3828 0DC5                  l3844 0EC1                  l3836 0E7B  
                l3852 0A7B                  l3860 0C67                  l3916 0096                  l3908 0052  
                l3924 0BA0                  l3940 03B0                  l3932 0397                  l3598 0E53  
                l3686 026A                  l3678 0238                  l3694 0AE8                  l3790 0158  
                l3782 014C                  l3774 013C                  l3766 0124                  l3758 0114  
                l3846 0ED2                  l3838 0E8E                  l3854 0A7E                  l3862 0A8E  
                l3870 0B15                  l3918 00AA                  l3926 0BA3                  l3950 03DE  
                l3942 03B5                  l3934 039D                  l3688 0281                  l3696 0F5B  
                l3792 015D                  l3784 014D                  l3776 0141                  l3768 0129  
                l3848 0EE3                  l3856 0A84                  l3864 0A9B                  l3872 0B1B  
                l3880 0D5C                  l3928 0BA9                  l3960 042C                  l3952 03E7  
                l3944 03BC                  l3936 03A4                  l3698 0CD5                  l3794 0162  
                l3786 0152                  l3778 0142                  l3858 0A87                  l3874 0B21  
                l3866 0B10                  l3890 0D82                  l3882 0D65                  l3970 0460  
                l3962 0435                  l3954 03F7                  l3946 03C9                  l3938 03A9  
                l3788 0157                  l3796 0166                  l3876 0B27                  l3868 0B13  
                l3892 0D85                  l3884 0D6B                  l3980 04A1                  l3972 0470  
                l3964 043E                  l3956 040A                  l3948 03CD                  l3798 016F  
                l3878 0A64                  l3894 0D98                  l3886 0D74                  l3982 04B6  
                l3974 0479                  l3966 044E                  l3958 0413                  l3990 04DC  
                l3896 0D9F                  l3888 0D7B                  l3976 0482                  l3968 0457  
                l3992 04DE                  l3984 04C1                  l3898 0019                  l3978 048C  
                l3994 04E0                  l3986 04D8                  l3996 04E6                  l3988 04DA  
                l3998 04F9                  _EEIF 006C                  STR_1 0890                  STR_2 086E  
                STR_3 089F                  STR_4 08D2                  STR_5 08AE                  STR_6 08BB  
                STR_7 08C7                  STR_8 08DB                  STR_9 087F                  u4010 0E67  
                u4011 0E66                  u4020 0E6D                  u4100 022B                  u4005 0E5B  
                u4101 022A                  u4030 0C4D                  u4110 0245                  u4031 0C4C  
                u4111 0244                  u4040 0B86                  u4120 028E                  u5000 0372  
                u4041 0B85                  u4121 028D                  u4105 0227                  u5001 0371  
                u4050 0B8A                  u4210 0FBD                  u4130 0F6A                  u4051 0B89  
                u4115 0241                  u4211 0FB9                  u4131 0F66                  u3500 0D33  
                u4060 01AE                  u4204 0FAB                  u4300 0CEC                  u3501 0D32  
                u4125 028A                  u4061 01AD                  u4301 0CEB                  u3510 0D3E  
                u4070 01B6                  u4230 0FD2                  u4150 0F7E                  u4310 0CF7  
                u3511 0D3D                  u4071 01B5                  u4231 0FCE                  u4151 0F7A  
                u4311 0CF6                  u3520 0D55                  u4080 01C3                  u4224 0FC0  
                u4144 0F6D                  u4320 0D02                  u4400 0124                  u3521 0D54  
                u4081 01C2                  u4321 0D01                  u4401 0123                  u3530 0CC2  
                u4090 01FF                  u4250 0FE7                  u4170 0F93                  u4410 013C  
                u4330 00CE                  u3531 0CC1                  u4091 01FE                  u4251 0FE3  
                u4171 0F8F                  u4411 013B                  u4331 00CD                  u3460 0AAE  
                u3540 0CCC                  u4244 0FD5                  u4164 0F81                  u4420 0147  
                u4340 00D7                  u4500 0D74                  u3461 0AAD                  u3525 0D51  
                u3541 0CCB                  u4421 0146                  u4341 00D6                  u4501 0D73  
                u3470 0ADA                  u3550 0BFA                  u4270 0FFC                  u4190 0FA8  
                u4430 0152                  u4350 00E2                  u4510 0DB2                  u3471 0AD9  
                u3551 0BF9                  u4095 01FB                  u4271 0FF8                  u4191 0FA4  
                u4431 0151                  u4351 00E1                  u4511 0DB1                  u3480 0BE5  
                u3560 0C0E                  u3800 0C17                  u4264 0FEA                  u4184 0F96  
                u4440 015D                  u4360 00ED                  u4520 0027                  u4600 0470  
                u3481 0BE4                  u3561 0C0D                  u3801 0C16                  u4441 015C  
                u4361 00EC                  u4521 0026                  u4601 046F                  u3490 0D25  
                u4290 0CE1                  u4450 0175                  u4370 0103                  u4530 0B9E  
                u4610 0489                  u3475 0AD6                  u3491 0D24                  u4291 0CE0  
                u4451 0174                  u4371 0102                  u4531 0B9D                  u4611 0485  
                u3900 0F31                  u4284 0FFF                  u4460 0180                  u4380 010E  
                u4540 039D                  u4700 055A                  u3901 0F30                  u4461 017F  
                u4381 010D                  u4541 039C                  u4701 0559                  u3734 0AFC  
                u3830 0C31                  u4470 018B                  u4390 0119                  u4550 03A9  
                u4710 0560                  u3495 0D21                  u3735 0AFA                  u3831 0C30  
                u3815 0C1E                  u4471 018A                  u4391 0118                  u4551 03A8  
                u4711 055F                  u3744 0B0A                  u3920 0F46                  u3840 0EEB  
                u4480 0196                  u4640 049E                  u4624 048C                  u4560 03B5  
                u4800 0661                  u4720 0567                  u3745 0B08                  u3825 0C25  
                u3921 0F45                  u3905 0F2D                  u3841 0EEA                  u4481 0195  
                u4641 049A                  u4561 03B4                  u4801 0660                  u4721 0566  
                u3930 0F4C                  u3850 0EF8                  u4490 0D65                  u4570 03F7  
                u4810 0667                  u4730 056D                  u3915 0F3A                  u3851 0EF7  
                u4491 0D64                  u4635 0492                  u4571 03F6                  u4811 0666  
                u4731 056C                  u3860 0F0A                  u3940 0E1A                  u4580 042C  
                u4900 07CC                  u4820 06D2                  u4740 05D8                  u3861 0F09  
                u3941 0E19                  u4581 042B                  u4901 07CB                  u4821 06D1  
                u4741 05D7                  u3950 0E27                  u4670 04B3                  u4654 04A1  
                u4590 044E                  u4910 07D7                  u4830 06DD                  u4750 05E3  
                u3951 0E26                  u4671 04AF                  u4591 044D                  u4911 07D6  
                u4831 06DC                  u4751 05E2                  u3880 0F1E                  u3960 0E33  
                u4920 07DD                  u4840 06E3                  u4760 05E9                  u3881 0F1D  
                u3961 0E32                  u4665 04A7                  u4921 07DC                  u4905 07C8  
                u4841 06E2                  u4825 06CE                  u4761 05E8                  u4745 05D4  
                u4930 07EA                  u4850 06F0                  u4770 05F6                  u4690 04CB  
                u3875 0F0F                  u4931 07E9                  u4851 06EF                  u4771 05F5  
                u3980 0E47                  u4684 04B6                  u4860 074E                  u4780 0654  
                u4940 02CC                  u3981 0E46                  u4861 074D                  u4781 0653  
                u4941 02CB                  u3990 0E53                  u4870 0754                  u4790 065A  
                u4950 0315                  u3895 0F21                  u3991 0E52                  u3975 0E38  
                u4871 0753                  u4791 0659                  u4951 0314                  u4880 075B  
                u4960 0327                  u4881 075A                  u4961 0326                  u4890 0761  
                u4970 0339                  u3995 0E4F                  u4891 0760                  u4971 0338  
                u4980 0350                  u4981 034F                  u4990 035E                  u4991 035D  
                _WREN 0C62                  __dat 0A7B                  __cmd 0A84                  _getn 0AF5  
                _main 0003                  _pdev 00DB                  _buzz 0AA7                  _scan 00BF  
                _retm 00DD                  btemp 007E                  start 0000                 ??_dat 0078  
               ??_cmd 0078                 ?__dat 0070                 ?__cmd 0070                 ?_getn 0070  
               ?_main 0070                 ?_buzz 0070                 ?_scan 0074       __end_of___awdiv 0F5A  
               _EEADR 010D                 STR_10 0817                 _EEDAT 010C                 STR_11 0832  
               STR_12 0845                 STR_20 08DA                 STR_13 092A                 STR_21 0902  
               STR_30 08F3                 STR_22 08EE                 STR_14 0846                 STR_15 0845  
               STR_31 091B                 STR_23 0916                 STR_16 092A                 STR_32 08E9  
               STR_24 08E4                 STR_33 0911                 STR_25 090C                 STR_17 085A  
               STR_18 0845                 STR_34 08FD                 STR_26 08F8                 STR_19 092A  
               STR_35 0925                 STR_27 0920                 STR_28 08DF       __end_of___awmod 0E7B  
               STR_29 0907                 _EEPGD 0C67                 _ANSEL 0188       ___awdiv@divisor 0070  
     ___awdiv@counter 0075                 _PORTB 0006                 _TRISA 0085                 _TRISB 0086  
               _TRISC 0087                 _TRISD 0088                 _WRERR 0C63                 _check 0D13  
               _delay 0AC8                 _latch 0ADC                 _itoaa 01A5       __end_of_initlcd 0B2E  
      write_log@devno 0075                 getn@c 0073                 getn@n 0070                 _start 0290  
      write_log@logic 0077                 _write 0D5C                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of__dat 0A84          __end_of__cmd 0A8D          __end_of_getn 0B10  
        __end_of_main 0019          __end_of_buzz 0AB7          __end_of_scan 01A5                ??__dat 0072  
              ??__cmd 0072                ??_getn 0071                ??_main 007E                ??_buzz 0072  
              ??_scan 0076                ?_check 0070                ?_delay 0070                ?_latch 0070  
              ?_itoaa 0079                _EECON2 018D      ___awdiv@dividend 0072                ?_start 0070  
              ?_write 0020      __end_of_clearlcd 0A6B      __end_of_getlogic 00BF                ___wmul 0C10  
           ??___awdiv 0074             ??___awmod 0074                _actrow 0CD5                check@i 0074  
              _setLCD 0F5A      __end_of_init_fun 0BBE      __end_of_read_eep 0C67                delay@x 0070  
    __end_of_read_log 0EE6      ___awdiv@quotient 0077       ___awmod@divisor 0070       ___awmod@counter 0075  
              _strcat 0BE7                _strcmp 0C9C                clrloop 0A74                _strcpy 0BBE  
           ??_initlcd 0079      __end_of_resetout 0A64      __end_of_setlogic 0C9C           read_log@ads 002C  
__size_of_getlogicseq 033F                write@i 0079        __pcstackCOMMON 0070          __pidataBANK1 0B4C  
       __end_of_check 0D5C         __end_of_delay 0ADC         __end_of_latch 0AF5         __end_of_itoaa 0290  
       __end_of_start 037E         __end_of_write 0DB4               ??_check 0072               ??_delay 0072  
        ?_startswitch 0070               ??_latch 0072               ??_itoaa 007C               ??_start 007E  
             ??_write 0079            __pbssBANK0 006B            __pbssBANK1 00C3            dat@Command 0078  
          __pmaintext 0003               ?___wmul 0070               ?_actrow 0072            cmd@Command 0078  
             ?_setLCD 0070               ?_strcat 0070               ?_strcmp 0070               ?_strcpy 0072  
       getlogicseq@bf 0051         getlogicseq@nf 0063         getlogicseq@wf 0065             ?_clearlcd 0070  
           ?_getlogic 0070             ?_init_fun 0070             ?_read_eep 0079             ?_read_log 0022  
  __size_of_write_eep 0027    __size_of_write_log 0061            check@logic 0070            check@input 0073  
           ?_resetout 0070             ?_setlogic 0070               ___awdiv 0EE6               ___awmod 0E15  
     __size_of___wmul 002A       __size_of_actrow 003E       __size_of_setLCD 00A6            _initkeypad 0A6B  
     __size_of_strcat 0029       __size_of_strcmp 0039       __size_of_strcpy 0029          setLCD@number 0077  
        __size_of_dat 000D          __size_of_cmd 000D               _initlcd 0B10      ___awmod@dividend 0072  
             actrow@n 0072            ??_clearlcd 0079       getlogicseq@snum 0053               getn@tmp 0074  
end_of_initialization 0B48            ??_getlogic 007D               buzz@val 0070               init_ram 0ABB  
          ??_init_fun 007B            ??_read_eep 007B            ??_read_log 0024            ??_resetout 0070  
          ??_setlogic 007C          __pstringtext 0800               strcmp@r 0076     __end_of_write_eep 0B96  
   __end_of_write_log 0E15  __size_of_startswitch 0143          write_log@ads 007B        __end_of___wmul 0C3A  
      __end_of_actrow 0D13           ?_initkeypad 0070        __end_of_setLCD 1000         ??_getlogicseq 002D  
      __end_of_strcat 0C10        __end_of_strcmp 0CD5        __end_of_strcpy 0BE7   start_initialization 0B2E  
         __end_of_dat 0AA7           __end_of_cmd 0A9A              ??___wmul 0074              ??_actrow 0074  
         __pdataBANK1 00A0              ??_setLCD 0075              ??_strcat 0071              ??_strcmp 0072  
            ??_strcpy 0074            itoaa@count 0020            itoaa@value 0079         __pcstackBANK0 0020  
   __size_of_clearlcd 0007   __end_of_getlogicseq 0800     __size_of_getlogic 00A6   __size_of_initkeypad 0008  
   __size_of_init_fun 0028     __size_of_read_eep 002D     __size_of_read_log 006B              ?___awdiv 0070  
            ?___awmod 0070             __ptext750 0019             __ptext751 0D5C             __ptext760 0DB4  
           __ptext752 0A64             __ptext761 00BF             __ptext753 0B10             __ptext770 0C10  
           __ptext762 0CD5             __ptext754 0A9A             __ptext746 0290             __ptext771 0A5D  
           __ptext763 0F5A             __ptext755 0A8D             __ptext747 04C1             __ptext780 0000  
           __ptext772 0AF5             __ptext764 0ADC             __ptext756 0C67             __ptext748 037E  
           __ptext773 0BE7             __ptext765 01A5             __ptext757 0A84             __ptext749 0B96  
           __ptext774 0C9C             __ptext766 0B6F             __ptext758 0A7B             __ptext775 0D13  
           __ptext767 0C3A             __ptext759 0E7B             __ptext776 0BBE             __ptext768 0E15  
           __ptext777 0AC8             __ptext769 0EE6             __ptext778 0A6B             __ptext779 0AA7  
   __size_of_resetout 0007     __size_of_setlogic 0035             _done_init 00D3              ?_initlcd 0070  
      __size_of_check 0049        __size_of_delay 0014        __size_of_latch 0019        __size_of_itoaa 00EB  
      __size_of_start 00EE        __size_of_write 0058        getlogicseq@num 0069        getlogicseq@str 0031  
      ___wmul@product 0074     getlogicseq@ccount 0067           __stringbase 0812     ___wmul@multiplier 0070  
         _getlogicseq 04C1             _write_eep 0B6F             _write_log 0DB4             init_fetch 0AB7  
           read_eep@a 0079             read_eep@d 0020      __size_of___awdiv 0074      __size_of___awmod 0066  
           itoaa@temp 0022          ??_initkeypad 0070            strcat@from 0070      __size_of_initlcd 001E  
            _clearlcd 0A64         ??_startswitch 007B            ?_write_eep 0072            ?_write_log 0075  
    getlogicseq@F1874 00C3              _getlogic 0019            strcpy@from 0072         __size_of__dat 0009  
       __size_of__cmd 0009         __size_of_getn 001B              _init_fun 0B96         __size_of_main 0016  
            _read_eep 0C3A         __size_of_buzz 0010         __size_of_scan 00E6              _read_log 0E7B  
            _logic_d1 00AA              _logic_d2 00AF              _logic_d3 00B4              _logic_d4 00B9  
  __end_of_initkeypad 0A73              clear_ram 0A73            write@erase 0024              _resetout 0A5D  
            _setlogic 0C67            write_eep@x 0072            write_eep@y 0074              itoaa@ptr 007B  
 __end_of_startswitch 04C1         read_log@F1918 00A0             stringcode 080A             write@line 0022  
       read_log@devno 0022         read_log@logic 0027              strcat@cp 0073              strcat@to 0072  
            strcmp@s1 0077              strcmp@s2 0070              strcpy@cp 0078              strcpy@to 0077  
            stringtab 0800              write@str 0020           ??_write_eep 0075           ??_write_log 0078  
