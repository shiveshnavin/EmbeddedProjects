

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Mon Aug 14 17:23:04 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_initlcd
    43                           	FNCALL	_main,_initkeypad
    44                           	FNCALL	_main,_start
    45                           	FNCALL	_start,_write
    46                           	FNCALL	_start,_scan
    47                           	FNCALL	_start,_buzz
    48                           	FNCALL	_start,_startswitch
    49                           	FNCALL	_start,_getlogicseq
    50                           	FNCALL	_getlogicseq,_getlogic
    51                           	FNCALL	_getlogicseq,_write
    52                           	FNCALL	_getlogicseq,_delay
    53                           	FNCALL	_getlogicseq,_strcpy
    54                           	FNCALL	_getlogicseq,_scan
    55                           	FNCALL	_getlogicseq,_buzz
    56                           	FNCALL	_getlogicseq,_itoaa
    57                           	FNCALL	_getlogicseq,_strcat
    58                           	FNCALL	_getlogicseq,_setlogic
    59                           	FNCALL	_startswitch,_init_fun
    60                           	FNCALL	_startswitch,_strcpy
    61                           	FNCALL	_startswitch,_write
    62                           	FNCALL	_startswitch,_buzz
    63                           	FNCALL	_startswitch,_strcmp
    64                           	FNCALL	_startswitch,_delay
    65                           	FNCALL	_startswitch,_check
    66                           	FNCALL	_init_fun,_write
    67                           	FNCALL	_getlogic,_read_eep
    68                           	FNCALL	_getlogic,_write_eep
    69                           	FNCALL	_getlogic,_write
    70                           	FNCALL	_getlogic,_delay
    71                           	FNCALL	_getlogic,_read_log
    72                           	FNCALL	_getlogic,_strcpy
    73                           	FNCALL	_write,_clearlcd
    74                           	FNCALL	_write,_cmd
    75                           	FNCALL	_write,_dat
    76                           	FNCALL	_clearlcd,_cmd
    77                           	FNCALL	_initlcd,_cmd
    78                           	FNCALL	_dat,_setLCD
    79                           	FNCALL	_dat,__dat
    80                           	FNCALL	_cmd,_setLCD
    81                           	FNCALL	_cmd,__cmd
    82                           	FNCALL	_setlogic,_write_log
    83                           	FNCALL	__cmd,_latch
    84                           	FNCALL	__dat,_latch
    85                           	FNCALL	_read_log,_read_eep
    86                           	FNCALL	_write_log,_write_eep
    87                           	FNCALL	_scan,_actrow
    88                           	FNCALL	_actrow,_resetout
    89                           	FNCALL	_actrow,_delay
    90                           	FNCALL	_setLCD,_getn
    91                           	FNCALL	_latch,_delay
    92                           	FNCALL	_itoaa,___wmul
    93                           	FNCALL	_itoaa,___awdiv
    94                           	FNCALL	_itoaa,___awmod
    95                           	FNCALL	_write_eep,_delay
    96                           	FNCALL	_read_eep,_delay
    97                           	FNROOT	_main
    98                           	global	read_log@F1918
    99                           	global	_lo
   100                           	global	_logic_d1
   101                           	global	_logic_d2
   102                           	global	_logic_d3
   103                           	global	_logic_d4
   104                           	global	_plo
   105                           psect	idataBANK1,class=CODE,space=0,delta=2
   106                           global __pidataBANK1
   107  0B4C                     __pidataBANK1:
   108                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   109                           	line	855
   110                           
   111                           ;initializer for read_log@F1918
   112  0B4C  3430               	retlw	030h
   113  0B4D  3430               	retlw	030h
   114  0B4E  3430               	retlw	030h
   115  0B4F  3430               	retlw	030h
   116  0B50  3400               	retlw	0
   117                           	line	205
   118                           
   119                           ;initializer for _lo
   120  0B51  3430               	retlw	030h
   121  0B52  3430               	retlw	030h
   122  0B53  3430               	retlw	030h
   123  0B54  3430               	retlw	030h
   124  0B55  3400               	retlw	0
   125                           	line	201
   126                           
   127                           ;initializer for _logic_d1
   128  0B56  3431               	retlw	031h
   129  0B57  3430               	retlw	030h
   130  0B58  3430               	retlw	030h
   131  0B59  3400               	retlw	0
   132  0B5A  3400               	retlw	0
   133                           	line	202
   134                           
   135                           ;initializer for _logic_d2
   136  0B5B  3430               	retlw	030h
   137  0B5C  3431               	retlw	031h
   138  0B5D  3430               	retlw	030h
   139  0B5E  3400               	retlw	0
   140  0B5F  3400               	retlw	0
   141                           	line	203
   142                           
   143                           ;initializer for _logic_d3
   144  0B60  3430               	retlw	030h
   145  0B61  3430               	retlw	030h
   146  0B62  3431               	retlw	031h
   147  0B63  3400               	retlw	0
   148  0B64  3400               	retlw	0
   149                           	line	204
   150                           
   151                           ;initializer for _logic_d4
   152  0B65  3431               	retlw	031h
   153  0B66  3430               	retlw	030h
   154  0B67  3430               	retlw	030h
   155  0B68  3400               	retlw	0
   156  0B69  3400               	retlw	0
   157                           	line	206
   158                           
   159                           ;initializer for _plo
   160  0B6A  3430               	retlw	030h
   161  0B6B  3430               	retlw	030h
   162  0B6C  3430               	retlw	030h
   163  0B6D  3430               	retlw	030h
   164  0B6E  3400               	retlw	0
   165                           	global	_adr
   166                           psect	stringtext,class=STRCODE,delta=2,reloc=256
   167                           global __pstringtext
   168  0800                     __pstringtext:
   169                           ;	global	stringtab,__stringbase
   170  0800                     stringtab:
   171                           ;	String table - string pointers are 2 bytes each
   172  0800  1BFF               	btfsc	(btemp+1),7
   173  0801  280A               	ljmp	stringcode
   174  0802  1383               	bcf	status,7
   175  0803  187F               	btfsc	(btemp+1),0
   176  0804  1783               	bsf	status,7
   177  0805  0800               	movf	indf,w
   178  0806  0A84               	incf fsr
   179  0807  1903               skipnz
   180  0808  0AFF               incf btemp+1
   181  0809  0008               	return
   182  080A                     stringcode:
   183  080A  087F               	movf btemp+1,w
   184  080B  397F               andlw 7Fh
   185  080C  008A               movwf	pclath
   186  080D  0804               	movf	fsr,w
   187  080E  0A84               incf fsr
   188  080F  1903               skipnz
   189  0810  0AFF               incf btemp+1
   190  0811  0082               	movwf pc
   191  0812                     __stringbase:
   192                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   193                           	line	15
   194  0812                     _adr:
   195  0812  3400               	retlw	0
   196  0813  3404               	retlw	04h
   197  0814  3408               	retlw	08h
   198  0815  340C               	retlw	0Ch
   199  0816  340F               	retlw	0Fh
   200                           	global	_adr
   201                           	global	_dev
   202                           	global	_num
   203                           	global	getlogicseq@F1874
   204                           	global	_done_init
   205                           	global	_f1
   206                           	global	_f2
   207                           	global	_f3
   208                           	global	_pdev
   209                           	global	_retm
   210                           	global	_PORTB
   211  0006                     _PORTB	set	6
   212                           	global	_EEIF
   213  006C                     _EEIF	set	108
   214                           	global	_RA0
   215  0028                     _RA0	set	40
   216                           	global	_RA1
   217  0029                     _RA1	set	41
   218                           	global	_RA2
   219  002A                     _RA2	set	42
   220                           	global	_RB0
   221  0030                     _RB0	set	48
   222                           	global	_RB1
   223  0031                     _RB1	set	49
   224                           	global	_RB2
   225  0032                     _RB2	set	50
   226                           	global	_RB3
   227  0033                     _RB3	set	51
   228                           	global	_RB5
   229  0035                     _RB5	set	53
   230                           	global	_RB6
   231  0036                     _RB6	set	54
   232                           	global	_RB7
   233  0037                     _RB7	set	55
   234                           	global	_RC0
   235  0038                     _RC0	set	56
   236                           	global	_RC1
   237  0039                     _RC1	set	57
   238                           	global	_RC2
   239  003A                     _RC2	set	58
   240                           	global	_RC3
   241  003B                     _RC3	set	59
   242                           	global	_RC4
   243  003C                     _RC4	set	60
   244                           	global	_RC5
   245  003D                     _RC5	set	61
   246                           	global	_RC6
   247  003E                     _RC6	set	62
   248                           	global	_RD0
   249  0040                     _RD0	set	64
   250                           	global	_RD1
   251  0041                     _RD1	set	65
   252                           	global	_RD2
   253  0042                     _RD2	set	66
   254                           	global	_RD3
   255  0043                     _RD3	set	67
   256                           	global	_RD4
   257  0044                     _RD4	set	68
   258                           	global	_RD5
   259  0045                     _RD5	set	69
   260                           	global	_RD6
   261  0046                     _RD6	set	70
   262                           	global	_RD7
   263  0047                     _RD7	set	71
   264                           	global	_TRISA
   265  0085                     _TRISA	set	133
   266                           	global	_TRISB
   267  0086                     _TRISB	set	134
   268                           	global	_TRISC
   269  0087                     _TRISC	set	135
   270                           	global	_TRISD
   271  0088                     _TRISD	set	136
   272                           	global	_EEADR
   273  010D                     _EEADR	set	269
   274                           	global	_EEDAT
   275  010C                     _EEDAT	set	268
   276                           	global	_ANSEL
   277  0188                     _ANSEL	set	392
   278                           	global	_EECON2
   279  018D                     _EECON2	set	397
   280                           	global	_EEPGD
   281  0C67                     _EEPGD	set	3175
   282                           	global	_RD
   283  0C60                     _RD	set	3168
   284                           	global	_WR
   285  0C61                     _WR	set	3169
   286                           	global	_WREN
   287  0C62                     _WREN	set	3170
   288                           	global	_WRERR
   289  0C63                     _WRERR	set	3171
   290                           	
   291  0817                     STR_10:	
   292  0817  3450               	retlw	80	;'P'
   293  0818  3472               	retlw	114	;'r'
   294  0819  3465               	retlw	101	;'e'
   295  081A  3473               	retlw	115	;'s'
   296  081B  3473               	retlw	115	;'s'
   297  081C  3420               	retlw	32	;' '
   298  081D  3432               	retlw	50	;'2'
   299  081E  342E               	retlw	46	;'.'
   300  081F  3420               	retlw	32	;' '
   301  0820  342D               	retlw	45	;'-'
   302  0821  3420               	retlw	32	;' '
   303  0822  3453               	retlw	83	;'S'
   304  0823  346B               	retlw	107	;'k'
   305  0824  3469               	retlw	105	;'i'
   306  0825  3470               	retlw	112	;'p'
   307  0826  3420               	retlw	32	;' '
   308  0827  3466               	retlw	102	;'f'
   309  0828  346F               	retlw	111	;'o'
   310  0829  3472               	retlw	114	;'r'
   311  082A  3420               	retlw	32	;' '
   312  082B  3444               	retlw	68	;'D'
   313  082C  3465               	retlw	101	;'e'
   314  082D  3476               	retlw	118	;'v'
   315  082E  3469               	retlw	105	;'i'
   316  082F  3463               	retlw	99	;'c'
   317  0830  3465               	retlw	101	;'e'
   318  0831  3400               	retlw	0
   319                           psect	stringtext
   320                           	
   321  0832                     STR_11:	
   322  0832  3445               	retlw	69	;'E'
   323  0833  346E               	retlw	110	;'n'
   324  0834  3474               	retlw	116	;'t'
   325  0835  3465               	retlw	101	;'e'
   326  0836  3472               	retlw	114	;'r'
   327  0837  3420               	retlw	32	;' '
   328  0838  344C               	retlw	76	;'L'
   329  0839  346F               	retlw	111	;'o'
   330  083A  3467               	retlw	103	;'g'
   331  083B  3469               	retlw	105	;'i'
   332  083C  3463               	retlw	99	;'c'
   333  083D  3420               	retlw	32	;' '
   334  083E  3444               	retlw	68	;'D'
   335  083F  3445               	retlw	69	;'E'
   336  0840  3456               	retlw	86	;'V'
   337  0841  3431               	retlw	49	;'1'
   338  0842  343A               	retlw	58	;':'
   339  0843  3420               	retlw	32	;' '
   340  0844  3420               	retlw	32	;' '
   341  0845  3400               	retlw	0
   342                           psect	stringtext
   343                           	
   344  0846                     STR_14:	
   345  0846  3445               	retlw	69	;'E'
   346  0847  346E               	retlw	110	;'n'
   347  0848  3474               	retlw	116	;'t'
   348  0849  3465               	retlw	101	;'e'
   349  084A  3472               	retlw	114	;'r'
   350  084B  3420               	retlw	32	;' '
   351  084C  344C               	retlw	76	;'L'
   352  084D  346F               	retlw	111	;'o'
   353  084E  3467               	retlw	103	;'g'
   354  084F  3469               	retlw	105	;'i'
   355  0850  3463               	retlw	99	;'c'
   356  0851  3420               	retlw	32	;' '
   357  0852  3444               	retlw	68	;'D'
   358  0853  3445               	retlw	69	;'E'
   359  0854  3456               	retlw	86	;'V'
   360  0855  3432               	retlw	50	;'2'
   361  0856  343A               	retlw	58	;':'
   362  0857  3420               	retlw	32	;' '
   363  0858  3420               	retlw	32	;' '
   364  0859  3400               	retlw	0
   365                           psect	stringtext
   366                           	
   367  085A                     STR_17:	
   368  085A  3445               	retlw	69	;'E'
   369  085B  346E               	retlw	110	;'n'
   370  085C  3474               	retlw	116	;'t'
   371  085D  3465               	retlw	101	;'e'
   372  085E  3472               	retlw	114	;'r'
   373  085F  3420               	retlw	32	;' '
   374  0860  344C               	retlw	76	;'L'
   375  0861  346F               	retlw	111	;'o'
   376  0862  3467               	retlw	103	;'g'
   377  0863  3469               	retlw	105	;'i'
   378  0864  3463               	retlw	99	;'c'
   379  0865  3420               	retlw	32	;' '
   380  0866  3444               	retlw	68	;'D'
   381  0867  3445               	retlw	69	;'E'
   382  0868  3456               	retlw	86	;'V'
   383  0869  3433               	retlw	51	;'3'
   384  086A  343A               	retlw	58	;':'
   385  086B  3420               	retlw	32	;' '
   386  086C  3420               	retlw	32	;' '
   387  086D  3400               	retlw	0
   388                           psect	stringtext
   389                           	
   390  086E                     STR_2:	
   391  086E  3450               	retlw	80	;'P'
   392  086F  3472               	retlw	114	;'r'
   393  0870  3465               	retlw	101	;'e'
   394  0871  3473               	retlw	115	;'s'
   395  0872  3473               	retlw	115	;'s'
   396  0873  3420               	retlw	32	;' '
   397  0874  3430               	retlw	48	;'0'
   398  0875  3420               	retlw	32	;' '
   399  0876  3474               	retlw	116	;'t'
   400  0877  346F               	retlw	111	;'o'
   401  0878  3420               	retlw	32	;' '
   402  0879  3443               	retlw	67	;'C'
   403  087A  346F               	retlw	111	;'o'
   404  087B  346E               	retlw	110	;'n'
   405  087C  3474               	retlw	116	;'t'
   406  087D  342E               	retlw	46	;'.'
   407  087E  3400               	retlw	0
   408                           psect	stringtext
   409                           	
   410  087F                     STR_9:	
   411  087F  3450               	retlw	80	;'P'
   412  0880  3472               	retlw	114	;'r'
   413  0881  3465               	retlw	101	;'e'
   414  0882  3473               	retlw	115	;'s'
   415  0883  3473               	retlw	115	;'s'
   416  0884  3420               	retlw	32	;' '
   417  0885  3432               	retlw	50	;'2'
   418  0886  3420               	retlw	32	;' '
   419  0887  3474               	retlw	116	;'t'
   420  0888  346F               	retlw	111	;'o'
   421  0889  3420               	retlw	32	;' '
   422  088A  3452               	retlw	82	;'R'
   423  088B  3445               	retlw	69	;'E'
   424  088C  3450               	retlw	80	;'P'
   425  088D  3452               	retlw	82	;'R'
   426  088E  3447               	retlw	71	;'G'
   427  088F  3400               	retlw	0
   428                           psect	stringtext
   429                           	
   430  0890                     STR_1:	
   431  0890  3446               	retlw	70	;'F'
   432  0891  3450               	retlw	80	;'P'
   433  0892  3420               	retlw	32	;' '
   434  0893  3448               	retlw	72	;'H'
   435  0894  346F               	retlw	111	;'o'
   436  0895  346D               	retlw	109	;'m'
   437  0896  3465               	retlw	101	;'e'
   438  0897  3420               	retlw	32	;' '
   439  0898  3441               	retlw	65	;'A'
   440  0899  3474               	retlw	116	;'t'
   441  089A  346F               	retlw	111	;'o'
   442  089B  346D               	retlw	109	;'m'
   443  089C  346E               	retlw	110	;'n'
   444  089D  342E               	retlw	46	;'.'
   445  089E  3400               	retlw	0
   446                           psect	stringtext
   447                           	
   448  089F                     STR_3:	
   449  089F  3431               	retlw	49	;'1'
   450  08A0  342E               	retlw	46	;'.'
   451  08A1  3453               	retlw	83	;'S'
   452  08A2  3457               	retlw	87	;'W'
   453  08A3  3454               	retlw	84	;'T'
   454  08A4  3420               	retlw	32	;' '
   455  08A5  3420               	retlw	32	;' '
   456  08A6  3432               	retlw	50	;'2'
   457  08A7  342E               	retlw	46	;'.'
   458  08A8  3452               	retlw	82	;'R'
   459  08A9  3445               	retlw	69	;'E'
   460  08AA  3450               	retlw	80	;'P'
   461  08AB  3452               	retlw	82	;'R'
   462  08AC  3447               	retlw	71	;'G'
   463  08AD  3400               	retlw	0
   464                           psect	stringtext
   465                           	
   466  08AE                     STR_5:	
   467  08AE  3443               	retlw	67	;'C'
   468  08AF  344F               	retlw	79	;'O'
   469  08B0  344E               	retlw	78	;'N'
   470  08B1  3446               	retlw	70	;'F'
   471  08B2  3449               	retlw	73	;'I'
   472  08B3  3447               	retlw	71	;'G'
   473  08B4  3455               	retlw	85	;'U'
   474  08B5  3452               	retlw	82	;'R'
   475  08B6  3445               	retlw	69	;'E'
   476  08B7  3444               	retlw	68	;'D'
   477  08B8  3420               	retlw	32	;' '
   478  08B9  3421               	retlw	33	;'!'
   479  08BA  3400               	retlw	0
   480                           psect	stringtext
   481                           	
   482  08BB                     STR_6:	
   483  08BB  3452               	retlw	82	;'R'
   484  08BC  3445               	retlw	69	;'E'
   485  08BD  3441               	retlw	65	;'A'
   486  08BE  3444               	retlw	68	;'D'
   487  08BF  3449               	retlw	73	;'I'
   488  08C0  344E               	retlw	78	;'N'
   489  08C1  3447               	retlw	71	;'G'
   490  08C2  342E               	retlw	46	;'.'
   491  08C3  342E               	retlw	46	;'.'
   492  08C4  3420               	retlw	32	;' '
   493  08C5  3421               	retlw	33	;'!'
   494  08C6  3400               	retlw	0
   495                           psect	stringtext
   496                           	
   497  08C7                     STR_7:	
   498  08C7  3453               	retlw	83	;'S'
   499  08C8  3465               	retlw	101	;'e'
   500  08C9  346E               	retlw	110	;'n'
   501  08CA  3473               	retlw	115	;'s'
   502  08CB  3469               	retlw	105	;'i'
   503  08CC  346E               	retlw	110	;'n'
   504  08CD  3467               	retlw	103	;'g'
   505  08CE  342E               	retlw	46	;'.'
   506  08CF  342E               	retlw	46	;'.'
   507  08D0  342E               	retlw	46	;'.'
   508  08D1  3400               	retlw	0
   509                           psect	stringtext
   510                           	
   511  08D2                     STR_4:	
   512  08D2  3433               	retlw	51	;'3'
   513  08D3  342E               	retlw	46	;'.'
   514  08D4  3452               	retlw	82	;'R'
   515  08D5  3445               	retlw	69	;'E'
   516  08D6  3453               	retlw	83	;'S'
   517  08D7  3445               	retlw	69	;'E'
   518  08D8  3454               	retlw	84	;'T'
   519  08D9  3400               	retlw	0
   520                           psect	stringtext
   521                           	
   522  08DA                     STR_20:	
   523  08DA  3430               	retlw	48	;'0'
   524  08DB  3430               	retlw	48	;'0'
   525  08DC  3430               	retlw	48	;'0'
   526  08DD  3430               	retlw	48	;'0'
   527  08DE  3400               	retlw	0
   528                           psect	stringtext
   529                           	
   530  08DF                     STR_28:	
   531  08DF  3431               	retlw	49	;'1'
   532  08E0  3430               	retlw	48	;'0'
   533  08E1  3430               	retlw	48	;'0'
   534  08E2  3430               	retlw	48	;'0'
   535  08E3  3400               	retlw	0
   536                           psect	stringtext
   537                           	
   538  08E4                     STR_24:	
   539  08E4  3430               	retlw	48	;'0'
   540  08E5  3431               	retlw	49	;'1'
   541  08E6  3430               	retlw	48	;'0'
   542  08E7  3430               	retlw	48	;'0'
   543  08E8  3400               	retlw	0
   544                           psect	stringtext
   545                           	
   546  08E9                     STR_32:	
   547  08E9  3431               	retlw	49	;'1'
   548  08EA  3431               	retlw	49	;'1'
   549  08EB  3430               	retlw	48	;'0'
   550  08EC  3430               	retlw	48	;'0'
   551  08ED  3400               	retlw	0
   552                           psect	stringtext
   553                           	
   554  08EE                     STR_22:	
   555  08EE  3430               	retlw	48	;'0'
   556  08EF  3430               	retlw	48	;'0'
   557  08F0  3431               	retlw	49	;'1'
   558  08F1  3430               	retlw	48	;'0'
   559  08F2  3400               	retlw	0
   560                           psect	stringtext
   561                           	
   562  08F3                     STR_30:	
   563  08F3  3431               	retlw	49	;'1'
   564  08F4  3430               	retlw	48	;'0'
   565  08F5  3431               	retlw	49	;'1'
   566  08F6  3430               	retlw	48	;'0'
   567  08F7  3400               	retlw	0
   568                           psect	stringtext
   569                           	
   570  08F8                     STR_26:	
   571  08F8  3430               	retlw	48	;'0'
   572  08F9  3431               	retlw	49	;'1'
   573  08FA  3431               	retlw	49	;'1'
   574  08FB  3430               	retlw	48	;'0'
   575  08FC  3400               	retlw	0
   576                           psect	stringtext
   577                           	
   578  08FD                     STR_34:	
   579  08FD  3431               	retlw	49	;'1'
   580  08FE  3431               	retlw	49	;'1'
   581  08FF  3431               	retlw	49	;'1'
   582  0900  3430               	retlw	48	;'0'
   583  0901  3400               	retlw	0
   584                           psect	stringtext
   585                           	
   586  0902                     STR_21:	
   587  0902  3430               	retlw	48	;'0'
   588  0903  3430               	retlw	48	;'0'
   589  0904  3430               	retlw	48	;'0'
   590  0905  3431               	retlw	49	;'1'
   591  0906  3400               	retlw	0
   592                           psect	stringtext
   593                           	
   594  0907                     STR_29:	
   595  0907  3431               	retlw	49	;'1'
   596  0908  3430               	retlw	48	;'0'
   597  0909  3430               	retlw	48	;'0'
   598  090A  3431               	retlw	49	;'1'
   599  090B  3400               	retlw	0
   600                           psect	stringtext
   601                           	
   602  090C                     STR_25:	
   603  090C  3430               	retlw	48	;'0'
   604  090D  3431               	retlw	49	;'1'
   605  090E  3430               	retlw	48	;'0'
   606  090F  3431               	retlw	49	;'1'
   607  0910  3400               	retlw	0
   608                           psect	stringtext
   609                           	
   610  0911                     STR_33:	
   611  0911  3431               	retlw	49	;'1'
   612  0912  3431               	retlw	49	;'1'
   613  0913  3430               	retlw	48	;'0'
   614  0914  3431               	retlw	49	;'1'
   615  0915  3400               	retlw	0
   616                           psect	stringtext
   617                           	
   618  0916                     STR_23:	
   619  0916  3430               	retlw	48	;'0'
   620  0917  3430               	retlw	48	;'0'
   621  0918  3431               	retlw	49	;'1'
   622  0919  3431               	retlw	49	;'1'
   623  091A  3400               	retlw	0
   624                           psect	stringtext
   625                           	
   626  091B                     STR_31:	
   627  091B  3431               	retlw	49	;'1'
   628  091C  3430               	retlw	48	;'0'
   629  091D  3431               	retlw	49	;'1'
   630  091E  3431               	retlw	49	;'1'
   631  091F  3400               	retlw	0
   632                           psect	stringtext
   633                           	
   634  0920                     STR_27:	
   635  0920  3430               	retlw	48	;'0'
   636  0921  3431               	retlw	49	;'1'
   637  0922  3431               	retlw	49	;'1'
   638  0923  3431               	retlw	49	;'1'
   639  0924  3400               	retlw	0
   640                           psect	stringtext
   641                           	
   642  0925                     STR_35:	
   643  0925  3431               	retlw	49	;'1'
   644  0926  3431               	retlw	49	;'1'
   645  0927  3431               	retlw	49	;'1'
   646  0928  3431               	retlw	49	;'1'
   647  0929  3400               	retlw	0
   648                           psect	stringtext
   649                           	
   650  092A                     STR_13:	
   651  092A  342D               	retlw	45	;'-'
   652  092B  342D               	retlw	45	;'-'
   653  092C  342D               	retlw	45	;'-'
   654  092D  3400               	retlw	0
   655                           psect	stringtext
   656  08DB                     STR_8	equ	STR_20+1
   657  092A                     STR_16	equ	STR_13+0
   658  092A                     STR_19	equ	STR_13+0
   659  0845                     STR_12	equ	STR_11+19
   660  0845                     STR_15	equ	STR_11+19
   661  0845                     STR_18	equ	STR_11+19
   662                           	file	"prev1.as"
   663                           	line	#
   664                           psect cinit,class=CODE,delta=2
   665                           global start_initialization
   666  0B2E                     start_initialization:
   667                           
   668                           psect	bssBANK0,class=BANK0,space=1
   669                           global __pbssBANK0
   670  006B                     __pbssBANK0:
   671  006B                     _dev:
   672  006B                            ds      2
   673                           
   674  006D                     _num:
   675  006D                            ds      2
   676                           
   677                           psect	bssBANK1,class=BANK1,space=1
   678                           global __pbssBANK1
   679  00C3                     __pbssBANK1:
   680  00C3                     getlogicseq@F1874:
   681  00C3                            ds      16
   682                           
   683  00D3                     _done_init:
   684  00D3                            ds      2
   685                           
   686  00D5                     _f1:
   687  00D5                            ds      2
   688                           
   689  00D7                     _f2:
   690  00D7                            ds      2
   691                           
   692  00D9                     _f3:
   693  00D9                            ds      2
   694                           
   695  00DB                     _pdev:
   696  00DB                            ds      2
   697                           
   698  00DD                     _retm:
   699  00DD                            ds      2
   700                           
   701                           psect	dataBANK1,class=BANK1,space=1
   702                           global __pdataBANK1
   703  00A0                     __pdataBANK1:
   704                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   705                           	line	855
   706  00A0                     read_log@F1918:
   707  00A0                            ds      5
   708                           
   709                           psect	dataBANK1
   710                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   711                           	line	205
   712  00A5                     _lo:
   713  00A5                            ds      5
   714                           
   715                           psect	dataBANK1
   716                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   717                           	line	201
   718  00AA                     _logic_d1:
   719  00AA                            ds      5
   720                           
   721                           psect	dataBANK1
   722                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   723                           	line	202
   724  00AF                     _logic_d2:
   725  00AF                            ds      5
   726                           
   727                           psect	dataBANK1
   728                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   729                           	line	203
   730  00B4                     _logic_d3:
   731  00B4                            ds      5
   732                           
   733                           psect	dataBANK1
   734                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   735                           	line	204
   736  00B9                     _logic_d4:
   737  00B9                            ds      5
   738                           
   739                           psect	dataBANK1
   740                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
   741                           	line	206
   742  00BE                     _plo:
   743  00BE                            ds      5
   744                           
   745                           psect clrtext,class=CODE,delta=2
   746                           global clear_ram
   747                           ;	Called with FSR containing the base address, and
   748                           ;	W with the last address+1
   749  0A78                     clear_ram:
   750  0A78  0064               	clrwdt			;clear the watchdog before getting into this loop
   751  0A79                     clrloop:
   752  0A79  0180               	clrf	indf		;clear RAM location pointed to by FSR
   753  0A7A  0A84               	incf	fsr,f		;increment pointer
   754  0A7B  0604               	xorwf	fsr,w		;XOR with final address
   755  0A7C  1903               	btfsc	status,2	;have we reached the end yet?
   756  0A7D  3400               	retlw	0		;all done for this memory range, return
   757  0A7E  0604               	xorwf	fsr,w		;XOR again to restore value
   758  0A7F  2A79               	goto	clrloop		;do the next byte
   759                           
   760                           ; Clear objects allocated to BANK0
   761                           psect cinit,class=CODE,delta=2
   762  0B2E  01EB               	clrf	((__pbssBANK0)+0)&07Fh
   763  0B2F  01EC               	clrf	((__pbssBANK0)+1)&07Fh
   764  0B30  01ED               	clrf	((__pbssBANK0)+2)&07Fh
   765  0B31  01EE               	clrf	((__pbssBANK0)+3)&07Fh
   766                           ; Clear objects allocated to BANK1
   767                           psect cinit,class=CODE,delta=2
   768  0B32  1383               	bcf	status, 7	;select IRP bank0
   769  0B33  30C3               	movlw	low(__pbssBANK1)
   770  0B34  0084               	movwf	fsr
   771  0B35  30DF               	movlw	low((__pbssBANK1)+01Ch)
   772  0B36  120A  158A  2278   	fcall	clear_ram
              120A  158A         
   773                           global btemp
   774                           psect inittext,class=CODE,delta=2
   775                           global init_fetch,btemp
   776                           ;	Called with low address in FSR and high address in W
   777  0ABC                     init_fetch:
   778  0ABC  087E               	movf btemp,w
   779  0ABD  008A               	movwf pclath
   780  0ABE  087F               	movf btemp+1,w
   781  0ABF  0082               	movwf pc
   782                           global init_ram
   783                           ;Called with:
   784                           ;	high address of idata address in btemp 
   785                           ;	low address of idata address in btemp+1 
   786                           ;	low address of data in FSR
   787                           ;	high address + 1 of data in btemp-1
   788  0AC0                     init_ram:
   789  0AC0  22BC  120A  158A   	fcall init_fetch
   790  0AC3  0080               	movwf indf,f
   791  0AC4  0A84               	incf fsr,f
   792  0AC5  0804               	movf fsr,w
   793  0AC6  067D               	xorwf btemp-1,w
   794  0AC7  1903               	btfsc status,2
   795  0AC8  3400               	retlw 0
   796  0AC9  0AFF               	incf btemp+1,f
   797  0ACA  1903               	btfsc status,2
   798  0ACB  0AFE               	incf btemp,f
   799  0ACC  2AC0               	goto init_ram
   800                           ; Initialize objects allocated to BANK1
   801                           psect cinit,class=CODE,delta=2
   802                           global init_ram, __pidataBANK1
   803  0B3B  30C3               	movlw low(__pdataBANK1+35)
   804  0B3C  00FD               	movwf btemp-1,f
   805  0B3D  300B               	movlw high(__pidataBANK1)
   806  0B3E  00FE               	movwf btemp,f
   807  0B3F  304C               	movlw low(__pidataBANK1)
   808  0B40  00FF               	movwf btemp+1,f
   809  0B41  30A0               	movlw low(__pdataBANK1)
   810  0B42  0084               	movwf fsr,f
   811  0B43  120A  158A  22C0   	fcall init_ram
              120A  158A         
   812                           psect cinit,class=CODE,delta=2
   813                           global end_of_initialization
   814                           
   815                           ;End of C runtime variable initialization code
   816                           
   817  0B48                     end_of_initialization:
   818  0B48  0183               clrf status
   819  0B49  120A  158A  2AE1   ljmp _main	;jump to C main() function
   820                           psect	cstackCOMMON,class=COMMON,space=1
   821                           global __pcstackCOMMON
   822  0070                     __pcstackCOMMON:
   823                           	global	?_initlcd
   824  0070                     ?_initlcd:	; 0 bytes @ 0x0
   825                           	global	?_initkeypad
   826  0070                     ?_initkeypad:	; 0 bytes @ 0x0
   827                           	global	??_initkeypad
   828  0070                     ??_initkeypad:	; 0 bytes @ 0x0
   829                           	global	?_start
   830  0070                     ?_start:	; 0 bytes @ 0x0
   831                           	global	?_startswitch
   832  0070                     ?_startswitch:	; 0 bytes @ 0x0
   833                           	global	?_getlogicseq
   834  0070                     ?_getlogicseq:	; 0 bytes @ 0x0
   835                           	global	?_delay
   836  0070                     ?_delay:	; 0 bytes @ 0x0
   837                           	global	?_cmd
   838  0070                     ?_cmd:	; 0 bytes @ 0x0
   839                           	global	?_setLCD
   840  0070                     ?_setLCD:	; 0 bytes @ 0x0
   841                           	global	?_buzz
   842  0070                     ?_buzz:	; 0 bytes @ 0x0
   843                           	global	?_setlogic
   844  0070                     ?_setlogic:	; 0 bytes @ 0x0
   845                           	global	?_getlogic
   846  0070                     ?_getlogic:	; 0 bytes @ 0x0
   847                           	global	?_init_fun
   848  0070                     ?_init_fun:	; 0 bytes @ 0x0
   849                           	global	?_clearlcd
   850  0070                     ?_clearlcd:	; 0 bytes @ 0x0
   851                           	global	?_latch
   852  0070                     ?_latch:	; 0 bytes @ 0x0
   853                           	global	?__dat
   854  0070                     ?__dat:	; 0 bytes @ 0x0
   855                           	global	?__cmd
   856  0070                     ?__cmd:	; 0 bytes @ 0x0
   857                           	global	?_dat
   858  0070                     ?_dat:	; 0 bytes @ 0x0
   859                           	global	?_resetout
   860  0070                     ?_resetout:	; 0 bytes @ 0x0
   861                           	global	??_resetout
   862  0070                     ??_resetout:	; 0 bytes @ 0x0
   863                           	global	?_strcat
   864  0070                     ?_strcat:	; 1 bytes @ 0x0
   865                           	global	?_getn
   866  0070                     ?_getn:	; 1 bytes @ 0x0
   867                           	global	?_strcmp
   868  0070                     ?_strcmp:	; 2 bytes @ 0x0
   869                           	global	?_main
   870  0070                     ?_main:	; 2 bytes @ 0x0
   871                           	global	?_check
   872  0070                     ?_check:	; 2 bytes @ 0x0
   873                           	global	?___wmul
   874  0070                     ?___wmul:	; 2 bytes @ 0x0
   875                           	global	?___awdiv
   876  0070                     ?___awdiv:	; 2 bytes @ 0x0
   877                           	global	?___awmod
   878  0070                     ?___awmod:	; 2 bytes @ 0x0
   879                           	global	check@logic
   880  0070                     check@logic:	; 1 bytes @ 0x0
   881                           	global	getn@n
   882  0070                     getn@n:	; 1 bytes @ 0x0
   883                           	global	strcat@from
   884  0070                     strcat@from:	; 1 bytes @ 0x0
   885                           	global	buzz@val
   886  0070                     buzz@val:	; 2 bytes @ 0x0
   887                           	global	delay@x
   888  0070                     delay@x:	; 2 bytes @ 0x0
   889                           	global	strcmp@s2
   890  0070                     strcmp@s2:	; 2 bytes @ 0x0
   891                           	global	___wmul@multiplier
   892  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   893                           	global	___awdiv@divisor
   894  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   895                           	global	___awmod@divisor
   896  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   897  0070                     	ds	1
   898                           	global	??_strcat
   899  0071                     ??_strcat:	; 0 bytes @ 0x1
   900                           	global	??_getn
   901  0071                     ??_getn:	; 0 bytes @ 0x1
   902  0071                     	ds	1
   903                           	global	?_write_eep
   904  0072                     ?_write_eep:	; 0 bytes @ 0x2
   905                           	global	??_delay
   906  0072                     ??_delay:	; 0 bytes @ 0x2
   907                           	global	??_strcmp
   908  0072                     ??_strcmp:	; 0 bytes @ 0x2
   909                           	global	?_actrow
   910  0072                     ?_actrow:	; 0 bytes @ 0x2
   911                           	global	??_buzz
   912  0072                     ??_buzz:	; 0 bytes @ 0x2
   913                           	global	??_check
   914  0072                     ??_check:	; 0 bytes @ 0x2
   915                           	global	??_latch
   916  0072                     ??_latch:	; 0 bytes @ 0x2
   917                           	global	??__dat
   918  0072                     ??__dat:	; 0 bytes @ 0x2
   919                           	global	??__cmd
   920  0072                     ??__cmd:	; 0 bytes @ 0x2
   921                           	global	?_strcpy
   922  0072                     ?_strcpy:	; 1 bytes @ 0x2
   923                           	global	strcat@to
   924  0072                     strcat@to:	; 1 bytes @ 0x2
   925                           	global	actrow@n
   926  0072                     actrow@n:	; 2 bytes @ 0x2
   927                           	global	write_eep@x
   928  0072                     write_eep@x:	; 2 bytes @ 0x2
   929                           	global	strcpy@from
   930  0072                     strcpy@from:	; 2 bytes @ 0x2
   931                           	global	___wmul@multiplicand
   932  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   933                           	global	___awdiv@dividend
   934  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   935                           	global	___awmod@dividend
   936  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   937  0072                     	ds	1
   938                           	global	check@input
   939  0073                     check@input:	; 1 bytes @ 0x3
   940                           	global	getn@c
   941  0073                     getn@c:	; 1 bytes @ 0x3
   942                           	global	strcat@cp
   943  0073                     strcat@cp:	; 1 bytes @ 0x3
   944  0073                     	ds	1
   945                           	global	??_strcpy
   946  0074                     ??_strcpy:	; 0 bytes @ 0x4
   947                           	global	??_actrow
   948  0074                     ??_actrow:	; 0 bytes @ 0x4
   949                           	global	??___wmul
   950  0074                     ??___wmul:	; 0 bytes @ 0x4
   951                           	global	??___awdiv
   952  0074                     ??___awdiv:	; 0 bytes @ 0x4
   953                           	global	??___awmod
   954  0074                     ??___awmod:	; 0 bytes @ 0x4
   955                           	global	?_scan
   956  0074                     ?_scan:	; 2 bytes @ 0x4
   957                           	global	getn@tmp
   958  0074                     getn@tmp:	; 1 bytes @ 0x4
   959                           	global	write_eep@y
   960  0074                     write_eep@y:	; 1 bytes @ 0x4
   961                           	global	check@i
   962  0074                     check@i:	; 2 bytes @ 0x4
   963                           	global	___wmul@product
   964  0074                     ___wmul@product:	; 2 bytes @ 0x4
   965  0074                     	ds	1
   966                           	global	?_write_log
   967  0075                     ?_write_log:	; 0 bytes @ 0x5
   968                           	global	??_write_eep
   969  0075                     ??_write_eep:	; 0 bytes @ 0x5
   970                           	global	??_setLCD
   971  0075                     ??_setLCD:	; 0 bytes @ 0x5
   972                           	global	___awdiv@counter
   973  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   974                           	global	___awmod@counter
   975  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   976                           	global	write_log@devno
   977  0075                     write_log@devno:	; 2 bytes @ 0x5
   978  0075                     	ds	1
   979                           	global	??_scan
   980  0076                     ??_scan:	; 0 bytes @ 0x6
   981                           	global	strcmp@r
   982  0076                     strcmp@r:	; 1 bytes @ 0x6
   983                           	global	___awdiv@sign
   984  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   985                           	global	___awmod@sign
   986  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   987  0076                     	ds	1
   988                           	global	setLCD@number
   989  0077                     setLCD@number:	; 1 bytes @ 0x7
   990                           	global	write_log@logic
   991  0077                     write_log@logic:	; 1 bytes @ 0x7
   992                           	global	strcmp@s1
   993  0077                     strcmp@s1:	; 1 bytes @ 0x7
   994                           	global	strcpy@to
   995  0077                     strcpy@to:	; 1 bytes @ 0x7
   996                           	global	___awdiv@quotient
   997  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   998  0077                     	ds	1
   999                           	global	??_write_log
  1000  0078                     ??_write_log:	; 0 bytes @ 0x8
  1001                           	global	??_cmd
  1002  0078                     ??_cmd:	; 0 bytes @ 0x8
  1003                           	global	??_dat
  1004  0078                     ??_dat:	; 0 bytes @ 0x8
  1005                           	global	cmd@Command
  1006  0078                     cmd@Command:	; 1 bytes @ 0x8
  1007                           	global	dat@Command
  1008  0078                     dat@Command:	; 1 bytes @ 0x8
  1009                           	global	strcpy@cp
  1010  0078                     strcpy@cp:	; 1 bytes @ 0x8
  1011  0078                     	ds	1
  1012                           	global	??_initlcd
  1013  0079                     ??_initlcd:	; 0 bytes @ 0x9
  1014                           	global	??_write
  1015  0079                     ??_write:	; 0 bytes @ 0x9
  1016                           	global	??_clearlcd
  1017  0079                     ??_clearlcd:	; 0 bytes @ 0x9
  1018                           	global	?_read_eep
  1019  0079                     ?_read_eep:	; 1 bytes @ 0x9
  1020                           	global	?_itoaa
  1021  0079                     ?_itoaa:	; 2 bytes @ 0x9
  1022                           	global	itoaa@value
  1023  0079                     itoaa@value:	; 2 bytes @ 0x9
  1024                           	global	write@i
  1025  0079                     write@i:	; 2 bytes @ 0x9
  1026                           	global	read_eep@a
  1027  0079                     read_eep@a:	; 2 bytes @ 0x9
  1028  0079                     	ds	2
  1029                           	global	??_startswitch
  1030  007B                     ??_startswitch:	; 0 bytes @ 0xB
  1031                           	global	??_read_eep
  1032  007B                     ??_read_eep:	; 0 bytes @ 0xB
  1033                           	global	??_init_fun
  1034  007B                     ??_init_fun:	; 0 bytes @ 0xB
  1035                           	global	itoaa@ptr
  1036  007B                     itoaa@ptr:	; 1 bytes @ 0xB
  1037                           	global	write_log@ads
  1038  007B                     write_log@ads:	; 1 bytes @ 0xB
  1039  007B                     	ds	1
  1040                           	global	??_itoaa
  1041  007C                     ??_itoaa:	; 0 bytes @ 0xC
  1042                           	global	??_setlogic
  1043  007C                     ??_setlogic:	; 0 bytes @ 0xC
  1044  007C                     	ds	1
  1045                           	global	??_getlogic
  1046  007D                     ??_getlogic:	; 0 bytes @ 0xD
  1047  007D                     	ds	1
  1048                           	global	??_start
  1049  007E                     ??_start:	; 0 bytes @ 0xE
  1050                           	global	??_main
  1051  007E                     ??_main:	; 0 bytes @ 0xE
  1052                           psect	cstackBANK0,class=BANK0,space=1
  1053                           global __pcstackBANK0
  1054  0020                     __pcstackBANK0:
  1055                           	global	?_write
  1056  0020                     ?_write:	; 0 bytes @ 0x0
  1057                           	global	itoaa@count
  1058  0020                     itoaa@count:	; 2 bytes @ 0x0
  1059                           	global	write@str
  1060  0020                     write@str:	; 2 bytes @ 0x0
  1061                           	global	read_eep@d
  1062  0020                     read_eep@d:	; 2 bytes @ 0x0
  1063  0020                     	ds	2
  1064                           	global	?_read_log
  1065  0022                     ?_read_log:	; 1 bytes @ 0x2
  1066                           	global	itoaa@temp
  1067  0022                     itoaa@temp:	; 2 bytes @ 0x2
  1068                           	global	write@line
  1069  0022                     write@line:	; 2 bytes @ 0x2
  1070                           	global	read_log@devno
  1071  0022                     read_log@devno:	; 2 bytes @ 0x2
  1072  0022                     	ds	2
  1073                           	global	??_read_log
  1074  0024                     ??_read_log:	; 0 bytes @ 0x4
  1075                           	global	write@erase
  1076  0024                     write@erase:	; 2 bytes @ 0x4
  1077  0024                     	ds	3
  1078                           	global	read_log@logic
  1079  0027                     read_log@logic:	; 5 bytes @ 0x7
  1080  0027                     	ds	5
  1081                           	global	read_log@ads
  1082  002C                     read_log@ads:	; 1 bytes @ 0xC
  1083  002C                     	ds	1
  1084                           	global	??_getlogicseq
  1085  002D                     ??_getlogicseq:	; 0 bytes @ 0xD
  1086  002D                     	ds	4
  1087                           	global	getlogicseq@str
  1088  0031                     getlogicseq@str:	; 32 bytes @ 0x11
  1089  0031                     	ds	32
  1090                           	global	getlogicseq@bf
  1091  0051                     getlogicseq@bf:	; 2 bytes @ 0x31
  1092  0051                     	ds	2
  1093                           	global	getlogicseq@snum
  1094  0053                     getlogicseq@snum:	; 16 bytes @ 0x33
  1095  0053                     	ds	16
  1096                           	global	getlogicseq@nf
  1097  0063                     getlogicseq@nf:	; 2 bytes @ 0x43
  1098  0063                     	ds	2
  1099                           	global	getlogicseq@wf
  1100  0065                     getlogicseq@wf:	; 2 bytes @ 0x45
  1101  0065                     	ds	2
  1102                           	global	getlogicseq@ccount
  1103  0067                     getlogicseq@ccount:	; 2 bytes @ 0x47
  1104  0067                     	ds	2
  1105                           	global	getlogicseq@num
  1106  0069                     getlogicseq@num:	; 2 bytes @ 0x49
  1107  0069                     	ds	2
  1108 ;;Data sizes: Strings 279, constant 5, data 35, bss 32, persistent 0 stack 0
  1109 ;;Auto spaces:   Size  Autos    Used
  1110 ;; COMMON          14     14      14
  1111 ;; BANK0           80     75      79
  1112 ;; BANK1           80      0      63
  1113 ;; BANK3           96      0       0
  1114 ;; BANK2           96      0       0
  1115                           
  1116 ;;
  1117 ;; Pointer list with targets:
  1118                           
  1119 ;; ?___awmod	int  size(1) Largest target is 0
  1120 ;;
  1121 ;; ?___awdiv	int  size(1) Largest target is 0
  1122 ;;
  1123 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1124 ;;
  1125 ;; ?_strcat	PTR unsigned char  size(1) Largest target is 5
  1126 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1127 ;;
  1128 ;; ?_itoaa	int  size(1) Largest target is 0
  1129 ;;
  1130 ;; ?_strcmp	int  size(1) Largest target is 0
  1131 ;;
  1132 ;; ?_strcpy	PTR unsigned char  size(1) Largest target is 32
  1133 ;;		 -> getlogicseq@str(BANK0[32]), lo(BANK1[5]), plo(BANK1[5]), logic_d4(BANK1[5]), 
  1134 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1135 ;;
  1136 ;; ?_read_log	PTR unsigned char  size(1) Largest target is 5
  1137 ;;		 -> read_log@logic(BANK0[5]), 
  1138 ;;
  1139 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 20
  1140 ;;		 -> read_log@logic(BANK0[5]), STR_18(CODE[1]), STR_17(CODE[20]), STR_15(CODE[1]), 
  1141 ;;		 -> STR_14(CODE[20]), STR_12(CODE[1]), STR_11(CODE[20]), STR_8(CODE[4]), 
  1142 ;;		 -> lo(BANK1[5]), 
  1143 ;;
  1144 ;; strcpy@to	PTR unsigned char  size(1) Largest target is 32
  1145 ;;		 -> getlogicseq@str(BANK0[32]), lo(BANK1[5]), plo(BANK1[5]), logic_d4(BANK1[5]), 
  1146 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1147 ;;
  1148 ;; strcpy@cp	PTR unsigned char  size(1) Largest target is 32
  1149 ;;		 -> getlogicseq@str(BANK0[32]), lo(BANK1[5]), plo(BANK1[5]), logic_d4(BANK1[5]), 
  1150 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1151 ;;
  1152 ;; strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
  1153 ;;		 -> STR_35(CODE[5]), STR_34(CODE[5]), STR_33(CODE[5]), STR_32(CODE[5]), 
  1154 ;;		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[5]), STR_28(CODE[5]), 
  1155 ;;		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), 
  1156 ;;		 -> STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 
  1157 ;;		 -> plo(BANK1[5]), 
  1158 ;;
  1159 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
  1160 ;;		 -> lo(BANK1[5]), 
  1161 ;;
  1162 ;; strcat@from	PTR const unsigned char  size(1) Largest target is 16
  1163 ;;		 -> getlogicseq@snum(BANK0[16]), 
  1164 ;;
  1165 ;; strcat@to	PTR unsigned char  size(1) Largest target is 5
  1166 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1167 ;;
  1168 ;; strcat@cp	PTR unsigned char  size(1) Largest target is 5
  1169 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1170 ;;
  1171 ;; write_log@logic	PTR unsigned char  size(1) Largest target is 5
  1172 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1173 ;;
  1174 ;; write@str	PTR unsigned char  size(2) Largest target is 32
  1175 ;;		 -> STR_19(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), getlogicseq@str(BANK0[32]), 
  1176 ;;		 -> STR_10(CODE[27]), STR_9(CODE[17]), lo(BANK1[5]), STR_7(CODE[11]), 
  1177 ;;		 -> STR_6(CODE[12]), STR_5(CODE[13]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
  1178 ;;		 -> logic_d1(BANK1[5]), STR_4(CODE[8]), STR_3(CODE[15]), STR_2(CODE[17]), 
  1179 ;;		 -> STR_1(CODE[15]), 
  1180 ;;
  1181 ;; itoaa@ptr	PTR unsigned char  size(1) Largest target is 16
  1182 ;;		 -> getlogicseq@snum(BANK0[16]), 
  1183 ;;
  1184 ;; sp__strcat	PTR unsigned char  size(1) Largest target is 5
  1185 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1186 ;;
  1187 ;; check@logic	PTR unsigned char  size(1) Largest target is 5
  1188 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1189 ;;
  1190 ;; check@input	PTR unsigned char  size(1) Largest target is 5
  1191 ;;		 -> lo(BANK1[5]), 
  1192 ;;
  1193 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 32
  1194 ;;		 -> getlogicseq@str(BANK0[32]), lo(BANK1[5]), plo(BANK1[5]), logic_d4(BANK1[5]), 
  1195 ;;		 -> logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
  1196 ;;
  1197 ;; sp__read_log	PTR unsigned char  size(1) Largest target is 5
  1198 ;;		 -> read_log@logic(BANK0[5]), 
  1199 ;;
  1200                           
  1201                           
  1202 ;;
  1203 ;; Critical Paths under _main in COMMON
  1204 ;;
  1205 ;;   _getlogicseq->_getlogic
  1206 ;;   _startswitch->_write
  1207 ;;   _init_fun->_write
  1208 ;;   _getlogic->_read_eep
  1209 ;;   _write->_cmd
  1210 ;;   _write->_dat
  1211 ;;   _clearlcd->_cmd
  1212 ;;   _initlcd->_cmd
  1213 ;;   _dat->_setLCD
  1214 ;;   _cmd->_setLCD
  1215 ;;   _setlogic->_write_log
  1216 ;;   _read_log->_read_eep
  1217 ;;   _write_log->_write_eep
  1218 ;;   _scan->_actrow
  1219 ;;   _actrow->_delay
  1220 ;;   _setLCD->_getn
  1221 ;;   _latch->_delay
  1222 ;;   _itoaa->___awdiv
  1223 ;;   _write_eep->_delay
  1224 ;;   _read_eep->_strcpy
  1225 ;;   _strcpy->_delay
  1226 ;;
  1227 ;; Critical Paths under _main in BANK0
  1228 ;;
  1229 ;;   _start->_getlogicseq
  1230 ;;   _startswitch->_write
  1231 ;;   _init_fun->_write
  1232 ;;   _getlogic->_read_log
  1233 ;;   _read_log->_read_eep
  1234 ;;
  1235 ;; Critical Paths under _main in BANK1
  1236 ;;
  1237 ;;   None.
  1238 ;;
  1239 ;; Critical Paths under _main in BANK3
  1240 ;;
  1241 ;;   None.
  1242 ;;
  1243 ;; Critical Paths under _main in BANK2
  1244 ;;
  1245 ;;   None.
  1246                           
  1247 ;;
  1248 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1249 ;;
  1250                           
  1251 ;;
  1252 ;;Call Graph Tables:
  1253 ;;
  1254 ;; ---------------------------------------------------------------------------------
  1255 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1256 ;; ---------------------------------------------------------------------------------
  1257 ;; (0) _main                                                 0     0      0    9222
  1258 ;;                            _initlcd
  1259 ;;                         _initkeypad
  1260 ;;                              _start
  1261 ;; ---------------------------------------------------------------------------------
  1262 ;; (1) _start                                                0     0      0    8913
  1263 ;;                              _write
  1264 ;;                               _scan
  1265 ;;                               _buzz
  1266 ;;                        _startswitch
  1267 ;;                        _getlogicseq
  1268 ;; ---------------------------------------------------------------------------------
  1269 ;; (2) _getlogicseq                                         62    62      0    5257
  1270 ;;                                             13 BANK0     62    62      0
  1271 ;;                           _getlogic
  1272 ;;                              _write
  1273 ;;                              _delay
  1274 ;;                             _strcpy
  1275 ;;                               _scan
  1276 ;;                               _buzz
  1277 ;;                              _itoaa
  1278 ;;                             _strcat
  1279 ;;                           _setlogic
  1280 ;; ---------------------------------------------------------------------------------
  1281 ;; (2) _startswitch                                          2     2      0    2463
  1282 ;;                                             11 COMMON     2     2      0
  1283 ;;                           _init_fun
  1284 ;;                             _strcpy
  1285 ;;                              _write
  1286 ;;                               _buzz
  1287 ;;                             _strcmp
  1288 ;;                              _delay
  1289 ;;                              _check
  1290 ;; ---------------------------------------------------------------------------------
  1291 ;; (3) _init_fun                                             0     0      0    1061
  1292 ;;                              _write
  1293 ;; ---------------------------------------------------------------------------------
  1294 ;; (3) _getlogic                                             1     1      0    1564
  1295 ;;                                             13 COMMON     1     1      0
  1296 ;;                           _read_eep
  1297 ;;                          _write_eep
  1298 ;;                              _write
  1299 ;;                              _delay
  1300 ;;                           _read_log
  1301 ;;                             _strcpy
  1302 ;; ---------------------------------------------------------------------------------
  1303 ;; (3) _write                                                8     2      6    1061
  1304 ;;                                              9 COMMON     2     2      0
  1305 ;;                                              0 BANK0      6     0      6
  1306 ;;                           _clearlcd
  1307 ;;                                _cmd
  1308 ;;                                _dat
  1309 ;; ---------------------------------------------------------------------------------
  1310 ;; (4) _clearlcd                                             0     0      0     309
  1311 ;;                                _cmd
  1312 ;; ---------------------------------------------------------------------------------
  1313 ;; (1) _initlcd                                              0     0      0     309
  1314 ;;                                _cmd
  1315 ;; ---------------------------------------------------------------------------------
  1316 ;; (4) _dat                                                  1     1      0     309
  1317 ;;                                              8 COMMON     1     1      0
  1318 ;;                             _setLCD
  1319 ;;                               __dat
  1320 ;; ---------------------------------------------------------------------------------
  1321 ;; (4) _cmd                                                  1     1      0     309
  1322 ;;                                              8 COMMON     1     1      0
  1323 ;;                             _setLCD
  1324 ;;                               __cmd
  1325 ;; ---------------------------------------------------------------------------------
  1326 ;; (3) _setlogic                                             1     1      0     265
  1327 ;;                                             12 COMMON     1     1      0
  1328 ;;                          _write_log
  1329 ;; ---------------------------------------------------------------------------------
  1330 ;; (5) __cmd                                                 0     0      0      22
  1331 ;;                              _latch
  1332 ;; ---------------------------------------------------------------------------------
  1333 ;; (5) __dat                                                 0     0      0      22
  1334 ;;                              _latch
  1335 ;; ---------------------------------------------------------------------------------
  1336 ;; (4) _read_log                                            11     9      2     275
  1337 ;;                                              2 BANK0     11     9      2
  1338 ;;                           _read_eep
  1339 ;;                             _strcpy (ARG)
  1340 ;; ---------------------------------------------------------------------------------
  1341 ;; (4) _write_log                                            7     4      3     265
  1342 ;;                                              5 COMMON     7     4      3
  1343 ;;                          _write_eep
  1344 ;; ---------------------------------------------------------------------------------
  1345 ;; (3) _scan                                                 2     0      2     110
  1346 ;;                                              4 COMMON     2     0      2
  1347 ;;                             _actrow
  1348 ;; ---------------------------------------------------------------------------------
  1349 ;; (4) _actrow                                               2     0      2     110
  1350 ;;                                              2 COMMON     2     0      2
  1351 ;;                           _resetout
  1352 ;;                              _delay
  1353 ;; ---------------------------------------------------------------------------------
  1354 ;; (5) _setLCD                                               3     3      0     265
  1355 ;;                                              5 COMMON     3     3      0
  1356 ;;                               _getn
  1357 ;; ---------------------------------------------------------------------------------
  1358 ;; (6) _latch                                                0     0      0      22
  1359 ;;                              _delay
  1360 ;; ---------------------------------------------------------------------------------
  1361 ;; (3) _itoaa                                                8     5      3    1078
  1362 ;;                                              9 COMMON     4     1      3
  1363 ;;                                              0 BANK0      4     4      0
  1364 ;;                             ___wmul
  1365 ;;                            ___awdiv
  1366 ;;                            ___awmod
  1367 ;; ---------------------------------------------------------------------------------
  1368 ;; (5) _write_eep                                            3     0      3      66
  1369 ;;                                              2 COMMON     3     0      3
  1370 ;;                              _delay
  1371 ;; ---------------------------------------------------------------------------------
  1372 ;; (5) _read_eep                                             6     4      2      67
  1373 ;;                                              9 COMMON     4     2      2
  1374 ;;                                              0 BANK0      2     2      0
  1375 ;;                              _delay
  1376 ;;                             _strcpy (ARG)
  1377 ;; ---------------------------------------------------------------------------------
  1378 ;; (4) ___awmod                                              7     3      4     296
  1379 ;;                                              0 COMMON     7     3      4
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; (4) ___awdiv                                              9     5      4     300
  1382 ;;                                              0 COMMON     9     5      4
  1383 ;; ---------------------------------------------------------------------------------
  1384 ;; (4) ___wmul                                               6     2      4      92
  1385 ;;                                              0 COMMON     6     2      4
  1386 ;; ---------------------------------------------------------------------------------
  1387 ;; (5) _resetout                                             0     0      0       0
  1388 ;; ---------------------------------------------------------------------------------
  1389 ;; (6) _getn                                                 5     4      1      89
  1390 ;;                                              0 COMMON     5     4      1
  1391 ;; ---------------------------------------------------------------------------------
  1392 ;; (3) _strcat                                               4     3      1      96
  1393 ;;                                              0 COMMON     4     3      1
  1394 ;; ---------------------------------------------------------------------------------
  1395 ;; (4) _strcmp                                               8     6      2      89
  1396 ;;                                              0 COMMON     8     6      2
  1397 ;; ---------------------------------------------------------------------------------
  1398 ;; (3) _check                                                6     4      2     135
  1399 ;;                                              0 COMMON     6     4      2
  1400 ;; ---------------------------------------------------------------------------------
  1401 ;; (4) _strcpy                                               7     5      2      73
  1402 ;;                                              2 COMMON     7     5      2
  1403 ;;                              _delay (ARG)
  1404 ;; ---------------------------------------------------------------------------------
  1405 ;; (6) _delay                                                2     0      2      22
  1406 ;;                                              0 COMMON     2     0      2
  1407 ;; ---------------------------------------------------------------------------------
  1408 ;; (1) _initkeypad                                           0     0      0       0
  1409 ;; ---------------------------------------------------------------------------------
  1410 ;; (3) _buzz                                                 2     0      2      22
  1411 ;;                                              0 COMMON     2     0      2
  1412 ;; ---------------------------------------------------------------------------------
  1413 ;; Estimated maximum stack depth 6
  1414 ;; ---------------------------------------------------------------------------------
  1415                           
  1416 ;; Call Graph Graphs:
  1417                           
  1418 ;; _main (ROOT)
  1419 ;;   _initlcd
  1420 ;;     _cmd
  1421 ;;       _setLCD
  1422 ;;         _getn
  1423 ;;       __cmd
  1424 ;;         _latch
  1425 ;;           _delay
  1426 ;;   _initkeypad
  1427 ;;   _start
  1428 ;;     _write
  1429 ;;       _clearlcd
  1430 ;;         _cmd
  1431 ;;           _setLCD
  1432 ;;             _getn
  1433 ;;           __cmd
  1434 ;;             _latch
  1435 ;;               _delay
  1436 ;;       _cmd
  1437 ;;         _setLCD
  1438 ;;           _getn
  1439 ;;         __cmd
  1440 ;;           _latch
  1441 ;;             _delay
  1442 ;;       _dat
  1443 ;;         _setLCD
  1444 ;;           _getn
  1445 ;;         __dat
  1446 ;;           _latch
  1447 ;;             _delay
  1448 ;;     _scan
  1449 ;;       _actrow
  1450 ;;         _resetout
  1451 ;;         _delay
  1452 ;;     _buzz
  1453 ;;     _startswitch
  1454 ;;       _init_fun
  1455 ;;         _write
  1456 ;;           _clearlcd
  1457 ;;             _cmd
  1458 ;;               _setLCD
  1459 ;;                 _getn
  1460 ;;               __cmd
  1461 ;;                 _latch
  1462 ;;                   _delay
  1463 ;;           _cmd
  1464 ;;             _setLCD
  1465 ;;               _getn
  1466 ;;             __cmd
  1467 ;;               _latch
  1468 ;;                 _delay
  1469 ;;           _dat
  1470 ;;             _setLCD
  1471 ;;               _getn
  1472 ;;             __dat
  1473 ;;               _latch
  1474 ;;                 _delay
  1475 ;;       _strcpy
  1476 ;;         _delay (ARG)
  1477 ;;       _write
  1478 ;;         _clearlcd
  1479 ;;           _cmd
  1480 ;;             _setLCD
  1481 ;;               _getn
  1482 ;;             __cmd
  1483 ;;               _latch
  1484 ;;                 _delay
  1485 ;;         _cmd
  1486 ;;           _setLCD
  1487 ;;             _getn
  1488 ;;           __cmd
  1489 ;;             _latch
  1490 ;;               _delay
  1491 ;;         _dat
  1492 ;;           _setLCD
  1493 ;;             _getn
  1494 ;;           __dat
  1495 ;;             _latch
  1496 ;;               _delay
  1497 ;;       _buzz
  1498 ;;       _strcmp
  1499 ;;       _delay
  1500 ;;       _check
  1501 ;;     _getlogicseq
  1502 ;;       _getlogic
  1503 ;;         _read_eep
  1504 ;;           _delay
  1505 ;;           _strcpy (ARG)
  1506 ;;             _delay (ARG)
  1507 ;;         _write_eep
  1508 ;;           _delay
  1509 ;;         _write
  1510 ;;           _clearlcd
  1511 ;;             _cmd
  1512 ;;               _setLCD
  1513 ;;                 _getn
  1514 ;;               __cmd
  1515 ;;                 _latch
  1516 ;;                   _delay
  1517 ;;           _cmd
  1518 ;;             _setLCD
  1519 ;;               _getn
  1520 ;;             __cmd
  1521 ;;               _latch
  1522 ;;                 _delay
  1523 ;;           _dat
  1524 ;;             _setLCD
  1525 ;;               _getn
  1526 ;;             __dat
  1527 ;;               _latch
  1528 ;;                 _delay
  1529 ;;         _delay
  1530 ;;         _read_log
  1531 ;;           _read_eep
  1532 ;;             _delay
  1533 ;;             _strcpy (ARG)
  1534 ;;               _delay (ARG)
  1535 ;;           _strcpy (ARG)
  1536 ;;             _delay (ARG)
  1537 ;;         _strcpy
  1538 ;;           _delay (ARG)
  1539 ;;       _write
  1540 ;;         _clearlcd
  1541 ;;           _cmd
  1542 ;;             _setLCD
  1543 ;;               _getn
  1544 ;;             __cmd
  1545 ;;               _latch
  1546 ;;                 _delay
  1547 ;;         _cmd
  1548 ;;           _setLCD
  1549 ;;             _getn
  1550 ;;           __cmd
  1551 ;;             _latch
  1552 ;;               _delay
  1553 ;;         _dat
  1554 ;;           _setLCD
  1555 ;;             _getn
  1556 ;;           __dat
  1557 ;;             _latch
  1558 ;;               _delay
  1559 ;;       _delay
  1560 ;;       _strcpy
  1561 ;;         _delay (ARG)
  1562 ;;       _scan
  1563 ;;         _actrow
  1564 ;;           _resetout
  1565 ;;           _delay
  1566 ;;       _buzz
  1567 ;;       _itoaa
  1568 ;;         ___wmul
  1569 ;;         ___awdiv
  1570 ;;         ___awmod
  1571 ;;       _strcat
  1572 ;;       _setlogic
  1573 ;;         _write_log
  1574 ;;           _write_eep
  1575 ;;             _delay
  1576 ;;
  1577                           
  1578 ;; Address spaces:
  1579                           
  1580 ;;Name               Size   Autos  Total    Cost      Usage
  1581 ;;BANK3               60      0       0       9        0.0%
  1582 ;;BITBANK3            60      0       0       8        0.0%
  1583 ;;SFR3                 0      0       0       4        0.0%
  1584 ;;BITSFR3              0      0       0       4        0.0%
  1585 ;;BANK2               60      0       0      11        0.0%
  1586 ;;BITBANK2            60      0       0      10        0.0%
  1587 ;;SFR2                 0      0       0       5        0.0%
  1588 ;;BITSFR2              0      0       0       5        0.0%
  1589 ;;SFR1                 0      0       0       2        0.0%
  1590 ;;BITSFR1              0      0       0       2        0.0%
  1591 ;;BANK1               50      0      3F       7       78.8%
  1592 ;;BITBANK1            50      0       0       6        0.0%
  1593 ;;CODE                 0      0       0       0        0.0%
  1594 ;;DATA                 0      0      A5      12        0.0%
  1595 ;;ABS                  0      0      9C       3        0.0%
  1596 ;;NULL                 0      0       0       0        0.0%
  1597 ;;STACK                0      0       9       2        0.0%
  1598 ;;BANK0               50     4B      4F       5       98.8%
  1599 ;;BITBANK0            50      0       0       4        0.0%
  1600 ;;SFR0                 0      0       0       1        0.0%
  1601 ;;BITSFR0              0      0       0       1        0.0%
  1602 ;;COMMON               E      E       E       1      100.0%
  1603 ;;BITCOMMON            E      0       0       0        0.0%
  1604 ;;EEDATA             100      0       0       0        0.0%
  1605                           
  1606                           	global	_main
  1607                           psect	maintext,global,class=CODE,delta=2
  1608                           global __pmaintext
  1609  0AE1                     __pmaintext:
  1610                           
  1611 ;; *************** function _main *****************
  1612 ;; Defined at:
  1613 ;;		line 103 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  2  1097[COMMON] int 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 17F/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0
  1630 ;;      Totals:         0       0       0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels required when called:    9
  1633 ;; This function calls:
  1634 ;;		_initlcd
  1635 ;;		_initkeypad
  1636 ;;		_start
  1637 ;; This function is called by:
  1638 ;;		Startup code after reset
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           psect	maintext
  1642                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  1643                           	line	103
  1644                           	global	__size_of_main
  1645  0016                     	__size_of_main	equ	__end_of_main-_main
  1646                           	
  1647  0AE1                     _main:	
  1648 ;; hardware stack exceeded
  1649                           	opt	stack 0
  1650                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1651                           	line	107
  1652                           	
  1653  0AE1                     l4192:	
  1654                           ;prev13.c: 107: TRISB = 0b00001111;
  1655  0AE1  300F               	movlw	(0Fh)
  1656  0AE2  1683               	bsf	status, 5	;RP0=1, select bank1
  1657  0AE3  1303               	bcf	status, 6	;RP1=0, select bank1
  1658  0AE4  0086               	movwf	(134)^080h	;volatile
  1659                           	line	109
  1660                           	
  1661  0AE5                     l4194:	
  1662                           ;prev13.c: 109: initlcd();
  1663  0AE5  120A  158A  2310   	fcall	_initlcd
              120A  158A         
  1664                           	line	110
  1665                           	
  1666  0AEA                     l4196:	
  1667                           ;prev13.c: 110: initkeypad();
  1668  0AEA  120A  158A  2270   	fcall	_initkeypad
              120A  158A         
  1669                           	line	131
  1670                           	
  1671  0AEF                     l4198:	
  1672                           ;prev13.c: 131: start();
  1673  0AEF  120A  118A  21AA   	fcall	_start
              120A  158A         
  1674                           	line	138
  1675                           	
  1676  0AF4                     l1098:	
  1677                           	global	start
  1678  0AF4  120A  118A  2800   	ljmp	start
  1679                           	opt stack 0
  1680                           GLOBAL	__end_of_main
  1681  0AF7                     	__end_of_main:
  1682 ;; =============== function _main ends ============
  1683                           
  1684                           	signat	_main,90
  1685                           	global	_start
  1686                           psect	text746,local,class=CODE,delta=2
  1687                           global __ptext746
  1688  01AA                     __ptext746:
  1689                           
  1690 ;; *************** function _start *****************
  1691 ;; Defined at:
  1692 ;;		line 141 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;		None               void
  1699 ;; Registers used:
  1700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1706 ;;      Params:         0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0
  1709 ;;      Totals:         0       0       0       0       0
  1710 ;;Total ram usage:        0 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    8
  1713 ;; This function calls:
  1714 ;;		_write
  1715 ;;		_scan
  1716 ;;		_buzz
  1717 ;;		_startswitch
  1718 ;;		_getlogicseq
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           psect	text746
  1724                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  1725                           	line	141
  1726                           	global	__size_of_start
  1727  00E9                     	__size_of_start	equ	__end_of_start-_start
  1728                           	
  1729  01AA                     _start:	
  1730 ;; hardware stack exceeded
  1731                           	opt	stack 0
  1732                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1733                           	line	142
  1734                           ;prev13.c: 142: START:
  1735                           	
  1736  01AA                     l1101:	
  1737                           	line	143
  1738                           	
  1739  01AA                     l4144:	
  1740                           ;prev13.c: 143: done_init=0;
  1741  01AA  1683               	bsf	status, 5	;RP0=1, select bank1
  1742  01AB  1303               	bcf	status, 6	;RP1=0, select bank1
  1743  01AC  01D3               	clrf	(_done_init)^080h
  1744  01AD  01D4               	clrf	(_done_init+1)^080h
  1745                           	line	145
  1746                           	
  1747  01AE                     l4146:	
  1748                           ;prev13.c: 145: write("FP Home Atomn.",1,1);
  1749  01AE  3090               	movlw	low(STR_1|8000h)
  1750  01AF  1283               	bcf	status, 5	;RP0=0, select bank0
  1751  01B0  1303               	bcf	status, 6	;RP1=0, select bank0
  1752  01B1  00A0               	movwf	(?_write)
  1753  01B2  3088               	movlw	high(STR_1|8000h)
  1754  01B3  00A1               	movwf	((?_write))+1
  1755  01B4  3001               	movlw	low(01h)
  1756  01B5  00A2               	movwf	0+(?_write)+02h
  1757  01B6  3000               	movlw	high(01h)
  1758  01B7  00A3               	movwf	(0+(?_write)+02h)+1
  1759  01B8  3001               	movlw	low(01h)
  1760  01B9  00A4               	movwf	0+(?_write)+04h
  1761  01BA  3000               	movlw	high(01h)
  1762  01BB  00A5               	movwf	(0+(?_write)+04h)+1
  1763  01BC  120A  158A  255C   	fcall	_write
              120A  118A         
  1764                           	line	146
  1765                           	
  1766  01C1                     l4148:	
  1767                           ;prev13.c: 146: write("Press 0 to Cont.",2,0);
  1768  01C1  306E               	movlw	low(STR_2|8000h)
  1769  01C2  1283               	bcf	status, 5	;RP0=0, select bank0
  1770  01C3  1303               	bcf	status, 6	;RP1=0, select bank0
  1771  01C4  00A0               	movwf	(?_write)
  1772  01C5  3088               	movlw	high(STR_2|8000h)
  1773  01C6  00A1               	movwf	((?_write))+1
  1774  01C7  3002               	movlw	low(02h)
  1775  01C8  00A2               	movwf	0+(?_write)+02h
  1776  01C9  3000               	movlw	high(02h)
  1777  01CA  00A3               	movwf	(0+(?_write)+02h)+1
  1778  01CB  3000               	movlw	low(0)
  1779  01CC  00A4               	movwf	0+(?_write)+04h
  1780  01CD  3000               	movlw	high(0)
  1781  01CE  00A5               	movwf	(0+(?_write)+04h)+1
  1782  01CF  120A  158A  255C   	fcall	_write
              120A  118A         
  1783                           	line	149
  1784                           ;prev13.c: 149: while(scan()!=0);
  1785  01D4  29D6               	goto	l4150
  1786                           	
  1787  01D5                     l1103:	
  1788  01D5  29D6               	goto	l4150
  1789                           	
  1790  01D6                     l1102:	
  1791                           	
  1792  01D6                     l4150:	
  1793  01D6  120A  118A  20C4   	fcall	_scan
              120A  118A         
  1794  01DB  0875               	movf	((1+(?_scan))),w
  1795  01DC  0474               	iorwf	((0+(?_scan))),w
  1796  01DD  1D03               	skipz
  1797  01DE  29E0               	goto	u4941
  1798  01DF  29E1               	goto	u4940
  1799  01E0                     u4941:
  1800  01E0  29D6               	goto	l4150
  1801  01E1                     u4940:
  1802  01E1  29E2               	goto	l4152
  1803                           	
  1804  01E2                     l1104:	
  1805                           	line	152
  1806                           	
  1807  01E2                     l4152:	
  1808                           ;prev13.c: 152: write("1.SWT  2.REPRG",1,1);
  1809  01E2  309F               	movlw	low(STR_3|8000h)
  1810  01E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1811  01E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1812  01E5  00A0               	movwf	(?_write)
  1813  01E6  3088               	movlw	high(STR_3|8000h)
  1814  01E7  00A1               	movwf	((?_write))+1
  1815  01E8  3001               	movlw	low(01h)
  1816  01E9  00A2               	movwf	0+(?_write)+02h
  1817  01EA  3000               	movlw	high(01h)
  1818  01EB  00A3               	movwf	(0+(?_write)+02h)+1
  1819  01EC  3001               	movlw	low(01h)
  1820  01ED  00A4               	movwf	0+(?_write)+04h
  1821  01EE  3000               	movlw	high(01h)
  1822  01EF  00A5               	movwf	(0+(?_write)+04h)+1
  1823  01F0  120A  158A  255C   	fcall	_write
              120A  118A         
  1824                           	line	153
  1825                           ;prev13.c: 153: write("3.RESET",2,0);
  1826  01F5  30D2               	movlw	low(STR_4|8000h)
  1827  01F6  1283               	bcf	status, 5	;RP0=0, select bank0
  1828  01F7  1303               	bcf	status, 6	;RP1=0, select bank0
  1829  01F8  00A0               	movwf	(?_write)
  1830  01F9  3088               	movlw	high(STR_4|8000h)
  1831  01FA  00A1               	movwf	((?_write))+1
  1832  01FB  3002               	movlw	low(02h)
  1833  01FC  00A2               	movwf	0+(?_write)+02h
  1834  01FD  3000               	movlw	high(02h)
  1835  01FE  00A3               	movwf	(0+(?_write)+02h)+1
  1836  01FF  3000               	movlw	low(0)
  1837  0200  00A4               	movwf	0+(?_write)+04h
  1838  0201  3000               	movlw	high(0)
  1839  0202  00A5               	movwf	(0+(?_write)+04h)+1
  1840  0203  120A  158A  255C   	fcall	_write
              120A  118A         
  1841  0208  2A09               	goto	l4154
  1842                           	line	154
  1843                           ;prev13.c: 154: while(1)
  1844                           	
  1845  0209                     l1105:	
  1846                           	line	157
  1847                           	
  1848  0209                     l4154:	
  1849                           ;prev13.c: 155: {
  1850                           ;prev13.c: 157: num=scan();
  1851  0209  120A  118A  20C4   	fcall	_scan
              120A  118A         
  1852  020E  0875               	movf	(1+(?_scan)),w
  1853  020F  1283               	bcf	status, 5	;RP0=0, select bank0
  1854  0210  1303               	bcf	status, 6	;RP1=0, select bank0
  1855  0211  01EE               	clrf	(_num+1)
  1856  0212  07EE               	addwf	(_num+1)
  1857  0213  0874               	movf	(0+(?_scan)),w
  1858  0214  01ED               	clrf	(_num)
  1859  0215  07ED               	addwf	(_num)
  1860                           
  1861                           	line	158
  1862                           	
  1863  0216                     l4156:	
  1864                           ;prev13.c: 158: buzz(num);
  1865  0216  086E               	movf	(_num+1),w
  1866  0217  01F1               	clrf	(?_buzz+1)
  1867  0218  07F1               	addwf	(?_buzz+1)
  1868  0219  086D               	movf	(_num),w
  1869  021A  01F0               	clrf	(?_buzz)
  1870  021B  07F0               	addwf	(?_buzz)
  1871                           
  1872  021C  120A  158A  22AC   	fcall	_buzz
              120A  118A         
  1873                           	line	159
  1874                           	
  1875  0221                     l4158:	
  1876                           ;prev13.c: 159: if(num==1)
  1877  0221  3001               	movlw	01h
  1878  0222  1283               	bcf	status, 5	;RP0=0, select bank0
  1879  0223  1303               	bcf	status, 6	;RP1=0, select bank0
  1880  0224  066D               	xorwf	(_num),w
  1881  0225  046E               	iorwf	(_num+1),w
  1882  0226  1D03               	skipz
  1883  0227  2A29               	goto	u4951
  1884  0228  2A2A               	goto	u4950
  1885  0229                     u4951:
  1886  0229  2A34               	goto	l1106
  1887  022A                     u4950:
  1888                           	line	161
  1889                           	
  1890  022A                     l4160:	
  1891                           ;prev13.c: 160: {
  1892                           ;prev13.c: 161: f1=1;
  1893  022A  3001               	movlw	low(01h)
  1894  022B  1683               	bsf	status, 5	;RP0=1, select bank1
  1895  022C  1303               	bcf	status, 6	;RP1=0, select bank1
  1896  022D  00D5               	movwf	(_f1)^080h
  1897  022E  3000               	movlw	high(01h)
  1898  022F  00D6               	movwf	((_f1)^080h)+1
  1899                           	line	162
  1900                           	
  1901  0230                     l4162:	
  1902                           ;prev13.c: 162: f2=0;
  1903  0230  01D7               	clrf	(_f2)^080h
  1904  0231  01D8               	clrf	(_f2+1)^080h
  1905                           	line	163
  1906                           	
  1907  0232                     l4164:	
  1908                           ;prev13.c: 163: f3=0;
  1909  0232  01D9               	clrf	(_f3)^080h
  1910  0233  01DA               	clrf	(_f3+1)^080h
  1911                           	line	164
  1912                           	
  1913  0234                     l1106:	
  1914                           	line	165
  1915                           ;prev13.c: 164: }
  1916                           ;prev13.c: 165: if(num==2)
  1917  0234  3002               	movlw	02h
  1918  0235  1283               	bcf	status, 5	;RP0=0, select bank0
  1919  0236  066D               	xorwf	(_num),w
  1920  0237  046E               	iorwf	(_num+1),w
  1921  0238  1D03               	skipz
  1922  0239  2A3B               	goto	u4961
  1923  023A  2A3C               	goto	u4960
  1924  023B                     u4961:
  1925  023B  2A46               	goto	l1107
  1926  023C                     u4960:
  1927                           	line	167
  1928                           	
  1929  023C                     l4166:	
  1930                           ;prev13.c: 166: {
  1931                           ;prev13.c: 167: f1=0;
  1932  023C  1683               	bsf	status, 5	;RP0=1, select bank1
  1933  023D  1303               	bcf	status, 6	;RP1=0, select bank1
  1934  023E  01D5               	clrf	(_f1)^080h
  1935  023F  01D6               	clrf	(_f1+1)^080h
  1936                           	line	168
  1937                           	
  1938  0240                     l4168:	
  1939                           ;prev13.c: 168: f2=1;
  1940  0240  3001               	movlw	low(01h)
  1941  0241  00D7               	movwf	(_f2)^080h
  1942  0242  3000               	movlw	high(01h)
  1943  0243  00D8               	movwf	((_f2)^080h)+1
  1944                           	line	169
  1945                           	
  1946  0244                     l4170:	
  1947                           ;prev13.c: 169: f3=0;
  1948  0244  01D9               	clrf	(_f3)^080h
  1949  0245  01DA               	clrf	(_f3+1)^080h
  1950                           	line	170
  1951                           	
  1952  0246                     l1107:	
  1953                           	line	171
  1954                           ;prev13.c: 170: }
  1955                           ;prev13.c: 171: if(num==3)
  1956  0246  3003               	movlw	03h
  1957  0247  1283               	bcf	status, 5	;RP0=0, select bank0
  1958  0248  066D               	xorwf	(_num),w
  1959  0249  046E               	iorwf	(_num+1),w
  1960  024A  1D03               	skipz
  1961  024B  2A4D               	goto	u4971
  1962  024C  2A4E               	goto	u4970
  1963  024D                     u4971:
  1964  024D  2A5D               	goto	l4178
  1965  024E                     u4970:
  1966                           	line	173
  1967                           	
  1968  024E                     l4172:	
  1969                           ;prev13.c: 172: {
  1970                           ;prev13.c: 173: f1=0;
  1971  024E  1683               	bsf	status, 5	;RP0=1, select bank1
  1972  024F  1303               	bcf	status, 6	;RP1=0, select bank1
  1973  0250  01D5               	clrf	(_f1)^080h
  1974  0251  01D6               	clrf	(_f1+1)^080h
  1975                           	line	174
  1976                           ;prev13.c: 174: f2=0;
  1977  0252  01D7               	clrf	(_f2)^080h
  1978  0253  01D8               	clrf	(_f2+1)^080h
  1979                           	line	175
  1980                           	
  1981  0254                     l4174:	
  1982                           ;prev13.c: 175: f3=1;
  1983  0254  3001               	movlw	low(01h)
  1984  0255  00D9               	movwf	(_f3)^080h
  1985  0256  3000               	movlw	high(01h)
  1986  0257  00DA               	movwf	((_f3)^080h)+1
  1987                           	line	176
  1988                           	
  1989  0258                     l4176:	
  1990                           ;prev13.c: 176: retm=1;
  1991  0258  3001               	movlw	low(01h)
  1992  0259  00DD               	movwf	(_retm)^080h
  1993  025A  3000               	movlw	high(01h)
  1994  025B  00DE               	movwf	((_retm)^080h)+1
  1995  025C  2A5D               	goto	l4178
  1996                           	line	177
  1997                           	
  1998  025D                     l1108:	
  1999                           	line	179
  2000                           	
  2001  025D                     l4178:	
  2002                           ;prev13.c: 177: }
  2003                           ;prev13.c: 179: if(f1){
  2004  025D  1683               	bsf	status, 5	;RP0=1, select bank1
  2005  025E  1303               	bcf	status, 6	;RP1=0, select bank1
  2006  025F  0856               	movf	(_f1+1)^080h,w
  2007  0260  0455               	iorwf	(_f1)^080h,w
  2008  0261  1903               	skipnz
  2009  0262  2A64               	goto	u4981
  2010  0263  2A65               	goto	u4980
  2011  0264                     u4981:
  2012  0264  2A6B               	goto	l4182
  2013  0265                     u4980:
  2014                           	line	180
  2015                           	
  2016  0265                     l4180:	
  2017                           ;prev13.c: 180: startswitch();
  2018  0265  120A  118A  237E   	fcall	_startswitch
              120A  118A         
  2019                           	line	181
  2020                           ;prev13.c: 181: }
  2021  026A  2A09               	goto	l4154
  2022                           	line	182
  2023                           	
  2024  026B                     l1109:	
  2025                           	
  2026  026B                     l4182:	
  2027                           ;prev13.c: 182: else if(f2){ f1=0; f2=0; f3=0;
  2028  026B  1683               	bsf	status, 5	;RP0=1, select bank1
  2029  026C  1303               	bcf	status, 6	;RP1=0, select bank1
  2030  026D  0858               	movf	(_f2+1)^080h,w
  2031  026E  0457               	iorwf	(_f2)^080h,w
  2032  026F  1903               	skipnz
  2033  0270  2A72               	goto	u4991
  2034  0271  2A73               	goto	u4990
  2035  0272                     u4991:
  2036  0272  2A7F               	goto	l4188
  2037  0273                     u4990:
  2038                           	
  2039  0273                     l4184:	
  2040  0273  01D5               	clrf	(_f1)^080h
  2041  0274  01D6               	clrf	(_f1+1)^080h
  2042  0275  01D7               	clrf	(_f2)^080h
  2043  0276  01D8               	clrf	(_f2+1)^080h
  2044  0277  01D9               	clrf	(_f3)^080h
  2045  0278  01DA               	clrf	(_f3+1)^080h
  2046                           	line	183
  2047                           	
  2048  0279                     l4186:	
  2049                           ;prev13.c: 183: getlogicseq();
  2050  0279  120A  118A  24C1   	fcall	_getlogicseq
              120A  118A         
  2051                           	line	184
  2052                           ;prev13.c: 184: }
  2053  027E  2A09               	goto	l4154
  2054                           	line	185
  2055                           	
  2056  027F                     l1111:	
  2057                           	
  2058  027F                     l4188:	
  2059                           ;prev13.c: 185: else if(f3){ f1=0; f2=0; f3=0;
  2060  027F  1683               	bsf	status, 5	;RP0=1, select bank1
  2061  0280  1303               	bcf	status, 6	;RP1=0, select bank1
  2062  0281  085A               	movf	(_f3+1)^080h,w
  2063  0282  0459               	iorwf	(_f3)^080h,w
  2064  0283  1903               	skipnz
  2065  0284  2A86               	goto	u5001
  2066  0285  2A87               	goto	u5000
  2067  0286                     u5001:
  2068  0286  2A09               	goto	l4154
  2069  0287                     u5000:
  2070                           	
  2071  0287                     l4190:	
  2072  0287  01D5               	clrf	(_f1)^080h
  2073  0288  01D6               	clrf	(_f1+1)^080h
  2074  0289  01D7               	clrf	(_f2)^080h
  2075  028A  01D8               	clrf	(_f2+1)^080h
  2076  028B  01D9               	clrf	(_f3)^080h
  2077  028C  01DA               	clrf	(_f3+1)^080h
  2078                           	line	186
  2079                           ;prev13.c: 186: goto START;
  2080  028D  29AA               	goto	l1101
  2081                           	line	188
  2082                           	
  2083  028E                     l1113:	
  2084  028E  2A09               	goto	l4154
  2085                           	line	189
  2086                           	
  2087  028F                     l1112:	
  2088  028F  2A09               	goto	l4154
  2089                           	
  2090  0290                     l1110:	
  2091  0290  2A09               	goto	l4154
  2092                           	
  2093  0291                     l1114:	
  2094                           	line	154
  2095  0291  2A09               	goto	l4154
  2096                           	
  2097  0292                     l1115:	
  2098                           	line	192
  2099                           	
  2100  0292                     l1116:	
  2101  0292  0008               	return
  2102                           	opt stack 0
  2103                           GLOBAL	__end_of_start
  2104  0293                     	__end_of_start:
  2105 ;; =============== function _start ends ============
  2106                           
  2107                           	signat	_start,88
  2108                           	global	_getlogicseq
  2109                           psect	text747,local,class=CODE,delta=2
  2110                           global __ptext747
  2111  04C1                     __ptext747:
  2112                           
  2113 ;; *************** function _getlogicseq *****************
  2114 ;; Defined at:
  2115 ;;		line 317 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  str            32   17[BANK0 ] unsigned char [32]
  2120 ;;  snum           16   51[BANK0 ] unsigned char [16]
  2121 ;;  num             2   73[BANK0 ] int 
  2122 ;;  ccount          2   71[BANK0 ] int 
  2123 ;;  wf              2   69[BANK0 ] int 
  2124 ;;  nf              2   67[BANK0 ] int 
  2125 ;;  bf              2   49[BANK0 ] int 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;		None               void
  2128 ;; Registers used:
  2129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0      58       0       0       0
  2137 ;;      Temps:          0       4       0       0       0
  2138 ;;      Totals:         0      62       0       0       0
  2139 ;;Total ram usage:       62 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    7
  2142 ;; This function calls:
  2143 ;;		_getlogic
  2144 ;;		_write
  2145 ;;		_delay
  2146 ;;		_strcpy
  2147 ;;		_scan
  2148 ;;		_buzz
  2149 ;;		_itoaa
  2150 ;;		_strcat
  2151 ;;		_setlogic
  2152 ;; This function is called by:
  2153 ;;		_start
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           psect	text747
  2157                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  2158                           	line	317
  2159                           	global	__size_of_getlogicseq
  2160  033F                     	__size_of_getlogicseq	equ	__end_of_getlogicseq-_getlogicseq
  2161                           	
  2162  04C1                     _getlogicseq:	
  2163 ;; hardware stack exceeded
  2164                           	opt	stack 0
  2165                           ; Regs used in _getlogicseq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2166                           	line	323
  2167                           	
  2168  04C1                     l3980:	
  2169                           ;prev13.c: 322: int num ;
  2170                           ;prev13.c: 323: char snum[16]="";
  2171  04C1  3053               	movlw	(getlogicseq@snum)&0ffh
  2172  04C2  0084               	movwf	fsr0
  2173  04C3  30C3               	movlw	low(getlogicseq@F1874)
  2174  04C4  1283               	bcf	status, 5	;RP0=0, select bank0
  2175  04C5  1303               	bcf	status, 6	;RP1=0, select bank0
  2176  04C6  00AD               	movwf	(??_getlogicseq+0)+0
  2177  04C7  0804               	movf	fsr0,w
  2178  04C8  00AE               	movwf	((??_getlogicseq+0)+0+1)
  2179  04C9  3010               	movlw	16
  2180  04CA  00AF               	movwf	((??_getlogicseq+0)+0+2)
  2181  04CB                     u4690:
  2182  04CB  082D               	movf	(??_getlogicseq+0)+0,w
  2183  04CC  0084               	movwf	fsr0
  2184  04CD  1383               	bcf	status, 7	;select IRP bank1
  2185                           	
  2186  04CE  0800               	movf	indf,w
  2187  04CF  00B0               	movwf	((??_getlogicseq+0)+0+3)
  2188  04D0  0AAD               	incf	(??_getlogicseq+0)+0,f
  2189  04D1  082E               	movf	((??_getlogicseq+0)+0+1),w
  2190  04D2  0084               	movwf	fsr0
  2191                           	
  2192  04D3  0830               	movf	((??_getlogicseq+0)+0+3),w
  2193  04D4  0080               	movwf	indf
  2194  04D5  0AAE               	incf	((??_getlogicseq+0)+0+1),f
  2195  04D6  0BAF               	decfsz	((??_getlogicseq+0)+0+2),f
  2196  04D7  2CCB               	goto	u4690
  2197                           	line	324
  2198                           	
  2199  04D8                     l3982:	
  2200                           ;prev13.c: 324: int wf=0;
  2201  04D8  01E5               	clrf	(getlogicseq@wf)
  2202  04D9  01E6               	clrf	(getlogicseq@wf+1)
  2203                           	line	325
  2204                           	
  2205  04DA                     l3984:	
  2206                           ;prev13.c: 325: int nf=0;
  2207  04DA  01E3               	clrf	(getlogicseq@nf)
  2208  04DB  01E4               	clrf	(getlogicseq@nf+1)
  2209                           	line	326
  2210                           	
  2211  04DC                     l3986:	
  2212                           ;prev13.c: 326: int bf=0;
  2213  04DC  01D1               	clrf	(getlogicseq@bf)
  2214  04DD  01D2               	clrf	(getlogicseq@bf+1)
  2215                           	line	327
  2216                           	
  2217  04DE                     l3988:	
  2218                           ;prev13.c: 327: int ccount=0;
  2219  04DE  01E7               	clrf	(getlogicseq@ccount)
  2220  04DF  01E8               	clrf	(getlogicseq@ccount+1)
  2221                           	line	331
  2222                           	
  2223  04E0                     l3990:	
  2224                           ;prev13.c: 328: char str[32];
  2225                           ;prev13.c: 331: getlogic();
  2226  04E0  120A  118A  201E   	fcall	_getlogic
              120A  118A         
  2227  04E5  2CE6               	goto	l3992
  2228                           	line	332
  2229                           ;prev13.c: 332: START_SEQ:
  2230                           	
  2231  04E6                     l1151:	
  2232                           	line	333
  2233                           	
  2234  04E6                     l3992:	
  2235                           ;prev13.c: 333: write("Press 2. - Skip for Device",1,1);
  2236  04E6  3017               	movlw	low(STR_10|8000h)
  2237  04E7  1283               	bcf	status, 5	;RP0=0, select bank0
  2238  04E8  1303               	bcf	status, 6	;RP1=0, select bank0
  2239  04E9  00A0               	movwf	(?_write)
  2240  04EA  3088               	movlw	high(STR_10|8000h)
  2241  04EB  00A1               	movwf	((?_write))+1
  2242  04EC  3001               	movlw	low(01h)
  2243  04ED  00A2               	movwf	0+(?_write)+02h
  2244  04EE  3000               	movlw	high(01h)
  2245  04EF  00A3               	movwf	(0+(?_write)+02h)+1
  2246  04F0  3001               	movlw	low(01h)
  2247  04F1  00A4               	movwf	0+(?_write)+04h
  2248  04F2  3000               	movlw	high(01h)
  2249  04F3  00A5               	movwf	(0+(?_write)+04h)+1
  2250  04F4  120A  158A  255C   	fcall	_write
              120A  118A         
  2251                           	line	334
  2252                           	
  2253  04F9                     l3994:	
  2254                           ;prev13.c: 334: delay(5000);
  2255  04F9  3088               	movlw	low(01388h)
  2256  04FA  00F0               	movwf	(?_delay)
  2257  04FB  3013               	movlw	high(01388h)
  2258  04FC  00F1               	movwf	((?_delay))+1
  2259  04FD  120A  158A  22CD   	fcall	_delay
              120A  118A         
  2260                           	line	336
  2261                           	
  2262  0502                     l3996:	
  2263                           ;prev13.c: 336: wf=0;ccount=0;
  2264  0502  1283               	bcf	status, 5	;RP0=0, select bank0
  2265  0503  1303               	bcf	status, 6	;RP1=0, select bank0
  2266  0504  01E5               	clrf	(getlogicseq@wf)
  2267  0505  01E6               	clrf	(getlogicseq@wf+1)
  2268                           	
  2269  0506                     l3998:	
  2270  0506  01E7               	clrf	(getlogicseq@ccount)
  2271  0507  01E8               	clrf	(getlogicseq@ccount+1)
  2272                           	line	337
  2273                           	
  2274  0508                     l4000:	
  2275                           ;prev13.c: 337: strcpy(str,"Enter Logic DEV1:  ");
  2276  0508  3032               	movlw	low(STR_11|8000h)
  2277  0509  00F2               	movwf	(?_strcpy)
  2278  050A  3088               	movlw	high(STR_11|8000h)
  2279  050B  00F3               	movwf	((?_strcpy))+1
  2280  050C  3031               	movlw	(getlogicseq@str)&0ffh
  2281  050D  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  2282                           	line	338
  2283                           	
  2284  0512                     l4002:	
  2285                           ;prev13.c: 338: write(str,1,1);
  2286  0512  3031               	movlw	(getlogicseq@str&0ffh)
  2287  0513  1283               	bcf	status, 5	;RP0=0, select bank0
  2288  0514  1303               	bcf	status, 6	;RP1=0, select bank0
  2289  0515  00A0               	movwf	(?_write)
  2290  0516  3000               	movlw	(0x0/2)
  2291  0517  00A1               	movwf	(?_write+1)
  2292  0518  3001               	movlw	low(01h)
  2293  0519  00A2               	movwf	0+(?_write)+02h
  2294  051A  3000               	movlw	high(01h)
  2295  051B  00A3               	movwf	(0+(?_write)+02h)+1
  2296  051C  3001               	movlw	low(01h)
  2297  051D  00A4               	movwf	0+(?_write)+04h
  2298  051E  3000               	movlw	high(01h)
  2299  051F  00A5               	movwf	(0+(?_write)+04h)+1
  2300  0520  120A  158A  255C   	fcall	_write
              120A  118A         
  2301                           	line	339
  2302                           	
  2303  0525                     l4004:	
  2304                           ;prev13.c: 339: write(logic_d1,2,0);
  2305  0525  30AA               	movlw	(_logic_d1&0ffh)
  2306  0526  1283               	bcf	status, 5	;RP0=0, select bank0
  2307  0527  1303               	bcf	status, 6	;RP1=0, select bank0
  2308  0528  00A0               	movwf	(?_write)
  2309  0529  3000               	movlw	(0x1/2)
  2310  052A  00A1               	movwf	(?_write+1)
  2311  052B  3002               	movlw	low(02h)
  2312  052C  00A2               	movwf	0+(?_write)+02h
  2313  052D  3000               	movlw	high(02h)
  2314  052E  00A3               	movwf	(0+(?_write)+02h)+1
  2315  052F  3000               	movlw	low(0)
  2316  0530  00A4               	movwf	0+(?_write)+04h
  2317  0531  3000               	movlw	high(0)
  2318  0532  00A5               	movwf	(0+(?_write)+04h)+1
  2319  0533  120A  158A  255C   	fcall	_write
              120A  118A         
  2320  0538  2D39               	goto	l4006
  2321                           	line	341
  2322                           ;prev13.c: 341: while(1)
  2323                           	
  2324  0539                     l1152:	
  2325                           	line	343
  2326                           	
  2327  0539                     l4006:	
  2328                           ;prev13.c: 342: {
  2329                           ;prev13.c: 343: num=scan();
  2330  0539  120A  118A  20C4   	fcall	_scan
              120A  118A         
  2331  053E  0875               	movf	(1+(?_scan)),w
  2332  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  2333  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  2334  0541  01EA               	clrf	(getlogicseq@num+1)
  2335  0542  07EA               	addwf	(getlogicseq@num+1)
  2336  0543  0874               	movf	(0+(?_scan)),w
  2337  0544  01E9               	clrf	(getlogicseq@num)
  2338  0545  07E9               	addwf	(getlogicseq@num)
  2339                           
  2340                           	line	344
  2341                           	
  2342  0546                     l4008:	
  2343                           ;prev13.c: 344: buzz(num);
  2344  0546  086A               	movf	(getlogicseq@num+1),w
  2345  0547  01F1               	clrf	(?_buzz+1)
  2346  0548  07F1               	addwf	(?_buzz+1)
  2347  0549  0869               	movf	(getlogicseq@num),w
  2348  054A  01F0               	clrf	(?_buzz)
  2349  054B  07F0               	addwf	(?_buzz)
  2350                           
  2351  054C  120A  158A  22AC   	fcall	_buzz
              120A  118A         
  2352                           	line	345
  2353                           	
  2354  0551                     l4010:	
  2355                           ;prev13.c: 345: if(num==1||num==0){
  2356  0551  3001               	movlw	01h
  2357  0552  1283               	bcf	status, 5	;RP0=0, select bank0
  2358  0553  1303               	bcf	status, 6	;RP1=0, select bank0
  2359  0554  0669               	xorwf	(getlogicseq@num),w
  2360  0555  046A               	iorwf	(getlogicseq@num+1),w
  2361  0556  1903               	skipnz
  2362  0557  2D59               	goto	u4701
  2363  0558  2D5A               	goto	u4700
  2364  0559                     u4701:
  2365  0559  2D61               	goto	l4014
  2366  055A                     u4700:
  2367                           	
  2368  055A                     l4012:	
  2369  055A  086A               	movf	((getlogicseq@num+1)),w
  2370  055B  0469               	iorwf	((getlogicseq@num)),w
  2371  055C  1D03               	skipz
  2372  055D  2D5F               	goto	u4711
  2373  055E  2D60               	goto	u4710
  2374  055F                     u4711:
  2375  055F  2DC8               	goto	l4028
  2376  0560                     u4710:
  2377  0560  2D61               	goto	l4014
  2378                           	
  2379  0561                     l1155:	
  2380                           	line	346
  2381                           	
  2382  0561                     l4014:	
  2383                           ;prev13.c: 346: if(wf==0)
  2384  0561  0866               	movf	((getlogicseq@wf+1)),w
  2385  0562  0465               	iorwf	((getlogicseq@wf)),w
  2386  0563  1D03               	skipz
  2387  0564  2D66               	goto	u4721
  2388  0565  2D67               	goto	u4720
  2389  0566                     u4721:
  2390  0566  2DCB               	goto	l4030
  2391  0567                     u4720:
  2392                           	line	348
  2393                           	
  2394  0567                     l4016:	
  2395                           ;prev13.c: 347: {
  2396                           ;prev13.c: 348: if(ccount==0)
  2397  0567  0868               	movf	((getlogicseq@ccount+1)),w
  2398  0568  0467               	iorwf	((getlogicseq@ccount)),w
  2399  0569  1D03               	skipz
  2400  056A  2D6C               	goto	u4731
  2401  056B  2D6D               	goto	u4730
  2402  056C                     u4731:
  2403  056C  2D77               	goto	l1157
  2404  056D                     u4730:
  2405                           	line	349
  2406                           	
  2407  056D                     l4018:	
  2408                           ;prev13.c: 349: strcpy(logic_d1,"");
  2409  056D  3045               	movlw	low(STR_12|8000h)
  2410  056E  00F2               	movwf	(?_strcpy)
  2411  056F  3088               	movlw	high(STR_12|8000h)
  2412  0570  00F3               	movwf	((?_strcpy))+1
  2413  0571  30AA               	movlw	(_logic_d1)&0ffh
  2414  0572  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  2415                           	
  2416  0577                     l1157:	
  2417                           	line	350
  2418                           ;prev13.c: 350: write("---",2,0);
  2419  0577  302A               	movlw	low(STR_13|8000h)
  2420  0578  1283               	bcf	status, 5	;RP0=0, select bank0
  2421  0579  1303               	bcf	status, 6	;RP1=0, select bank0
  2422  057A  00A0               	movwf	(?_write)
  2423  057B  3089               	movlw	high(STR_13|8000h)
  2424  057C  00A1               	movwf	((?_write))+1
  2425  057D  3002               	movlw	low(02h)
  2426  057E  00A2               	movwf	0+(?_write)+02h
  2427  057F  3000               	movlw	high(02h)
  2428  0580  00A3               	movwf	(0+(?_write)+02h)+1
  2429  0581  3000               	movlw	low(0)
  2430  0582  00A4               	movwf	0+(?_write)+04h
  2431  0583  3000               	movlw	high(0)
  2432  0584  00A5               	movwf	(0+(?_write)+04h)+1
  2433  0585  120A  158A  255C   	fcall	_write
              120A  118A         
  2434                           	line	351
  2435                           ;prev13.c: 351: itoaa(num, snum);
  2436  058A  1283               	bcf	status, 5	;RP0=0, select bank0
  2437  058B  1303               	bcf	status, 6	;RP1=0, select bank0
  2438  058C  086A               	movf	(getlogicseq@num+1),w
  2439  058D  01FA               	clrf	(?_itoaa+1)
  2440  058E  07FA               	addwf	(?_itoaa+1)
  2441  058F  0869               	movf	(getlogicseq@num),w
  2442  0590  01F9               	clrf	(?_itoaa)
  2443  0591  07F9               	addwf	(?_itoaa)
  2444                           
  2445  0592  3053               	movlw	(getlogicseq@snum)&0ffh
  2446  0593  00AD               	movwf	(??_getlogicseq+0)+0
  2447  0594  082D               	movf	(??_getlogicseq+0)+0,w
  2448  0595  00FB               	movwf	0+(?_itoaa)+02h
  2449  0596  120A  118A  2293   	fcall	_itoaa
              120A  118A         
  2450                           	line	352
  2451                           	
  2452  059B                     l4020:	
  2453                           ;prev13.c: 352: strcat(logic_d1,snum);
  2454  059B  3053               	movlw	(getlogicseq@snum)&0ffh
  2455  059C  1283               	bcf	status, 5	;RP0=0, select bank0
  2456  059D  1303               	bcf	status, 6	;RP1=0, select bank0
  2457  059E  00AD               	movwf	(??_getlogicseq+0)+0
  2458  059F  082D               	movf	(??_getlogicseq+0)+0,w
  2459  05A0  00F0               	movwf	(?_strcat)
  2460  05A1  30AA               	movlw	(_logic_d1)&0ffh
  2461  05A2  120A  158A  23E7   	fcall	_strcat
              120A  118A         
  2462                           	line	353
  2463                           	
  2464  05A7                     l4022:	
  2465                           ;prev13.c: 353: write( logic_d1,2,0); ;
  2466  05A7  30AA               	movlw	(_logic_d1&0ffh)
  2467  05A8  1283               	bcf	status, 5	;RP0=0, select bank0
  2468  05A9  1303               	bcf	status, 6	;RP1=0, select bank0
  2469  05AA  00A0               	movwf	(?_write)
  2470  05AB  3000               	movlw	(0x1/2)
  2471  05AC  00A1               	movwf	(?_write+1)
  2472  05AD  3002               	movlw	low(02h)
  2473  05AE  00A2               	movwf	0+(?_write)+02h
  2474  05AF  3000               	movlw	high(02h)
  2475  05B0  00A3               	movwf	(0+(?_write)+02h)+1
  2476  05B1  3000               	movlw	low(0)
  2477  05B2  00A4               	movwf	0+(?_write)+04h
  2478  05B3  3000               	movlw	high(0)
  2479  05B4  00A5               	movwf	(0+(?_write)+04h)+1
  2480  05B5  120A  158A  255C   	fcall	_write
              120A  118A         
  2481                           	line	354
  2482                           	
  2483  05BA                     l4024:	
  2484                           ;prev13.c: 354: wf=1;
  2485  05BA  3001               	movlw	low(01h)
  2486  05BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2487  05BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2488  05BD  00E5               	movwf	(getlogicseq@wf)
  2489  05BE  3000               	movlw	high(01h)
  2490  05BF  00E6               	movwf	((getlogicseq@wf))+1
  2491                           	line	355
  2492                           	
  2493  05C0                     l4026:	
  2494                           ;prev13.c: 355: ccount++;
  2495  05C0  3001               	movlw	low(01h)
  2496  05C1  07E7               	addwf	(getlogicseq@ccount),f
  2497  05C2  1803               	skipnc
  2498  05C3  0AE8               	incf	(getlogicseq@ccount+1),f
  2499  05C4  3000               	movlw	high(01h)
  2500  05C5  07E8               	addwf	(getlogicseq@ccount+1),f
  2501  05C6  2DCB               	goto	l4030
  2502                           	line	356
  2503                           	
  2504  05C7                     l1156:	
  2505                           	line	357
  2506                           ;prev13.c: 356: }
  2507                           ;prev13.c: 357: }
  2508  05C7  2DCB               	goto	l4030
  2509                           	line	358
  2510                           	
  2511  05C8                     l1153:	
  2512                           	line	359
  2513                           	
  2514  05C8                     l4028:	
  2515                           ;prev13.c: 358: else{
  2516                           ;prev13.c: 359: wf=0;
  2517  05C8  01E5               	clrf	(getlogicseq@wf)
  2518  05C9  01E6               	clrf	(getlogicseq@wf+1)
  2519  05CA  2DCB               	goto	l4030
  2520                           	line	360
  2521                           	
  2522  05CB                     l1158:	
  2523                           	line	361
  2524                           	
  2525  05CB                     l4030:	
  2526                           ;prev13.c: 360: }
  2527                           ;prev13.c: 361: if(ccount>=3)
  2528  05CB  0868               	movf	(getlogicseq@ccount+1),w
  2529  05CC  3A80               	xorlw	80h
  2530  05CD  00FF               	movwf	btemp+1
  2531  05CE  3080               	movlw	(high(03h))^80h
  2532  05CF  027F               	subwf	btemp+1,w
  2533  05D0  1D03               	skipz
  2534  05D1  2DD4               	goto	u4745
  2535  05D2  3003               	movlw	low(03h)
  2536  05D3  0267               	subwf	(getlogicseq@ccount),w
  2537  05D4                     u4745:
  2538                           
  2539  05D4  1C03               	skipc
  2540  05D5  2DD7               	goto	u4741
  2541  05D6  2DD8               	goto	u4740
  2542  05D7                     u4741:
  2543  05D7  2DDA               	goto	l4034
  2544  05D8                     u4740:
  2545  05D8  2DFC               	goto	l4044
  2546                           	line	362
  2547                           	
  2548  05D9                     l4032:	
  2549                           ;prev13.c: 362: break;
  2550  05D9  2DFC               	goto	l4044
  2551                           	
  2552  05DA                     l1159:	
  2553                           	line	365
  2554                           	
  2555  05DA                     l4034:	
  2556                           ;prev13.c: 365: if(num==2)
  2557  05DA  3002               	movlw	02h
  2558  05DB  1283               	bcf	status, 5	;RP0=0, select bank0
  2559  05DC  1303               	bcf	status, 6	;RP1=0, select bank0
  2560  05DD  0669               	xorwf	(getlogicseq@num),w
  2561  05DE  046A               	iorwf	(getlogicseq@num+1),w
  2562  05DF  1D03               	skipz
  2563  05E0  2DE2               	goto	u4751
  2564  05E1  2DE3               	goto	u4750
  2565  05E2                     u4751:
  2566  05E2  2DEF               	goto	l4040
  2567  05E3                     u4750:
  2568                           	line	367
  2569                           	
  2570  05E3                     l4036:	
  2571                           ;prev13.c: 366: {
  2572                           ;prev13.c: 367: if(nf==0){
  2573  05E3  0864               	movf	((getlogicseq@nf+1)),w
  2574  05E4  0463               	iorwf	((getlogicseq@nf)),w
  2575  05E5  1D03               	skipz
  2576  05E6  2DE8               	goto	u4761
  2577  05E7  2DE9               	goto	u4760
  2578  05E8                     u4761:
  2579  05E8  2D39               	goto	l4006
  2580  05E9                     u4760:
  2581                           	line	368
  2582                           	
  2583  05E9                     l4038:	
  2584                           ;prev13.c: 368: nf=1;
  2585  05E9  3001               	movlw	low(01h)
  2586  05EA  00E3               	movwf	(getlogicseq@nf)
  2587  05EB  3000               	movlw	high(01h)
  2588  05EC  00E4               	movwf	((getlogicseq@nf))+1
  2589                           	line	369
  2590                           ;prev13.c: 369: break;
  2591  05ED  2DFC               	goto	l4044
  2592                           	line	370
  2593                           	
  2594  05EE                     l1162:	
  2595                           	line	371
  2596                           ;prev13.c: 370: }
  2597                           ;prev13.c: 371: }
  2598  05EE  2D39               	goto	l4006
  2599                           	line	372
  2600                           	
  2601  05EF                     l1161:	
  2602                           	
  2603  05EF                     l4040:	
  2604                           ;prev13.c: 372: else if(num==99){
  2605  05EF  3063               	movlw	063h
  2606  05F0  0669               	xorwf	(getlogicseq@num),w
  2607  05F1  046A               	iorwf	(getlogicseq@num+1),w
  2608  05F2  1D03               	skipz
  2609  05F3  2DF5               	goto	u4771
  2610  05F4  2DF6               	goto	u4770
  2611  05F5                     u4771:
  2612  05F5  2D39               	goto	l4006
  2613  05F6                     u4770:
  2614                           	line	373
  2615                           	
  2616  05F6                     l4042:	
  2617                           ;prev13.c: 373: nf=0;
  2618  05F6  01E3               	clrf	(getlogicseq@nf)
  2619  05F7  01E4               	clrf	(getlogicseq@nf+1)
  2620  05F8  2D39               	goto	l4006
  2621                           	line	374
  2622                           	
  2623  05F9                     l1164:	
  2624  05F9  2D39               	goto	l4006
  2625                           	line	375
  2626                           	
  2627  05FA                     l1163:	
  2628  05FA  2D39               	goto	l4006
  2629                           	
  2630  05FB                     l1165:	
  2631                           	line	341
  2632  05FB  2D39               	goto	l4006
  2633                           	
  2634  05FC                     l1160:	
  2635                           	line	378
  2636                           	
  2637  05FC                     l4044:	
  2638                           ;prev13.c: 374: }
  2639                           ;prev13.c: 375: }
  2640                           ;prev13.c: 378: wf=0;ccount=0;
  2641  05FC  1283               	bcf	status, 5	;RP0=0, select bank0
  2642  05FD  1303               	bcf	status, 6	;RP1=0, select bank0
  2643  05FE  01E5               	clrf	(getlogicseq@wf)
  2644  05FF  01E6               	clrf	(getlogicseq@wf+1)
  2645  0600  01E7               	clrf	(getlogicseq@ccount)
  2646  0601  01E8               	clrf	(getlogicseq@ccount+1)
  2647                           	line	379
  2648                           	
  2649  0602                     l4046:	
  2650                           ;prev13.c: 379: strcpy(str,"Enter Logic DEV2:  ");
  2651  0602  3046               	movlw	low(STR_14|8000h)
  2652  0603  00F2               	movwf	(?_strcpy)
  2653  0604  3088               	movlw	high(STR_14|8000h)
  2654  0605  00F3               	movwf	((?_strcpy))+1
  2655  0606  3031               	movlw	(getlogicseq@str)&0ffh
  2656  0607  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  2657                           	line	380
  2658                           	
  2659  060C                     l4048:	
  2660                           ;prev13.c: 380: write(str,1,1);
  2661  060C  3031               	movlw	(getlogicseq@str&0ffh)
  2662  060D  1283               	bcf	status, 5	;RP0=0, select bank0
  2663  060E  1303               	bcf	status, 6	;RP1=0, select bank0
  2664  060F  00A0               	movwf	(?_write)
  2665  0610  3000               	movlw	(0x0/2)
  2666  0611  00A1               	movwf	(?_write+1)
  2667  0612  3001               	movlw	low(01h)
  2668  0613  00A2               	movwf	0+(?_write)+02h
  2669  0614  3000               	movlw	high(01h)
  2670  0615  00A3               	movwf	(0+(?_write)+02h)+1
  2671  0616  3001               	movlw	low(01h)
  2672  0617  00A4               	movwf	0+(?_write)+04h
  2673  0618  3000               	movlw	high(01h)
  2674  0619  00A5               	movwf	(0+(?_write)+04h)+1
  2675  061A  120A  158A  255C   	fcall	_write
              120A  118A         
  2676                           	line	381
  2677                           	
  2678  061F                     l4050:	
  2679                           ;prev13.c: 381: write(logic_d2,2,0);
  2680  061F  30AF               	movlw	(_logic_d2&0ffh)
  2681  0620  1283               	bcf	status, 5	;RP0=0, select bank0
  2682  0621  1303               	bcf	status, 6	;RP1=0, select bank0
  2683  0622  00A0               	movwf	(?_write)
  2684  0623  3000               	movlw	(0x1/2)
  2685  0624  00A1               	movwf	(?_write+1)
  2686  0625  3002               	movlw	low(02h)
  2687  0626  00A2               	movwf	0+(?_write)+02h
  2688  0627  3000               	movlw	high(02h)
  2689  0628  00A3               	movwf	(0+(?_write)+02h)+1
  2690  0629  3000               	movlw	low(0)
  2691  062A  00A4               	movwf	0+(?_write)+04h
  2692  062B  3000               	movlw	high(0)
  2693  062C  00A5               	movwf	(0+(?_write)+04h)+1
  2694  062D  120A  158A  255C   	fcall	_write
              120A  118A         
  2695  0632  2E33               	goto	l4052
  2696                           	line	383
  2697                           ;prev13.c: 383: while(1)
  2698                           	
  2699  0633                     l1166:	
  2700                           	line	385
  2701                           	
  2702  0633                     l4052:	
  2703                           ;prev13.c: 384: {
  2704                           ;prev13.c: 385: num=scan();
  2705  0633  120A  118A  20C4   	fcall	_scan
              120A  118A         
  2706  0638  0875               	movf	(1+(?_scan)),w
  2707  0639  1283               	bcf	status, 5	;RP0=0, select bank0
  2708  063A  1303               	bcf	status, 6	;RP1=0, select bank0
  2709  063B  01EA               	clrf	(getlogicseq@num+1)
  2710  063C  07EA               	addwf	(getlogicseq@num+1)
  2711  063D  0874               	movf	(0+(?_scan)),w
  2712  063E  01E9               	clrf	(getlogicseq@num)
  2713  063F  07E9               	addwf	(getlogicseq@num)
  2714                           
  2715                           	line	386
  2716                           	
  2717  0640                     l4054:	
  2718                           ;prev13.c: 386: buzz(num);
  2719  0640  086A               	movf	(getlogicseq@num+1),w
  2720  0641  01F1               	clrf	(?_buzz+1)
  2721  0642  07F1               	addwf	(?_buzz+1)
  2722  0643  0869               	movf	(getlogicseq@num),w
  2723  0644  01F0               	clrf	(?_buzz)
  2724  0645  07F0               	addwf	(?_buzz)
  2725                           
  2726  0646  120A  158A  22AC   	fcall	_buzz
              120A  118A         
  2727                           	line	387
  2728                           	
  2729  064B                     l4056:	
  2730                           ;prev13.c: 387: if(num==1||num==0){
  2731  064B  3001               	movlw	01h
  2732  064C  1283               	bcf	status, 5	;RP0=0, select bank0
  2733  064D  1303               	bcf	status, 6	;RP1=0, select bank0
  2734  064E  0669               	xorwf	(getlogicseq@num),w
  2735  064F  046A               	iorwf	(getlogicseq@num+1),w
  2736  0650  1903               	skipnz
  2737  0651  2E53               	goto	u4781
  2738  0652  2E54               	goto	u4780
  2739  0653                     u4781:
  2740  0653  2E5B               	goto	l4060
  2741  0654                     u4780:
  2742                           	
  2743  0654                     l4058:	
  2744  0654  086A               	movf	((getlogicseq@num+1)),w
  2745  0655  0469               	iorwf	((getlogicseq@num)),w
  2746  0656  1D03               	skipz
  2747  0657  2E59               	goto	u4791
  2748  0658  2E5A               	goto	u4790
  2749  0659                     u4791:
  2750  0659  2EC2               	goto	l4074
  2751  065A                     u4790:
  2752  065A  2E5B               	goto	l4060
  2753                           	
  2754  065B                     l1169:	
  2755                           	line	388
  2756                           	
  2757  065B                     l4060:	
  2758                           ;prev13.c: 388: if(wf==0)
  2759  065B  0866               	movf	((getlogicseq@wf+1)),w
  2760  065C  0465               	iorwf	((getlogicseq@wf)),w
  2761  065D  1D03               	skipz
  2762  065E  2E60               	goto	u4801
  2763  065F  2E61               	goto	u4800
  2764  0660                     u4801:
  2765  0660  2EC5               	goto	l4076
  2766  0661                     u4800:
  2767                           	line	389
  2768                           	
  2769  0661                     l4062:	
  2770                           ;prev13.c: 389: { if(ccount==0)
  2771  0661  0868               	movf	((getlogicseq@ccount+1)),w
  2772  0662  0467               	iorwf	((getlogicseq@ccount)),w
  2773  0663  1D03               	skipz
  2774  0664  2E66               	goto	u4811
  2775  0665  2E67               	goto	u4810
  2776  0666                     u4811:
  2777  0666  2E71               	goto	l1171
  2778  0667                     u4810:
  2779                           	line	390
  2780                           	
  2781  0667                     l4064:	
  2782                           ;prev13.c: 390: strcpy(logic_d2,"");
  2783  0667  3045               	movlw	low(STR_15|8000h)
  2784  0668  00F2               	movwf	(?_strcpy)
  2785  0669  3088               	movlw	high(STR_15|8000h)
  2786  066A  00F3               	movwf	((?_strcpy))+1
  2787  066B  30AF               	movlw	(_logic_d2)&0ffh
  2788  066C  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  2789                           	
  2790  0671                     l1171:	
  2791                           	line	391
  2792                           ;prev13.c: 391: write("---",2,0);
  2793  0671  302A               	movlw	low(STR_16|8000h)
  2794  0672  1283               	bcf	status, 5	;RP0=0, select bank0
  2795  0673  1303               	bcf	status, 6	;RP1=0, select bank0
  2796  0674  00A0               	movwf	(?_write)
  2797  0675  3089               	movlw	high(STR_16|8000h)
  2798  0676  00A1               	movwf	((?_write))+1
  2799  0677  3002               	movlw	low(02h)
  2800  0678  00A2               	movwf	0+(?_write)+02h
  2801  0679  3000               	movlw	high(02h)
  2802  067A  00A3               	movwf	(0+(?_write)+02h)+1
  2803  067B  3000               	movlw	low(0)
  2804  067C  00A4               	movwf	0+(?_write)+04h
  2805  067D  3000               	movlw	high(0)
  2806  067E  00A5               	movwf	(0+(?_write)+04h)+1
  2807  067F  120A  158A  255C   	fcall	_write
              120A  118A         
  2808                           	line	392
  2809                           ;prev13.c: 392: itoaa(num, snum);
  2810  0684  1283               	bcf	status, 5	;RP0=0, select bank0
  2811  0685  1303               	bcf	status, 6	;RP1=0, select bank0
  2812  0686  086A               	movf	(getlogicseq@num+1),w
  2813  0687  01FA               	clrf	(?_itoaa+1)
  2814  0688  07FA               	addwf	(?_itoaa+1)
  2815  0689  0869               	movf	(getlogicseq@num),w
  2816  068A  01F9               	clrf	(?_itoaa)
  2817  068B  07F9               	addwf	(?_itoaa)
  2818                           
  2819  068C  3053               	movlw	(getlogicseq@snum)&0ffh
  2820  068D  00AD               	movwf	(??_getlogicseq+0)+0
  2821  068E  082D               	movf	(??_getlogicseq+0)+0,w
  2822  068F  00FB               	movwf	0+(?_itoaa)+02h
  2823  0690  120A  118A  2293   	fcall	_itoaa
              120A  118A         
  2824                           	line	393
  2825                           	
  2826  0695                     l4066:	
  2827                           ;prev13.c: 393: strcat(logic_d2,snum);
  2828  0695  3053               	movlw	(getlogicseq@snum)&0ffh
  2829  0696  1283               	bcf	status, 5	;RP0=0, select bank0
  2830  0697  1303               	bcf	status, 6	;RP1=0, select bank0
  2831  0698  00AD               	movwf	(??_getlogicseq+0)+0
  2832  0699  082D               	movf	(??_getlogicseq+0)+0,w
  2833  069A  00F0               	movwf	(?_strcat)
  2834  069B  30AF               	movlw	(_logic_d2)&0ffh
  2835  069C  120A  158A  23E7   	fcall	_strcat
              120A  118A         
  2836                           	line	394
  2837                           	
  2838  06A1                     l4068:	
  2839                           ;prev13.c: 394: write( logic_d2,2,0); ;
  2840  06A1  30AF               	movlw	(_logic_d2&0ffh)
  2841  06A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2842  06A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2843  06A4  00A0               	movwf	(?_write)
  2844  06A5  3000               	movlw	(0x1/2)
  2845  06A6  00A1               	movwf	(?_write+1)
  2846  06A7  3002               	movlw	low(02h)
  2847  06A8  00A2               	movwf	0+(?_write)+02h
  2848  06A9  3000               	movlw	high(02h)
  2849  06AA  00A3               	movwf	(0+(?_write)+02h)+1
  2850  06AB  3000               	movlw	low(0)
  2851  06AC  00A4               	movwf	0+(?_write)+04h
  2852  06AD  3000               	movlw	high(0)
  2853  06AE  00A5               	movwf	(0+(?_write)+04h)+1
  2854  06AF  120A  158A  255C   	fcall	_write
              120A  118A         
  2855                           	line	395
  2856                           	
  2857  06B4                     l4070:	
  2858                           ;prev13.c: 395: wf=1;
  2859  06B4  3001               	movlw	low(01h)
  2860  06B5  1283               	bcf	status, 5	;RP0=0, select bank0
  2861  06B6  1303               	bcf	status, 6	;RP1=0, select bank0
  2862  06B7  00E5               	movwf	(getlogicseq@wf)
  2863  06B8  3000               	movlw	high(01h)
  2864  06B9  00E6               	movwf	((getlogicseq@wf))+1
  2865                           	line	396
  2866                           	
  2867  06BA                     l4072:	
  2868                           ;prev13.c: 396: ccount++;
  2869  06BA  3001               	movlw	low(01h)
  2870  06BB  07E7               	addwf	(getlogicseq@ccount),f
  2871  06BC  1803               	skipnc
  2872  06BD  0AE8               	incf	(getlogicseq@ccount+1),f
  2873  06BE  3000               	movlw	high(01h)
  2874  06BF  07E8               	addwf	(getlogicseq@ccount+1),f
  2875  06C0  2EC5               	goto	l4076
  2876                           	line	397
  2877                           	
  2878  06C1                     l1170:	
  2879                           	line	398
  2880                           ;prev13.c: 397: }
  2881                           ;prev13.c: 398: }
  2882  06C1  2EC5               	goto	l4076
  2883                           	line	399
  2884                           	
  2885  06C2                     l1167:	
  2886                           	line	400
  2887                           	
  2888  06C2                     l4074:	
  2889                           ;prev13.c: 399: else{
  2890                           ;prev13.c: 400: wf=0;
  2891  06C2  01E5               	clrf	(getlogicseq@wf)
  2892  06C3  01E6               	clrf	(getlogicseq@wf+1)
  2893  06C4  2EC5               	goto	l4076
  2894                           	line	401
  2895                           	
  2896  06C5                     l1172:	
  2897                           	line	402
  2898                           	
  2899  06C5                     l4076:	
  2900                           ;prev13.c: 401: }
  2901                           ;prev13.c: 402: if(ccount>=3)
  2902  06C5  0868               	movf	(getlogicseq@ccount+1),w
  2903  06C6  3A80               	xorlw	80h
  2904  06C7  00FF               	movwf	btemp+1
  2905  06C8  3080               	movlw	(high(03h))^80h
  2906  06C9  027F               	subwf	btemp+1,w
  2907  06CA  1D03               	skipz
  2908  06CB  2ECE               	goto	u4825
  2909  06CC  3003               	movlw	low(03h)
  2910  06CD  0267               	subwf	(getlogicseq@ccount),w
  2911  06CE                     u4825:
  2912                           
  2913  06CE  1C03               	skipc
  2914  06CF  2ED1               	goto	u4821
  2915  06D0  2ED2               	goto	u4820
  2916  06D1                     u4821:
  2917  06D1  2ED4               	goto	l4080
  2918  06D2                     u4820:
  2919  06D2  2EF6               	goto	l4090
  2920                           	line	403
  2921                           	
  2922  06D3                     l4078:	
  2923                           ;prev13.c: 403: break;
  2924  06D3  2EF6               	goto	l4090
  2925                           	
  2926  06D4                     l1173:	
  2927                           	line	405
  2928                           	
  2929  06D4                     l4080:	
  2930                           ;prev13.c: 405: if(num==2)
  2931  06D4  3002               	movlw	02h
  2932  06D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2933  06D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2934  06D7  0669               	xorwf	(getlogicseq@num),w
  2935  06D8  046A               	iorwf	(getlogicseq@num+1),w
  2936  06D9  1D03               	skipz
  2937  06DA  2EDC               	goto	u4831
  2938  06DB  2EDD               	goto	u4830
  2939  06DC                     u4831:
  2940  06DC  2EE9               	goto	l4086
  2941  06DD                     u4830:
  2942                           	line	407
  2943                           	
  2944  06DD                     l4082:	
  2945                           ;prev13.c: 406: {
  2946                           ;prev13.c: 407: if(nf==0){
  2947  06DD  0864               	movf	((getlogicseq@nf+1)),w
  2948  06DE  0463               	iorwf	((getlogicseq@nf)),w
  2949  06DF  1D03               	skipz
  2950  06E0  2EE2               	goto	u4841
  2951  06E1  2EE3               	goto	u4840
  2952  06E2                     u4841:
  2953  06E2  2E33               	goto	l4052
  2954  06E3                     u4840:
  2955                           	line	408
  2956                           	
  2957  06E3                     l4084:	
  2958                           ;prev13.c: 408: nf=1;
  2959  06E3  3001               	movlw	low(01h)
  2960  06E4  00E3               	movwf	(getlogicseq@nf)
  2961  06E5  3000               	movlw	high(01h)
  2962  06E6  00E4               	movwf	((getlogicseq@nf))+1
  2963                           	line	409
  2964                           ;prev13.c: 409: break;
  2965  06E7  2EF6               	goto	l4090
  2966                           	line	410
  2967                           	
  2968  06E8                     l1176:	
  2969                           	line	411
  2970                           ;prev13.c: 410: }
  2971                           ;prev13.c: 411: }
  2972  06E8  2E33               	goto	l4052
  2973                           	line	412
  2974                           	
  2975  06E9                     l1175:	
  2976                           	
  2977  06E9                     l4086:	
  2978                           ;prev13.c: 412: else if(num==99){
  2979  06E9  3063               	movlw	063h
  2980  06EA  0669               	xorwf	(getlogicseq@num),w
  2981  06EB  046A               	iorwf	(getlogicseq@num+1),w
  2982  06EC  1D03               	skipz
  2983  06ED  2EEF               	goto	u4851
  2984  06EE  2EF0               	goto	u4850
  2985  06EF                     u4851:
  2986  06EF  2E33               	goto	l4052
  2987  06F0                     u4850:
  2988                           	line	413
  2989                           	
  2990  06F0                     l4088:	
  2991                           ;prev13.c: 413: nf=0;
  2992  06F0  01E3               	clrf	(getlogicseq@nf)
  2993  06F1  01E4               	clrf	(getlogicseq@nf+1)
  2994  06F2  2E33               	goto	l4052
  2995                           	line	414
  2996                           	
  2997  06F3                     l1178:	
  2998  06F3  2E33               	goto	l4052
  2999                           	line	415
  3000                           	
  3001  06F4                     l1177:	
  3002  06F4  2E33               	goto	l4052
  3003                           	
  3004  06F5                     l1179:	
  3005                           	line	383
  3006  06F5  2E33               	goto	l4052
  3007                           	
  3008  06F6                     l1174:	
  3009                           	line	418
  3010                           	
  3011  06F6                     l4090:	
  3012                           ;prev13.c: 414: }
  3013                           ;prev13.c: 415: }
  3014                           ;prev13.c: 418: wf=0;ccount=0;
  3015  06F6  1283               	bcf	status, 5	;RP0=0, select bank0
  3016  06F7  1303               	bcf	status, 6	;RP1=0, select bank0
  3017  06F8  01E5               	clrf	(getlogicseq@wf)
  3018  06F9  01E6               	clrf	(getlogicseq@wf+1)
  3019  06FA  01E7               	clrf	(getlogicseq@ccount)
  3020  06FB  01E8               	clrf	(getlogicseq@ccount+1)
  3021                           	line	419
  3022                           	
  3023  06FC                     l4092:	
  3024                           ;prev13.c: 419: strcpy(str,"Enter Logic DEV3:  ");
  3025  06FC  305A               	movlw	low(STR_17|8000h)
  3026  06FD  00F2               	movwf	(?_strcpy)
  3027  06FE  3088               	movlw	high(STR_17|8000h)
  3028  06FF  00F3               	movwf	((?_strcpy))+1
  3029  0700  3031               	movlw	(getlogicseq@str)&0ffh
  3030  0701  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  3031                           	line	420
  3032                           	
  3033  0706                     l4094:	
  3034                           ;prev13.c: 420: write(str,1,1);
  3035  0706  3031               	movlw	(getlogicseq@str&0ffh)
  3036  0707  1283               	bcf	status, 5	;RP0=0, select bank0
  3037  0708  1303               	bcf	status, 6	;RP1=0, select bank0
  3038  0709  00A0               	movwf	(?_write)
  3039  070A  3000               	movlw	(0x0/2)
  3040  070B  00A1               	movwf	(?_write+1)
  3041  070C  3001               	movlw	low(01h)
  3042  070D  00A2               	movwf	0+(?_write)+02h
  3043  070E  3000               	movlw	high(01h)
  3044  070F  00A3               	movwf	(0+(?_write)+02h)+1
  3045  0710  3001               	movlw	low(01h)
  3046  0711  00A4               	movwf	0+(?_write)+04h
  3047  0712  3000               	movlw	high(01h)
  3048  0713  00A5               	movwf	(0+(?_write)+04h)+1
  3049  0714  120A  158A  255C   	fcall	_write
              120A  118A         
  3050                           	line	421
  3051                           	
  3052  0719                     l4096:	
  3053                           ;prev13.c: 421: write(logic_d3,2,0);
  3054  0719  30B4               	movlw	(_logic_d3&0ffh)
  3055  071A  1283               	bcf	status, 5	;RP0=0, select bank0
  3056  071B  1303               	bcf	status, 6	;RP1=0, select bank0
  3057  071C  00A0               	movwf	(?_write)
  3058  071D  3000               	movlw	(0x1/2)
  3059  071E  00A1               	movwf	(?_write+1)
  3060  071F  3002               	movlw	low(02h)
  3061  0720  00A2               	movwf	0+(?_write)+02h
  3062  0721  3000               	movlw	high(02h)
  3063  0722  00A3               	movwf	(0+(?_write)+02h)+1
  3064  0723  3000               	movlw	low(0)
  3065  0724  00A4               	movwf	0+(?_write)+04h
  3066  0725  3000               	movlw	high(0)
  3067  0726  00A5               	movwf	(0+(?_write)+04h)+1
  3068  0727  120A  158A  255C   	fcall	_write
              120A  118A         
  3069  072C  2F2D               	goto	l4098
  3070                           	line	423
  3071                           ;prev13.c: 423: while(1)
  3072                           	
  3073  072D                     l1180:	
  3074                           	line	425
  3075                           	
  3076  072D                     l4098:	
  3077                           ;prev13.c: 424: {
  3078                           ;prev13.c: 425: num=scan();
  3079  072D  120A  118A  20C4   	fcall	_scan
              120A  118A         
  3080  0732  0875               	movf	(1+(?_scan)),w
  3081  0733  1283               	bcf	status, 5	;RP0=0, select bank0
  3082  0734  1303               	bcf	status, 6	;RP1=0, select bank0
  3083  0735  01EA               	clrf	(getlogicseq@num+1)
  3084  0736  07EA               	addwf	(getlogicseq@num+1)
  3085  0737  0874               	movf	(0+(?_scan)),w
  3086  0738  01E9               	clrf	(getlogicseq@num)
  3087  0739  07E9               	addwf	(getlogicseq@num)
  3088                           
  3089                           	line	426
  3090                           	
  3091  073A                     l4100:	
  3092                           ;prev13.c: 426: buzz(num);
  3093  073A  086A               	movf	(getlogicseq@num+1),w
  3094  073B  01F1               	clrf	(?_buzz+1)
  3095  073C  07F1               	addwf	(?_buzz+1)
  3096  073D  0869               	movf	(getlogicseq@num),w
  3097  073E  01F0               	clrf	(?_buzz)
  3098  073F  07F0               	addwf	(?_buzz)
  3099                           
  3100  0740  120A  158A  22AC   	fcall	_buzz
              120A  118A         
  3101                           	line	427
  3102                           	
  3103  0745                     l4102:	
  3104                           ;prev13.c: 427: if(num==1||num==0){
  3105  0745  3001               	movlw	01h
  3106  0746  1283               	bcf	status, 5	;RP0=0, select bank0
  3107  0747  1303               	bcf	status, 6	;RP1=0, select bank0
  3108  0748  0669               	xorwf	(getlogicseq@num),w
  3109  0749  046A               	iorwf	(getlogicseq@num+1),w
  3110  074A  1903               	skipnz
  3111  074B  2F4D               	goto	u4861
  3112  074C  2F4E               	goto	u4860
  3113  074D                     u4861:
  3114  074D  2F55               	goto	l4106
  3115  074E                     u4860:
  3116                           	
  3117  074E                     l4104:	
  3118  074E  086A               	movf	((getlogicseq@num+1)),w
  3119  074F  0469               	iorwf	((getlogicseq@num)),w
  3120  0750  1D03               	skipz
  3121  0751  2F53               	goto	u4871
  3122  0752  2F54               	goto	u4870
  3123  0753                     u4871:
  3124  0753  2FBC               	goto	l4120
  3125  0754                     u4870:
  3126  0754  2F55               	goto	l4106
  3127                           	
  3128  0755                     l1183:	
  3129                           	line	428
  3130                           	
  3131  0755                     l4106:	
  3132                           ;prev13.c: 428: if(wf==0)
  3133  0755  0866               	movf	((getlogicseq@wf+1)),w
  3134  0756  0465               	iorwf	((getlogicseq@wf)),w
  3135  0757  1D03               	skipz
  3136  0758  2F5A               	goto	u4881
  3137  0759  2F5B               	goto	u4880
  3138  075A                     u4881:
  3139  075A  2FBF               	goto	l4122
  3140  075B                     u4880:
  3141                           	line	429
  3142                           	
  3143  075B                     l4108:	
  3144                           ;prev13.c: 429: { if(ccount==0)
  3145  075B  0868               	movf	((getlogicseq@ccount+1)),w
  3146  075C  0467               	iorwf	((getlogicseq@ccount)),w
  3147  075D  1D03               	skipz
  3148  075E  2F60               	goto	u4891
  3149  075F  2F61               	goto	u4890
  3150  0760                     u4891:
  3151  0760  2F6B               	goto	l1185
  3152  0761                     u4890:
  3153                           	line	430
  3154                           	
  3155  0761                     l4110:	
  3156                           ;prev13.c: 430: strcpy(logic_d3,"");
  3157  0761  3045               	movlw	low(STR_18|8000h)
  3158  0762  00F2               	movwf	(?_strcpy)
  3159  0763  3088               	movlw	high(STR_18|8000h)
  3160  0764  00F3               	movwf	((?_strcpy))+1
  3161  0765  30B4               	movlw	(_logic_d3)&0ffh
  3162  0766  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  3163                           	
  3164  076B                     l1185:	
  3165                           	line	431
  3166                           ;prev13.c: 431: write("---",2,0);
  3167  076B  302A               	movlw	low(STR_19|8000h)
  3168  076C  1283               	bcf	status, 5	;RP0=0, select bank0
  3169  076D  1303               	bcf	status, 6	;RP1=0, select bank0
  3170  076E  00A0               	movwf	(?_write)
  3171  076F  3089               	movlw	high(STR_19|8000h)
  3172  0770  00A1               	movwf	((?_write))+1
  3173  0771  3002               	movlw	low(02h)
  3174  0772  00A2               	movwf	0+(?_write)+02h
  3175  0773  3000               	movlw	high(02h)
  3176  0774  00A3               	movwf	(0+(?_write)+02h)+1
  3177  0775  3000               	movlw	low(0)
  3178  0776  00A4               	movwf	0+(?_write)+04h
  3179  0777  3000               	movlw	high(0)
  3180  0778  00A5               	movwf	(0+(?_write)+04h)+1
  3181  0779  120A  158A  255C   	fcall	_write
              120A  118A         
  3182                           	line	432
  3183                           ;prev13.c: 432: itoaa(num, snum);
  3184  077E  1283               	bcf	status, 5	;RP0=0, select bank0
  3185  077F  1303               	bcf	status, 6	;RP1=0, select bank0
  3186  0780  086A               	movf	(getlogicseq@num+1),w
  3187  0781  01FA               	clrf	(?_itoaa+1)
  3188  0782  07FA               	addwf	(?_itoaa+1)
  3189  0783  0869               	movf	(getlogicseq@num),w
  3190  0784  01F9               	clrf	(?_itoaa)
  3191  0785  07F9               	addwf	(?_itoaa)
  3192                           
  3193  0786  3053               	movlw	(getlogicseq@snum)&0ffh
  3194  0787  00AD               	movwf	(??_getlogicseq+0)+0
  3195  0788  082D               	movf	(??_getlogicseq+0)+0,w
  3196  0789  00FB               	movwf	0+(?_itoaa)+02h
  3197  078A  120A  118A  2293   	fcall	_itoaa
              120A  118A         
  3198                           	line	433
  3199                           	
  3200  078F                     l4112:	
  3201                           ;prev13.c: 433: strcat(logic_d3,snum);
  3202  078F  3053               	movlw	(getlogicseq@snum)&0ffh
  3203  0790  1283               	bcf	status, 5	;RP0=0, select bank0
  3204  0791  1303               	bcf	status, 6	;RP1=0, select bank0
  3205  0792  00AD               	movwf	(??_getlogicseq+0)+0
  3206  0793  082D               	movf	(??_getlogicseq+0)+0,w
  3207  0794  00F0               	movwf	(?_strcat)
  3208  0795  30B4               	movlw	(_logic_d3)&0ffh
  3209  0796  120A  158A  23E7   	fcall	_strcat
              120A  118A         
  3210                           	line	434
  3211                           	
  3212  079B                     l4114:	
  3213                           ;prev13.c: 434: write( logic_d3,2,0); ;
  3214  079B  30B4               	movlw	(_logic_d3&0ffh)
  3215  079C  1283               	bcf	status, 5	;RP0=0, select bank0
  3216  079D  1303               	bcf	status, 6	;RP1=0, select bank0
  3217  079E  00A0               	movwf	(?_write)
  3218  079F  3000               	movlw	(0x1/2)
  3219  07A0  00A1               	movwf	(?_write+1)
  3220  07A1  3002               	movlw	low(02h)
  3221  07A2  00A2               	movwf	0+(?_write)+02h
  3222  07A3  3000               	movlw	high(02h)
  3223  07A4  00A3               	movwf	(0+(?_write)+02h)+1
  3224  07A5  3000               	movlw	low(0)
  3225  07A6  00A4               	movwf	0+(?_write)+04h
  3226  07A7  3000               	movlw	high(0)
  3227  07A8  00A5               	movwf	(0+(?_write)+04h)+1
  3228  07A9  120A  158A  255C   	fcall	_write
              120A  118A         
  3229                           	line	435
  3230                           	
  3231  07AE                     l4116:	
  3232                           ;prev13.c: 435: wf=1;
  3233  07AE  3001               	movlw	low(01h)
  3234  07AF  1283               	bcf	status, 5	;RP0=0, select bank0
  3235  07B0  1303               	bcf	status, 6	;RP1=0, select bank0
  3236  07B1  00E5               	movwf	(getlogicseq@wf)
  3237  07B2  3000               	movlw	high(01h)
  3238  07B3  00E6               	movwf	((getlogicseq@wf))+1
  3239                           	line	436
  3240                           	
  3241  07B4                     l4118:	
  3242                           ;prev13.c: 436: ccount++;
  3243  07B4  3001               	movlw	low(01h)
  3244  07B5  07E7               	addwf	(getlogicseq@ccount),f
  3245  07B6  1803               	skipnc
  3246  07B7  0AE8               	incf	(getlogicseq@ccount+1),f
  3247  07B8  3000               	movlw	high(01h)
  3248  07B9  07E8               	addwf	(getlogicseq@ccount+1),f
  3249  07BA  2FBF               	goto	l4122
  3250                           	line	437
  3251                           	
  3252  07BB                     l1184:	
  3253                           	line	438
  3254                           ;prev13.c: 437: }
  3255                           ;prev13.c: 438: }
  3256  07BB  2FBF               	goto	l4122
  3257                           	line	439
  3258                           	
  3259  07BC                     l1181:	
  3260                           	line	440
  3261                           	
  3262  07BC                     l4120:	
  3263                           ;prev13.c: 439: else{
  3264                           ;prev13.c: 440: wf=0;
  3265  07BC  01E5               	clrf	(getlogicseq@wf)
  3266  07BD  01E6               	clrf	(getlogicseq@wf+1)
  3267  07BE  2FBF               	goto	l4122
  3268                           	line	441
  3269                           	
  3270  07BF                     l1186:	
  3271                           	line	442
  3272                           	
  3273  07BF                     l4122:	
  3274                           ;prev13.c: 441: }
  3275                           ;prev13.c: 442: if(ccount>=3)
  3276  07BF  0868               	movf	(getlogicseq@ccount+1),w
  3277  07C0  3A80               	xorlw	80h
  3278  07C1  00FF               	movwf	btemp+1
  3279  07C2  3080               	movlw	(high(03h))^80h
  3280  07C3  027F               	subwf	btemp+1,w
  3281  07C4  1D03               	skipz
  3282  07C5  2FC8               	goto	u4905
  3283  07C6  3003               	movlw	low(03h)
  3284  07C7  0267               	subwf	(getlogicseq@ccount),w
  3285  07C8                     u4905:
  3286                           
  3287  07C8  1C03               	skipc
  3288  07C9  2FCB               	goto	u4901
  3289  07CA  2FCC               	goto	u4900
  3290  07CB                     u4901:
  3291  07CB  2FCE               	goto	l4126
  3292  07CC                     u4900:
  3293  07CC  2FF0               	goto	l4136
  3294                           	line	443
  3295                           	
  3296  07CD                     l4124:	
  3297                           ;prev13.c: 443: break;
  3298  07CD  2FF0               	goto	l4136
  3299                           	
  3300  07CE                     l1187:	
  3301                           	line	445
  3302                           	
  3303  07CE                     l4126:	
  3304                           ;prev13.c: 445: if(num==2)
  3305  07CE  3002               	movlw	02h
  3306  07CF  1283               	bcf	status, 5	;RP0=0, select bank0
  3307  07D0  1303               	bcf	status, 6	;RP1=0, select bank0
  3308  07D1  0669               	xorwf	(getlogicseq@num),w
  3309  07D2  046A               	iorwf	(getlogicseq@num+1),w
  3310  07D3  1D03               	skipz
  3311  07D4  2FD6               	goto	u4911
  3312  07D5  2FD7               	goto	u4910
  3313  07D6                     u4911:
  3314  07D6  2FE3               	goto	l4132
  3315  07D7                     u4910:
  3316                           	line	447
  3317                           	
  3318  07D7                     l4128:	
  3319                           ;prev13.c: 446: {
  3320                           ;prev13.c: 447: if(nf==0){
  3321  07D7  0864               	movf	((getlogicseq@nf+1)),w
  3322  07D8  0463               	iorwf	((getlogicseq@nf)),w
  3323  07D9  1D03               	skipz
  3324  07DA  2FDC               	goto	u4921
  3325  07DB  2FDD               	goto	u4920
  3326  07DC                     u4921:
  3327  07DC  2F2D               	goto	l4098
  3328  07DD                     u4920:
  3329                           	line	448
  3330                           	
  3331  07DD                     l4130:	
  3332                           ;prev13.c: 448: nf=1;
  3333  07DD  3001               	movlw	low(01h)
  3334  07DE  00E3               	movwf	(getlogicseq@nf)
  3335  07DF  3000               	movlw	high(01h)
  3336  07E0  00E4               	movwf	((getlogicseq@nf))+1
  3337                           	line	449
  3338                           ;prev13.c: 449: break;
  3339  07E1  2FF0               	goto	l4136
  3340                           	line	450
  3341                           	
  3342  07E2                     l1190:	
  3343                           	line	451
  3344                           ;prev13.c: 450: }
  3345                           ;prev13.c: 451: }
  3346  07E2  2F2D               	goto	l4098
  3347                           	line	452
  3348                           	
  3349  07E3                     l1189:	
  3350                           	
  3351  07E3                     l4132:	
  3352                           ;prev13.c: 452: else if(num==99){
  3353  07E3  3063               	movlw	063h
  3354  07E4  0669               	xorwf	(getlogicseq@num),w
  3355  07E5  046A               	iorwf	(getlogicseq@num+1),w
  3356  07E6  1D03               	skipz
  3357  07E7  2FE9               	goto	u4931
  3358  07E8  2FEA               	goto	u4930
  3359  07E9                     u4931:
  3360  07E9  2F2D               	goto	l4098
  3361  07EA                     u4930:
  3362                           	line	453
  3363                           	
  3364  07EA                     l4134:	
  3365                           ;prev13.c: 453: nf=0;
  3366  07EA  01E3               	clrf	(getlogicseq@nf)
  3367  07EB  01E4               	clrf	(getlogicseq@nf+1)
  3368  07EC  2F2D               	goto	l4098
  3369                           	line	454
  3370                           	
  3371  07ED                     l1192:	
  3372  07ED  2F2D               	goto	l4098
  3373                           	line	455
  3374                           	
  3375  07EE                     l1191:	
  3376  07EE  2F2D               	goto	l4098
  3377                           	
  3378  07EF                     l1193:	
  3379                           	line	423
  3380  07EF  2F2D               	goto	l4098
  3381                           	
  3382  07F0                     l1188:	
  3383                           	line	457
  3384                           	
  3385  07F0                     l4136:	
  3386                           ;prev13.c: 454: }
  3387                           ;prev13.c: 455: }
  3388                           ;prev13.c: 457: setlogic();
  3389  07F0  120A  158A  2467   	fcall	_setlogic
              120A  118A         
  3390                           	line	499
  3391                           	
  3392  07F5                     l4138:	
  3393                           ;prev13.c: 499: f1=0;
  3394  07F5  1683               	bsf	status, 5	;RP0=1, select bank1
  3395  07F6  1303               	bcf	status, 6	;RP1=0, select bank1
  3396  07F7  01D5               	clrf	(_f1)^080h
  3397  07F8  01D6               	clrf	(_f1+1)^080h
  3398                           	line	500
  3399                           	
  3400  07F9                     l4140:	
  3401                           ;prev13.c: 500: f2=0;
  3402  07F9  01D7               	clrf	(_f2)^080h
  3403  07FA  01D8               	clrf	(_f2+1)^080h
  3404                           	line	501
  3405                           	
  3406  07FB                     l4142:	
  3407                           ;prev13.c: 501: f3=1;
  3408  07FB  3001               	movlw	low(01h)
  3409  07FC  00D9               	movwf	(_f3)^080h
  3410  07FD  3000               	movlw	high(01h)
  3411  07FE  00DA               	movwf	((_f3)^080h)+1
  3412                           	line	503
  3413                           	
  3414  07FF                     l1194:	
  3415  07FF  0008               	return
  3416                           	opt stack 0
  3417                           GLOBAL	__end_of_getlogicseq
  3418  0800                     	__end_of_getlogicseq:
  3419 ;; =============== function _getlogicseq ends ============
  3420                           
  3421                           	signat	_getlogicseq,88
  3422                           	global	_startswitch
  3423                           psect	text748,local,class=CODE,delta=2
  3424                           global __ptext748
  3425  037E                     __ptext748:
  3426                           
  3427 ;; *************** function _startswitch *****************
  3428 ;; Defined at:
  3429 ;;		line 260 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;		None               void
  3436 ;; Registers used:
  3437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       0       0       0       0
  3444 ;;      Locals:         0       0       0       0       0
  3445 ;;      Temps:          2       0       0       0       0
  3446 ;;      Totals:         2       0       0       0       0
  3447 ;;Total ram usage:        2 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    7
  3450 ;; This function calls:
  3451 ;;		_init_fun
  3452 ;;		_strcpy
  3453 ;;		_write
  3454 ;;		_buzz
  3455 ;;		_strcmp
  3456 ;;		_delay
  3457 ;;		_check
  3458 ;; This function is called by:
  3459 ;;		_start
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           psect	text748
  3463                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  3464                           	line	260
  3465                           	global	__size_of_startswitch
  3466  0143                     	__size_of_startswitch	equ	__end_of_startswitch-_startswitch
  3467                           	
  3468  037E                     _startswitch:	
  3469 ;; hardware stack exceeded
  3470                           	opt	stack 0
  3471                           ; Regs used in _startswitch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3472                           	line	261
  3473                           	
  3474  037E                     l3926:	
  3475                           ;prev13.c: 261: init_fun();
  3476  037E  120A  158A  2396   	fcall	_init_fun
              120A  118A         
  3477                           	line	264
  3478                           ;prev13.c: 264: strcpy(plo,lo);
  3479  0383  30A5               	movlw	(_lo&0ffh)
  3480  0384  00F2               	movwf	(?_strcpy)
  3481  0385  3000               	movlw	(0x1/2)
  3482  0386  00F3               	movwf	(?_strcpy+1)
  3483  0387  30BE               	movlw	(_plo)&0ffh
  3484  0388  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  3485                           	line	265
  3486                           ;prev13.c: 265: strcpy(lo,"000");;
  3487  038D  30DB               	movlw	low(STR_8|8000h)
  3488  038E  00F2               	movwf	(?_strcpy)
  3489  038F  3088               	movlw	high(STR_8|8000h)
  3490  0390  00F3               	movwf	((?_strcpy))+1
  3491  0391  30A5               	movlw	(_lo)&0ffh
  3492  0392  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  3493                           	line	266
  3494                           	
  3495  0397                     l3928:	
  3496                           ;prev13.c: 266: if(RA0==1)
  3497  0397  1283               	bcf	status, 5	;RP0=0, select bank0
  3498  0398  1303               	bcf	status, 6	;RP1=0, select bank0
  3499  0399  1C05               	btfss	(40/8),(40)&7
  3500  039A  2B9C               	goto	u4541
  3501  039B  2B9D               	goto	u4540
  3502  039C                     u4541:
  3503  039C  2BA4               	goto	l3932
  3504  039D                     u4540:
  3505                           	line	267
  3506                           	
  3507  039D                     l3930:	
  3508                           ;prev13.c: 267: lo[0]='1';
  3509  039D  3031               	movlw	(031h)
  3510  039E  00FB               	movwf	(??_startswitch+0)+0
  3511  039F  087B               	movf	(??_startswitch+0)+0,w
  3512  03A0  1683               	bsf	status, 5	;RP0=1, select bank1
  3513  03A1  1303               	bcf	status, 6	;RP1=0, select bank1
  3514  03A2  00A5               	movwf	(_lo)^080h
  3515  03A3  2BA4               	goto	l3932
  3516                           	
  3517  03A4                     l1136:	
  3518                           	line	268
  3519                           	
  3520  03A4                     l3932:	
  3521                           ;prev13.c: 268: if(RA1==1)
  3522  03A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3523  03A5  1C85               	btfss	(41/8),(41)&7
  3524  03A6  2BA8               	goto	u4551
  3525  03A7  2BA9               	goto	u4550
  3526  03A8                     u4551:
  3527  03A8  2BB0               	goto	l3936
  3528  03A9                     u4550:
  3529                           	line	269
  3530                           	
  3531  03A9                     l3934:	
  3532                           ;prev13.c: 269: lo[1]='1';
  3533  03A9  3031               	movlw	(031h)
  3534  03AA  00FB               	movwf	(??_startswitch+0)+0
  3535  03AB  087B               	movf	(??_startswitch+0)+0,w
  3536  03AC  1683               	bsf	status, 5	;RP0=1, select bank1
  3537  03AD  1303               	bcf	status, 6	;RP1=0, select bank1
  3538  03AE  00A6               	movwf	0+(_lo)^080h+01h
  3539  03AF  2BB0               	goto	l3936
  3540                           	
  3541  03B0                     l1137:	
  3542                           	line	270
  3543                           	
  3544  03B0                     l3936:	
  3545                           ;prev13.c: 270: if(RA2==1)
  3546  03B0  1283               	bcf	status, 5	;RP0=0, select bank0
  3547  03B1  1D05               	btfss	(42/8),(42)&7
  3548  03B2  2BB4               	goto	u4561
  3549  03B3  2BB5               	goto	u4560
  3550  03B4                     u4561:
  3551  03B4  2BBC               	goto	l3940
  3552  03B5                     u4560:
  3553                           	line	271
  3554                           	
  3555  03B5                     l3938:	
  3556                           ;prev13.c: 271: lo[2]='1';
  3557  03B5  3031               	movlw	(031h)
  3558  03B6  00FB               	movwf	(??_startswitch+0)+0
  3559  03B7  087B               	movf	(??_startswitch+0)+0,w
  3560  03B8  1683               	bsf	status, 5	;RP0=1, select bank1
  3561  03B9  1303               	bcf	status, 6	;RP1=0, select bank1
  3562  03BA  00A7               	movwf	0+(_lo)^080h+02h
  3563  03BB  2BBC               	goto	l3940
  3564                           	
  3565  03BC                     l1138:	
  3566                           	line	274
  3567                           	
  3568  03BC                     l3940:	
  3569                           ;prev13.c: 274: pdev=dev;
  3570  03BC  1283               	bcf	status, 5	;RP0=0, select bank0
  3571  03BD  086C               	movf	(_dev+1),w
  3572  03BE  1683               	bsf	status, 5	;RP0=1, select bank1
  3573  03BF  1303               	bcf	status, 6	;RP1=0, select bank1
  3574  03C0  01DC               	clrf	(_pdev+1)^080h
  3575  03C1  07DC               	addwf	(_pdev+1)^080h
  3576  03C2  1283               	bcf	status, 5	;RP0=0, select bank0
  3577  03C3  1303               	bcf	status, 6	;RP1=0, select bank0
  3578  03C4  086B               	movf	(_dev),w
  3579  03C5  1683               	bsf	status, 5	;RP0=1, select bank1
  3580  03C6  1303               	bcf	status, 6	;RP1=0, select bank1
  3581  03C7  01DB               	clrf	(_pdev)^080h
  3582  03C8  07DB               	addwf	(_pdev)^080h
  3583                           
  3584                           	line	275
  3585                           	
  3586  03C9                     l3942:	
  3587                           ;prev13.c: 275: dev=0b0000;
  3588  03C9  1283               	bcf	status, 5	;RP0=0, select bank0
  3589  03CA  1303               	bcf	status, 6	;RP1=0, select bank0
  3590  03CB  01EB               	clrf	(_dev)
  3591  03CC  01EC               	clrf	(_dev+1)
  3592                           	line	276
  3593                           	
  3594  03CD                     l3944:	
  3595                           ;prev13.c: 276: write("Press 2 to REPRG",2,0);
  3596  03CD  307F               	movlw	low(STR_9|8000h)
  3597  03CE  00A0               	movwf	(?_write)
  3598  03CF  3088               	movlw	high(STR_9|8000h)
  3599  03D0  00A1               	movwf	((?_write))+1
  3600  03D1  3002               	movlw	low(02h)
  3601  03D2  00A2               	movwf	0+(?_write)+02h
  3602  03D3  3000               	movlw	high(02h)
  3603  03D4  00A3               	movwf	(0+(?_write)+02h)+1
  3604  03D5  3000               	movlw	low(0)
  3605  03D6  00A4               	movwf	0+(?_write)+04h
  3606  03D7  3000               	movlw	high(0)
  3607  03D8  00A5               	movwf	(0+(?_write)+04h)+1
  3608  03D9  120A  158A  255C   	fcall	_write
              120A  118A         
  3609                           	line	277
  3610                           	
  3611  03DE                     l3946:	
  3612                           ;prev13.c: 277: buzz(99);
  3613  03DE  3063               	movlw	low(063h)
  3614  03DF  00F0               	movwf	(?_buzz)
  3615  03E0  3000               	movlw	high(063h)
  3616  03E1  00F1               	movwf	((?_buzz))+1
  3617  03E2  120A  158A  22AC   	fcall	_buzz
              120A  118A         
  3618                           	line	279
  3619                           	
  3620  03E7                     l3948:	
  3621                           ;prev13.c: 279: if(strcmp(lo,plo)!=0)
  3622  03E7  30BE               	movlw	(_plo&0ffh)
  3623  03E8  00F0               	movwf	(?_strcmp)
  3624  03E9  3000               	movlw	(0x1/2)
  3625  03EA  00F1               	movwf	(?_strcmp+1)
  3626  03EB  30A5               	movlw	(_lo)&0ffh
  3627  03EC  120A  158A  249C   	fcall	_strcmp
              120A  118A         
  3628  03F1  0871               	movf	(1+(?_strcmp)),w
  3629  03F2  0470               	iorwf	(0+(?_strcmp)),w
  3630  03F3  1903               	skipnz
  3631  03F4  2BF6               	goto	u4571
  3632  03F5  2BF7               	goto	u4570
  3633  03F6                     u4571:
  3634  03F6  2CC0               	goto	l1146
  3635  03F7                     u4570:
  3636                           	line	282
  3637                           	
  3638  03F7                     l3950:	
  3639                           ;prev13.c: 280: {
  3640                           ;prev13.c: 282: write(lo,1,1);
  3641  03F7  30A5               	movlw	(_lo&0ffh)
  3642  03F8  1283               	bcf	status, 5	;RP0=0, select bank0
  3643  03F9  1303               	bcf	status, 6	;RP1=0, select bank0
  3644  03FA  00A0               	movwf	(?_write)
  3645  03FB  3000               	movlw	(0x1/2)
  3646  03FC  00A1               	movwf	(?_write+1)
  3647  03FD  3001               	movlw	low(01h)
  3648  03FE  00A2               	movwf	0+(?_write)+02h
  3649  03FF  3000               	movlw	high(01h)
  3650  0400  00A3               	movwf	(0+(?_write)+02h)+1
  3651  0401  3001               	movlw	low(01h)
  3652  0402  00A4               	movwf	0+(?_write)+04h
  3653  0403  3000               	movlw	high(01h)
  3654  0404  00A5               	movwf	(0+(?_write)+04h)+1
  3655  0405  120A  158A  255C   	fcall	_write
              120A  118A         
  3656                           	line	283
  3657                           	
  3658  040A                     l3952:	
  3659                           ;prev13.c: 283: buzz(7);
  3660  040A  3007               	movlw	low(07h)
  3661  040B  00F0               	movwf	(?_buzz)
  3662  040C  3000               	movlw	high(07h)
  3663  040D  00F1               	movwf	((?_buzz))+1
  3664  040E  120A  158A  22AC   	fcall	_buzz
              120A  118A         
  3665                           	line	284
  3666                           	
  3667  0413                     l3954:	
  3668                           ;prev13.c: 284: delay(3000);
  3669  0413  30B8               	movlw	low(0BB8h)
  3670  0414  00F0               	movwf	(?_delay)
  3671  0415  300B               	movlw	high(0BB8h)
  3672  0416  00F1               	movwf	((?_delay))+1
  3673  0417  120A  158A  22CD   	fcall	_delay
              120A  118A         
  3674                           	line	287
  3675                           ;prev13.c: 287: if(check(lo,logic_d1))
  3676  041C  30AA               	movlw	(_logic_d1)&0ffh
  3677  041D  00FB               	movwf	(??_startswitch+0)+0
  3678  041E  087B               	movf	(??_startswitch+0)+0,w
  3679  041F  00F0               	movwf	(?_check)
  3680  0420  30A5               	movlw	(_lo)&0ffh
  3681  0421  120A  158A  2513   	fcall	_check
              120A  118A         
  3682  0426  0871               	movf	(1+(?_check)),w
  3683  0427  0470               	iorwf	(0+(?_check)),w
  3684  0428  1903               	skipnz
  3685  0429  2C2B               	goto	u4581
  3686  042A  2C2C               	goto	u4580
  3687  042B                     u4581:
  3688  042B  2C35               	goto	l3958
  3689  042C                     u4580:
  3690                           	line	288
  3691                           	
  3692  042C                     l3956:	
  3693                           ;prev13.c: 288: dev=dev|0b0001;
  3694  042C  3001               	movlw	low(01h)
  3695  042D  1283               	bcf	status, 5	;RP0=0, select bank0
  3696  042E  1303               	bcf	status, 6	;RP1=0, select bank0
  3697  042F  046B               	iorwf	(_dev),w
  3698  0430  00EB               	movwf	(_dev)
  3699  0431  3000               	movlw	high(01h)
  3700  0432  046C               	iorwf	(_dev+1),w
  3701  0433  00EC               	movwf	1+(_dev)
  3702  0434  2C3E               	goto	l3960
  3703                           	line	289
  3704                           	
  3705  0435                     l1140:	
  3706                           	line	290
  3707                           	
  3708  0435                     l3958:	
  3709                           ;prev13.c: 289: else
  3710                           ;prev13.c: 290: dev=dev&0b0110;
  3711  0435  3006               	movlw	low(06h)
  3712  0436  1283               	bcf	status, 5	;RP0=0, select bank0
  3713  0437  1303               	bcf	status, 6	;RP1=0, select bank0
  3714  0438  056B               	andwf	(_dev),w
  3715  0439  00EB               	movwf	(_dev)
  3716  043A  3000               	movlw	high(06h)
  3717  043B  056C               	andwf	(_dev+1),w
  3718  043C  00EC               	movwf	1+(_dev)
  3719  043D  2C3E               	goto	l3960
  3720                           	
  3721  043E                     l1141:	
  3722                           	line	292
  3723                           	
  3724  043E                     l3960:	
  3725                           ;prev13.c: 292: if(check(lo,logic_d2))
  3726  043E  30AF               	movlw	(_logic_d2)&0ffh
  3727  043F  00FB               	movwf	(??_startswitch+0)+0
  3728  0440  087B               	movf	(??_startswitch+0)+0,w
  3729  0441  00F0               	movwf	(?_check)
  3730  0442  30A5               	movlw	(_lo)&0ffh
  3731  0443  120A  158A  2513   	fcall	_check
              120A  118A         
  3732  0448  0871               	movf	(1+(?_check)),w
  3733  0449  0470               	iorwf	(0+(?_check)),w
  3734  044A  1903               	skipnz
  3735  044B  2C4D               	goto	u4591
  3736  044C  2C4E               	goto	u4590
  3737  044D                     u4591:
  3738  044D  2C57               	goto	l3964
  3739  044E                     u4590:
  3740                           	line	293
  3741                           	
  3742  044E                     l3962:	
  3743                           ;prev13.c: 293: dev=dev|0b0010;
  3744  044E  3002               	movlw	low(02h)
  3745  044F  1283               	bcf	status, 5	;RP0=0, select bank0
  3746  0450  1303               	bcf	status, 6	;RP1=0, select bank0
  3747  0451  046B               	iorwf	(_dev),w
  3748  0452  00EB               	movwf	(_dev)
  3749  0453  3000               	movlw	high(02h)
  3750  0454  046C               	iorwf	(_dev+1),w
  3751  0455  00EC               	movwf	1+(_dev)
  3752  0456  2C60               	goto	l3966
  3753                           	line	294
  3754                           	
  3755  0457                     l1142:	
  3756                           	line	295
  3757                           	
  3758  0457                     l3964:	
  3759                           ;prev13.c: 294: else
  3760                           ;prev13.c: 295: dev=dev&0b0101;
  3761  0457  3005               	movlw	low(05h)
  3762  0458  1283               	bcf	status, 5	;RP0=0, select bank0
  3763  0459  1303               	bcf	status, 6	;RP1=0, select bank0
  3764  045A  056B               	andwf	(_dev),w
  3765  045B  00EB               	movwf	(_dev)
  3766  045C  3000               	movlw	high(05h)
  3767  045D  056C               	andwf	(_dev+1),w
  3768  045E  00EC               	movwf	1+(_dev)
  3769  045F  2C60               	goto	l3966
  3770                           	
  3771  0460                     l1143:	
  3772                           	line	298
  3773                           	
  3774  0460                     l3966:	
  3775                           ;prev13.c: 298: if(check(lo,logic_d3))
  3776  0460  30B4               	movlw	(_logic_d3)&0ffh
  3777  0461  00FB               	movwf	(??_startswitch+0)+0
  3778  0462  087B               	movf	(??_startswitch+0)+0,w
  3779  0463  00F0               	movwf	(?_check)
  3780  0464  30A5               	movlw	(_lo)&0ffh
  3781  0465  120A  158A  2513   	fcall	_check
              120A  118A         
  3782  046A  0871               	movf	(1+(?_check)),w
  3783  046B  0470               	iorwf	(0+(?_check)),w
  3784  046C  1903               	skipnz
  3785  046D  2C6F               	goto	u4601
  3786  046E  2C70               	goto	u4600
  3787  046F                     u4601:
  3788  046F  2C79               	goto	l3970
  3789  0470                     u4600:
  3790                           	line	299
  3791                           	
  3792  0470                     l3968:	
  3793                           ;prev13.c: 299: dev=dev|0b0100;
  3794  0470  3004               	movlw	low(04h)
  3795  0471  1283               	bcf	status, 5	;RP0=0, select bank0
  3796  0472  1303               	bcf	status, 6	;RP1=0, select bank0
  3797  0473  046B               	iorwf	(_dev),w
  3798  0474  00EB               	movwf	(_dev)
  3799  0475  3000               	movlw	high(04h)
  3800  0476  046C               	iorwf	(_dev+1),w
  3801  0477  00EC               	movwf	1+(_dev)
  3802  0478  2C82               	goto	l3972
  3803                           	line	300
  3804                           	
  3805  0479                     l1144:	
  3806                           	line	301
  3807                           	
  3808  0479                     l3970:	
  3809                           ;prev13.c: 300: else
  3810                           ;prev13.c: 301: dev=dev&0b0011;
  3811  0479  3003               	movlw	low(03h)
  3812  047A  1283               	bcf	status, 5	;RP0=0, select bank0
  3813  047B  1303               	bcf	status, 6	;RP1=0, select bank0
  3814  047C  056B               	andwf	(_dev),w
  3815  047D  00EB               	movwf	(_dev)
  3816  047E  3000               	movlw	high(03h)
  3817  047F  056C               	andwf	(_dev+1),w
  3818  0480  00EC               	movwf	1+(_dev)
  3819  0481  2C82               	goto	l3972
  3820                           	
  3821  0482                     l1145:	
  3822                           	line	306
  3823                           	
  3824  0482                     l3972:	
  3825                           ;prev13.c: 306: RC4=dev&0b0001;
  3826  0482  186B               	btfsc	(_dev),0
  3827  0483  2C85               	goto	u4611
  3828  0484  2C89               	goto	u4610
  3829                           	
  3830  0485                     u4611:
  3831  0485  1283               	bcf	status, 5	;RP0=0, select bank0
  3832  0486  1303               	bcf	status, 6	;RP1=0, select bank0
  3833  0487  1607               	bsf	(60/8),(60)&7
  3834  0488  2C8C               	goto	u4624
  3835  0489                     u4610:
  3836  0489  1283               	bcf	status, 5	;RP0=0, select bank0
  3837  048A  1303               	bcf	status, 6	;RP1=0, select bank0
  3838  048B  1207               	bcf	(60/8),(60)&7
  3839  048C                     u4624:
  3840                           	line	307
  3841                           	
  3842  048C                     l3974:	
  3843                           ;prev13.c: 307: RC5=(dev>>1)&0b0001;
  3844  048C  086C               	movf	(_dev+1),w
  3845  048D  00FC               	movwf	(??_startswitch+0)+0+1
  3846  048E  086B               	movf	(_dev),w
  3847  048F  00FB               	movwf	(??_startswitch+0)+0
  3848  0490  3001               	movlw	01h
  3849  0491  00FF               	movwf	btemp+1
  3850  0492                     u4635:
  3851  0492  0D7C               	rlf	(??_startswitch+0)+1,w
  3852  0493  0CFC               	rrf	(??_startswitch+0)+1,f
  3853  0494  0CFB               	rrf	(??_startswitch+0)+0,f
  3854  0495  0BFF               	decfsz	btemp+1,f
  3855  0496  2C92               	goto	u4635
  3856  0497  187B               	btfsc	0+(??_startswitch+0)+0,0
  3857  0498  2C9A               	goto	u4641
  3858  0499  2C9E               	goto	u4640
  3859                           	
  3860  049A                     u4641:
  3861  049A  1283               	bcf	status, 5	;RP0=0, select bank0
  3862  049B  1303               	bcf	status, 6	;RP1=0, select bank0
  3863  049C  1687               	bsf	(61/8),(61)&7
  3864  049D  2CA1               	goto	u4654
  3865  049E                     u4640:
  3866  049E  1283               	bcf	status, 5	;RP0=0, select bank0
  3867  049F  1303               	bcf	status, 6	;RP1=0, select bank0
  3868  04A0  1287               	bcf	(61/8),(61)&7
  3869  04A1                     u4654:
  3870                           	line	308
  3871                           	
  3872  04A1                     l3976:	
  3873                           ;prev13.c: 308: RC6=(dev>>2)&0b0001;
  3874  04A1  086C               	movf	(_dev+1),w
  3875  04A2  00FC               	movwf	(??_startswitch+0)+0+1
  3876  04A3  086B               	movf	(_dev),w
  3877  04A4  00FB               	movwf	(??_startswitch+0)+0
  3878  04A5  3002               	movlw	02h
  3879  04A6  00FF               	movwf	btemp+1
  3880  04A7                     u4665:
  3881  04A7  0D7C               	rlf	(??_startswitch+0)+1,w
  3882  04A8  0CFC               	rrf	(??_startswitch+0)+1,f
  3883  04A9  0CFB               	rrf	(??_startswitch+0)+0,f
  3884  04AA  0BFF               	decfsz	btemp+1,f
  3885  04AB  2CA7               	goto	u4665
  3886  04AC  187B               	btfsc	0+(??_startswitch+0)+0,0
  3887  04AD  2CAF               	goto	u4671
  3888  04AE  2CB3               	goto	u4670
  3889                           	
  3890  04AF                     u4671:
  3891  04AF  1283               	bcf	status, 5	;RP0=0, select bank0
  3892  04B0  1303               	bcf	status, 6	;RP1=0, select bank0
  3893  04B1  1707               	bsf	(62/8),(62)&7
  3894  04B2  2CB6               	goto	u4684
  3895  04B3                     u4670:
  3896  04B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3897  04B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3898  04B5  1307               	bcf	(62/8),(62)&7
  3899  04B6                     u4684:
  3900                           	line	309
  3901                           	
  3902  04B6                     l3978:	
  3903                           ;prev13.c: 309: delay(200);
  3904  04B6  30C8               	movlw	low(0C8h)
  3905  04B7  00F0               	movwf	(?_delay)
  3906  04B8  3000               	movlw	high(0C8h)
  3907  04B9  00F1               	movwf	((?_delay))+1
  3908  04BA  120A  158A  22CD   	fcall	_delay
              120A  118A         
  3909  04BF  2CC0               	goto	l1146
  3910                           	line	310
  3911                           	
  3912  04C0                     l1139:	
  3913                           	line	313
  3914                           	
  3915  04C0                     l1146:	
  3916  04C0  0008               	return
  3917                           	opt stack 0
  3918                           GLOBAL	__end_of_startswitch
  3919  04C1                     	__end_of_startswitch:
  3920 ;; =============== function _startswitch ends ============
  3921                           
  3922                           	signat	_startswitch,88
  3923                           	global	_init_fun
  3924                           psect	text749,local,class=CODE,delta=2
  3925                           global __ptext749
  3926  0B96                     __ptext749:
  3927                           
  3928 ;; *************** function _init_fun *****************
  3929 ;; Defined at:
  3930 ;;		line 249 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;		None               void
  3937 ;; Registers used:
  3938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3944 ;;      Params:         0       0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0
  3947 ;;      Totals:         0       0       0       0       0
  3948 ;;Total ram usage:        0 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    6
  3951 ;; This function calls:
  3952 ;;		_write
  3953 ;; This function is called by:
  3954 ;;		_startswitch
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           psect	text749
  3958                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  3959                           	line	249
  3960                           	global	__size_of_init_fun
  3961  0028                     	__size_of_init_fun	equ	__end_of_init_fun-_init_fun
  3962                           	
  3963  0B96                     _init_fun:	
  3964 ;; hardware stack exceeded
  3965                           	opt	stack 0
  3966                           ; Regs used in _init_fun: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3967                           	line	250
  3968                           	
  3969  0B96                     l3916:	
  3970                           ;prev13.c: 250: if(done_init==0)
  3971  0B96  1683               	bsf	status, 5	;RP0=1, select bank1
  3972  0B97  1303               	bcf	status, 6	;RP1=0, select bank1
  3973  0B98  0854               	movf	((_done_init+1)^080h),w
  3974  0B99  0453               	iorwf	((_done_init)^080h),w
  3975  0B9A  1D03               	skipz
  3976  0B9B  2B9D               	goto	u4531
  3977  0B9C  2B9E               	goto	u4530
  3978  0B9D                     u4531:
  3979  0B9D  2BBD               	goto	l1133
  3980  0B9E                     u4530:
  3981                           	line	253
  3982                           	
  3983  0B9E                     l3918:	
  3984                           ;prev13.c: 251: {
  3985                           ;prev13.c: 253: TRISA=0x0F;
  3986  0B9E  300F               	movlw	(0Fh)
  3987  0B9F  0085               	movwf	(133)^080h	;volatile
  3988                           	line	254
  3989                           	
  3990  0BA0                     l3920:	
  3991                           ;prev13.c: 254: ANSEL=0x0;
  3992  0BA0  1683               	bsf	status, 5	;RP0=1, select bank3
  3993  0BA1  1703               	bsf	status, 6	;RP1=1, select bank3
  3994  0BA2  0188               	clrf	(392)^0180h	;volatile
  3995                           	line	255
  3996                           	
  3997  0BA3                     l3922:	
  3998                           ;prev13.c: 255: done_init=1;
  3999  0BA3  3001               	movlw	low(01h)
  4000  0BA4  1683               	bsf	status, 5	;RP0=1, select bank1
  4001  0BA5  1303               	bcf	status, 6	;RP1=0, select bank1
  4002  0BA6  00D3               	movwf	(_done_init)^080h
  4003  0BA7  3000               	movlw	high(01h)
  4004  0BA8  00D4               	movwf	((_done_init)^080h)+1
  4005                           	line	256
  4006                           	
  4007  0BA9                     l3924:	
  4008                           ;prev13.c: 256: write("Sensing...",1,1);
  4009  0BA9  30C7               	movlw	low(STR_7|8000h)
  4010  0BAA  1283               	bcf	status, 5	;RP0=0, select bank0
  4011  0BAB  1303               	bcf	status, 6	;RP1=0, select bank0
  4012  0BAC  00A0               	movwf	(?_write)
  4013  0BAD  3088               	movlw	high(STR_7|8000h)
  4014  0BAE  00A1               	movwf	((?_write))+1
  4015  0BAF  3001               	movlw	low(01h)
  4016  0BB0  00A2               	movwf	0+(?_write)+02h
  4017  0BB1  3000               	movlw	high(01h)
  4018  0BB2  00A3               	movwf	(0+(?_write)+02h)+1
  4019  0BB3  3001               	movlw	low(01h)
  4020  0BB4  00A4               	movwf	0+(?_write)+04h
  4021  0BB5  3000               	movlw	high(01h)
  4022  0BB6  00A5               	movwf	(0+(?_write)+04h)+1
  4023  0BB7  120A  158A  255C   	fcall	_write
              120A  158A         
  4024  0BBC  2BBD               	goto	l1133
  4025                           	line	257
  4026                           	
  4027  0BBD                     l1132:	
  4028                           	line	258
  4029                           	
  4030  0BBD                     l1133:	
  4031  0BBD  0008               	return
  4032                           	opt stack 0
  4033                           GLOBAL	__end_of_init_fun
  4034  0BBE                     	__end_of_init_fun:
  4035 ;; =============== function _init_fun ends ============
  4036                           
  4037                           	signat	_init_fun,88
  4038                           	global	_getlogic
  4039                           psect	text750,local,class=CODE,delta=2
  4040                           global __ptext750
  4041  001E                     __ptext750:
  4042                           
  4043 ;; *************** function _getlogic *****************
  4044 ;; Defined at:
  4045 ;;		line 217 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;		None               void
  4052 ;; Registers used:
  4053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4059 ;;      Params:         0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0
  4061 ;;      Temps:          1       0       0       0       0
  4062 ;;      Totals:         1       0       0       0       0
  4063 ;;Total ram usage:        1 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    6
  4066 ;; This function calls:
  4067 ;;		_read_eep
  4068 ;;		_write_eep
  4069 ;;		_write
  4070 ;;		_delay
  4071 ;;		_read_log
  4072 ;;		_strcpy
  4073 ;; This function is called by:
  4074 ;;		_getlogicseq
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           psect	text750
  4078                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4079                           	line	217
  4080                           	global	__size_of_getlogic
  4081  00A6                     	__size_of_getlogic	equ	__end_of_getlogic-_getlogic
  4082                           	
  4083  001E                     _getlogic:	
  4084 ;; hardware stack exceeded
  4085                           	opt	stack 0
  4086                           ; Regs used in _getlogic: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4087                           	line	218
  4088                           	
  4089  001E                     l3894:	
  4090                           ;prev13.c: 218: if(read_eep(0xF0)!='X')
  4091  001E  30F0               	movlw	low(0F0h)
  4092  001F  00F9               	movwf	(?_read_eep)
  4093  0020  3000               	movlw	high(0F0h)
  4094  0021  00FA               	movwf	((?_read_eep))+1
  4095  0022  120A  158A  243A   	fcall	_read_eep
              120A  118A         
  4096  0027  3A58               	xorlw	058h
  4097  0028  1903               	skipnz
  4098  0029  282B               	goto	u4521
  4099  002A  282C               	goto	u4520
  4100  002B                     u4521:
  4101  002B  2857               	goto	l3904
  4102  002C                     u4520:
  4103                           	line	220
  4104                           	
  4105  002C                     l3896:	
  4106                           ;prev13.c: 219: {
  4107                           ;prev13.c: 220: write_eep(0xF0,'X');
  4108  002C  30F0               	movlw	low(0F0h)
  4109  002D  00F2               	movwf	(?_write_eep)
  4110  002E  3000               	movlw	high(0F0h)
  4111  002F  00F3               	movwf	((?_write_eep))+1
  4112  0030  3058               	movlw	(058h)
  4113  0031  00FD               	movwf	(??_getlogic+0)+0
  4114  0032  087D               	movf	(??_getlogic+0)+0,w
  4115  0033  00F4               	movwf	0+(?_write_eep)+02h
  4116  0034  120A  158A  236F   	fcall	_write_eep
              120A  118A         
  4117                           	line	221
  4118                           	
  4119  0039                     l3898:	
  4120                           ;prev13.c: 221: write("CONFIGURED !",1,1);
  4121  0039  30AE               	movlw	low(STR_5|8000h)
  4122  003A  1283               	bcf	status, 5	;RP0=0, select bank0
  4123  003B  1303               	bcf	status, 6	;RP1=0, select bank0
  4124  003C  00A0               	movwf	(?_write)
  4125  003D  3088               	movlw	high(STR_5|8000h)
  4126  003E  00A1               	movwf	((?_write))+1
  4127  003F  3001               	movlw	low(01h)
  4128  0040  00A2               	movwf	0+(?_write)+02h
  4129  0041  3000               	movlw	high(01h)
  4130  0042  00A3               	movwf	(0+(?_write)+02h)+1
  4131  0043  3001               	movlw	low(01h)
  4132  0044  00A4               	movwf	0+(?_write)+04h
  4133  0045  3000               	movlw	high(01h)
  4134  0046  00A5               	movwf	(0+(?_write)+04h)+1
  4135  0047  120A  158A  255C   	fcall	_write
              120A  118A         
  4136                           	line	222
  4137                           	
  4138  004C                     l3900:	
  4139                           ;prev13.c: 222: delay(2000);
  4140  004C  30D0               	movlw	low(07D0h)
  4141  004D  00F0               	movwf	(?_delay)
  4142  004E  3007               	movlw	high(07D0h)
  4143  004F  00F1               	movwf	((?_delay))+1
  4144  0050  120A  158A  22CD   	fcall	_delay
              120A  118A         
  4145  0055  28C3               	goto	l1123
  4146                           	line	223
  4147                           	
  4148  0056                     l3902:	
  4149                           ;prev13.c: 223: return;
  4150  0056  28C3               	goto	l1123
  4151                           	line	225
  4152                           	
  4153  0057                     l1122:	
  4154                           	line	226
  4155                           	
  4156  0057                     l3904:	
  4157                           ;prev13.c: 225: }
  4158                           ;prev13.c: 226: write("READING.. !",1,1);
  4159  0057  30BB               	movlw	low(STR_6|8000h)
  4160  0058  1283               	bcf	status, 5	;RP0=0, select bank0
  4161  0059  1303               	bcf	status, 6	;RP1=0, select bank0
  4162  005A  00A0               	movwf	(?_write)
  4163  005B  3088               	movlw	high(STR_6|8000h)
  4164  005C  00A1               	movwf	((?_write))+1
  4165  005D  3001               	movlw	low(01h)
  4166  005E  00A2               	movwf	0+(?_write)+02h
  4167  005F  3000               	movlw	high(01h)
  4168  0060  00A3               	movwf	(0+(?_write)+02h)+1
  4169  0061  3001               	movlw	low(01h)
  4170  0062  00A4               	movwf	0+(?_write)+04h
  4171  0063  3000               	movlw	high(01h)
  4172  0064  00A5               	movwf	(0+(?_write)+04h)+1
  4173  0065  120A  158A  255C   	fcall	_write
              120A  118A         
  4174                           	line	227
  4175                           	
  4176  006A                     l3906:	
  4177                           ;prev13.c: 227: delay(2000);
  4178  006A  30D0               	movlw	low(07D0h)
  4179  006B  00F0               	movwf	(?_delay)
  4180  006C  3007               	movlw	high(07D0h)
  4181  006D  00F1               	movwf	((?_delay))+1
  4182  006E  120A  158A  22CD   	fcall	_delay
              120A  118A         
  4183                           	line	228
  4184                           	
  4185  0073                     l3908:	
  4186                           ;prev13.c: 228: strcpy(logic_d1,read_log(0));
  4187  0073  3000               	movlw	low(0)
  4188  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  4189  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  4190  0076  00A2               	movwf	(?_read_log)
  4191  0077  3000               	movlw	high(0)
  4192  0078  00A3               	movwf	((?_read_log))+1
  4193  0079  120A  158A  267B   	fcall	_read_log
              120A  118A         
  4194  007E  00F2               	movwf	(?_strcpy)
  4195  007F  3000               	movlw	(0x0/2)
  4196  0080  00F3               	movwf	(?_strcpy+1)
  4197  0081  30AA               	movlw	(_logic_d1)&0ffh
  4198  0082  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  4199                           	line	229
  4200                           	
  4201  0087                     l3910:	
  4202                           ;prev13.c: 229: strcpy(logic_d2,read_log(1));
  4203  0087  3001               	movlw	low(01h)
  4204  0088  1283               	bcf	status, 5	;RP0=0, select bank0
  4205  0089  1303               	bcf	status, 6	;RP1=0, select bank0
  4206  008A  00A2               	movwf	(?_read_log)
  4207  008B  3000               	movlw	high(01h)
  4208  008C  00A3               	movwf	((?_read_log))+1
  4209  008D  120A  158A  267B   	fcall	_read_log
              120A  118A         
  4210  0092  00F2               	movwf	(?_strcpy)
  4211  0093  3000               	movlw	(0x0/2)
  4212  0094  00F3               	movwf	(?_strcpy+1)
  4213  0095  30AF               	movlw	(_logic_d2)&0ffh
  4214  0096  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  4215                           	line	230
  4216                           	
  4217  009B                     l3912:	
  4218                           ;prev13.c: 230: strcpy(logic_d3,read_log(2));
  4219  009B  3002               	movlw	low(02h)
  4220  009C  1283               	bcf	status, 5	;RP0=0, select bank0
  4221  009D  1303               	bcf	status, 6	;RP1=0, select bank0
  4222  009E  00A2               	movwf	(?_read_log)
  4223  009F  3000               	movlw	high(02h)
  4224  00A0  00A3               	movwf	((?_read_log))+1
  4225  00A1  120A  158A  267B   	fcall	_read_log
              120A  118A         
  4226  00A6  00F2               	movwf	(?_strcpy)
  4227  00A7  3000               	movlw	(0x0/2)
  4228  00A8  00F3               	movwf	(?_strcpy+1)
  4229  00A9  30B4               	movlw	(_logic_d3)&0ffh
  4230  00AA  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  4231                           	line	231
  4232                           	
  4233  00AF                     l3914:	
  4234                           ;prev13.c: 231: strcpy(logic_d4,read_log(3));
  4235  00AF  3003               	movlw	low(03h)
  4236  00B0  1283               	bcf	status, 5	;RP0=0, select bank0
  4237  00B1  1303               	bcf	status, 6	;RP1=0, select bank0
  4238  00B2  00A2               	movwf	(?_read_log)
  4239  00B3  3000               	movlw	high(03h)
  4240  00B4  00A3               	movwf	((?_read_log))+1
  4241  00B5  120A  158A  267B   	fcall	_read_log
              120A  118A         
  4242  00BA  00F2               	movwf	(?_strcpy)
  4243  00BB  3000               	movlw	(0x0/2)
  4244  00BC  00F3               	movwf	(?_strcpy+1)
  4245  00BD  30B9               	movlw	(_logic_d4)&0ffh
  4246  00BE  120A  158A  23BE   	fcall	_strcpy
              120A  118A         
  4247                           	line	233
  4248                           	
  4249  00C3                     l1123:	
  4250  00C3  0008               	return
  4251                           	opt stack 0
  4252                           GLOBAL	__end_of_getlogic
  4253  00C4                     	__end_of_getlogic:
  4254 ;; =============== function _getlogic ends ============
  4255                           
  4256                           	signat	_getlogic,88
  4257                           	global	_write
  4258                           psect	text751,local,class=CODE,delta=2
  4259                           global __ptext751
  4260  0D5C                     __ptext751:
  4261                           
  4262 ;; *************** function _write *****************
  4263 ;; Defined at:
  4264 ;;		line 684 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  str             2    0[BANK0 ] PTR unsigned char 
  4267 ;;		 -> STR_19(4), STR_16(4), STR_13(4), getlogicseq@str(32), 
  4268 ;;		 -> STR_10(27), STR_9(17), lo(5), STR_7(11), 
  4269 ;;		 -> STR_6(12), STR_5(13), logic_d3(5), logic_d2(5), 
  4270 ;;		 -> logic_d1(5), STR_4(8), STR_3(15), STR_2(17), 
  4271 ;;		 -> STR_1(15), 
  4272 ;;  line            2    2[BANK0 ] int 
  4273 ;;  erase           2    4[BANK0 ] int 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  i               2    9[COMMON] int 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;		None               void
  4278 ;; Registers used:
  4279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4285 ;;      Params:         0       6       0       0       0
  4286 ;;      Locals:         2       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0
  4288 ;;      Totals:         2       6       0       0       0
  4289 ;;Total ram usage:        8 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    5
  4292 ;; This function calls:
  4293 ;;		_clearlcd
  4294 ;;		_cmd
  4295 ;;		_dat
  4296 ;; This function is called by:
  4297 ;;		_start
  4298 ;;		_getlogic
  4299 ;;		_init_fun
  4300 ;;		_startswitch
  4301 ;;		_getlogicseq
  4302 ;;		_scroll
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           psect	text751
  4306                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4307                           	line	684
  4308                           	global	__size_of_write
  4309  0058                     	__size_of_write	equ	__end_of_write-_write
  4310                           	
  4311  0D5C                     _write:	
  4312 ;; using string table level
  4313                           	opt	stack 1
  4314                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4315                           	line	685
  4316                           	
  4317  0D5C                     l3876:	
  4318                           ;prev13.c: 685: if(erase==1)
  4319  0D5C  3001               	movlw	01h
  4320  0D5D  1283               	bcf	status, 5	;RP0=0, select bank0
  4321  0D5E  1303               	bcf	status, 6	;RP1=0, select bank0
  4322  0D5F  0624               	xorwf	(write@erase),w
  4323  0D60  0425               	iorwf	(write@erase+1),w
  4324  0D61  1D03               	skipz
  4325  0D62  2D64               	goto	u4491
  4326  0D63  2D65               	goto	u4490
  4327  0D64                     u4491:
  4328  0D64  2D6B               	goto	l3880
  4329  0D65                     u4490:
  4330                           	line	686
  4331                           	
  4332  0D65                     l3878:	
  4333                           ;prev13.c: 686: clearlcd();
  4334  0D65  120A  158A  2269   	fcall	_clearlcd
              120A  158A         
  4335  0D6A  2D6B               	goto	l3880
  4336                           	
  4337  0D6B                     l1274:	
  4338                           	line	688
  4339                           	
  4340  0D6B                     l3880:	
  4341                           ;prev13.c: 688: if(line==2)
  4342  0D6B  3002               	movlw	02h
  4343  0D6C  1283               	bcf	status, 5	;RP0=0, select bank0
  4344  0D6D  1303               	bcf	status, 6	;RP1=0, select bank0
  4345  0D6E  0622               	xorwf	(write@line),w
  4346  0D6F  0423               	iorwf	(write@line+1),w
  4347  0D70  1D03               	skipz
  4348  0D71  2D73               	goto	u4501
  4349  0D72  2D74               	goto	u4500
  4350  0D73                     u4501:
  4351  0D73  2D7B               	goto	l3884
  4352  0D74                     u4500:
  4353                           	line	689
  4354                           	
  4355  0D74                     l3882:	
  4356                           ;prev13.c: 689: cmd(0xC0);
  4357  0D74  30C0               	movlw	(0C0h)
  4358  0D75  120A  158A  2292   	fcall	_cmd
              120A  158A         
  4359  0D7A  2D82               	goto	l3886
  4360                           	line	690
  4361                           	
  4362  0D7B                     l1275:	
  4363                           	line	691
  4364                           	
  4365  0D7B                     l3884:	
  4366                           ;prev13.c: 690: else
  4367                           ;prev13.c: 691: cmd(0x2);
  4368  0D7B  3002               	movlw	(02h)
  4369  0D7C  120A  158A  2292   	fcall	_cmd
              120A  158A         
  4370  0D81  2D82               	goto	l3886
  4371                           	
  4372  0D82                     l1276:	
  4373                           	line	693
  4374                           	
  4375  0D82                     l3886:	
  4376                           ;prev13.c: 693: int i=0;
  4377  0D82  01F9               	clrf	(write@i)
  4378  0D83  01FA               	clrf	(write@i+1)
  4379                           	line	694
  4380                           ;prev13.c: 694: while(str[i]!='\0')
  4381  0D84  2D9F               	goto	l3892
  4382                           	
  4383  0D85                     l1278:	
  4384                           	line	696
  4385                           	
  4386  0D85                     l3888:	
  4387                           ;prev13.c: 695: {
  4388                           ;prev13.c: 696: dat(str[i]);
  4389  0D85  0879               	movf	(write@i),w
  4390  0D86  1283               	bcf	status, 5	;RP0=0, select bank0
  4391  0D87  1303               	bcf	status, 6	;RP1=0, select bank0
  4392  0D88  0720               	addwf	(write@str),w
  4393  0D89  0084               	movwf	fsr0
  4394  0D8A  0821               	movf	(write@str+1),w
  4395  0D8B  1803               	skipnc
  4396  0D8C  0A21               	incf	(write@str+1),w
  4397  0D8D  00FF               	movwf	btemp+1
  4398  0D8E  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4399  0D93  120A  158A  229F   	fcall	_dat
              120A  158A         
  4400                           	line	697
  4401                           	
  4402  0D98                     l3890:	
  4403                           ;prev13.c: 697: i++;
  4404  0D98  3001               	movlw	low(01h)
  4405  0D99  07F9               	addwf	(write@i),f
  4406  0D9A  1803               	skipnc
  4407  0D9B  0AFA               	incf	(write@i+1),f
  4408  0D9C  3000               	movlw	high(01h)
  4409  0D9D  07FA               	addwf	(write@i+1),f
  4410  0D9E  2D9F               	goto	l3892
  4411                           	line	698
  4412                           	
  4413  0D9F                     l1277:	
  4414                           	line	694
  4415                           	
  4416  0D9F                     l3892:	
  4417  0D9F  0879               	movf	(write@i),w
  4418  0DA0  1283               	bcf	status, 5	;RP0=0, select bank0
  4419  0DA1  1303               	bcf	status, 6	;RP1=0, select bank0
  4420  0DA2  0720               	addwf	(write@str),w
  4421  0DA3  0084               	movwf	fsr0
  4422  0DA4  0821               	movf	(write@str+1),w
  4423  0DA5  1803               	skipnc
  4424  0DA6  0A21               	incf	(write@str+1),w
  4425  0DA7  00FF               	movwf	btemp+1
  4426  0DA8  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4427  0DAD  3800               	iorlw	0
  4428  0DAE  1D03               	skipz
  4429  0DAF  2DB1               	goto	u4511
  4430  0DB0  2DB2               	goto	u4510
  4431  0DB1                     u4511:
  4432  0DB1  2D85               	goto	l3888
  4433  0DB2                     u4510:
  4434  0DB2  2DB3               	goto	l1280
  4435                           	
  4436  0DB3                     l1279:	
  4437                           	line	701
  4438                           	
  4439  0DB3                     l1280:	
  4440  0DB3  0008               	return
  4441                           	opt stack 0
  4442                           GLOBAL	__end_of_write
  4443  0DB4                     	__end_of_write:
  4444 ;; =============== function _write ends ============
  4445                           
  4446                           	signat	_write,12408
  4447                           	global	_clearlcd
  4448                           psect	text752,local,class=CODE,delta=2
  4449                           global __ptext752
  4450  0A69                     __ptext752:
  4451                           
  4452 ;; *************** function _clearlcd *****************
  4453 ;; Defined at:
  4454 ;;		line 614 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;		None               void
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4468 ;;      Params:         0       0       0       0       0
  4469 ;;      Locals:         0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0
  4471 ;;      Totals:         0       0       0       0       0
  4472 ;;Total ram usage:        0 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    4
  4475 ;; This function calls:
  4476 ;;		_cmd
  4477 ;; This function is called by:
  4478 ;;		_write
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           psect	text752
  4482                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4483                           	line	614
  4484                           	global	__size_of_clearlcd
  4485  0007                     	__size_of_clearlcd	equ	__end_of_clearlcd-_clearlcd
  4486                           	
  4487  0A69                     _clearlcd:	
  4488                           	opt	stack 0
  4489                           ; Regs used in _clearlcd: [wreg+status,2+status,0+pclath+cstack]
  4490                           	line	615
  4491                           	
  4492  0A69                     l3874:	
  4493                           ;prev13.c: 615: cmd(0x01);
  4494  0A69  3001               	movlw	(01h)
  4495  0A6A  120A  158A  2292   	fcall	_cmd
              120A  158A         
  4496                           	line	616
  4497                           	
  4498  0A6F                     l1250:	
  4499  0A6F  0008               	return
  4500                           	opt stack 0
  4501                           GLOBAL	__end_of_clearlcd
  4502  0A70                     	__end_of_clearlcd:
  4503 ;; =============== function _clearlcd ends ============
  4504                           
  4505                           	signat	_clearlcd,88
  4506                           	global	_initlcd
  4507                           psect	text753,local,class=CODE,delta=2
  4508                           global __ptext753
  4509  0B10                     __ptext753:
  4510                           
  4511 ;; *************** function _initlcd *****************
  4512 ;; Defined at:
  4513 ;;		line 596 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;		None
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;		None               void
  4520 ;; Registers used:
  4521 ;;		wreg, status,2, status,0, pclath, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4527 ;;      Params:         0       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0
  4530 ;;      Totals:         0       0       0       0       0
  4531 ;;Total ram usage:        0 bytes
  4532 ;; Hardware stack levels used:    1
  4533 ;; Hardware stack levels required when called:    4
  4534 ;; This function calls:
  4535 ;;		_cmd
  4536 ;; This function is called by:
  4537 ;;		_main
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           psect	text753
  4541                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4542                           	line	596
  4543                           	global	__size_of_initlcd
  4544  001E                     	__size_of_initlcd	equ	__end_of_initlcd-_initlcd
  4545                           	
  4546  0B10                     _initlcd:	
  4547                           	opt	stack 3
  4548                           ; Regs used in _initlcd: [wreg+status,2+status,0+pclath+cstack]
  4549                           	line	598
  4550                           	
  4551  0B10                     l3862:	
  4552                           ;prev13.c: 598: TRISC=0b0000000;
  4553  0B10  1683               	bsf	status, 5	;RP0=1, select bank1
  4554  0B11  1303               	bcf	status, 6	;RP1=0, select bank1
  4555  0B12  0187               	clrf	(135)^080h	;volatile
  4556                           	line	600
  4557                           	
  4558  0B13                     l3864:	
  4559                           ;prev13.c: 600: TRISD=0b11000000;
  4560  0B13  30C0               	movlw	(0C0h)
  4561  0B14  0088               	movwf	(136)^080h	;volatile
  4562                           	line	602
  4563                           	
  4564  0B15                     l3866:	
  4565                           ;prev13.c: 602: cmd(0x38);
  4566  0B15  3038               	movlw	(038h)
  4567  0B16  120A  158A  2292   	fcall	_cmd
              120A  158A         
  4568                           	line	604
  4569                           	
  4570  0B1B                     l3868:	
  4571                           ;prev13.c: 604: cmd(0x0C);
  4572  0B1B  300C               	movlw	(0Ch)
  4573  0B1C  120A  158A  2292   	fcall	_cmd
              120A  158A         
  4574                           	line	606
  4575                           	
  4576  0B21                     l3870:	
  4577                           ;prev13.c: 606: cmd(0x01);
  4578  0B21  3001               	movlw	(01h)
  4579  0B22  120A  158A  2292   	fcall	_cmd
              120A  158A         
  4580                           	line	608
  4581                           	
  4582  0B27                     l3872:	
  4583                           ;prev13.c: 608: cmd(0x80);
  4584  0B27  3080               	movlw	(080h)
  4585  0B28  120A  158A  2292   	fcall	_cmd
              120A  158A         
  4586                           	line	612
  4587                           	
  4588  0B2D                     l1247:	
  4589  0B2D  0008               	return
  4590                           	opt stack 0
  4591                           GLOBAL	__end_of_initlcd
  4592  0B2E                     	__end_of_initlcd:
  4593 ;; =============== function _initlcd ends ============
  4594                           
  4595                           	signat	_initlcd,88
  4596                           	global	_dat
  4597                           psect	text754,local,class=CODE,delta=2
  4598                           global __ptext754
  4599  0A9F                     __ptext754:
  4600                           
  4601 ;; *************** function _dat *****************
  4602 ;; Defined at:
  4603 ;;		line 651 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  Command         1    wreg     unsigned char 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  Command         1    8[COMMON] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;		None               void
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0, pclath, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4617 ;;      Params:         0       0       0       0       0
  4618 ;;      Locals:         1       0       0       0       0
  4619 ;;      Temps:          0       0       0       0       0
  4620 ;;      Totals:         1       0       0       0       0
  4621 ;;Total ram usage:        1 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    3
  4624 ;; This function calls:
  4625 ;;		_setLCD
  4626 ;;		__dat
  4627 ;; This function is called by:
  4628 ;;		_write
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           psect	text754
  4632                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4633                           	line	651
  4634                           	global	__size_of_dat
  4635  000D                     	__size_of_dat	equ	__end_of_dat-_dat
  4636                           	
  4637  0A9F                     _dat:	
  4638                           	opt	stack 1
  4639                           ; Regs used in _dat: [wreg+status,2+status,0+pclath+cstack]
  4640                           ;dat@Command stored from wreg
  4641  0A9F  00F8               	movwf	(dat@Command)
  4642                           	line	652
  4643                           	
  4644  0AA0                     l3860:	
  4645                           ;prev13.c: 652: setLCD(Command);
  4646  0AA0  0878               	movf	(dat@Command),w
  4647  0AA1  120A  158A  275A   	fcall	_setLCD
              120A  158A         
  4648                           	line	653
  4649                           ;prev13.c: 653: _dat();
  4650  0AA6  120A  158A  2280   	fcall	__dat
              120A  158A         
  4651                           	line	659
  4652                           	
  4653  0AAB                     l1265:	
  4654  0AAB  0008               	return
  4655                           	opt stack 0
  4656                           GLOBAL	__end_of_dat
  4657  0AAC                     	__end_of_dat:
  4658 ;; =============== function _dat ends ============
  4659                           
  4660                           	signat	_dat,4216
  4661                           	global	_cmd
  4662                           psect	text755,local,class=CODE,delta=2
  4663                           global __ptext755
  4664  0A92                     __ptext755:
  4665                           
  4666 ;; *************** function _cmd *****************
  4667 ;; Defined at:
  4668 ;;		line 643 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  Command         1    wreg     unsigned char 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  Command         1    8[COMMON] unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;		None               void
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0, pclath, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4682 ;;      Params:         0       0       0       0       0
  4683 ;;      Locals:         1       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0
  4685 ;;      Totals:         1       0       0       0       0
  4686 ;;Total ram usage:        1 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    3
  4689 ;; This function calls:
  4690 ;;		_setLCD
  4691 ;;		__cmd
  4692 ;; This function is called by:
  4693 ;;		_initlcd
  4694 ;;		_clearlcd
  4695 ;;		_write
  4696 ;;		_scroll
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           psect	text755
  4700                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4701                           	line	643
  4702                           	global	__size_of_cmd
  4703  000D                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  4704                           	
  4705  0A92                     _cmd:	
  4706                           	opt	stack 1
  4707                           ; Regs used in _cmd: [wreg+status,2+status,0+pclath+cstack]
  4708                           ;cmd@Command stored from wreg
  4709                           	line	645
  4710  0A92  00F8               	movwf	(cmd@Command)
  4711                           	
  4712  0A93                     l3858:	
  4713                           ;prev13.c: 645: setLCD(Command);
  4714  0A93  0878               	movf	(cmd@Command),w
  4715  0A94  120A  158A  275A   	fcall	_setLCD
              120A  158A         
  4716                           	line	646
  4717                           ;prev13.c: 646: _cmd();
  4718  0A99  120A  158A  2289   	fcall	__cmd
              120A  158A         
  4719                           	line	648
  4720                           	
  4721  0A9E                     l1262:	
  4722  0A9E  0008               	return
  4723                           	opt stack 0
  4724                           GLOBAL	__end_of_cmd
  4725  0A9F                     	__end_of_cmd:
  4726 ;; =============== function _cmd ends ============
  4727                           
  4728                           	signat	_cmd,4216
  4729                           	global	_setlogic
  4730                           psect	text756,local,class=CODE,delta=2
  4731                           global __ptext756
  4732  0C67                     __ptext756:
  4733                           
  4734 ;; *************** function _setlogic *****************
  4735 ;; Defined at:
  4736 ;;		line 210 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;		None               void
  4743 ;; Registers used:
  4744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4750 ;;      Params:         0       0       0       0       0
  4751 ;;      Locals:         0       0       0       0       0
  4752 ;;      Temps:          1       0       0       0       0
  4753 ;;      Totals:         1       0       0       0       0
  4754 ;;Total ram usage:        1 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    3
  4757 ;; This function calls:
  4758 ;;		_write_log
  4759 ;; This function is called by:
  4760 ;;		_getlogicseq
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           psect	text756
  4764                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4765                           	line	210
  4766                           	global	__size_of_setlogic
  4767  0035                     	__size_of_setlogic	equ	__end_of_setlogic-_setlogic
  4768                           	
  4769  0C67                     _setlogic:	
  4770                           	opt	stack 2
  4771                           ; Regs used in _setlogic: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4772                           	line	211
  4773                           	
  4774  0C67                     l3856:	
  4775                           ;prev13.c: 211: write_log(0,logic_d1);
  4776  0C67  3000               	movlw	low(0)
  4777  0C68  00F5               	movwf	(?_write_log)
  4778  0C69  3000               	movlw	high(0)
  4779  0C6A  00F6               	movwf	((?_write_log))+1
  4780  0C6B  30AA               	movlw	(_logic_d1)&0ffh
  4781  0C6C  00FC               	movwf	(??_setlogic+0)+0
  4782  0C6D  087C               	movf	(??_setlogic+0)+0,w
  4783  0C6E  00F7               	movwf	0+(?_write_log)+02h
  4784  0C6F  120A  158A  25B4   	fcall	_write_log
              120A  158A         
  4785                           	line	212
  4786                           ;prev13.c: 212: write_log(1,logic_d2);
  4787  0C74  3001               	movlw	low(01h)
  4788  0C75  00F5               	movwf	(?_write_log)
  4789  0C76  3000               	movlw	high(01h)
  4790  0C77  00F6               	movwf	((?_write_log))+1
  4791  0C78  30AF               	movlw	(_logic_d2)&0ffh
  4792  0C79  00FC               	movwf	(??_setlogic+0)+0
  4793  0C7A  087C               	movf	(??_setlogic+0)+0,w
  4794  0C7B  00F7               	movwf	0+(?_write_log)+02h
  4795  0C7C  120A  158A  25B4   	fcall	_write_log
              120A  158A         
  4796                           	line	213
  4797                           ;prev13.c: 213: write_log(2,logic_d3);
  4798  0C81  3002               	movlw	low(02h)
  4799  0C82  00F5               	movwf	(?_write_log)
  4800  0C83  3000               	movlw	high(02h)
  4801  0C84  00F6               	movwf	((?_write_log))+1
  4802  0C85  30B4               	movlw	(_logic_d3)&0ffh
  4803  0C86  00FC               	movwf	(??_setlogic+0)+0
  4804  0C87  087C               	movf	(??_setlogic+0)+0,w
  4805  0C88  00F7               	movwf	0+(?_write_log)+02h
  4806  0C89  120A  158A  25B4   	fcall	_write_log
              120A  158A         
  4807                           	line	214
  4808                           ;prev13.c: 214: write_log(3,logic_d4);
  4809  0C8E  3003               	movlw	low(03h)
  4810  0C8F  00F5               	movwf	(?_write_log)
  4811  0C90  3000               	movlw	high(03h)
  4812  0C91  00F6               	movwf	((?_write_log))+1
  4813  0C92  30B9               	movlw	(_logic_d4)&0ffh
  4814  0C93  00FC               	movwf	(??_setlogic+0)+0
  4815  0C94  087C               	movf	(??_setlogic+0)+0,w
  4816  0C95  00F7               	movwf	0+(?_write_log)+02h
  4817  0C96  120A  158A  25B4   	fcall	_write_log
              120A  158A         
  4818                           	line	215
  4819                           	
  4820  0C9B                     l1119:	
  4821  0C9B  0008               	return
  4822                           	opt stack 0
  4823                           GLOBAL	__end_of_setlogic
  4824  0C9C                     	__end_of_setlogic:
  4825 ;; =============== function _setlogic ends ============
  4826                           
  4827                           	signat	_setlogic,88
  4828                           	global	__cmd
  4829                           psect	text757,local,class=CODE,delta=2
  4830                           global __ptext757
  4831  0A89                     __ptext757:
  4832                           
  4833 ;; *************** function __cmd *****************
  4834 ;; Defined at:
  4835 ;;		line 635 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;		None               void
  4842 ;; Registers used:
  4843 ;;		wreg, status,2, status,0, pclath, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4849 ;;      Params:         0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0
  4852 ;;      Totals:         0       0       0       0       0
  4853 ;;Total ram usage:        0 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    2
  4856 ;; This function calls:
  4857 ;;		_latch
  4858 ;; This function is called by:
  4859 ;;		_cmd
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           psect	text757
  4863                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4864                           	line	635
  4865                           	global	__size_of__cmd
  4866  0009                     	__size_of__cmd	equ	__end_of__cmd-__cmd
  4867                           	
  4868  0A89                     __cmd:	
  4869                           	opt	stack 1
  4870                           ; Regs used in __cmd: [wreg+status,2+status,0+pclath+cstack]
  4871                           	line	636
  4872                           	
  4873  0A89                     l3852:	
  4874                           ;prev13.c: 636: RD5=0;
  4875  0A89  1283               	bcf	status, 5	;RP0=0, select bank0
  4876  0A8A  1303               	bcf	status, 6	;RP1=0, select bank0
  4877  0A8B  1288               	bcf	(69/8),(69)&7
  4878                           	line	637
  4879                           	
  4880  0A8C                     l3854:	
  4881                           ;prev13.c: 637: latch();
  4882  0A8C  120A  158A  22F7   	fcall	_latch
              120A  158A         
  4883                           	line	638
  4884                           	
  4885  0A91                     l1259:	
  4886  0A91  0008               	return
  4887                           	opt stack 0
  4888                           GLOBAL	__end_of__cmd
  4889  0A92                     	__end_of__cmd:
  4890 ;; =============== function __cmd ends ============
  4891                           
  4892                           	signat	__cmd,88
  4893                           	global	__dat
  4894                           psect	text758,local,class=CODE,delta=2
  4895                           global __ptext758
  4896  0A80                     __ptext758:
  4897                           
  4898 ;; *************** function __dat *****************
  4899 ;; Defined at:
  4900 ;;		line 629 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;		None               void
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, pclath, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0
  4917 ;;      Totals:         0       0       0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    2
  4921 ;; This function calls:
  4922 ;;		_latch
  4923 ;; This function is called by:
  4924 ;;		_dat
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           psect	text758
  4928                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4929                           	line	629
  4930                           	global	__size_of__dat
  4931  0009                     	__size_of__dat	equ	__end_of__dat-__dat
  4932                           	
  4933  0A80                     __dat:	
  4934                           	opt	stack 1
  4935                           ; Regs used in __dat: [wreg+status,2+status,0+pclath+cstack]
  4936                           	line	630
  4937                           	
  4938  0A80                     l3848:	
  4939                           ;prev13.c: 630: RD5=1;
  4940  0A80  1283               	bcf	status, 5	;RP0=0, select bank0
  4941  0A81  1303               	bcf	status, 6	;RP1=0, select bank0
  4942  0A82  1688               	bsf	(69/8),(69)&7
  4943                           	line	631
  4944                           	
  4945  0A83                     l3850:	
  4946                           ;prev13.c: 631: latch();
  4947  0A83  120A  158A  22F7   	fcall	_latch
              120A  158A         
  4948                           	line	632
  4949                           	
  4950  0A88                     l1256:	
  4951  0A88  0008               	return
  4952                           	opt stack 0
  4953                           GLOBAL	__end_of__dat
  4954  0A89                     	__end_of__dat:
  4955 ;; =============== function __dat ends ============
  4956                           
  4957                           	signat	__dat,88
  4958                           	global	_read_log
  4959                           psect	text759,local,class=CODE,delta=2
  4960                           global __ptext759
  4961  0E7B                     __ptext759:
  4962                           
  4963 ;; *************** function _read_log *****************
  4964 ;; Defined at:
  4965 ;;		line 854 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  devno           2    2[BANK0 ] int 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  logic           5    7[BANK0 ] unsigned char [5]
  4970 ;;  ads             1   12[BANK0 ] unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      PTR unsigned char 
  4973 ;; Registers used:
  4974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4980 ;;      Params:         0       2       0       0       0
  4981 ;;      Locals:         0       6       0       0       0
  4982 ;;      Temps:          0       3       0       0       0
  4983 ;;      Totals:         0      11       0       0       0
  4984 ;;Total ram usage:       11 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    2
  4987 ;; This function calls:
  4988 ;;		_read_eep
  4989 ;; This function is called by:
  4990 ;;		_getlogic
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           psect	text759
  4994                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  4995                           	line	854
  4996                           	global	__size_of_read_log
  4997  006B                     	__size_of_read_log	equ	__end_of_read_log-_read_log
  4998                           	
  4999  0E7B                     _read_log:	
  5000                           	opt	stack 2
  5001                           ; Regs used in _read_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5002                           	line	855
  5003                           	
  5004  0E7B                     l3832:	
  5005                           ;prev13.c: 855: char logic[]="0000";
  5006  0E7B  3027               	movlw	(read_log@logic)&0ffh
  5007  0E7C  0084               	movwf	fsr0
  5008  0E7D  1683               	bsf	status, 5	;RP0=1, select bank1
  5009  0E7E  1303               	bcf	status, 6	;RP1=0, select bank1
  5010  0E7F  0820               	movf	(read_log@F1918)^080h,w
  5011  0E80  1383               	bcf	status, 7	;select IRP bank0
  5012  0E81  0080               	movwf	indf
  5013  0E82  0A84               	incf	fsr0,f
  5014  0E83  0821               	movf	(read_log@F1918)^080h+1,w
  5015  0E84  0080               	movwf	indf
  5016  0E85  0A84               	incf	fsr0,f
  5017  0E86  0822               	movf	(read_log@F1918)^080h+2,w
  5018  0E87  0080               	movwf	indf
  5019  0E88  0A84               	incf	fsr0,f
  5020  0E89  0823               	movf	(read_log@F1918)^080h+3,w
  5021  0E8A  0080               	movwf	indf
  5022  0E8B  0A84               	incf	fsr0,f
  5023  0E8C  0824               	movf	(read_log@F1918)^080h+4,w
  5024  0E8D  0080               	movwf	indf
  5025                           	line	857
  5026                           	
  5027  0E8E                     l3834:	
  5028                           ;prev13.c: 857: char ads=adr[devno];
  5029  0E8E  1283               	bcf	status, 5	;RP0=0, select bank0
  5030  0E8F  1303               	bcf	status, 6	;RP1=0, select bank0
  5031  0E90  0822               	movf	(read_log@devno),w
  5032  0E91  3E12               	addlw	low(_adr|8000h)
  5033  0E92  0084               	movwf	fsr0
  5034  0E93  3088               	movlw	high(_adr|8000h)
  5035  0E94  1803               	skipnc
  5036  0E95  3E01               	addlw	1
  5037  0E96  00FF               	movwf	btemp+1
  5038  0E97  120A  158A  2000   	fcall	stringtab
              120A  158A         
  5039  0E9C  00A4               	movwf	(??_read_log+0)+0
  5040  0E9D  0824               	movf	(??_read_log+0)+0,w
  5041  0E9E  00AC               	movwf	(read_log@ads)
  5042                           	line	859
  5043                           	
  5044  0E9F                     l3836:	
  5045                           ;prev13.c: 859: logic[0]=read_eep(ads);
  5046  0E9F  082C               	movf	(read_log@ads),w
  5047  0EA0  00A4               	movwf	(??_read_log+0)+0
  5048  0EA1  01A5               	clrf	(??_read_log+0)+0+1
  5049  0EA2  0824               	movf	0+(??_read_log+0)+0,w
  5050  0EA3  00F9               	movwf	(?_read_eep)
  5051  0EA4  0825               	movf	1+(??_read_log+0)+0,w
  5052  0EA5  00FA               	movwf	(?_read_eep+1)
  5053  0EA6  120A  158A  243A   	fcall	_read_eep
              120A  158A         
  5054  0EAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5055  0EAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5056  0EAD  00A6               	movwf	(??_read_log+2)+0
  5057  0EAE  0826               	movf	(??_read_log+2)+0,w
  5058  0EAF  00A7               	movwf	(read_log@logic)
  5059                           	line	860
  5060                           	
  5061  0EB0                     l3838:	
  5062                           ;prev13.c: 860: logic[1]=read_eep(ads+1);
  5063  0EB0  082C               	movf	(read_log@ads),w
  5064  0EB1  3E01               	addlw	low(01h)
  5065  0EB2  00F9               	movwf	(?_read_eep)
  5066  0EB3  3000               	movlw	high(01h)
  5067  0EB4  1803               	skipnc
  5068  0EB5  3001               	movlw	(high(01h)+1)&0ffh
  5069  0EB6  00FA               	movwf	((?_read_eep))+1
  5070  0EB7  120A  158A  243A   	fcall	_read_eep
              120A  158A         
  5071  0EBC  1283               	bcf	status, 5	;RP0=0, select bank0
  5072  0EBD  1303               	bcf	status, 6	;RP1=0, select bank0
  5073  0EBE  00A4               	movwf	(??_read_log+0)+0
  5074  0EBF  0824               	movf	(??_read_log+0)+0,w
  5075  0EC0  00A8               	movwf	0+(read_log@logic)+01h
  5076                           	line	861
  5077                           	
  5078  0EC1                     l3840:	
  5079                           ;prev13.c: 861: logic[2]=read_eep(ads+2);
  5080  0EC1  082C               	movf	(read_log@ads),w
  5081  0EC2  3E02               	addlw	low(02h)
  5082  0EC3  00F9               	movwf	(?_read_eep)
  5083  0EC4  3000               	movlw	high(02h)
  5084  0EC5  1803               	skipnc
  5085  0EC6  3001               	movlw	(high(02h)+1)&0ffh
  5086  0EC7  00FA               	movwf	((?_read_eep))+1
  5087  0EC8  120A  158A  243A   	fcall	_read_eep
              120A  158A         
  5088  0ECD  1283               	bcf	status, 5	;RP0=0, select bank0
  5089  0ECE  1303               	bcf	status, 6	;RP1=0, select bank0
  5090  0ECF  00A4               	movwf	(??_read_log+0)+0
  5091  0ED0  0824               	movf	(??_read_log+0)+0,w
  5092  0ED1  00A9               	movwf	0+(read_log@logic)+02h
  5093                           	line	862
  5094                           	
  5095  0ED2                     l3842:	
  5096                           ;prev13.c: 862: logic[3]=read_eep(ads+3);
  5097  0ED2  082C               	movf	(read_log@ads),w
  5098  0ED3  3E03               	addlw	low(03h)
  5099  0ED4  00F9               	movwf	(?_read_eep)
  5100  0ED5  3000               	movlw	high(03h)
  5101  0ED6  1803               	skipnc
  5102  0ED7  3001               	movlw	(high(03h)+1)&0ffh
  5103  0ED8  00FA               	movwf	((?_read_eep))+1
  5104  0ED9  120A  158A  243A   	fcall	_read_eep
              120A  158A         
  5105  0EDE  1283               	bcf	status, 5	;RP0=0, select bank0
  5106  0EDF  1303               	bcf	status, 6	;RP1=0, select bank0
  5107  0EE0  00A4               	movwf	(??_read_log+0)+0
  5108  0EE1  0824               	movf	(??_read_log+0)+0,w
  5109  0EE2  00AA               	movwf	0+(read_log@logic)+03h
  5110                           	line	864
  5111                           	
  5112  0EE3                     l3844:	
  5113                           ;prev13.c: 864: return logic;
  5114  0EE3  3027               	movlw	(read_log@logic)&0ffh
  5115  0EE4  2EE5               	goto	l1347
  5116                           	
  5117  0EE5                     l3846:	
  5118                           	line	865
  5119                           	
  5120  0EE5                     l1347:	
  5121  0EE5  0008               	return
  5122                           	opt stack 0
  5123                           GLOBAL	__end_of_read_log
  5124  0EE6                     	__end_of_read_log:
  5125 ;; =============== function _read_log ends ============
  5126                           
  5127                           	signat	_read_log,4217
  5128                           	global	_write_log
  5129                           psect	text760,local,class=CODE,delta=2
  5130                           global __ptext760
  5131  0DB4                     __ptext760:
  5132                           
  5133 ;; *************** function _write_log *****************
  5134 ;; Defined at:
  5135 ;;		line 884 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  devno           2    5[COMMON] int 
  5138 ;;  logic           1    7[COMMON] PTR unsigned char 
  5139 ;;		 -> logic_d4(5), logic_d3(5), logic_d2(5), logic_d1(5), 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  ads             1   11[COMMON] unsigned char 
  5142 ;; Return value:  Size  Location     Type
  5143 ;;		None               void
  5144 ;; Registers used:
  5145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5151 ;;      Params:         3       0       0       0       0
  5152 ;;      Locals:         1       0       0       0       0
  5153 ;;      Temps:          3       0       0       0       0
  5154 ;;      Totals:         7       0       0       0       0
  5155 ;;Total ram usage:        7 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    2
  5158 ;; This function calls:
  5159 ;;		_write_eep
  5160 ;; This function is called by:
  5161 ;;		_setlogic
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           psect	text760
  5165                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5166                           	line	884
  5167                           	global	__size_of_write_log
  5168  0061                     	__size_of_write_log	equ	__end_of_write_log-_write_log
  5169                           	
  5170  0DB4                     _write_log:	
  5171                           	opt	stack 2
  5172                           ; Regs used in _write_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5173                           	line	887
  5174                           	
  5175  0DB4                     l3822:	
  5176                           ;prev13.c: 887: char ads=adr[devno];
  5177  0DB4  0875               	movf	(write_log@devno),w
  5178  0DB5  3E12               	addlw	low(_adr|8000h)
  5179  0DB6  0084               	movwf	fsr0
  5180  0DB7  3088               	movlw	high(_adr|8000h)
  5181  0DB8  1803               	skipnc
  5182  0DB9  3E01               	addlw	1
  5183  0DBA  1283               	bcf	status, 5	;RP0=0, select bank0
  5184  0DBB  1303               	bcf	status, 6	;RP1=0, select bank0
  5185  0DBC  00FF               	movwf	btemp+1
  5186  0DBD  120A  158A  2000   	fcall	stringtab
              120A  158A         
  5187  0DC2  00F8               	movwf	(??_write_log+0)+0
  5188  0DC3  0878               	movf	(??_write_log+0)+0,w
  5189  0DC4  00FB               	movwf	(write_log@ads)
  5190                           	line	889
  5191                           	
  5192  0DC5                     l3824:	
  5193                           ;prev13.c: 889: write_eep(ads,logic[0]);
  5194  0DC5  087B               	movf	(write_log@ads),w
  5195  0DC6  00F8               	movwf	(??_write_log+0)+0
  5196  0DC7  01F9               	clrf	(??_write_log+0)+0+1
  5197  0DC8  0878               	movf	0+(??_write_log+0)+0,w
  5198  0DC9  00F2               	movwf	(?_write_eep)
  5199  0DCA  0879               	movf	1+(??_write_log+0)+0,w
  5200  0DCB  00F3               	movwf	(?_write_eep+1)
  5201  0DCC  0877               	movf	(write_log@logic),w
  5202  0DCD  0084               	movwf	fsr0
  5203  0DCE  1383               	bcf	status, 7	;select IRP bank0
  5204  0DCF  0800               	movf	indf,w
  5205  0DD0  00FA               	movwf	(??_write_log+2)+0
  5206  0DD1  087A               	movf	(??_write_log+2)+0,w
  5207  0DD2  00F4               	movwf	0+(?_write_eep)+02h
  5208  0DD3  120A  158A  236F   	fcall	_write_eep
              120A  158A         
  5209                           	line	890
  5210                           	
  5211  0DD8                     l3826:	
  5212                           ;prev13.c: 890: write_eep(ads+1,logic[1]);
  5213  0DD8  087B               	movf	(write_log@ads),w
  5214  0DD9  3E01               	addlw	low(01h)
  5215  0DDA  00F2               	movwf	(?_write_eep)
  5216  0DDB  3000               	movlw	high(01h)
  5217  0DDC  1803               	skipnc
  5218  0DDD  3001               	movlw	(high(01h)+1)&0ffh
  5219  0DDE  00F3               	movwf	((?_write_eep))+1
  5220  0DDF  0877               	movf	(write_log@logic),w
  5221  0DE0  3E01               	addlw	01h
  5222  0DE1  0084               	movwf	fsr0
  5223  0DE2  1383               	bcf	status, 7	;select IRP bank0
  5224  0DE3  0800               	movf	indf,w
  5225  0DE4  00F8               	movwf	(??_write_log+0)+0
  5226  0DE5  0878               	movf	(??_write_log+0)+0,w
  5227  0DE6  00F4               	movwf	0+(?_write_eep)+02h
  5228  0DE7  120A  158A  236F   	fcall	_write_eep
              120A  158A         
  5229                           	line	891
  5230                           	
  5231  0DEC                     l3828:	
  5232                           ;prev13.c: 891: write_eep(ads+2,logic[2]);
  5233  0DEC  087B               	movf	(write_log@ads),w
  5234  0DED  3E02               	addlw	low(02h)
  5235  0DEE  00F2               	movwf	(?_write_eep)
  5236  0DEF  3000               	movlw	high(02h)
  5237  0DF0  1803               	skipnc
  5238  0DF1  3001               	movlw	(high(02h)+1)&0ffh
  5239  0DF2  00F3               	movwf	((?_write_eep))+1
  5240  0DF3  0877               	movf	(write_log@logic),w
  5241  0DF4  3E02               	addlw	02h
  5242  0DF5  0084               	movwf	fsr0
  5243  0DF6  1383               	bcf	status, 7	;select IRP bank0
  5244  0DF7  0800               	movf	indf,w
  5245  0DF8  00F8               	movwf	(??_write_log+0)+0
  5246  0DF9  0878               	movf	(??_write_log+0)+0,w
  5247  0DFA  00F4               	movwf	0+(?_write_eep)+02h
  5248  0DFB  120A  158A  236F   	fcall	_write_eep
              120A  158A         
  5249                           	line	892
  5250                           	
  5251  0E00                     l3830:	
  5252                           ;prev13.c: 892: write_eep(ads+3,logic[3]);
  5253  0E00  087B               	movf	(write_log@ads),w
  5254  0E01  3E03               	addlw	low(03h)
  5255  0E02  00F2               	movwf	(?_write_eep)
  5256  0E03  3000               	movlw	high(03h)
  5257  0E04  1803               	skipnc
  5258  0E05  3001               	movlw	(high(03h)+1)&0ffh
  5259  0E06  00F3               	movwf	((?_write_eep))+1
  5260  0E07  0877               	movf	(write_log@logic),w
  5261  0E08  3E03               	addlw	03h
  5262  0E09  0084               	movwf	fsr0
  5263  0E0A  1383               	bcf	status, 7	;select IRP bank0
  5264  0E0B  0800               	movf	indf,w
  5265  0E0C  00F8               	movwf	(??_write_log+0)+0
  5266  0E0D  0878               	movf	(??_write_log+0)+0,w
  5267  0E0E  00F4               	movwf	0+(?_write_eep)+02h
  5268  0E0F  120A  158A  236F   	fcall	_write_eep
              120A  158A         
  5269                           	line	898
  5270                           	
  5271  0E14                     l1356:	
  5272  0E14  0008               	return
  5273                           	opt stack 0
  5274                           GLOBAL	__end_of_write_log
  5275  0E15                     	__end_of_write_log:
  5276 ;; =============== function _write_log ends ============
  5277                           
  5278                           	signat	_write_log,8312
  5279                           	global	_scan
  5280                           psect	text761,local,class=CODE,delta=2
  5281                           global __ptext761
  5282  00C4                     __ptext761:
  5283                           
  5284 ;; *************** function _scan *****************
  5285 ;; Defined at:
  5286 ;;		line 766 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;		None
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  2    4[COMMON] int 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0, pclath, cstack
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5300 ;;      Params:         2       0       0       0       0
  5301 ;;      Locals:         0       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0
  5303 ;;      Totals:         2       0       0       0       0
  5304 ;;Total ram usage:        2 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    2
  5307 ;; This function calls:
  5308 ;;		_actrow
  5309 ;; This function is called by:
  5310 ;;		_start
  5311 ;;		_getlogicseq
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           psect	text761
  5315                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5316                           	line	766
  5317                           	global	__size_of_scan
  5318  00E6                     	__size_of_scan	equ	__end_of_scan-_scan
  5319                           	
  5320  00C4                     _scan:	
  5321                           	opt	stack 3
  5322                           ; Regs used in _scan: [wreg+status,2+status,0+pclath+cstack]
  5323                           	line	768
  5324                           	
  5325  00C4                     l3714:	
  5326                           ;prev13.c: 768: actrow(1) ;
  5327  00C4  3001               	movlw	low(01h)
  5328  00C5  00F2               	movwf	(?_actrow)
  5329  00C6  3000               	movlw	high(01h)
  5330  00C7  00F3               	movwf	((?_actrow))+1
  5331  00C8  120A  158A  24D5   	fcall	_actrow
              120A  118A         
  5332                           	line	769
  5333                           	
  5334  00CD                     l3716:	
  5335                           ;prev13.c: 769: if( RD6==1)
  5336  00CD  1283               	bcf	status, 5	;RP0=0, select bank0
  5337  00CE  1303               	bcf	status, 6	;RP1=0, select bank0
  5338  00CF  1F08               	btfss	(70/8),(70)&7
  5339  00D0  28D2               	goto	u4331
  5340  00D1  28D3               	goto	u4330
  5341  00D2                     u4331:
  5342  00D2  28D8               	goto	l1301
  5343  00D3                     u4330:
  5344                           	line	770
  5345                           	
  5346  00D3                     l3718:	
  5347                           ;prev13.c: 770: return 0;
  5348  00D3  01F4               	clrf	(?_scan)
  5349  00D4  01F5               	clrf	(?_scan+1)
  5350  00D5  29A9               	goto	l1302
  5351                           	
  5352  00D6                     l3720:	
  5353  00D6  29A9               	goto	l1302
  5354                           	
  5355  00D7                     l3722:	
  5356  00D7  28F9               	goto	l3740
  5357                           	line	771
  5358                           	
  5359  00D8                     l1301:	
  5360                           ;prev13.c: 771: else if(RD7==1)
  5361  00D8  1F88               	btfss	(71/8),(71)&7
  5362  00D9  28DB               	goto	u4341
  5363  00DA  28DC               	goto	u4340
  5364  00DB                     u4341:
  5365  00DB  28E3               	goto	l1304
  5366  00DC                     u4340:
  5367                           	line	772
  5368                           	
  5369  00DC                     l3724:	
  5370                           ;prev13.c: 772: return 1;
  5371  00DC  3001               	movlw	low(01h)
  5372  00DD  00F4               	movwf	(?_scan)
  5373  00DE  3000               	movlw	high(01h)
  5374  00DF  00F5               	movwf	((?_scan))+1
  5375  00E0  29A9               	goto	l1302
  5376                           	
  5377  00E1                     l3726:	
  5378  00E1  29A9               	goto	l1302
  5379                           	
  5380  00E2                     l3728:	
  5381  00E2  28F9               	goto	l3740
  5382                           	line	773
  5383                           	
  5384  00E3                     l1304:	
  5385                           ;prev13.c: 773: else if(RB6==1)
  5386  00E3  1F06               	btfss	(54/8),(54)&7
  5387  00E4  28E6               	goto	u4351
  5388  00E5  28E7               	goto	u4350
  5389  00E6                     u4351:
  5390  00E6  28EE               	goto	l1306
  5391  00E7                     u4350:
  5392                           	line	774
  5393                           	
  5394  00E7                     l3730:	
  5395                           ;prev13.c: 774: return 2;
  5396  00E7  3002               	movlw	low(02h)
  5397  00E8  00F4               	movwf	(?_scan)
  5398  00E9  3000               	movlw	high(02h)
  5399  00EA  00F5               	movwf	((?_scan))+1
  5400  00EB  29A9               	goto	l1302
  5401                           	
  5402  00EC                     l3732:	
  5403  00EC  29A9               	goto	l1302
  5404                           	
  5405  00ED                     l3734:	
  5406  00ED  28F9               	goto	l3740
  5407                           	line	775
  5408                           	
  5409  00EE                     l1306:	
  5410                           ;prev13.c: 775: else if(RB7==1)
  5411  00EE  1F86               	btfss	(55/8),(55)&7
  5412  00EF  28F1               	goto	u4361
  5413  00F0  28F2               	goto	u4360
  5414  00F1                     u4361:
  5415  00F1  28F9               	goto	l3740
  5416  00F2                     u4360:
  5417                           	line	776
  5418                           	
  5419  00F2                     l3736:	
  5420                           ;prev13.c: 776: return 0;
  5421  00F2  01F4               	clrf	(?_scan)
  5422  00F3  01F5               	clrf	(?_scan+1)
  5423  00F4  29A9               	goto	l1302
  5424                           	
  5425  00F5                     l3738:	
  5426  00F5  29A9               	goto	l1302
  5427                           	
  5428  00F6                     l1308:	
  5429  00F6  28F9               	goto	l3740
  5430                           	line	778
  5431                           	
  5432  00F7                     l1307:	
  5433  00F7  28F9               	goto	l3740
  5434                           	
  5435  00F8                     l1305:	
  5436  00F8  28F9               	goto	l3740
  5437                           	
  5438  00F9                     l1303:	
  5439                           	
  5440  00F9                     l3740:	
  5441                           ;prev13.c: 778: actrow(2) ;
  5442  00F9  3002               	movlw	low(02h)
  5443  00FA  00F2               	movwf	(?_actrow)
  5444  00FB  3000               	movlw	high(02h)
  5445  00FC  00F3               	movwf	((?_actrow))+1
  5446  00FD  120A  158A  24D5   	fcall	_actrow
              120A  118A         
  5447                           	line	780
  5448                           	
  5449  0102                     l3742:	
  5450                           ;prev13.c: 780: if( RD6==1)
  5451  0102  1283               	bcf	status, 5	;RP0=0, select bank0
  5452  0103  1303               	bcf	status, 6	;RP1=0, select bank0
  5453  0104  1F08               	btfss	(70/8),(70)&7
  5454  0105  2907               	goto	u4371
  5455  0106  2908               	goto	u4370
  5456  0107                     u4371:
  5457  0107  290F               	goto	l1309
  5458  0108                     u4370:
  5459                           	line	781
  5460                           	
  5461  0108                     l3744:	
  5462                           ;prev13.c: 781: return 4;
  5463  0108  3004               	movlw	low(04h)
  5464  0109  00F4               	movwf	(?_scan)
  5465  010A  3000               	movlw	high(04h)
  5466  010B  00F5               	movwf	((?_scan))+1
  5467  010C  29A9               	goto	l1302
  5468                           	
  5469  010D                     l3746:	
  5470  010D  29A9               	goto	l1302
  5471                           	
  5472  010E                     l3748:	
  5473  010E  2932               	goto	l3766
  5474                           	line	782
  5475                           	
  5476  010F                     l1309:	
  5477                           ;prev13.c: 782: else if(RD7==1)
  5478  010F  1F88               	btfss	(71/8),(71)&7
  5479  0110  2912               	goto	u4381
  5480  0111  2913               	goto	u4380
  5481  0112                     u4381:
  5482  0112  291A               	goto	l1311
  5483  0113                     u4380:
  5484                           	line	783
  5485                           	
  5486  0113                     l3750:	
  5487                           ;prev13.c: 783: return 5;
  5488  0113  3005               	movlw	low(05h)
  5489  0114  00F4               	movwf	(?_scan)
  5490  0115  3000               	movlw	high(05h)
  5491  0116  00F5               	movwf	((?_scan))+1
  5492  0117  29A9               	goto	l1302
  5493                           	
  5494  0118                     l3752:	
  5495  0118  29A9               	goto	l1302
  5496                           	
  5497  0119                     l3754:	
  5498  0119  2932               	goto	l3766
  5499                           	line	784
  5500                           	
  5501  011A                     l1311:	
  5502                           ;prev13.c: 784: else if(RB6==1)
  5503  011A  1F06               	btfss	(54/8),(54)&7
  5504  011B  291D               	goto	u4391
  5505  011C  291E               	goto	u4390
  5506  011D                     u4391:
  5507  011D  2925               	goto	l1313
  5508  011E                     u4390:
  5509                           	line	785
  5510                           	
  5511  011E                     l3756:	
  5512                           ;prev13.c: 785: return 6;
  5513  011E  3006               	movlw	low(06h)
  5514  011F  00F4               	movwf	(?_scan)
  5515  0120  3000               	movlw	high(06h)
  5516  0121  00F5               	movwf	((?_scan))+1
  5517  0122  29A9               	goto	l1302
  5518                           	
  5519  0123                     l3758:	
  5520  0123  29A9               	goto	l1302
  5521                           	
  5522  0124                     l3760:	
  5523  0124  2932               	goto	l3766
  5524                           	line	786
  5525                           	
  5526  0125                     l1313:	
  5527                           ;prev13.c: 786: else if(RB7==1)
  5528  0125  1F86               	btfss	(55/8),(55)&7
  5529  0126  2928               	goto	u4401
  5530  0127  2929               	goto	u4400
  5531  0128                     u4401:
  5532  0128  2932               	goto	l3766
  5533  0129                     u4400:
  5534                           	line	787
  5535                           	
  5536  0129                     l3762:	
  5537                           ;prev13.c: 787: return 1;
  5538  0129  3001               	movlw	low(01h)
  5539  012A  00F4               	movwf	(?_scan)
  5540  012B  3000               	movlw	high(01h)
  5541  012C  00F5               	movwf	((?_scan))+1
  5542  012D  29A9               	goto	l1302
  5543                           	
  5544  012E                     l3764:	
  5545  012E  29A9               	goto	l1302
  5546                           	
  5547  012F                     l1315:	
  5548  012F  2932               	goto	l3766
  5549                           	line	789
  5550                           	
  5551  0130                     l1314:	
  5552  0130  2932               	goto	l3766
  5553                           	
  5554  0131                     l1312:	
  5555  0131  2932               	goto	l3766
  5556                           	
  5557  0132                     l1310:	
  5558                           	
  5559  0132                     l3766:	
  5560                           ;prev13.c: 789: actrow(3) ;
  5561  0132  3003               	movlw	low(03h)
  5562  0133  00F2               	movwf	(?_actrow)
  5563  0134  3000               	movlw	high(03h)
  5564  0135  00F3               	movwf	((?_actrow))+1
  5565  0136  120A  158A  24D5   	fcall	_actrow
              120A  118A         
  5566                           	line	791
  5567                           	
  5568  013B                     l3768:	
  5569                           ;prev13.c: 791: if( RD6==1)
  5570  013B  1283               	bcf	status, 5	;RP0=0, select bank0
  5571  013C  1303               	bcf	status, 6	;RP1=0, select bank0
  5572  013D  1F08               	btfss	(70/8),(70)&7
  5573  013E  2940               	goto	u4411
  5574  013F  2941               	goto	u4410
  5575  0140                     u4411:
  5576  0140  2948               	goto	l1316
  5577  0141                     u4410:
  5578                           	line	792
  5579                           	
  5580  0141                     l3770:	
  5581                           ;prev13.c: 792: return 8;
  5582  0141  3008               	movlw	low(08h)
  5583  0142  00F4               	movwf	(?_scan)
  5584  0143  3000               	movlw	high(08h)
  5585  0144  00F5               	movwf	((?_scan))+1
  5586  0145  29A9               	goto	l1302
  5587                           	
  5588  0146                     l3772:	
  5589  0146  29A9               	goto	l1302
  5590                           	
  5591  0147                     l3774:	
  5592  0147  296B               	goto	l3792
  5593                           	line	793
  5594                           	
  5595  0148                     l1316:	
  5596                           ;prev13.c: 793: else if(RD7==1)
  5597  0148  1F88               	btfss	(71/8),(71)&7
  5598  0149  294B               	goto	u4421
  5599  014A  294C               	goto	u4420
  5600  014B                     u4421:
  5601  014B  2953               	goto	l1318
  5602  014C                     u4420:
  5603                           	line	794
  5604                           	
  5605  014C                     l3776:	
  5606                           ;prev13.c: 794: return 9;
  5607  014C  3009               	movlw	low(09h)
  5608  014D  00F4               	movwf	(?_scan)
  5609  014E  3000               	movlw	high(09h)
  5610  014F  00F5               	movwf	((?_scan))+1
  5611  0150  29A9               	goto	l1302
  5612                           	
  5613  0151                     l3778:	
  5614  0151  29A9               	goto	l1302
  5615                           	
  5616  0152                     l3780:	
  5617  0152  296B               	goto	l3792
  5618                           	line	795
  5619                           	
  5620  0153                     l1318:	
  5621                           ;prev13.c: 795: else if(RB6==1)
  5622  0153  1F06               	btfss	(54/8),(54)&7
  5623  0154  2956               	goto	u4431
  5624  0155  2957               	goto	u4430
  5625  0156                     u4431:
  5626  0156  295E               	goto	l1320
  5627  0157                     u4430:
  5628                           	line	796
  5629                           	
  5630  0157                     l3782:	
  5631                           ;prev13.c: 796: return 10;
  5632  0157  300A               	movlw	low(0Ah)
  5633  0158  00F4               	movwf	(?_scan)
  5634  0159  3000               	movlw	high(0Ah)
  5635  015A  00F5               	movwf	((?_scan))+1
  5636  015B  29A9               	goto	l1302
  5637                           	
  5638  015C                     l3784:	
  5639  015C  29A9               	goto	l1302
  5640                           	
  5641  015D                     l3786:	
  5642  015D  296B               	goto	l3792
  5643                           	line	797
  5644                           	
  5645  015E                     l1320:	
  5646                           ;prev13.c: 797: else if(RB7==1)
  5647  015E  1F86               	btfss	(55/8),(55)&7
  5648  015F  2961               	goto	u4441
  5649  0160  2962               	goto	u4440
  5650  0161                     u4441:
  5651  0161  296B               	goto	l3792
  5652  0162                     u4440:
  5653                           	line	798
  5654                           	
  5655  0162                     l3788:	
  5656                           ;prev13.c: 798: return 2;
  5657  0162  3002               	movlw	low(02h)
  5658  0163  00F4               	movwf	(?_scan)
  5659  0164  3000               	movlw	high(02h)
  5660  0165  00F5               	movwf	((?_scan))+1
  5661  0166  29A9               	goto	l1302
  5662                           	
  5663  0167                     l3790:	
  5664  0167  29A9               	goto	l1302
  5665                           	
  5666  0168                     l1322:	
  5667  0168  296B               	goto	l3792
  5668                           	line	801
  5669                           	
  5670  0169                     l1321:	
  5671  0169  296B               	goto	l3792
  5672                           	
  5673  016A                     l1319:	
  5674  016A  296B               	goto	l3792
  5675                           	
  5676  016B                     l1317:	
  5677                           	
  5678  016B                     l3792:	
  5679                           ;prev13.c: 801: actrow(4) ;
  5680  016B  3004               	movlw	low(04h)
  5681  016C  00F2               	movwf	(?_actrow)
  5682  016D  3000               	movlw	high(04h)
  5683  016E  00F3               	movwf	((?_actrow))+1
  5684  016F  120A  158A  24D5   	fcall	_actrow
              120A  118A         
  5685                           	line	803
  5686                           	
  5687  0174                     l3794:	
  5688                           ;prev13.c: 803: if( RD6==1)
  5689  0174  1283               	bcf	status, 5	;RP0=0, select bank0
  5690  0175  1303               	bcf	status, 6	;RP1=0, select bank0
  5691  0176  1F08               	btfss	(70/8),(70)&7
  5692  0177  2979               	goto	u4451
  5693  0178  297A               	goto	u4450
  5694  0179                     u4451:
  5695  0179  2981               	goto	l1323
  5696  017A                     u4450:
  5697                           	line	804
  5698                           	
  5699  017A                     l3796:	
  5700                           ;prev13.c: 804: return 12;
  5701  017A  300C               	movlw	low(0Ch)
  5702  017B  00F4               	movwf	(?_scan)
  5703  017C  3000               	movlw	high(0Ch)
  5704  017D  00F5               	movwf	((?_scan))+1
  5705  017E  29A9               	goto	l1302
  5706                           	
  5707  017F                     l3798:	
  5708  017F  29A9               	goto	l1302
  5709                           	
  5710  0180                     l3800:	
  5711  0180  29A4               	goto	l3818
  5712                           	line	805
  5713                           	
  5714  0181                     l1323:	
  5715                           ;prev13.c: 805: else if(RD7==1)
  5716  0181  1F88               	btfss	(71/8),(71)&7
  5717  0182  2984               	goto	u4461
  5718  0183  2985               	goto	u4460
  5719  0184                     u4461:
  5720  0184  298C               	goto	l1325
  5721  0185                     u4460:
  5722                           	line	806
  5723                           	
  5724  0185                     l3802:	
  5725                           ;prev13.c: 806: return 13;
  5726  0185  300D               	movlw	low(0Dh)
  5727  0186  00F4               	movwf	(?_scan)
  5728  0187  3000               	movlw	high(0Dh)
  5729  0188  00F5               	movwf	((?_scan))+1
  5730  0189  29A9               	goto	l1302
  5731                           	
  5732  018A                     l3804:	
  5733  018A  29A9               	goto	l1302
  5734                           	
  5735  018B                     l3806:	
  5736  018B  29A4               	goto	l3818
  5737                           	line	807
  5738                           	
  5739  018C                     l1325:	
  5740                           ;prev13.c: 807: else if(RB6==1)
  5741  018C  1F06               	btfss	(54/8),(54)&7
  5742  018D  298F               	goto	u4471
  5743  018E  2990               	goto	u4470
  5744  018F                     u4471:
  5745  018F  2997               	goto	l1327
  5746  0190                     u4470:
  5747                           	line	808
  5748                           	
  5749  0190                     l3808:	
  5750                           ;prev13.c: 808: return 14;
  5751  0190  300E               	movlw	low(0Eh)
  5752  0191  00F4               	movwf	(?_scan)
  5753  0192  3000               	movlw	high(0Eh)
  5754  0193  00F5               	movwf	((?_scan))+1
  5755  0194  29A9               	goto	l1302
  5756                           	
  5757  0195                     l3810:	
  5758  0195  29A9               	goto	l1302
  5759                           	
  5760  0196                     l3812:	
  5761  0196  29A4               	goto	l3818
  5762                           	line	809
  5763                           	
  5764  0197                     l1327:	
  5765                           ;prev13.c: 809: else if(RB7==1)
  5766  0197  1F86               	btfss	(55/8),(55)&7
  5767  0198  299A               	goto	u4481
  5768  0199  299B               	goto	u4480
  5769  019A                     u4481:
  5770  019A  29A4               	goto	l3818
  5771  019B                     u4480:
  5772                           	line	810
  5773                           	
  5774  019B                     l3814:	
  5775                           ;prev13.c: 810: return 3;
  5776  019B  3003               	movlw	low(03h)
  5777  019C  00F4               	movwf	(?_scan)
  5778  019D  3000               	movlw	high(03h)
  5779  019E  00F5               	movwf	((?_scan))+1
  5780  019F  29A9               	goto	l1302
  5781                           	
  5782  01A0                     l3816:	
  5783  01A0  29A9               	goto	l1302
  5784                           	
  5785  01A1                     l1329:	
  5786  01A1  29A4               	goto	l3818
  5787                           	line	814
  5788                           	
  5789  01A2                     l1328:	
  5790  01A2  29A4               	goto	l3818
  5791                           	
  5792  01A3                     l1326:	
  5793  01A3  29A4               	goto	l3818
  5794                           	
  5795  01A4                     l1324:	
  5796                           	
  5797  01A4                     l3818:	
  5798                           ;prev13.c: 814: return 99;
  5799  01A4  3063               	movlw	low(063h)
  5800  01A5  00F4               	movwf	(?_scan)
  5801  01A6  3000               	movlw	high(063h)
  5802  01A7  00F5               	movwf	((?_scan))+1
  5803  01A8  29A9               	goto	l1302
  5804                           	
  5805  01A9                     l3820:	
  5806                           	line	818
  5807                           	
  5808  01A9                     l1302:	
  5809  01A9  0008               	return
  5810                           	opt stack 0
  5811                           GLOBAL	__end_of_scan
  5812  01AA                     	__end_of_scan:
  5813 ;; =============== function _scan ends ============
  5814                           
  5815                           	signat	_scan,90
  5816                           	global	_actrow
  5817                           psect	text762,local,class=CODE,delta=2
  5818                           global __ptext762
  5819  0CD5                     __ptext762:
  5820                           
  5821 ;; *************** function _actrow *****************
  5822 ;; Defined at:
  5823 ;;		line 827 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  n               2    2[COMMON] int 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;		None
  5828 ;; Return value:  Size  Location     Type
  5829 ;;		None               void
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0, pclath, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5837 ;;      Params:         2       0       0       0       0
  5838 ;;      Locals:         0       0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0
  5840 ;;      Totals:         2       0       0       0       0
  5841 ;;Total ram usage:        2 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    1
  5844 ;; This function calls:
  5845 ;;		_resetout
  5846 ;;		_delay
  5847 ;; This function is called by:
  5848 ;;		_scan
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           psect	text762
  5852                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  5853                           	line	827
  5854                           	global	__size_of_actrow
  5855  003E                     	__size_of_actrow	equ	__end_of_actrow-_actrow
  5856                           	
  5857  0CD5                     _actrow:	
  5858                           	opt	stack 3
  5859                           ; Regs used in _actrow: [wreg+status,2+status,0+pclath+cstack]
  5860                           	line	828
  5861                           	
  5862  0CD5                     l3694:	
  5863                           ;prev13.c: 828: resetout();
  5864  0CD5  120A  158A  2262   	fcall	_resetout
              120A  158A         
  5865                           	line	830
  5866                           	
  5867  0CDA                     l3696:	
  5868                           ;prev13.c: 830: if(n==1)
  5869  0CDA  3001               	movlw	01h
  5870  0CDB  0672               	xorwf	(actrow@n),w
  5871  0CDC  0473               	iorwf	(actrow@n+1),w
  5872  0CDD  1D03               	skipz
  5873  0CDE  2CE0               	goto	u4291
  5874  0CDF  2CE1               	goto	u4290
  5875  0CE0                     u4291:
  5876  0CE0  2CE5               	goto	l3700
  5877  0CE1                     u4290:
  5878                           	line	832
  5879                           	
  5880  0CE1                     l3698:	
  5881                           ;prev13.c: 831: {
  5882                           ;prev13.c: 832: RB3=1;
  5883  0CE1  1283               	bcf	status, 5	;RP0=0, select bank0
  5884  0CE2  1303               	bcf	status, 6	;RP1=0, select bank0
  5885  0CE3  1586               	bsf	(51/8),(51)&7
  5886                           	line	833
  5887                           ;prev13.c: 833: }
  5888  0CE4  2D09               	goto	l3712
  5889                           	line	834
  5890                           	
  5891  0CE5                     l1335:	
  5892                           	
  5893  0CE5                     l3700:	
  5894                           ;prev13.c: 834: else if(n==2)
  5895  0CE5  3002               	movlw	02h
  5896  0CE6  0672               	xorwf	(actrow@n),w
  5897  0CE7  0473               	iorwf	(actrow@n+1),w
  5898  0CE8  1D03               	skipz
  5899  0CE9  2CEB               	goto	u4301
  5900  0CEA  2CEC               	goto	u4300
  5901  0CEB                     u4301:
  5902  0CEB  2CF0               	goto	l3704
  5903  0CEC                     u4300:
  5904                           	line	836
  5905                           	
  5906  0CEC                     l3702:	
  5907                           ;prev13.c: 835: {
  5908                           ;prev13.c: 836: RB2=1;
  5909  0CEC  1283               	bcf	status, 5	;RP0=0, select bank0
  5910  0CED  1303               	bcf	status, 6	;RP1=0, select bank0
  5911  0CEE  1506               	bsf	(50/8),(50)&7
  5912                           	line	837
  5913                           ;prev13.c: 837: }
  5914  0CEF  2D09               	goto	l3712
  5915                           	line	838
  5916                           	
  5917  0CF0                     l1337:	
  5918                           	
  5919  0CF0                     l3704:	
  5920                           ;prev13.c: 838: else if(n==3)
  5921  0CF0  3003               	movlw	03h
  5922  0CF1  0672               	xorwf	(actrow@n),w
  5923  0CF2  0473               	iorwf	(actrow@n+1),w
  5924  0CF3  1D03               	skipz
  5925  0CF4  2CF6               	goto	u4311
  5926  0CF5  2CF7               	goto	u4310
  5927  0CF6                     u4311:
  5928  0CF6  2CFB               	goto	l3708
  5929  0CF7                     u4310:
  5930                           	line	840
  5931                           	
  5932  0CF7                     l3706:	
  5933                           ;prev13.c: 839: {
  5934                           ;prev13.c: 840: RB1=1;
  5935  0CF7  1283               	bcf	status, 5	;RP0=0, select bank0
  5936  0CF8  1303               	bcf	status, 6	;RP1=0, select bank0
  5937  0CF9  1486               	bsf	(49/8),(49)&7
  5938                           	line	841
  5939                           ;prev13.c: 841: }
  5940  0CFA  2D09               	goto	l3712
  5941                           	line	842
  5942                           	
  5943  0CFB                     l1339:	
  5944                           	
  5945  0CFB                     l3708:	
  5946                           ;prev13.c: 842: else if(n==4)
  5947  0CFB  3004               	movlw	04h
  5948  0CFC  0672               	xorwf	(actrow@n),w
  5949  0CFD  0473               	iorwf	(actrow@n+1),w
  5950  0CFE  1D03               	skipz
  5951  0CFF  2D01               	goto	u4321
  5952  0D00  2D02               	goto	u4320
  5953  0D01                     u4321:
  5954  0D01  2D09               	goto	l3712
  5955  0D02                     u4320:
  5956                           	line	844
  5957                           	
  5958  0D02                     l3710:	
  5959                           ;prev13.c: 843: {
  5960                           ;prev13.c: 844: RB0=1;
  5961  0D02  1283               	bcf	status, 5	;RP0=0, select bank0
  5962  0D03  1303               	bcf	status, 6	;RP1=0, select bank0
  5963  0D04  1406               	bsf	(48/8),(48)&7
  5964  0D05  2D09               	goto	l3712
  5965                           	line	845
  5966                           	
  5967  0D06                     l1341:	
  5968  0D06  2D09               	goto	l3712
  5969                           	line	846
  5970                           	
  5971  0D07                     l1340:	
  5972  0D07  2D09               	goto	l3712
  5973                           	
  5974  0D08                     l1338:	
  5975  0D08  2D09               	goto	l3712
  5976                           	
  5977  0D09                     l1336:	
  5978                           	
  5979  0D09                     l3712:	
  5980                           ;prev13.c: 845: }
  5981                           ;prev13.c: 846: delay(200);
  5982  0D09  30C8               	movlw	low(0C8h)
  5983  0D0A  00F0               	movwf	(?_delay)
  5984  0D0B  3000               	movlw	high(0C8h)
  5985  0D0C  00F1               	movwf	((?_delay))+1
  5986  0D0D  120A  158A  22CD   	fcall	_delay
              120A  158A         
  5987                           	line	849
  5988                           	
  5989  0D12                     l1342:	
  5990  0D12  0008               	return
  5991                           	opt stack 0
  5992                           GLOBAL	__end_of_actrow
  5993  0D13                     	__end_of_actrow:
  5994 ;; =============== function _actrow ends ============
  5995                           
  5996                           	signat	_actrow,4216
  5997                           	global	_setLCD
  5998                           psect	text763,local,class=CODE,delta=2
  5999                           global __ptext763
  6000  0F5A                     __ptext763:
  6001                           
  6002 ;; *************** function _setLCD *****************
  6003 ;; Defined at:
  6004 ;;		line 669 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  number          1    wreg     unsigned char 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  number          1    7[COMMON] unsigned char 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;		None               void
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0, pclath, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6018 ;;      Params:         0       0       0       0       0
  6019 ;;      Locals:         1       0       0       0       0
  6020 ;;      Temps:          2       0       0       0       0
  6021 ;;      Totals:         3       0       0       0       0
  6022 ;;Total ram usage:        3 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    1
  6025 ;; This function calls:
  6026 ;;		_getn
  6027 ;; This function is called by:
  6028 ;;		_cmd
  6029 ;;		_dat
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           psect	text763
  6033                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6034                           	line	669
  6035                           	global	__size_of_setLCD
  6036  00A6                     	__size_of_setLCD	equ	__end_of_setLCD-_setLCD
  6037                           	
  6038  0F5A                     _setLCD:	
  6039                           	opt	stack 2
  6040                           ; Regs used in _setLCD: [wreg+status,2+status,0+pclath+cstack]
  6041                           ;setLCD@number stored from wreg
  6042                           	line	672
  6043  0F5A  00F7               	movwf	(setLCD@number)
  6044                           	
  6045  0F5B                     l3692:	
  6046                           ;prev13.c: 672: RD3=getn(number,0);
  6047  0F5B  01F0               	clrf	(?_getn)
  6048  0F5C  0877               	movf	(setLCD@number),w
  6049  0F5D  120A  118A  2003   	fcall	_getn
              120A  158A         
  6050  0F62  00F5               	movwf	(??_setLCD+0)+0
  6051  0F63  1875               	btfsc	0+(??_setLCD+0)+0,0
  6052  0F64  2F66               	goto	u4131
  6053  0F65  2F6A               	goto	u4130
  6054                           	
  6055  0F66                     u4131:
  6056  0F66  1283               	bcf	status, 5	;RP0=0, select bank0
  6057  0F67  1303               	bcf	status, 6	;RP1=0, select bank0
  6058  0F68  1588               	bsf	(67/8),(67)&7
  6059  0F69  2F6D               	goto	u4144
  6060  0F6A                     u4130:
  6061  0F6A  1283               	bcf	status, 5	;RP0=0, select bank0
  6062  0F6B  1303               	bcf	status, 6	;RP1=0, select bank0
  6063  0F6C  1188               	bcf	(67/8),(67)&7
  6064  0F6D                     u4144:
  6065                           	line	673
  6066                           ;prev13.c: 673: RD2=getn(number,1);
  6067  0F6D  01F0               	clrf	(?_getn)
  6068  0F6E  1403               	bsf	status,0
  6069  0F6F  0DF0               	rlf	(?_getn),f
  6070  0F70  0877               	movf	(setLCD@number),w
  6071  0F71  120A  118A  2003   	fcall	_getn
              120A  158A         
  6072  0F76  00F5               	movwf	(??_setLCD+0)+0
  6073  0F77  1875               	btfsc	0+(??_setLCD+0)+0,0
  6074  0F78  2F7A               	goto	u4151
  6075  0F79  2F7E               	goto	u4150
  6076                           	
  6077  0F7A                     u4151:
  6078  0F7A  1283               	bcf	status, 5	;RP0=0, select bank0
  6079  0F7B  1303               	bcf	status, 6	;RP1=0, select bank0
  6080  0F7C  1508               	bsf	(66/8),(66)&7
  6081  0F7D  2F81               	goto	u4164
  6082  0F7E                     u4150:
  6083  0F7E  1283               	bcf	status, 5	;RP0=0, select bank0
  6084  0F7F  1303               	bcf	status, 6	;RP1=0, select bank0
  6085  0F80  1108               	bcf	(66/8),(66)&7
  6086  0F81                     u4164:
  6087                           	line	674
  6088                           ;prev13.c: 674: RD1=getn(number,2);
  6089  0F81  3002               	movlw	(02h)
  6090  0F82  00F5               	movwf	(??_setLCD+0)+0
  6091  0F83  0875               	movf	(??_setLCD+0)+0,w
  6092  0F84  00F0               	movwf	(?_getn)
  6093  0F85  0877               	movf	(setLCD@number),w
  6094  0F86  120A  118A  2003   	fcall	_getn
              120A  158A         
  6095  0F8B  00F6               	movwf	(??_setLCD+1)+0
  6096  0F8C  1876               	btfsc	0+(??_setLCD+1)+0,0
  6097  0F8D  2F8F               	goto	u4171
  6098  0F8E  2F93               	goto	u4170
  6099                           	
  6100  0F8F                     u4171:
  6101  0F8F  1283               	bcf	status, 5	;RP0=0, select bank0
  6102  0F90  1303               	bcf	status, 6	;RP1=0, select bank0
  6103  0F91  1488               	bsf	(65/8),(65)&7
  6104  0F92  2F96               	goto	u4184
  6105  0F93                     u4170:
  6106  0F93  1283               	bcf	status, 5	;RP0=0, select bank0
  6107  0F94  1303               	bcf	status, 6	;RP1=0, select bank0
  6108  0F95  1088               	bcf	(65/8),(65)&7
  6109  0F96                     u4184:
  6110                           	line	675
  6111                           ;prev13.c: 675: RD0=getn(number,3);
  6112  0F96  3003               	movlw	(03h)
  6113  0F97  00F5               	movwf	(??_setLCD+0)+0
  6114  0F98  0875               	movf	(??_setLCD+0)+0,w
  6115  0F99  00F0               	movwf	(?_getn)
  6116  0F9A  0877               	movf	(setLCD@number),w
  6117  0F9B  120A  118A  2003   	fcall	_getn
              120A  158A         
  6118  0FA0  00F6               	movwf	(??_setLCD+1)+0
  6119  0FA1  1876               	btfsc	0+(??_setLCD+1)+0,0
  6120  0FA2  2FA4               	goto	u4191
  6121  0FA3  2FA8               	goto	u4190
  6122                           	
  6123  0FA4                     u4191:
  6124  0FA4  1283               	bcf	status, 5	;RP0=0, select bank0
  6125  0FA5  1303               	bcf	status, 6	;RP1=0, select bank0
  6126  0FA6  1408               	bsf	(64/8),(64)&7
  6127  0FA7  2FAB               	goto	u4204
  6128  0FA8                     u4190:
  6129  0FA8  1283               	bcf	status, 5	;RP0=0, select bank0
  6130  0FA9  1303               	bcf	status, 6	;RP1=0, select bank0
  6131  0FAA  1008               	bcf	(64/8),(64)&7
  6132  0FAB                     u4204:
  6133                           	line	676
  6134                           ;prev13.c: 676: RC3=getn(number,4);
  6135  0FAB  3004               	movlw	(04h)
  6136  0FAC  00F5               	movwf	(??_setLCD+0)+0
  6137  0FAD  0875               	movf	(??_setLCD+0)+0,w
  6138  0FAE  00F0               	movwf	(?_getn)
  6139  0FAF  0877               	movf	(setLCD@number),w
  6140  0FB0  120A  118A  2003   	fcall	_getn
              120A  158A         
  6141  0FB5  00F6               	movwf	(??_setLCD+1)+0
  6142  0FB6  1876               	btfsc	0+(??_setLCD+1)+0,0
  6143  0FB7  2FB9               	goto	u4211
  6144  0FB8  2FBD               	goto	u4210
  6145                           	
  6146  0FB9                     u4211:
  6147  0FB9  1283               	bcf	status, 5	;RP0=0, select bank0
  6148  0FBA  1303               	bcf	status, 6	;RP1=0, select bank0
  6149  0FBB  1587               	bsf	(59/8),(59)&7
  6150  0FBC  2FC0               	goto	u4224
  6151  0FBD                     u4210:
  6152  0FBD  1283               	bcf	status, 5	;RP0=0, select bank0
  6153  0FBE  1303               	bcf	status, 6	;RP1=0, select bank0
  6154  0FBF  1187               	bcf	(59/8),(59)&7
  6155  0FC0                     u4224:
  6156                           	line	677
  6157                           ;prev13.c: 677: RC2=getn(number,5);
  6158  0FC0  3005               	movlw	(05h)
  6159  0FC1  00F5               	movwf	(??_setLCD+0)+0
  6160  0FC2  0875               	movf	(??_setLCD+0)+0,w
  6161  0FC3  00F0               	movwf	(?_getn)
  6162  0FC4  0877               	movf	(setLCD@number),w
  6163  0FC5  120A  118A  2003   	fcall	_getn
              120A  158A         
  6164  0FCA  00F6               	movwf	(??_setLCD+1)+0
  6165  0FCB  1876               	btfsc	0+(??_setLCD+1)+0,0
  6166  0FCC  2FCE               	goto	u4231
  6167  0FCD  2FD2               	goto	u4230
  6168                           	
  6169  0FCE                     u4231:
  6170  0FCE  1283               	bcf	status, 5	;RP0=0, select bank0
  6171  0FCF  1303               	bcf	status, 6	;RP1=0, select bank0
  6172  0FD0  1507               	bsf	(58/8),(58)&7
  6173  0FD1  2FD5               	goto	u4244
  6174  0FD2                     u4230:
  6175  0FD2  1283               	bcf	status, 5	;RP0=0, select bank0
  6176  0FD3  1303               	bcf	status, 6	;RP1=0, select bank0
  6177  0FD4  1107               	bcf	(58/8),(58)&7
  6178  0FD5                     u4244:
  6179                           	line	678
  6180                           ;prev13.c: 678: RC1=getn(number,6);
  6181  0FD5  3006               	movlw	(06h)
  6182  0FD6  00F5               	movwf	(??_setLCD+0)+0
  6183  0FD7  0875               	movf	(??_setLCD+0)+0,w
  6184  0FD8  00F0               	movwf	(?_getn)
  6185  0FD9  0877               	movf	(setLCD@number),w
  6186  0FDA  120A  118A  2003   	fcall	_getn
              120A  158A         
  6187  0FDF  00F6               	movwf	(??_setLCD+1)+0
  6188  0FE0  1876               	btfsc	0+(??_setLCD+1)+0,0
  6189  0FE1  2FE3               	goto	u4251
  6190  0FE2  2FE7               	goto	u4250
  6191                           	
  6192  0FE3                     u4251:
  6193  0FE3  1283               	bcf	status, 5	;RP0=0, select bank0
  6194  0FE4  1303               	bcf	status, 6	;RP1=0, select bank0
  6195  0FE5  1487               	bsf	(57/8),(57)&7
  6196  0FE6  2FEA               	goto	u4264
  6197  0FE7                     u4250:
  6198  0FE7  1283               	bcf	status, 5	;RP0=0, select bank0
  6199  0FE8  1303               	bcf	status, 6	;RP1=0, select bank0
  6200  0FE9  1087               	bcf	(57/8),(57)&7
  6201  0FEA                     u4264:
  6202                           	line	679
  6203                           ;prev13.c: 679: RC0=getn(number,7);
  6204  0FEA  3007               	movlw	(07h)
  6205  0FEB  00F5               	movwf	(??_setLCD+0)+0
  6206  0FEC  0875               	movf	(??_setLCD+0)+0,w
  6207  0FED  00F0               	movwf	(?_getn)
  6208  0FEE  0877               	movf	(setLCD@number),w
  6209  0FEF  120A  118A  2003   	fcall	_getn
              120A  158A         
  6210  0FF4  00F6               	movwf	(??_setLCD+1)+0
  6211  0FF5  1876               	btfsc	0+(??_setLCD+1)+0,0
  6212  0FF6  2FF8               	goto	u4271
  6213  0FF7  2FFC               	goto	u4270
  6214                           	
  6215  0FF8                     u4271:
  6216  0FF8  1283               	bcf	status, 5	;RP0=0, select bank0
  6217  0FF9  1303               	bcf	status, 6	;RP1=0, select bank0
  6218  0FFA  1407               	bsf	(56/8),(56)&7
  6219  0FFB  2FFF               	goto	u4284
  6220  0FFC                     u4270:
  6221  0FFC  1283               	bcf	status, 5	;RP0=0, select bank0
  6222  0FFD  1303               	bcf	status, 6	;RP1=0, select bank0
  6223  0FFE  1007               	bcf	(56/8),(56)&7
  6224  0FFF                     u4284:
  6225                           	line	682
  6226                           	
  6227  0FFF                     l1271:	
  6228  0FFF  0008               	return
  6229                           	opt stack 0
  6230                           GLOBAL	__end_of_setLCD
  6231  1000                     	__end_of_setLCD:
  6232 ;; =============== function _setLCD ends ============
  6233                           
  6234                           	signat	_setLCD,4216
  6235                           	global	_latch
  6236                           psect	text764,local,class=CODE,delta=2
  6237                           global __ptext764
  6238  0AF7                     __ptext764:
  6239                           
  6240 ;; *************** function _latch *****************
  6241 ;; Defined at:
  6242 ;;		line 620 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;		None
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;		None               void
  6249 ;; Registers used:
  6250 ;;		wreg, status,2, status,0, pclath, cstack
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6256 ;;      Params:         0       0       0       0       0
  6257 ;;      Locals:         0       0       0       0       0
  6258 ;;      Temps:          0       0       0       0       0
  6259 ;;      Totals:         0       0       0       0       0
  6260 ;;Total ram usage:        0 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:    1
  6263 ;; This function calls:
  6264 ;;		_delay
  6265 ;; This function is called by:
  6266 ;;		__dat
  6267 ;;		__cmd
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           psect	text764
  6271                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6272                           	line	620
  6273                           	global	__size_of_latch
  6274  0019                     	__size_of_latch	equ	__end_of_latch-_latch
  6275                           	
  6276  0AF7                     _latch:	
  6277                           	opt	stack 1
  6278                           ; Regs used in _latch: [wreg+status,2+status,0+pclath+cstack]
  6279                           	line	621
  6280                           	
  6281  0AF7                     l3686:	
  6282                           ;prev13.c: 621: RD4=1;
  6283  0AF7  1283               	bcf	status, 5	;RP0=0, select bank0
  6284  0AF8  1303               	bcf	status, 6	;RP1=0, select bank0
  6285  0AF9  1608               	bsf	(68/8),(68)&7
  6286                           	line	622
  6287                           	
  6288  0AFA                     l3688:	
  6289                           ;prev13.c: 622: delay(250);
  6290  0AFA  30FA               	movlw	low(0FAh)
  6291  0AFB  00F0               	movwf	(?_delay)
  6292  0AFC  3000               	movlw	high(0FAh)
  6293  0AFD  00F1               	movwf	((?_delay))+1
  6294  0AFE  120A  158A  22CD   	fcall	_delay
              120A  158A         
  6295                           	line	623
  6296                           	
  6297  0B03                     l3690:	
  6298                           ;prev13.c: 623: RD4=0;
  6299  0B03  1283               	bcf	status, 5	;RP0=0, select bank0
  6300  0B04  1303               	bcf	status, 6	;RP1=0, select bank0
  6301  0B05  1208               	bcf	(68/8),(68)&7
  6302                           	line	624
  6303                           ;prev13.c: 624: delay(300);
  6304  0B06  302C               	movlw	low(012Ch)
  6305  0B07  00F0               	movwf	(?_delay)
  6306  0B08  3001               	movlw	high(012Ch)
  6307  0B09  00F1               	movwf	((?_delay))+1
  6308  0B0A  120A  158A  22CD   	fcall	_delay
              120A  158A         
  6309                           	line	625
  6310                           	
  6311  0B0F                     l1253:	
  6312  0B0F  0008               	return
  6313                           	opt stack 0
  6314                           GLOBAL	__end_of_latch
  6315  0B10                     	__end_of_latch:
  6316 ;; =============== function _latch ends ============
  6317                           
  6318                           	signat	_latch,88
  6319                           	global	_itoaa
  6320                           psect	text765,local,class=CODE,delta=2
  6321                           global __ptext765
  6322  0293                     __ptext765:
  6323                           
  6324 ;; *************** function _itoaa *****************
  6325 ;; Defined at:
  6326 ;;		line 569 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  value           2    9[COMMON] int 
  6329 ;;  ptr             1   11[COMMON] PTR unsigned char 
  6330 ;;		 -> getlogicseq@snum(16), 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  temp            2    2[BANK0 ] int 
  6333 ;;  count           2    0[BANK0 ] int 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  2    9[COMMON] int 
  6336 ;; Registers used:
  6337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6343 ;;      Params:         3       0       0       0       0
  6344 ;;      Locals:         0       4       0       0       0
  6345 ;;      Temps:          1       0       0       0       0
  6346 ;;      Totals:         4       4       0       0       0
  6347 ;;Total ram usage:        8 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    1
  6350 ;; This function calls:
  6351 ;;		___wmul
  6352 ;;		___awdiv
  6353 ;;		___awmod
  6354 ;; This function is called by:
  6355 ;;		_getlogicseq
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           psect	text765
  6359                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6360                           	line	569
  6361                           	global	__size_of_itoaa
  6362  00EB                     	__size_of_itoaa	equ	__end_of_itoaa-_itoaa
  6363                           	
  6364  0293                     _itoaa:	
  6365                           	opt	stack 4
  6366                           ; Regs used in _itoaa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6367                           	line	570
  6368                           	
  6369  0293                     l3638:	
  6370                           ;prev13.c: 570: int count=0,temp;
  6371  0293  1283               	bcf	status, 5	;RP0=0, select bank0
  6372  0294  1303               	bcf	status, 6	;RP1=0, select bank0
  6373  0295  01A0               	clrf	(itoaa@count)
  6374  0296  01A1               	clrf	(itoaa@count+1)
  6375                           	line	571
  6376                           	
  6377  0297                     l3640:	
  6378                           ;prev13.c: 571: if(ptr==(0))
  6379  0297  08FB               	movf	(itoaa@ptr),f
  6380  0298  1D03               	skipz
  6381  0299  2A9B               	goto	u4061
  6382  029A  2A9C               	goto	u4060
  6383  029B                     u4061:
  6384  029B  2A9E               	goto	l3644
  6385  029C                     u4060:
  6386  029C  2B7D               	goto	l1238
  6387                           	line	572
  6388                           	
  6389  029D                     l3642:	
  6390                           ;prev13.c: 572: return 0;
  6391                           ;	Return value of _itoaa is never used
  6392  029D  2B7D               	goto	l1238
  6393                           	
  6394  029E                     l1237:	
  6395                           	line	573
  6396                           	
  6397  029E                     l3644:	
  6398                           ;prev13.c: 573: if(value==0)
  6399  029E  087A               	movf	((itoaa@value+1)),w
  6400  029F  0479               	iorwf	((itoaa@value)),w
  6401  02A0  1D03               	skipz
  6402  02A1  2AA3               	goto	u4071
  6403  02A2  2AA4               	goto	u4070
  6404  02A3                     u4071:
  6405  02A3  2AAD               	goto	l1239
  6406  02A4                     u4070:
  6407                           	line	575
  6408                           	
  6409  02A4                     l3646:	
  6410                           ;prev13.c: 574: {
  6411                           ;prev13.c: 575: *ptr='0';
  6412  02A4  3030               	movlw	(030h)
  6413  02A5  00FC               	movwf	(??_itoaa+0)+0
  6414  02A6  087B               	movf	(itoaa@ptr),w
  6415  02A7  0084               	movwf	fsr0
  6416  02A8  087C               	movf	(??_itoaa+0)+0,w
  6417  02A9  1383               	bcf	status, 7	;select IRP bank0
  6418  02AA  0080               	movwf	indf
  6419  02AB  2B7D               	goto	l1238
  6420                           	line	576
  6421                           	
  6422  02AC                     l3648:	
  6423                           ;prev13.c: 576: return 1;
  6424                           ;	Return value of _itoaa is never used
  6425  02AC  2B7D               	goto	l1238
  6426                           	line	577
  6427                           	
  6428  02AD                     l1239:	
  6429                           	line	579
  6430                           ;prev13.c: 577: }
  6431                           ;prev13.c: 579: if(value<0)
  6432  02AD  1FFA               	btfss	(itoaa@value+1),7
  6433  02AE  2AB0               	goto	u4081
  6434  02AF  2AB1               	goto	u4080
  6435  02B0                     u4081:
  6436  02B0  2ADA               	goto	l3658
  6437  02B1                     u4080:
  6438                           	line	581
  6439                           	
  6440  02B1                     l3650:	
  6441                           ;prev13.c: 580: {
  6442                           ;prev13.c: 581: value*=(-1);
  6443  02B1  30FF               	movlw	low(-1)
  6444  02B2  00F0               	movwf	(?___wmul)
  6445  02B3  30FF               	movlw	high(-1)
  6446  02B4  00F1               	movwf	((?___wmul))+1
  6447  02B5  087A               	movf	(itoaa@value+1),w
  6448  02B6  01F3               	clrf	1+(?___wmul)+02h
  6449  02B7  07F3               	addwf	1+(?___wmul)+02h
  6450  02B8  0879               	movf	(itoaa@value),w
  6451  02B9  01F2               	clrf	0+(?___wmul)+02h
  6452  02BA  07F2               	addwf	0+(?___wmul)+02h
  6453                           
  6454  02BB  120A  158A  2410   	fcall	___wmul
              120A  118A         
  6455  02C0  0871               	movf	(1+(?___wmul)),w
  6456  02C1  01FA               	clrf	(itoaa@value+1)
  6457  02C2  07FA               	addwf	(itoaa@value+1)
  6458  02C3  0870               	movf	(0+(?___wmul)),w
  6459  02C4  01F9               	clrf	(itoaa@value)
  6460  02C5  07F9               	addwf	(itoaa@value)
  6461                           
  6462                           	line	582
  6463                           	
  6464  02C6                     l3652:	
  6465                           ;prev13.c: 582: *ptr++='-';
  6466  02C6  302D               	movlw	(02Dh)
  6467  02C7  00FC               	movwf	(??_itoaa+0)+0
  6468  02C8  087B               	movf	(itoaa@ptr),w
  6469  02C9  0084               	movwf	fsr0
  6470  02CA  087C               	movf	(??_itoaa+0)+0,w
  6471  02CB  1383               	bcf	status, 7	;select IRP bank0
  6472  02CC  0080               	movwf	indf
  6473                           	
  6474  02CD                     l3654:	
  6475  02CD  3001               	movlw	(01h)
  6476  02CE  00FC               	movwf	(??_itoaa+0)+0
  6477  02CF  087C               	movf	(??_itoaa+0)+0,w
  6478  02D0  07FB               	addwf	(itoaa@ptr),f
  6479                           	line	583
  6480                           	
  6481  02D1                     l3656:	
  6482                           ;prev13.c: 583: count++;
  6483  02D1  3001               	movlw	low(01h)
  6484  02D2  1283               	bcf	status, 5	;RP0=0, select bank0
  6485  02D3  1303               	bcf	status, 6	;RP1=0, select bank0
  6486  02D4  07A0               	addwf	(itoaa@count),f
  6487  02D5  1803               	skipnc
  6488  02D6  0AA1               	incf	(itoaa@count+1),f
  6489  02D7  3000               	movlw	high(01h)
  6490  02D8  07A1               	addwf	(itoaa@count+1),f
  6491  02D9  2ADA               	goto	l3658
  6492                           	line	584
  6493                           	
  6494  02DA                     l1240:	
  6495                           	line	585
  6496                           	
  6497  02DA                     l3658:	
  6498                           ;prev13.c: 584: }
  6499                           ;prev13.c: 585: for(temp=value;temp>0;temp/=10,ptr++);
  6500  02DA  087A               	movf	(itoaa@value+1),w
  6501  02DB  01A3               	clrf	(itoaa@temp+1)
  6502  02DC  07A3               	addwf	(itoaa@temp+1)
  6503  02DD  0879               	movf	(itoaa@value),w
  6504  02DE  01A2               	clrf	(itoaa@temp)
  6505  02DF  07A2               	addwf	(itoaa@temp)
  6506                           
  6507                           	
  6508  02E0                     l3660:	
  6509  02E0  0823               	movf	(itoaa@temp+1),w
  6510  02E1  3A80               	xorlw	80h
  6511  02E2  00FF               	movwf	btemp+1
  6512  02E3  3080               	movlw	(high(01h))^80h
  6513  02E4  027F               	subwf	btemp+1,w
  6514  02E5  1D03               	skipz
  6515  02E6  2AE9               	goto	u4095
  6516  02E7  3001               	movlw	low(01h)
  6517  02E8  0222               	subwf	(itoaa@temp),w
  6518  02E9                     u4095:
  6519                           
  6520  02E9  1803               	skipnc
  6521  02EA  2AEC               	goto	u4091
  6522  02EB  2AED               	goto	u4090
  6523  02EC                     u4091:
  6524  02EC  2AEF               	goto	l3664
  6525  02ED                     u4090:
  6526  02ED  2B1A               	goto	l3670
  6527                           	
  6528  02EE                     l3662:	
  6529  02EE  2B1A               	goto	l3670
  6530                           	
  6531  02EF                     l1241:	
  6532                           	
  6533  02EF                     l3664:	
  6534  02EF  300A               	movlw	low(0Ah)
  6535  02F0  00F0               	movwf	(?___awdiv)
  6536  02F1  3000               	movlw	high(0Ah)
  6537  02F2  00F1               	movwf	((?___awdiv))+1
  6538  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  6539  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  6540  02F5  0823               	movf	(itoaa@temp+1),w
  6541  02F6  01F3               	clrf	1+(?___awdiv)+02h
  6542  02F7  07F3               	addwf	1+(?___awdiv)+02h
  6543  02F8  0822               	movf	(itoaa@temp),w
  6544  02F9  01F2               	clrf	0+(?___awdiv)+02h
  6545  02FA  07F2               	addwf	0+(?___awdiv)+02h
  6546                           
  6547  02FB  120A  158A  26E6   	fcall	___awdiv
              120A  118A         
  6548  0300  0871               	movf	(1+(?___awdiv)),w
  6549  0301  1283               	bcf	status, 5	;RP0=0, select bank0
  6550  0302  1303               	bcf	status, 6	;RP1=0, select bank0
  6551  0303  01A3               	clrf	(itoaa@temp+1)
  6552  0304  07A3               	addwf	(itoaa@temp+1)
  6553  0305  0870               	movf	(0+(?___awdiv)),w
  6554  0306  01A2               	clrf	(itoaa@temp)
  6555  0307  07A2               	addwf	(itoaa@temp)
  6556                           
  6557                           	
  6558  0308                     l3666:	
  6559  0308  3001               	movlw	(01h)
  6560  0309  00FC               	movwf	(??_itoaa+0)+0
  6561  030A  087C               	movf	(??_itoaa+0)+0,w
  6562  030B  07FB               	addwf	(itoaa@ptr),f
  6563                           	
  6564  030C                     l3668:	
  6565  030C  0823               	movf	(itoaa@temp+1),w
  6566  030D  3A80               	xorlw	80h
  6567  030E  00FF               	movwf	btemp+1
  6568  030F  3080               	movlw	(high(01h))^80h
  6569  0310  027F               	subwf	btemp+1,w
  6570  0311  1D03               	skipz
  6571  0312  2B15               	goto	u4105
  6572  0313  3001               	movlw	low(01h)
  6573  0314  0222               	subwf	(itoaa@temp),w
  6574  0315                     u4105:
  6575                           
  6576  0315  1803               	skipnc
  6577  0316  2B18               	goto	u4101
  6578  0317  2B19               	goto	u4100
  6579  0318                     u4101:
  6580  0318  2AEF               	goto	l3664
  6581  0319                     u4100:
  6582  0319  2B1A               	goto	l3670
  6583                           	
  6584  031A                     l1242:	
  6585                           	line	586
  6586                           	
  6587  031A                     l3670:	
  6588                           ;prev13.c: 586: *ptr='\0';
  6589  031A  087B               	movf	(itoaa@ptr),w
  6590  031B  0084               	movwf	fsr0
  6591  031C  1383               	bcf	status, 7	;select IRP bank0
  6592  031D  0180               	clrf	indf
  6593                           	line	587
  6594                           	
  6595  031E                     l3672:	
  6596                           ;prev13.c: 587: for(temp=value;temp>0;temp/=10)
  6597  031E  087A               	movf	(itoaa@value+1),w
  6598  031F  1283               	bcf	status, 5	;RP0=0, select bank0
  6599  0320  1303               	bcf	status, 6	;RP1=0, select bank0
  6600  0321  01A3               	clrf	(itoaa@temp+1)
  6601  0322  07A3               	addwf	(itoaa@temp+1)
  6602  0323  0879               	movf	(itoaa@value),w
  6603  0324  01A2               	clrf	(itoaa@temp)
  6604  0325  07A2               	addwf	(itoaa@temp)
  6605                           
  6606                           	
  6607  0326                     l3674:	
  6608  0326  0823               	movf	(itoaa@temp+1),w
  6609  0327  3A80               	xorlw	80h
  6610  0328  00FF               	movwf	btemp+1
  6611  0329  3080               	movlw	(high(01h))^80h
  6612  032A  027F               	subwf	btemp+1,w
  6613  032B  1D03               	skipz
  6614  032C  2B2F               	goto	u4115
  6615  032D  3001               	movlw	low(01h)
  6616  032E  0222               	subwf	(itoaa@temp),w
  6617  032F                     u4115:
  6618                           
  6619  032F  1803               	skipnc
  6620  0330  2B32               	goto	u4111
  6621  0331  2B33               	goto	u4110
  6622  0332                     u4111:
  6623  0332  2B35               	goto	l3678
  6624  0333                     u4110:
  6625  0333  2B7D               	goto	l1238
  6626                           	
  6627  0334                     l3676:	
  6628  0334  2B7D               	goto	l1238
  6629                           	line	588
  6630                           	
  6631  0335                     l1243:	
  6632                           	line	589
  6633                           	
  6634  0335                     l3678:	
  6635                           ;prev13.c: 588: {
  6636                           ;prev13.c: 589: *--ptr=temp%10+'0';
  6637  0335  300A               	movlw	low(0Ah)
  6638  0336  00F0               	movwf	(?___awmod)
  6639  0337  3000               	movlw	high(0Ah)
  6640  0338  00F1               	movwf	((?___awmod))+1
  6641  0339  1283               	bcf	status, 5	;RP0=0, select bank0
  6642  033A  1303               	bcf	status, 6	;RP1=0, select bank0
  6643  033B  0823               	movf	(itoaa@temp+1),w
  6644  033C  01F3               	clrf	1+(?___awmod)+02h
  6645  033D  07F3               	addwf	1+(?___awmod)+02h
  6646  033E  0822               	movf	(itoaa@temp),w
  6647  033F  01F2               	clrf	0+(?___awmod)+02h
  6648  0340  07F2               	addwf	0+(?___awmod)+02h
  6649                           
  6650  0341  120A  158A  2615   	fcall	___awmod
              120A  118A         
  6651  0346  0870               	movf	(0+(?___awmod)),w
  6652  0347  3E30               	addlw	030h
  6653  0348  00FC               	movwf	(??_itoaa+0)+0
  6654  0349  3001               	movlw	low(01h)
  6655  034A  02FB               	subwf	(itoaa@ptr),f
  6656  034B  087B               	movf	((itoaa@ptr)),w
  6657  034C  0084               	movwf	fsr0
  6658  034D  087C               	movf	(??_itoaa+0)+0,w
  6659  034E  1383               	bcf	status, 7	;select IRP bank0
  6660  034F  0080               	movwf	indf
  6661                           	line	590
  6662                           	
  6663  0350                     l3680:	
  6664                           ;prev13.c: 590: count++;
  6665  0350  3001               	movlw	low(01h)
  6666  0351  1283               	bcf	status, 5	;RP0=0, select bank0
  6667  0352  1303               	bcf	status, 6	;RP1=0, select bank0
  6668  0353  07A0               	addwf	(itoaa@count),f
  6669  0354  1803               	skipnc
  6670  0355  0AA1               	incf	(itoaa@count+1),f
  6671  0356  3000               	movlw	high(01h)
  6672  0357  07A1               	addwf	(itoaa@count+1),f
  6673                           	line	587
  6674                           	
  6675  0358                     l3682:	
  6676  0358  300A               	movlw	low(0Ah)
  6677  0359  00F0               	movwf	(?___awdiv)
  6678  035A  3000               	movlw	high(0Ah)
  6679  035B  00F1               	movwf	((?___awdiv))+1
  6680  035C  0823               	movf	(itoaa@temp+1),w
  6681  035D  01F3               	clrf	1+(?___awdiv)+02h
  6682  035E  07F3               	addwf	1+(?___awdiv)+02h
  6683  035F  0822               	movf	(itoaa@temp),w
  6684  0360  01F2               	clrf	0+(?___awdiv)+02h
  6685  0361  07F2               	addwf	0+(?___awdiv)+02h
  6686                           
  6687  0362  120A  158A  26E6   	fcall	___awdiv
              120A  118A         
  6688  0367  0871               	movf	(1+(?___awdiv)),w
  6689  0368  1283               	bcf	status, 5	;RP0=0, select bank0
  6690  0369  1303               	bcf	status, 6	;RP1=0, select bank0
  6691  036A  01A3               	clrf	(itoaa@temp+1)
  6692  036B  07A3               	addwf	(itoaa@temp+1)
  6693  036C  0870               	movf	(0+(?___awdiv)),w
  6694  036D  01A2               	clrf	(itoaa@temp)
  6695  036E  07A2               	addwf	(itoaa@temp)
  6696                           
  6697                           	
  6698  036F                     l3684:	
  6699  036F  0823               	movf	(itoaa@temp+1),w
  6700  0370  3A80               	xorlw	80h
  6701  0371  00FF               	movwf	btemp+1
  6702  0372  3080               	movlw	(high(01h))^80h
  6703  0373  027F               	subwf	btemp+1,w
  6704  0374  1D03               	skipz
  6705  0375  2B78               	goto	u4125
  6706  0376  3001               	movlw	low(01h)
  6707  0377  0222               	subwf	(itoaa@temp),w
  6708  0378                     u4125:
  6709                           
  6710  0378  1803               	skipnc
  6711  0379  2B7B               	goto	u4121
  6712  037A  2B7C               	goto	u4120
  6713  037B                     u4121:
  6714  037B  2B35               	goto	l3678
  6715  037C                     u4120:
  6716  037C  2B7D               	goto	l1238
  6717                           	
  6718  037D                     l1244:	
  6719                           	line	593
  6720                           ;prev13.c: 591: }
  6721                           ;prev13.c: 592: return count;
  6722                           ;	Return value of _itoaa is never used
  6723                           	
  6724  037D                     l1238:	
  6725  037D  0008               	return
  6726                           	opt stack 0
  6727                           GLOBAL	__end_of_itoaa
  6728  037E                     	__end_of_itoaa:
  6729 ;; =============== function _itoaa ends ============
  6730                           
  6731                           	signat	_itoaa,8314
  6732                           	global	_write_eep
  6733                           psect	text766,local,class=CODE,delta=2
  6734                           global __ptext766
  6735  0B6F                     __ptext766:
  6736                           
  6737 ;; *************** function _write_eep *****************
  6738 ;; Defined at:
  6739 ;;		line 903 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  x               2    2[COMMON] unsigned int 
  6742 ;;  y               1    4[COMMON] unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;		None               void
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0, pclath, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6754 ;;      Params:         3       0       0       0       0
  6755 ;;      Locals:         0       0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0
  6757 ;;      Totals:         3       0       0       0       0
  6758 ;;Total ram usage:        3 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    1
  6761 ;; This function calls:
  6762 ;;		_delay
  6763 ;; This function is called by:
  6764 ;;		_getlogic
  6765 ;;		_write_log
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           psect	text766
  6769                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6770                           	line	903
  6771                           	global	__size_of_write_eep
  6772  0027                     	__size_of_write_eep	equ	__end_of_write_eep-_write_eep
  6773                           	
  6774  0B6F                     _write_eep:	
  6775                           	opt	stack 2
  6776                           ; Regs used in _write_eep: [wreg+status,2+status,0+pclath+cstack]
  6777                           	line	904
  6778                           ;prev13.c: 904: again:
  6779                           	
  6780  0B6F                     l1359:	
  6781                           	line	905
  6782                           ;prev13.c: 905: EEPGD=0;
  6783  0B6F  1683               	bsf	status, 5	;RP0=1, select bank3
  6784  0B70  1703               	bsf	status, 6	;RP1=1, select bank3
  6785  0B71  138C               	bcf	(3175/8)^0180h,(3175)&7
  6786                           	line	906
  6787                           	
  6788  0B72                     l3626:	
  6789                           ;prev13.c: 906: EEADR=x;
  6790  0B72  0872               	movf	(write_eep@x),w
  6791  0B73  1283               	bcf	status, 5	;RP0=0, select bank2
  6792  0B74  1703               	bsf	status, 6	;RP1=1, select bank2
  6793  0B75  008D               	movwf	(269)^0100h	;volatile
  6794                           	line	907
  6795                           ;prev13.c: 907: EEDAT=y;
  6796  0B76  0874               	movf	(write_eep@y),w
  6797  0B77  008C               	movwf	(268)^0100h	;volatile
  6798                           	line	908
  6799                           	
  6800  0B78                     l3628:	
  6801                           ;prev13.c: 908: WRERR=0;
  6802  0B78  1683               	bsf	status, 5	;RP0=1, select bank3
  6803  0B79  1703               	bsf	status, 6	;RP1=1, select bank3
  6804  0B7A  118C               	bcf	(3171/8)^0180h,(3171)&7
  6805                           	line	909
  6806                           	
  6807  0B7B                     l3630:	
  6808                           ;prev13.c: 909: WREN=1;
  6809  0B7B  150C               	bsf	(3170/8)^0180h,(3170)&7
  6810                           	line	910
  6811                           ;prev13.c: 910: EECON2=0x55;
  6812  0B7C  3055               	movlw	(055h)
  6813  0B7D  008D               	movwf	(397)^0180h	;volatile
  6814                           	line	911
  6815                           ;prev13.c: 911: EECON2=0xAA;
  6816  0B7E  30AA               	movlw	(0AAh)
  6817  0B7F  008D               	movwf	(397)^0180h	;volatile
  6818                           	line	912
  6819                           	
  6820  0B80                     l3632:	
  6821                           ;prev13.c: 912: WR=1;
  6822  0B80  148C               	bsf	(3169/8)^0180h,(3169)&7
  6823                           	line	913
  6824                           ;prev13.c: 913: while(WR==1);
  6825  0B81  2B82               	goto	l1360
  6826                           	
  6827  0B82                     l1361:	
  6828                           	
  6829  0B82                     l1360:	
  6830  0B82  188C               	btfsc	(3169/8)^0180h,(3169)&7
  6831  0B83  2B85               	goto	u4041
  6832  0B84  2B86               	goto	u4040
  6833  0B85                     u4041:
  6834  0B85  2B82               	goto	l1360
  6835  0B86                     u4040:
  6836                           	
  6837  0B86                     l1362:	
  6838                           	line	914
  6839                           ;prev13.c: 914: if(WRERR==1)
  6840  0B86  1D8C               	btfss	(3171/8)^0180h,(3171)&7
  6841  0B87  2B89               	goto	u4051
  6842  0B88  2B8A               	goto	u4050
  6843  0B89                     u4051:
  6844  0B89  2B8C               	goto	l3636
  6845  0B8A                     u4050:
  6846  0B8A  2B6F               	goto	l1359
  6847                           	line	915
  6848                           	
  6849  0B8B                     l3634:	
  6850                           ;prev13.c: 915: goto again;
  6851  0B8B  2B6F               	goto	l1359
  6852                           	
  6853  0B8C                     l1363:	
  6854                           	line	916
  6855                           	
  6856  0B8C                     l3636:	
  6857                           ;prev13.c: 916: delay(200);
  6858  0B8C  30C8               	movlw	low(0C8h)
  6859  0B8D  00F0               	movwf	(?_delay)
  6860  0B8E  3000               	movlw	high(0C8h)
  6861  0B8F  00F1               	movwf	((?_delay))+1
  6862  0B90  120A  158A  22CD   	fcall	_delay
              120A  158A         
  6863                           	line	917
  6864                           	
  6865  0B95                     l1364:	
  6866  0B95  0008               	return
  6867                           	opt stack 0
  6868                           GLOBAL	__end_of_write_eep
  6869  0B96                     	__end_of_write_eep:
  6870 ;; =============== function _write_eep ends ============
  6871                           
  6872                           	signat	_write_eep,8312
  6873                           	global	_read_eep
  6874                           psect	text767,local,class=CODE,delta=2
  6875                           global __ptext767
  6876  0C3A                     __ptext767:
  6877                           
  6878 ;; *************** function _read_eep *****************
  6879 ;; Defined at:
  6880 ;;		line 869 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;  a               2    9[COMMON] unsigned int 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  d               2    0[BANK0 ] int 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  1    wreg      unsigned char 
  6887 ;; Registers used:
  6888 ;;		wreg, status,2, status,0, pclath, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6894 ;;      Params:         2       0       0       0       0
  6895 ;;      Locals:         0       2       0       0       0
  6896 ;;      Temps:          2       0       0       0       0
  6897 ;;      Totals:         4       2       0       0       0
  6898 ;;Total ram usage:        6 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:    1
  6901 ;; This function calls:
  6902 ;;		_delay
  6903 ;; This function is called by:
  6904 ;;		_getlogic
  6905 ;;		_read_log
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           psect	text767
  6909                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  6910                           	line	869
  6911                           	global	__size_of_read_eep
  6912  002D                     	__size_of_read_eep	equ	__end_of_read_eep-_read_eep
  6913                           	
  6914  0C3A                     _read_eep:	
  6915                           	opt	stack 2
  6916                           ; Regs used in _read_eep: [wreg+status,2+status,0+pclath+cstack]
  6917                           	line	871
  6918                           	
  6919  0C3A                     l3608:	
  6920                           ;prev13.c: 870: int d;
  6921                           ;prev13.c: 871: EEADR=a;
  6922  0C3A  0879               	movf	(read_eep@a),w
  6923  0C3B  1283               	bcf	status, 5	;RP0=0, select bank2
  6924  0C3C  1703               	bsf	status, 6	;RP1=1, select bank2
  6925  0C3D  008D               	movwf	(269)^0100h	;volatile
  6926                           	line	873
  6927                           	
  6928  0C3E                     l3610:	
  6929                           ;prev13.c: 873: EEPGD=0;
  6930  0C3E  1683               	bsf	status, 5	;RP0=1, select bank3
  6931  0C3F  1703               	bsf	status, 6	;RP1=1, select bank3
  6932  0C40  138C               	bcf	(3175/8)^0180h,(3175)&7
  6933                           	line	874
  6934                           	
  6935  0C41                     l3612:	
  6936                           ;prev13.c: 874: EEIF=0;
  6937  0C41  1283               	bcf	status, 5	;RP0=0, select bank0
  6938  0C42  1303               	bcf	status, 6	;RP1=0, select bank0
  6939  0C43  120D               	bcf	(108/8),(108)&7
  6940                           	line	875
  6941                           	
  6942  0C44                     l3614:	
  6943                           ;prev13.c: 875: RD=1;
  6944  0C44  1683               	bsf	status, 5	;RP0=1, select bank3
  6945  0C45  1703               	bsf	status, 6	;RP1=1, select bank3
  6946  0C46  140C               	bsf	(3168/8)^0180h,(3168)&7
  6947                           	line	876
  6948                           	
  6949  0C47                     l3616:	
  6950                           ;prev13.c: 876: WREN=0;
  6951  0C47  110C               	bcf	(3170/8)^0180h,(3170)&7
  6952                           	line	877
  6953                           ;prev13.c: 877: while(RD==1);
  6954  0C48  2C49               	goto	l1350
  6955                           	
  6956  0C49                     l1351:	
  6957                           	
  6958  0C49                     l1350:	
  6959  0C49  180C               	btfsc	(3168/8)^0180h,(3168)&7
  6960  0C4A  2C4C               	goto	u4031
  6961  0C4B  2C4D               	goto	u4030
  6962  0C4C                     u4031:
  6963  0C4C  2C49               	goto	l1350
  6964  0C4D                     u4030:
  6965  0C4D  2C4E               	goto	l3618
  6966                           	
  6967  0C4E                     l1352:	
  6968                           	line	878
  6969                           	
  6970  0C4E                     l3618:	
  6971                           ;prev13.c: 878: d=EEDAT;
  6972  0C4E  1283               	bcf	status, 5	;RP0=0, select bank2
  6973  0C4F  1703               	bsf	status, 6	;RP1=1, select bank2
  6974  0C50  080C               	movf	(268)^0100h,w	;volatile
  6975  0C51  00FB               	movwf	(??_read_eep+0)+0
  6976  0C52  01FC               	clrf	(??_read_eep+0)+0+1
  6977  0C53  087B               	movf	0+(??_read_eep+0)+0,w
  6978  0C54  1283               	bcf	status, 5	;RP0=0, select bank0
  6979  0C55  1303               	bcf	status, 6	;RP1=0, select bank0
  6980  0C56  00A0               	movwf	(read_eep@d)
  6981  0C57  087C               	movf	1+(??_read_eep+0)+0,w
  6982  0C58  00A1               	movwf	(read_eep@d+1)
  6983                           	line	879
  6984                           	
  6985  0C59                     l3620:	
  6986                           ;prev13.c: 879: delay(200);
  6987  0C59  30C8               	movlw	low(0C8h)
  6988  0C5A  00F0               	movwf	(?_delay)
  6989  0C5B  3000               	movlw	high(0C8h)
  6990  0C5C  00F1               	movwf	((?_delay))+1
  6991  0C5D  120A  158A  22CD   	fcall	_delay
              120A  158A         
  6992                           	line	880
  6993                           	
  6994  0C62                     l3622:	
  6995                           ;prev13.c: 880: return d;
  6996  0C62  1283               	bcf	status, 5	;RP0=0, select bank0
  6997  0C63  1303               	bcf	status, 6	;RP1=0, select bank0
  6998  0C64  0820               	movf	(read_eep@d),w
  6999  0C65  2C66               	goto	l1353
  7000                           	
  7001  0C66                     l3624:	
  7002                           	line	881
  7003                           	
  7004  0C66                     l1353:	
  7005  0C66  0008               	return
  7006                           	opt stack 0
  7007                           GLOBAL	__end_of_read_eep
  7008  0C67                     	__end_of_read_eep:
  7009 ;; =============== function _read_eep ends ============
  7010                           
  7011                           	signat	_read_eep,4217
  7012                           	global	___awmod
  7013                           psect	text768,local,class=CODE,delta=2
  7014                           global __ptext768
  7015  0E15                     __ptext768:
  7016                           
  7017 ;; *************** function ___awmod *****************
  7018 ;; Defined at:
  7019 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  divisor         2    0[COMMON] int 
  7022 ;;  dividend        2    2[COMMON] int 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  sign            1    6[COMMON] unsigned char 
  7025 ;;  counter         1    5[COMMON] unsigned char 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  2    0[COMMON] int 
  7028 ;; Registers used:
  7029 ;;		wreg, status,2, status,0
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7035 ;;      Params:         4       0       0       0       0
  7036 ;;      Locals:         2       0       0       0       0
  7037 ;;      Temps:          1       0       0       0       0
  7038 ;;      Totals:         7       0       0       0       0
  7039 ;;Total ram usage:        7 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_itoaa
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           psect	text768
  7048                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  7049                           	line	5
  7050                           	global	__size_of___awmod
  7051  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  7052                           	
  7053  0E15                     ___awmod:	
  7054                           	opt	stack 4
  7055                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7056                           	line	8
  7057                           	
  7058  0E15                     l3574:	
  7059  0E15  01F6               	clrf	(___awmod@sign)
  7060                           	line	9
  7061  0E16  1FF3               	btfss	(___awmod@dividend+1),7
  7062  0E17  2E19               	goto	u3941
  7063  0E18  2E1A               	goto	u3940
  7064  0E19                     u3941:
  7065  0E19  2E23               	goto	l3578
  7066  0E1A                     u3940:
  7067                           	line	10
  7068                           	
  7069  0E1A                     l3576:	
  7070  0E1A  09F2               	comf	(___awmod@dividend),f
  7071  0E1B  09F3               	comf	(___awmod@dividend+1),f
  7072  0E1C  0AF2               	incf	(___awmod@dividend),f
  7073  0E1D  1903               	skipnz
  7074  0E1E  0AF3               	incf	(___awmod@dividend+1),f
  7075                           	line	11
  7076  0E1F  01F6               	clrf	(___awmod@sign)
  7077  0E20  1403               	bsf	status,0
  7078  0E21  0DF6               	rlf	(___awmod@sign),f
  7079  0E22  2E23               	goto	l3578
  7080                           	line	12
  7081                           	
  7082  0E23                     l1604:	
  7083                           	line	13
  7084                           	
  7085  0E23                     l3578:	
  7086  0E23  1FF1               	btfss	(___awmod@divisor+1),7
  7087  0E24  2E26               	goto	u3951
  7088  0E25  2E27               	goto	u3950
  7089  0E26                     u3951:
  7090  0E26  2E2D               	goto	l3582
  7091  0E27                     u3950:
  7092                           	line	14
  7093                           	
  7094  0E27                     l3580:	
  7095  0E27  09F0               	comf	(___awmod@divisor),f
  7096  0E28  09F1               	comf	(___awmod@divisor+1),f
  7097  0E29  0AF0               	incf	(___awmod@divisor),f
  7098  0E2A  1903               	skipnz
  7099  0E2B  0AF1               	incf	(___awmod@divisor+1),f
  7100  0E2C  2E2D               	goto	l3582
  7101                           	
  7102  0E2D                     l1605:	
  7103                           	line	15
  7104                           	
  7105  0E2D                     l3582:	
  7106  0E2D  0871               	movf	(___awmod@divisor+1),w
  7107  0E2E  0470               	iorwf	(___awmod@divisor),w
  7108  0E2F  1903               	skipnz
  7109  0E30  2E32               	goto	u3961
  7110  0E31  2E33               	goto	u3960
  7111  0E32                     u3961:
  7112  0E32  2E69               	goto	l3600
  7113  0E33                     u3960:
  7114                           	line	16
  7115                           	
  7116  0E33                     l3584:	
  7117  0E33  01F5               	clrf	(___awmod@counter)
  7118  0E34  1403               	bsf	status,0
  7119  0E35  0DF5               	rlf	(___awmod@counter),f
  7120                           	line	17
  7121  0E36  2E43               	goto	l3590
  7122                           	
  7123  0E37                     l1608:	
  7124                           	line	18
  7125                           	
  7126  0E37                     l3586:	
  7127  0E37  3001               	movlw	01h
  7128                           	
  7129  0E38                     u3975:
  7130  0E38  1003               	clrc
  7131  0E39  0DF0               	rlf	(___awmod@divisor),f
  7132  0E3A  0DF1               	rlf	(___awmod@divisor+1),f
  7133  0E3B  3EFF               	addlw	-1
  7134  0E3C  1D03               	skipz
  7135  0E3D  2E38               	goto	u3975
  7136                           	line	19
  7137                           	
  7138  0E3E                     l3588:	
  7139  0E3E  3001               	movlw	(01h)
  7140  0E3F  00F4               	movwf	(??___awmod+0)+0
  7141  0E40  0874               	movf	(??___awmod+0)+0,w
  7142  0E41  07F5               	addwf	(___awmod@counter),f
  7143  0E42  2E43               	goto	l3590
  7144                           	line	20
  7145                           	
  7146  0E43                     l1607:	
  7147                           	line	17
  7148                           	
  7149  0E43                     l3590:	
  7150  0E43  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  7151  0E44  2E46               	goto	u3981
  7152  0E45  2E47               	goto	u3980
  7153  0E46                     u3981:
  7154  0E46  2E37               	goto	l3586
  7155  0E47                     u3980:
  7156  0E47  2E49               	goto	l3592
  7157                           	
  7158  0E48                     l1609:	
  7159  0E48  2E49               	goto	l3592
  7160                           	line	21
  7161                           	
  7162  0E49                     l1610:	
  7163                           	line	22
  7164                           	
  7165  0E49                     l3592:	
  7166  0E49  0871               	movf	(___awmod@divisor+1),w
  7167  0E4A  0273               	subwf	(___awmod@dividend+1),w
  7168  0E4B  1D03               	skipz
  7169  0E4C  2E4F               	goto	u3995
  7170  0E4D  0870               	movf	(___awmod@divisor),w
  7171  0E4E  0272               	subwf	(___awmod@dividend),w
  7172  0E4F                     u3995:
  7173  0E4F  1C03               	skipc
  7174  0E50  2E52               	goto	u3991
  7175  0E51  2E53               	goto	u3990
  7176  0E52                     u3991:
  7177  0E52  2E5A               	goto	l3596
  7178  0E53                     u3990:
  7179                           	line	23
  7180                           	
  7181  0E53                     l3594:	
  7182  0E53  0870               	movf	(___awmod@divisor),w
  7183  0E54  02F2               	subwf	(___awmod@dividend),f
  7184  0E55  0871               	movf	(___awmod@divisor+1),w
  7185  0E56  1C03               	skipc
  7186  0E57  03F3               	decf	(___awmod@dividend+1),f
  7187  0E58  02F3               	subwf	(___awmod@dividend+1),f
  7188  0E59  2E5A               	goto	l3596
  7189                           	
  7190  0E5A                     l1611:	
  7191                           	line	24
  7192                           	
  7193  0E5A                     l3596:	
  7194  0E5A  3001               	movlw	01h
  7195                           	
  7196  0E5B                     u4005:
  7197  0E5B  1003               	clrc
  7198  0E5C  0CF1               	rrf	(___awmod@divisor+1),f
  7199  0E5D  0CF0               	rrf	(___awmod@divisor),f
  7200  0E5E  3EFF               	addlw	-1
  7201  0E5F  1D03               	skipz
  7202  0E60  2E5B               	goto	u4005
  7203                           	line	25
  7204                           	
  7205  0E61                     l3598:	
  7206  0E61  3001               	movlw	low(01h)
  7207  0E62  02F5               	subwf	(___awmod@counter),f
  7208  0E63  1D03               	btfss	status,2
  7209  0E64  2E66               	goto	u4011
  7210  0E65  2E67               	goto	u4010
  7211  0E66                     u4011:
  7212  0E66  2E49               	goto	l3592
  7213  0E67                     u4010:
  7214  0E67  2E69               	goto	l3600
  7215                           	
  7216  0E68                     l1612:	
  7217  0E68  2E69               	goto	l3600
  7218                           	line	26
  7219                           	
  7220  0E69                     l1606:	
  7221                           	line	27
  7222                           	
  7223  0E69                     l3600:	
  7224  0E69  0876               	movf	(___awmod@sign),w
  7225  0E6A  1D03               	skipz
  7226  0E6B  2E6D               	goto	u4020
  7227  0E6C  2E73               	goto	l3604
  7228  0E6D                     u4020:
  7229                           	line	28
  7230                           	
  7231  0E6D                     l3602:	
  7232  0E6D  09F2               	comf	(___awmod@dividend),f
  7233  0E6E  09F3               	comf	(___awmod@dividend+1),f
  7234  0E6F  0AF2               	incf	(___awmod@dividend),f
  7235  0E70  1903               	skipnz
  7236  0E71  0AF3               	incf	(___awmod@dividend+1),f
  7237  0E72  2E73               	goto	l3604
  7238                           	
  7239  0E73                     l1613:	
  7240                           	line	29
  7241                           	
  7242  0E73                     l3604:	
  7243  0E73  0873               	movf	(___awmod@dividend+1),w
  7244  0E74  01F1               	clrf	(?___awmod+1)
  7245  0E75  07F1               	addwf	(?___awmod+1)
  7246  0E76  0872               	movf	(___awmod@dividend),w
  7247  0E77  01F0               	clrf	(?___awmod)
  7248  0E78  07F0               	addwf	(?___awmod)
  7249                           
  7250  0E79  2E7A               	goto	l1614
  7251                           	
  7252  0E7A                     l3606:	
  7253                           	line	30
  7254                           	
  7255  0E7A                     l1614:	
  7256  0E7A  0008               	return
  7257                           	opt stack 0
  7258                           GLOBAL	__end_of___awmod
  7259  0E7B                     	__end_of___awmod:
  7260 ;; =============== function ___awmod ends ============
  7261                           
  7262                           	signat	___awmod,8314
  7263                           	global	___awdiv
  7264                           psect	text769,local,class=CODE,delta=2
  7265                           global __ptext769
  7266  0EE6                     __ptext769:
  7267                           
  7268 ;; *************** function ___awdiv *****************
  7269 ;; Defined at:
  7270 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  divisor         2    0[COMMON] int 
  7273 ;;  dividend        2    2[COMMON] int 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  quotient        2    7[COMMON] int 
  7276 ;;  sign            1    6[COMMON] unsigned char 
  7277 ;;  counter         1    5[COMMON] unsigned char 
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  2    0[COMMON] int 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, status,0
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7287 ;;      Params:         4       0       0       0       0
  7288 ;;      Locals:         4       0       0       0       0
  7289 ;;      Temps:          1       0       0       0       0
  7290 ;;      Totals:         9       0       0       0       0
  7291 ;;Total ram usage:        9 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; This function calls:
  7294 ;;		Nothing
  7295 ;; This function is called by:
  7296 ;;		_itoaa
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           psect	text769
  7300                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  7301                           	line	5
  7302                           	global	__size_of___awdiv
  7303  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  7304                           	
  7305  0EE6                     ___awdiv:	
  7306                           	opt	stack 4
  7307                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7308                           	line	9
  7309                           	
  7310  0EE6                     l3534:	
  7311  0EE6  01F6               	clrf	(___awdiv@sign)
  7312                           	line	10
  7313  0EE7  1FF1               	btfss	(___awdiv@divisor+1),7
  7314  0EE8  2EEA               	goto	u3841
  7315  0EE9  2EEB               	goto	u3840
  7316  0EEA                     u3841:
  7317  0EEA  2EF4               	goto	l3538
  7318  0EEB                     u3840:
  7319                           	line	11
  7320                           	
  7321  0EEB                     l3536:	
  7322  0EEB  09F0               	comf	(___awdiv@divisor),f
  7323  0EEC  09F1               	comf	(___awdiv@divisor+1),f
  7324  0EED  0AF0               	incf	(___awdiv@divisor),f
  7325  0EEE  1903               	skipnz
  7326  0EEF  0AF1               	incf	(___awdiv@divisor+1),f
  7327                           	line	12
  7328  0EF0  01F6               	clrf	(___awdiv@sign)
  7329  0EF1  1403               	bsf	status,0
  7330  0EF2  0DF6               	rlf	(___awdiv@sign),f
  7331  0EF3  2EF4               	goto	l3538
  7332                           	line	13
  7333                           	
  7334  0EF4                     l1536:	
  7335                           	line	14
  7336                           	
  7337  0EF4                     l3538:	
  7338  0EF4  1FF3               	btfss	(___awdiv@dividend+1),7
  7339  0EF5  2EF7               	goto	u3851
  7340  0EF6  2EF8               	goto	u3850
  7341  0EF7                     u3851:
  7342  0EF7  2F02               	goto	l3544
  7343  0EF8                     u3850:
  7344                           	line	15
  7345                           	
  7346  0EF8                     l3540:	
  7347  0EF8  09F2               	comf	(___awdiv@dividend),f
  7348  0EF9  09F3               	comf	(___awdiv@dividend+1),f
  7349  0EFA  0AF2               	incf	(___awdiv@dividend),f
  7350  0EFB  1903               	skipnz
  7351  0EFC  0AF3               	incf	(___awdiv@dividend+1),f
  7352                           	line	16
  7353                           	
  7354  0EFD                     l3542:	
  7355  0EFD  3001               	movlw	(01h)
  7356  0EFE  00F4               	movwf	(??___awdiv+0)+0
  7357  0EFF  0874               	movf	(??___awdiv+0)+0,w
  7358  0F00  06F6               	xorwf	(___awdiv@sign),f
  7359  0F01  2F02               	goto	l3544
  7360                           	line	17
  7361                           	
  7362  0F02                     l1537:	
  7363                           	line	18
  7364                           	
  7365  0F02                     l3544:	
  7366  0F02  01F7               	clrf	(___awdiv@quotient)
  7367  0F03  01F8               	clrf	(___awdiv@quotient+1)
  7368                           	line	19
  7369                           	
  7370  0F04                     l3546:	
  7371  0F04  0871               	movf	(___awdiv@divisor+1),w
  7372  0F05  0470               	iorwf	(___awdiv@divisor),w
  7373  0F06  1903               	skipnz
  7374  0F07  2F09               	goto	u3861
  7375  0F08  2F0A               	goto	u3860
  7376  0F09                     u3861:
  7377  0F09  2F48               	goto	l3566
  7378  0F0A                     u3860:
  7379                           	line	20
  7380                           	
  7381  0F0A                     l3548:	
  7382  0F0A  01F5               	clrf	(___awdiv@counter)
  7383  0F0B  1403               	bsf	status,0
  7384  0F0C  0DF5               	rlf	(___awdiv@counter),f
  7385                           	line	21
  7386  0F0D  2F1A               	goto	l3554
  7387                           	
  7388  0F0E                     l1540:	
  7389                           	line	22
  7390                           	
  7391  0F0E                     l3550:	
  7392  0F0E  3001               	movlw	01h
  7393                           	
  7394  0F0F                     u3875:
  7395  0F0F  1003               	clrc
  7396  0F10  0DF0               	rlf	(___awdiv@divisor),f
  7397  0F11  0DF1               	rlf	(___awdiv@divisor+1),f
  7398  0F12  3EFF               	addlw	-1
  7399  0F13  1D03               	skipz
  7400  0F14  2F0F               	goto	u3875
  7401                           	line	23
  7402                           	
  7403  0F15                     l3552:	
  7404  0F15  3001               	movlw	(01h)
  7405  0F16  00F4               	movwf	(??___awdiv+0)+0
  7406  0F17  0874               	movf	(??___awdiv+0)+0,w
  7407  0F18  07F5               	addwf	(___awdiv@counter),f
  7408  0F19  2F1A               	goto	l3554
  7409                           	line	24
  7410                           	
  7411  0F1A                     l1539:	
  7412                           	line	21
  7413                           	
  7414  0F1A                     l3554:	
  7415  0F1A  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  7416  0F1B  2F1D               	goto	u3881
  7417  0F1C  2F1E               	goto	u3880
  7418  0F1D                     u3881:
  7419  0F1D  2F0E               	goto	l3550
  7420  0F1E                     u3880:
  7421  0F1E  2F20               	goto	l3556
  7422                           	
  7423  0F1F                     l1541:	
  7424  0F1F  2F20               	goto	l3556
  7425                           	line	25
  7426                           	
  7427  0F20                     l1542:	
  7428                           	line	26
  7429                           	
  7430  0F20                     l3556:	
  7431  0F20  3001               	movlw	01h
  7432                           	
  7433  0F21                     u3895:
  7434  0F21  1003               	clrc
  7435  0F22  0DF7               	rlf	(___awdiv@quotient),f
  7436  0F23  0DF8               	rlf	(___awdiv@quotient+1),f
  7437  0F24  3EFF               	addlw	-1
  7438  0F25  1D03               	skipz
  7439  0F26  2F21               	goto	u3895
  7440                           	line	27
  7441  0F27  0871               	movf	(___awdiv@divisor+1),w
  7442  0F28  0273               	subwf	(___awdiv@dividend+1),w
  7443  0F29  1D03               	skipz
  7444  0F2A  2F2D               	goto	u3905
  7445  0F2B  0870               	movf	(___awdiv@divisor),w
  7446  0F2C  0272               	subwf	(___awdiv@dividend),w
  7447  0F2D                     u3905:
  7448  0F2D  1C03               	skipc
  7449  0F2E  2F30               	goto	u3901
  7450  0F2F  2F31               	goto	u3900
  7451  0F30                     u3901:
  7452  0F30  2F39               	goto	l3562
  7453  0F31                     u3900:
  7454                           	line	28
  7455                           	
  7456  0F31                     l3558:	
  7457  0F31  0870               	movf	(___awdiv@divisor),w
  7458  0F32  02F2               	subwf	(___awdiv@dividend),f
  7459  0F33  0871               	movf	(___awdiv@divisor+1),w
  7460  0F34  1C03               	skipc
  7461  0F35  03F3               	decf	(___awdiv@dividend+1),f
  7462  0F36  02F3               	subwf	(___awdiv@dividend+1),f
  7463                           	line	29
  7464                           	
  7465  0F37                     l3560:	
  7466  0F37  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  7467  0F38  2F39               	goto	l3562
  7468                           	line	30
  7469                           	
  7470  0F39                     l1543:	
  7471                           	line	31
  7472                           	
  7473  0F39                     l3562:	
  7474  0F39  3001               	movlw	01h
  7475                           	
  7476  0F3A                     u3915:
  7477  0F3A  1003               	clrc
  7478  0F3B  0CF1               	rrf	(___awdiv@divisor+1),f
  7479  0F3C  0CF0               	rrf	(___awdiv@divisor),f
  7480  0F3D  3EFF               	addlw	-1
  7481  0F3E  1D03               	skipz
  7482  0F3F  2F3A               	goto	u3915
  7483                           	line	32
  7484                           	
  7485  0F40                     l3564:	
  7486  0F40  3001               	movlw	low(01h)
  7487  0F41  02F5               	subwf	(___awdiv@counter),f
  7488  0F42  1D03               	btfss	status,2
  7489  0F43  2F45               	goto	u3921
  7490  0F44  2F46               	goto	u3920
  7491  0F45                     u3921:
  7492  0F45  2F20               	goto	l3556
  7493  0F46                     u3920:
  7494  0F46  2F48               	goto	l3566
  7495                           	
  7496  0F47                     l1544:	
  7497  0F47  2F48               	goto	l3566
  7498                           	line	33
  7499                           	
  7500  0F48                     l1538:	
  7501                           	line	34
  7502                           	
  7503  0F48                     l3566:	
  7504  0F48  0876               	movf	(___awdiv@sign),w
  7505  0F49  1D03               	skipz
  7506  0F4A  2F4C               	goto	u3930
  7507  0F4B  2F52               	goto	l3570
  7508  0F4C                     u3930:
  7509                           	line	35
  7510                           	
  7511  0F4C                     l3568:	
  7512  0F4C  09F7               	comf	(___awdiv@quotient),f
  7513  0F4D  09F8               	comf	(___awdiv@quotient+1),f
  7514  0F4E  0AF7               	incf	(___awdiv@quotient),f
  7515  0F4F  1903               	skipnz
  7516  0F50  0AF8               	incf	(___awdiv@quotient+1),f
  7517  0F51  2F52               	goto	l3570
  7518                           	
  7519  0F52                     l1545:	
  7520                           	line	36
  7521                           	
  7522  0F52                     l3570:	
  7523  0F52  0878               	movf	(___awdiv@quotient+1),w
  7524  0F53  01F1               	clrf	(?___awdiv+1)
  7525  0F54  07F1               	addwf	(?___awdiv+1)
  7526  0F55  0877               	movf	(___awdiv@quotient),w
  7527  0F56  01F0               	clrf	(?___awdiv)
  7528  0F57  07F0               	addwf	(?___awdiv)
  7529                           
  7530  0F58  2F59               	goto	l1546
  7531                           	
  7532  0F59                     l3572:	
  7533                           	line	37
  7534                           	
  7535  0F59                     l1546:	
  7536  0F59  0008               	return
  7537                           	opt stack 0
  7538                           GLOBAL	__end_of___awdiv
  7539  0F5A                     	__end_of___awdiv:
  7540 ;; =============== function ___awdiv ends ============
  7541                           
  7542                           	signat	___awdiv,8314
  7543                           	global	___wmul
  7544                           psect	text770,local,class=CODE,delta=2
  7545                           global __ptext770
  7546  0C10                     __ptext770:
  7547                           
  7548 ;; *************** function ___wmul *****************
  7549 ;; Defined at:
  7550 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  multiplier      2    0[COMMON] unsigned int 
  7553 ;;  multiplicand    2    2[COMMON] unsigned int 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  product         2    4[COMMON] unsigned int 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  2    0[COMMON] unsigned int 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7565 ;;      Params:         4       0       0       0       0
  7566 ;;      Locals:         2       0       0       0       0
  7567 ;;      Temps:          0       0       0       0       0
  7568 ;;      Totals:         6       0       0       0       0
  7569 ;;Total ram usage:        6 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_itoaa
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           psect	text770
  7578                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  7579                           	line	3
  7580                           	global	__size_of___wmul
  7581  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  7582                           	
  7583  0C10                     ___wmul:	
  7584                           	opt	stack 4
  7585                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7586                           	line	4
  7587                           	
  7588  0C10                     l3522:	
  7589  0C10  01F4               	clrf	(___wmul@product)
  7590  0C11  01F5               	clrf	(___wmul@product+1)
  7591  0C12  2C13               	goto	l3524
  7592                           	line	6
  7593                           	
  7594  0C13                     l1396:	
  7595                           	line	7
  7596                           	
  7597  0C13                     l3524:	
  7598  0C13  1C70               	btfss	(___wmul@multiplier),(0)&7
  7599  0C14  2C16               	goto	u3801
  7600  0C15  2C17               	goto	u3800
  7601  0C16                     u3801:
  7602  0C16  2C1D               	goto	l1397
  7603  0C17                     u3800:
  7604                           	line	8
  7605                           	
  7606  0C17                     l3526:	
  7607  0C17  0872               	movf	(___wmul@multiplicand),w
  7608  0C18  07F4               	addwf	(___wmul@product),f
  7609  0C19  1803               	skipnc
  7610  0C1A  0AF5               	incf	(___wmul@product+1),f
  7611  0C1B  0873               	movf	(___wmul@multiplicand+1),w
  7612  0C1C  07F5               	addwf	(___wmul@product+1),f
  7613                           	
  7614  0C1D                     l1397:	
  7615                           	line	9
  7616  0C1D  3001               	movlw	01h
  7617                           	
  7618  0C1E                     u3815:
  7619  0C1E  1003               	clrc
  7620  0C1F  0DF2               	rlf	(___wmul@multiplicand),f
  7621  0C20  0DF3               	rlf	(___wmul@multiplicand+1),f
  7622  0C21  3EFF               	addlw	-1
  7623  0C22  1D03               	skipz
  7624  0C23  2C1E               	goto	u3815
  7625                           	line	10
  7626                           	
  7627  0C24                     l3528:	
  7628  0C24  3001               	movlw	01h
  7629                           	
  7630  0C25                     u3825:
  7631  0C25  1003               	clrc
  7632  0C26  0CF1               	rrf	(___wmul@multiplier+1),f
  7633  0C27  0CF0               	rrf	(___wmul@multiplier),f
  7634  0C28  3EFF               	addlw	-1
  7635  0C29  1D03               	skipz
  7636  0C2A  2C25               	goto	u3825
  7637                           	line	11
  7638  0C2B  0871               	movf	((___wmul@multiplier+1)),w
  7639  0C2C  0470               	iorwf	((___wmul@multiplier)),w
  7640  0C2D  1D03               	skipz
  7641  0C2E  2C30               	goto	u3831
  7642  0C2F  2C31               	goto	u3830
  7643  0C30                     u3831:
  7644  0C30  2C13               	goto	l3524
  7645  0C31                     u3830:
  7646  0C31  2C32               	goto	l3530
  7647                           	
  7648  0C32                     l1398:	
  7649                           	line	12
  7650                           	
  7651  0C32                     l3530:	
  7652  0C32  0875               	movf	(___wmul@product+1),w
  7653  0C33  01F1               	clrf	(?___wmul+1)
  7654  0C34  07F1               	addwf	(?___wmul+1)
  7655  0C35  0874               	movf	(___wmul@product),w
  7656  0C36  01F0               	clrf	(?___wmul)
  7657  0C37  07F0               	addwf	(?___wmul)
  7658                           
  7659  0C38  2C39               	goto	l1399
  7660                           	
  7661  0C39                     l3532:	
  7662                           	line	13
  7663                           	
  7664  0C39                     l1399:	
  7665  0C39  0008               	return
  7666                           	opt stack 0
  7667                           GLOBAL	__end_of___wmul
  7668  0C3A                     	__end_of___wmul:
  7669 ;; =============== function ___wmul ends ============
  7670                           
  7671                           	signat	___wmul,8314
  7672                           	global	_resetout
  7673                           psect	text771,local,class=CODE,delta=2
  7674                           global __ptext771
  7675  0A62                     __ptext771:
  7676                           
  7677 ;; *************** function _resetout *****************
  7678 ;; Defined at:
  7679 ;;		line 823 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;		None
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;		None
  7684 ;; Return value:  Size  Location     Type
  7685 ;;		None               void
  7686 ;; Registers used:
  7687 ;;		None
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7693 ;;      Params:         0       0       0       0       0
  7694 ;;      Locals:         0       0       0       0       0
  7695 ;;      Temps:          0       0       0       0       0
  7696 ;;      Totals:         0       0       0       0       0
  7697 ;;Total ram usage:        0 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_actrow
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           psect	text771
  7706                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  7707                           	line	823
  7708                           	global	__size_of_resetout
  7709  0007                     	__size_of_resetout	equ	__end_of_resetout-_resetout
  7710                           	
  7711  0A62                     _resetout:	
  7712                           	opt	stack 3
  7713                           ; Regs used in _resetout: []
  7714                           	line	824
  7715                           	
  7716  0A62                     l3520:	
  7717                           ;prev13.c: 824: RD6=0;RD7=0;RB6=0;RB7=0;
  7718  0A62  1283               	bcf	status, 5	;RP0=0, select bank0
  7719  0A63  1303               	bcf	status, 6	;RP1=0, select bank0
  7720  0A64  1308               	bcf	(70/8),(70)&7
  7721  0A65  1388               	bcf	(71/8),(71)&7
  7722  0A66  1306               	bcf	(54/8),(54)&7
  7723  0A67  1386               	bcf	(55/8),(55)&7
  7724                           	line	825
  7725                           	
  7726  0A68                     l1332:	
  7727  0A68  0008               	return
  7728                           	opt stack 0
  7729                           GLOBAL	__end_of_resetout
  7730  0A69                     	__end_of_resetout:
  7731 ;; =============== function _resetout ends ============
  7732                           
  7733                           	signat	_resetout,88
  7734                           	global	_getn
  7735                           psect	text772,local,class=CODE,delta=2
  7736                           global __ptext772
  7737  0003                     __ptext772:
  7738                           
  7739 ;; *************** function _getn *****************
  7740 ;; Defined at:
  7741 ;;		line 663 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  c               1    wreg     unsigned char 
  7744 ;;  n               1    0[COMMON] unsigned char 
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;  c               1    3[COMMON] unsigned char 
  7747 ;;  tmp             1    4[COMMON] unsigned char 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  1    wreg      unsigned char 
  7750 ;; Registers used:
  7751 ;;		wreg, status,2, status,0
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7757 ;;      Params:         1       0       0       0       0
  7758 ;;      Locals:         2       0       0       0       0
  7759 ;;      Temps:          2       0       0       0       0
  7760 ;;      Totals:         5       0       0       0       0
  7761 ;;Total ram usage:        5 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_setLCD
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           psect	text772
  7770                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  7771                           	line	663
  7772                           	global	__size_of_getn
  7773  001B                     	__size_of_getn	equ	__end_of_getn-_getn
  7774                           	
  7775  0003                     _getn:	
  7776                           	opt	stack 2
  7777                           ; Regs used in _getn: [wreg+status,2+status,0]
  7778                           ;getn@c stored from wreg
  7779  0003  00F3               	movwf	(getn@c)
  7780                           	line	664
  7781                           	
  7782  0004                     l3480:	
  7783                           ;prev13.c: 664: unsigned char tmp=1<<n;
  7784  0004  3001               	movlw	(01h)
  7785  0005  00F1               	movwf	(??_getn+0)+0
  7786  0006  0A70               	incf	(getn@n),w
  7787  0007  280A               	goto	u3734
  7788  0008                     u3735:
  7789  0008  1003               	clrc
  7790  0009  0DF1               	rlf	(??_getn+0)+0,f
  7791  000A                     u3734:
  7792  000A  3EFF               	addlw	-1
  7793  000B  1D03               	skipz
  7794  000C  2808               	goto	u3735
  7795  000D  0871               	movf	0+(??_getn+0)+0,w
  7796  000E  00F2               	movwf	(??_getn+1)+0
  7797  000F  0872               	movf	(??_getn+1)+0,w
  7798  0010  00F4               	movwf	(getn@tmp)
  7799                           	line	665
  7800                           ;prev13.c: 665: return (c & tmp)>>n;
  7801  0011  0873               	movf	(getn@c),w
  7802  0012  0574               	andwf	(getn@tmp),w
  7803  0013  00F1               	movwf	(??_getn+0)+0
  7804  0014  0A70               	incf	(getn@n),w
  7805  0015  2818               	goto	u3744
  7806  0016                     u3745:
  7807  0016  1003               	clrc
  7808  0017  0CF1               	rrf	(??_getn+0)+0,f
  7809  0018                     u3744:
  7810  0018  3EFF               	addlw	-1
  7811  0019  1D03               	skipz
  7812  001A  2816               	goto	u3745
  7813  001B  0871               	movf	0+(??_getn+0)+0,w
  7814  001C  281D               	goto	l1268
  7815                           	
  7816  001D                     l3482:	
  7817                           	line	666
  7818                           	
  7819  001D                     l1268:	
  7820  001D  0008               	return
  7821                           	opt stack 0
  7822                           GLOBAL	__end_of_getn
  7823  001E                     	__end_of_getn:
  7824 ;; =============== function _getn ends ============
  7825                           
  7826                           	signat	_getn,8313
  7827                           	global	_strcat
  7828                           psect	text773,local,class=CODE,delta=2
  7829                           global __ptext773
  7830  0BE7                     __ptext773:
  7831                           
  7832 ;; *************** function _strcat *****************
  7833 ;; Defined at:
  7834 ;;		line 10 in file "../../common/strcat.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  to              1    wreg     PTR unsigned char 
  7837 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  7838 ;;  from            1    0[COMMON] PTR const unsigned char 
  7839 ;;		 -> getlogicseq@snum(16), 
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;  to              1    2[COMMON] PTR unsigned char 
  7842 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  7843 ;;  cp              1    3[COMMON] PTR unsigned char 
  7844 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1    wreg      PTR unsigned char 
  7847 ;; Registers used:
  7848 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7854 ;;      Params:         1       0       0       0       0
  7855 ;;      Locals:         2       0       0       0       0
  7856 ;;      Temps:          1       0       0       0       0
  7857 ;;      Totals:         4       0       0       0       0
  7858 ;;Total ram usage:        4 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; This function calls:
  7861 ;;		Nothing
  7862 ;; This function is called by:
  7863 ;;		_getlogicseq
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           psect	text773
  7867                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcat.c"
  7868                           	line	10
  7869                           	global	__size_of_strcat
  7870  0029                     	__size_of_strcat	equ	__end_of_strcat-_strcat
  7871                           	
  7872  0BE7                     _strcat:	
  7873                           	opt	stack 5
  7874                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  7875                           ;strcat@to stored from wreg
  7876                           	line	18
  7877  0BE7  00F2               	movwf	(strcat@to)
  7878                           	
  7879  0BE8                     l3404:	
  7880  0BE8  0872               	movf	(strcat@to),w
  7881  0BE9  00F1               	movwf	(??_strcat+0)+0
  7882  0BEA  0871               	movf	(??_strcat+0)+0,w
  7883  0BEB  00F3               	movwf	(strcat@cp)
  7884                           	line	19
  7885  0BEC  2BF2               	goto	l3408
  7886                           	
  7887  0BED                     l1368:	
  7888                           	line	20
  7889                           	
  7890  0BED                     l3406:	
  7891  0BED  3001               	movlw	(01h)
  7892  0BEE  00F1               	movwf	(??_strcat+0)+0
  7893  0BEF  0871               	movf	(??_strcat+0)+0,w
  7894  0BF0  07F3               	addwf	(strcat@cp),f
  7895  0BF1  2BF2               	goto	l3408
  7896                           	
  7897  0BF2                     l1367:	
  7898                           	line	19
  7899                           	
  7900  0BF2                     l3408:	
  7901  0BF2  0873               	movf	(strcat@cp),w
  7902  0BF3  0084               	movwf	fsr0
  7903  0BF4  1383               	bcf	status, 7	;select IRP bank0
  7904  0BF5  0880               	movf	indf,f
  7905  0BF6  1D03               	skipz
  7906  0BF7  2BF9               	goto	u3551
  7907  0BF8  2BFA               	goto	u3550
  7908  0BF9                     u3551:
  7909  0BF9  2BED               	goto	l3406
  7910  0BFA                     u3550:
  7911  0BFA  2BFD               	goto	l3410
  7912                           	
  7913  0BFB                     l1369:	
  7914                           	line	21
  7915  0BFB  2BFD               	goto	l3410
  7916                           	
  7917  0BFC                     l1371:	
  7918                           	line	22
  7919  0BFC  2BFD               	goto	l3410
  7920                           	
  7921  0BFD                     l1370:	
  7922                           	line	21
  7923                           	
  7924  0BFD                     l3410:	
  7925  0BFD  0870               	movf	(strcat@from),w
  7926  0BFE  0084               	movwf	fsr0
  7927  0BFF  3001               	movlw	01h
  7928  0C00  07F0               	addwf	(strcat@from),f
  7929  0C01  0800               	movf	indf,w
  7930  0C02  00F1               	movwf	(??_strcat+0)+0
  7931  0C03  0873               	movf	(strcat@cp),w
  7932  0C04  0084               	movwf	fsr0
  7933  0C05  3001               	movlw	01h
  7934  0C06  07F3               	addwf	(strcat@cp),f
  7935  0C07  0871               	movf	(??_strcat+0)+0,w
  7936  0C08  0080               	movwf	indf
  7937  0C09  0880               	movf	(indf),f
  7938  0C0A  1D03               	skipz
  7939  0C0B  2C0D               	goto	u3561
  7940  0C0C  2C0E               	goto	u3560
  7941  0C0D                     u3561:
  7942  0C0D  2BFD               	goto	l3410
  7943  0C0E                     u3560:
  7944  0C0E  2C0F               	goto	l1373
  7945                           	
  7946  0C0F                     l1372:	
  7947                           	line	24
  7948                           ;	Return value of _strcat is never used
  7949                           	
  7950  0C0F                     l1373:	
  7951  0C0F  0008               	return
  7952                           	opt stack 0
  7953                           GLOBAL	__end_of_strcat
  7954  0C10                     	__end_of_strcat:
  7955 ;; =============== function _strcat ends ============
  7956                           
  7957                           	signat	_strcat,8313
  7958                           	global	_strcmp
  7959                           psect	text774,local,class=CODE,delta=2
  7960                           global __ptext774
  7961  0C9C                     __ptext774:
  7962                           
  7963 ;; *************** function _strcmp *****************
  7964 ;; Defined at:
  7965 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  s1              1    wreg     PTR const unsigned char 
  7968 ;;		 -> lo(5), 
  7969 ;;  s2              2    0[COMMON] PTR const unsigned char 
  7970 ;;		 -> STR_35(5), STR_34(5), STR_33(5), STR_32(5), 
  7971 ;;		 -> STR_31(5), STR_30(5), STR_29(5), STR_28(5), 
  7972 ;;		 -> STR_27(5), STR_26(5), STR_25(5), STR_24(5), 
  7973 ;;		 -> STR_23(5), STR_22(5), STR_21(5), STR_20(5), 
  7974 ;;		 -> plo(5), 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;  s1              1    7[COMMON] PTR const unsigned char 
  7977 ;;		 -> lo(5), 
  7978 ;;  r               1    6[COMMON] char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  2    0[COMMON] int 
  7981 ;; Registers used:
  7982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7988 ;;      Params:         2       0       0       0       0
  7989 ;;      Locals:         2       0       0       0       0
  7990 ;;      Temps:          4       0       0       0       0
  7991 ;;      Totals:         8       0       0       0       0
  7992 ;;Total ram usage:        8 bytes
  7993 ;; Hardware stack levels used:    2
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_startswitch
  7998 ;;		_parselogic
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           psect	text774
  8002                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  8003                           	line	34
  8004                           	global	__size_of_strcmp
  8005  0039                     	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  8006                           	
  8007  0C9C                     _strcmp:	
  8008                           	opt	stack 4
  8009                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  8010                           ;strcmp@s1 stored from wreg
  8011  0C9C  00F7               	movwf	(strcmp@s1)
  8012                           	line	37
  8013                           	
  8014  0C9D                     l3394:	
  8015  0C9D  2C9F               	goto	l3396
  8016                           	
  8017  0C9E                     l1377:	
  8018                           	line	38
  8019  0C9E  2C9F               	goto	l3396
  8020                           	
  8021  0C9F                     l1376:	
  8022                           	line	37
  8023                           	
  8024  0C9F                     l3396:	
  8025  0C9F  0877               	movf	(strcmp@s1),w
  8026  0CA0  0084               	movwf	fsr
  8027  0CA1  1383               	bcf	status, 7	;select IRP bank0
  8028  0CA2  0800               	movf	indf,w
  8029  0CA3  00F2               	movwf	(??_strcmp+0)+0
  8030  0CA4  0871               	movf	(strcmp@s2+1),w
  8031  0CA5  00F4               	movwf	(??_strcmp+1)+0+1
  8032  0CA6  0870               	movf	(strcmp@s2),w
  8033  0CA7  00F3               	movwf	(??_strcmp+1)+0
  8034  0CA8  3001               	movlw	(01h)
  8035  0CA9  07F0               	addwf	(strcmp@s2),f
  8036  0CAA  1803               	skipnc
  8037  0CAB  0AF1               	incf	(strcmp@s2+1),f
  8038  0CAC  0874               	movf	1+(??_strcmp+1)+0,w
  8039  0CAD  1283               	bcf	status, 5	;RP0=0, select bank0
  8040  0CAE  1303               	bcf	status, 6	;RP1=0, select bank0
  8041  0CAF  00FF               	movwf	btemp+1
  8042  0CB0  0873               	movf	0+(??_strcmp+1)+0,w
  8043  0CB1  0084               	movwf	fsr0
  8044  0CB2  120A  158A  2000   	fcall	stringtab
              120A  158A         
  8045  0CB7  3AFF               	xorlw	0ffh
  8046  0CB8  3E01               	addlw	1
  8047  0CB9  0772               	addwf	(??_strcmp+0)+0,w
  8048  0CBA  00F5               	movwf	(??_strcmp+3)+0
  8049  0CBB  0875               	movf	(??_strcmp+3)+0,w
  8050  0CBC  00F6               	movwf	(strcmp@r)
  8051  0CBD  08F6               	movf	((strcmp@r)),f
  8052  0CBE  1D03               	skipz
  8053  0CBF  2CC1               	goto	u3531
  8054  0CC0  2CC2               	goto	u3530
  8055  0CC1                     u3531:
  8056  0CC1  2CCE               	goto	l3400
  8057  0CC2                     u3530:
  8058                           	
  8059  0CC2                     l3398:	
  8060  0CC2  0877               	movf	(strcmp@s1),w
  8061  0CC3  0084               	movwf	fsr0
  8062  0CC4  3001               	movlw	01h
  8063  0CC5  07F7               	addwf	(strcmp@s1),f
  8064  0CC6  1383               	bcf	status, 7	;select IRP bank0
  8065  0CC7  0880               	movf	indf,f
  8066  0CC8  1D03               	skipz
  8067  0CC9  2CCB               	goto	u3541
  8068  0CCA  2CCC               	goto	u3540
  8069  0CCB                     u3541:
  8070  0CCB  2C9F               	goto	l3396
  8071  0CCC                     u3540:
  8072  0CCC  2CCE               	goto	l3400
  8073                           	
  8074  0CCD                     l1379:	
  8075  0CCD  2CCE               	goto	l3400
  8076                           	
  8077  0CCE                     l1380:	
  8078                           	line	39
  8079                           	
  8080  0CCE                     l3400:	
  8081  0CCE  0876               	movf	(strcmp@r),w
  8082  0CCF  00F0               	movwf	(?_strcmp)
  8083  0CD0  01F1               	clrf	(?_strcmp+1)
  8084  0CD1  1BF0               	btfsc	(?_strcmp),7
  8085  0CD2  03F1               	decf	(?_strcmp+1),f
  8086  0CD3  2CD4               	goto	l1381
  8087                           	
  8088  0CD4                     l3402:	
  8089                           	line	40
  8090                           	
  8091  0CD4                     l1381:	
  8092  0CD4  0008               	return
  8093                           	opt stack 0
  8094                           GLOBAL	__end_of_strcmp
  8095  0CD5                     	__end_of_strcmp:
  8096 ;; =============== function _strcmp ends ============
  8097                           
  8098                           	signat	_strcmp,8314
  8099                           	global	_check
  8100                           psect	text775,local,class=CODE,delta=2
  8101                           global __ptext775
  8102  0D13                     __ptext775:
  8103                           
  8104 ;; *************** function _check *****************
  8105 ;; Defined at:
  8106 ;;		line 237 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;  input           1    wreg     PTR unsigned char 
  8109 ;;		 -> lo(5), 
  8110 ;;  logic           1    0[COMMON] PTR unsigned char 
  8111 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  input           1    3[COMMON] PTR unsigned char 
  8114 ;;		 -> lo(5), 
  8115 ;;  i               2    4[COMMON] int 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  2    0[COMMON] int 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8125 ;;      Params:         2       0       0       0       0
  8126 ;;      Locals:         3       0       0       0       0
  8127 ;;      Temps:          1       0       0       0       0
  8128 ;;      Totals:         6       0       0       0       0
  8129 ;;Total ram usage:        6 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_startswitch
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           psect	text775
  8138                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8139                           	line	237
  8140                           	global	__size_of_check
  8141  0049                     	__size_of_check	equ	__end_of_check-_check
  8142                           	
  8143  0D13                     _check:	
  8144                           	opt	stack 5
  8145                           ; Regs used in _check: [wreg-fsr0h+status,2+status,0+btemp+1]
  8146                           ;check@input stored from wreg
  8147                           	line	239
  8148  0D13  00F3               	movwf	(check@input)
  8149                           	
  8150  0D14                     l3372:	
  8151                           ;prev13.c: 239: int i=0;
  8152  0D14  01F4               	clrf	(check@i)
  8153  0D15  01F5               	clrf	(check@i+1)
  8154                           	line	241
  8155                           ;prev13.c: 241: for(i=0;i<4;i++)
  8156  0D16  01F4               	clrf	(check@i)
  8157  0D17  01F5               	clrf	(check@i+1)
  8158                           	
  8159  0D18                     l3374:	
  8160  0D18  0875               	movf	(check@i+1),w
  8161  0D19  3A80               	xorlw	80h
  8162  0D1A  00FF               	movwf	btemp+1
  8163  0D1B  3080               	movlw	(high(04h))^80h
  8164  0D1C  027F               	subwf	btemp+1,w
  8165  0D1D  1D03               	skipz
  8166  0D1E  2D21               	goto	u3495
  8167  0D1F  3004               	movlw	low(04h)
  8168  0D20  0274               	subwf	(check@i),w
  8169  0D21                     u3495:
  8170                           
  8171  0D21  1C03               	skipc
  8172  0D22  2D24               	goto	u3491
  8173  0D23  2D25               	goto	u3490
  8174  0D24                     u3491:
  8175  0D24  2D27               	goto	l3378
  8176  0D25                     u3490:
  8177  0D25  2D56               	goto	l3390
  8178                           	
  8179  0D26                     l3376:	
  8180  0D26  2D56               	goto	l3390
  8181                           	line	242
  8182                           	
  8183  0D27                     l1126:	
  8184                           	line	243
  8185                           	
  8186  0D27                     l3378:	
  8187                           ;prev13.c: 242: {
  8188                           ;prev13.c: 243: if(input[i]=='0'&&logic[i]=='1')
  8189  0D27  0874               	movf	(check@i),w
  8190  0D28  0773               	addwf	(check@input),w
  8191  0D29  00F2               	movwf	(??_check+0)+0
  8192  0D2A  0872               	movf	0+(??_check+0)+0,w
  8193  0D2B  0084               	movwf	fsr0
  8194  0D2C  1383               	bcf	status, 7	;select IRP bank0
  8195  0D2D  0800               	movf	indf,w
  8196  0D2E  3A30               	xorlw	030h
  8197  0D2F  1D03               	skipz
  8198  0D30  2D32               	goto	u3501
  8199  0D31  2D33               	goto	u3500
  8200  0D32                     u3501:
  8201  0D32  2D42               	goto	l3386
  8202  0D33                     u3500:
  8203                           	
  8204  0D33                     l3380:	
  8205  0D33  0874               	movf	(check@i),w
  8206  0D34  0770               	addwf	(check@logic),w
  8207  0D35  00F2               	movwf	(??_check+0)+0
  8208  0D36  0872               	movf	0+(??_check+0)+0,w
  8209  0D37  0084               	movwf	fsr0
  8210  0D38  0800               	movf	indf,w
  8211  0D39  3A31               	xorlw	031h
  8212  0D3A  1D03               	skipz
  8213  0D3B  2D3D               	goto	u3511
  8214  0D3C  2D3E               	goto	u3510
  8215  0D3D                     u3511:
  8216  0D3D  2D42               	goto	l3386
  8217  0D3E                     u3510:
  8218                           	line	244
  8219                           	
  8220  0D3E                     l3382:	
  8221                           ;prev13.c: 244: return 0;
  8222  0D3E  01F0               	clrf	(?_check)
  8223  0D3F  01F1               	clrf	(?_check+1)
  8224  0D40  2D5B               	goto	l1129
  8225                           	
  8226  0D41                     l3384:	
  8227  0D41  2D5B               	goto	l1129
  8228                           	
  8229  0D42                     l1128:	
  8230                           	line	241
  8231                           	
  8232  0D42                     l3386:	
  8233  0D42  3001               	movlw	low(01h)
  8234  0D43  07F4               	addwf	(check@i),f
  8235  0D44  1803               	skipnc
  8236  0D45  0AF5               	incf	(check@i+1),f
  8237  0D46  3000               	movlw	high(01h)
  8238  0D47  07F5               	addwf	(check@i+1),f
  8239                           	
  8240  0D48                     l3388:	
  8241  0D48  0875               	movf	(check@i+1),w
  8242  0D49  3A80               	xorlw	80h
  8243  0D4A  00FF               	movwf	btemp+1
  8244  0D4B  3080               	movlw	(high(04h))^80h
  8245  0D4C  027F               	subwf	btemp+1,w
  8246  0D4D  1D03               	skipz
  8247  0D4E  2D51               	goto	u3525
  8248  0D4F  3004               	movlw	low(04h)
  8249  0D50  0274               	subwf	(check@i),w
  8250  0D51                     u3525:
  8251                           
  8252  0D51  1C03               	skipc
  8253  0D52  2D54               	goto	u3521
  8254  0D53  2D55               	goto	u3520
  8255  0D54                     u3521:
  8256  0D54  2D27               	goto	l3378
  8257  0D55                     u3520:
  8258  0D55  2D56               	goto	l3390
  8259                           	
  8260  0D56                     l1127:	
  8261                           	line	246
  8262                           	
  8263  0D56                     l3390:	
  8264                           ;prev13.c: 245: }
  8265                           ;prev13.c: 246: return 1;
  8266  0D56  3001               	movlw	low(01h)
  8267  0D57  00F0               	movwf	(?_check)
  8268  0D58  3000               	movlw	high(01h)
  8269  0D59  00F1               	movwf	((?_check))+1
  8270  0D5A  2D5B               	goto	l1129
  8271                           	
  8272  0D5B                     l3392:	
  8273                           	line	247
  8274                           	
  8275  0D5B                     l1129:	
  8276  0D5B  0008               	return
  8277                           	opt stack 0
  8278                           GLOBAL	__end_of_check
  8279  0D5C                     	__end_of_check:
  8280 ;; =============== function _check ends ============
  8281                           
  8282                           	signat	_check,8314
  8283                           	global	_strcpy
  8284                           psect	text776,local,class=CODE,delta=2
  8285                           global __ptext776
  8286  0BBE                     __ptext776:
  8287                           
  8288 ;; *************** function _strcpy *****************
  8289 ;; Defined at:
  8290 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  to              1    wreg     PTR unsigned char 
  8293 ;;		 -> getlogicseq@str(32), lo(5), plo(5), logic_d4(5), 
  8294 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  8295 ;;  from            2    2[COMMON] PTR const unsigned char 
  8296 ;;		 -> read_log@logic(5), STR_18(1), STR_17(20), STR_15(1), 
  8297 ;;		 -> STR_14(20), STR_12(1), STR_11(20), STR_8(4), 
  8298 ;;		 -> lo(5), 
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;  to              1    7[COMMON] PTR unsigned char 
  8301 ;;		 -> getlogicseq@str(32), lo(5), plo(5), logic_d4(5), 
  8302 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  8303 ;;  cp              1    8[COMMON] PTR unsigned char 
  8304 ;;		 -> getlogicseq@str(32), lo(5), plo(5), logic_d4(5), 
  8305 ;;		 -> logic_d3(5), logic_d2(5), logic_d1(5), 
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  1    wreg      PTR unsigned char 
  8308 ;; Registers used:
  8309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8315 ;;      Params:         2       0       0       0       0
  8316 ;;      Locals:         2       0       0       0       0
  8317 ;;      Temps:          3       0       0       0       0
  8318 ;;      Totals:         7       0       0       0       0
  8319 ;;Total ram usage:        7 bytes
  8320 ;; Hardware stack levels used:    2
  8321 ;; This function calls:
  8322 ;;		Nothing
  8323 ;; This function is called by:
  8324 ;;		_getlogic
  8325 ;;		_startswitch
  8326 ;;		_getlogicseq
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           psect	text776
  8330                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  8331                           	line	10
  8332                           	global	__size_of_strcpy
  8333  0029                     	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  8334                           	
  8335  0BBE                     _strcpy:	
  8336                           	opt	stack 4
  8337                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  8338                           ;strcpy@to stored from wreg
  8339                           	line	18
  8340  0BBE  00F7               	movwf	(strcpy@to)
  8341                           	
  8342  0BBF                     l3368:	
  8343  0BBF  0877               	movf	(strcpy@to),w
  8344  0BC0  00F4               	movwf	(??_strcpy+0)+0
  8345  0BC1  0874               	movf	(??_strcpy+0)+0,w
  8346  0BC2  00F8               	movwf	(strcpy@cp)
  8347                           	line	19
  8348  0BC3  2BC5               	goto	l3370
  8349                           	
  8350  0BC4                     l1385:	
  8351                           	line	20
  8352  0BC4  2BC5               	goto	l3370
  8353                           	
  8354  0BC5                     l1384:	
  8355                           	line	19
  8356                           	
  8357  0BC5                     l3370:	
  8358  0BC5  0873               	movf	(strcpy@from+1),w
  8359  0BC6  00F5               	movwf	(??_strcpy+0)+0+1
  8360  0BC7  0872               	movf	(strcpy@from),w
  8361  0BC8  00F4               	movwf	(??_strcpy+0)+0
  8362  0BC9  3001               	movlw	(01h)
  8363  0BCA  07F2               	addwf	(strcpy@from),f
  8364  0BCB  1803               	skipnc
  8365  0BCC  0AF3               	incf	(strcpy@from+1),f
  8366  0BCD  0875               	movf	1+(??_strcpy+0)+0,w
  8367  0BCE  1283               	bcf	status, 5	;RP0=0, select bank0
  8368  0BCF  1303               	bcf	status, 6	;RP1=0, select bank0
  8369  0BD0  00FF               	movwf	btemp+1
  8370  0BD1  0874               	movf	0+(??_strcpy+0)+0,w
  8371  0BD2  0084               	movwf	fsr0
  8372  0BD3  120A  158A  2000   	fcall	stringtab
              120A  158A         
  8373  0BD8  00F6               	movwf	(??_strcpy+2)+0
  8374  0BD9  0878               	movf	(strcpy@cp),w
  8375  0BDA  0084               	movwf	fsr0
  8376  0BDB  3001               	movlw	01h
  8377  0BDC  07F8               	addwf	(strcpy@cp),f
  8378  0BDD  0876               	movf	(??_strcpy+2)+0,w
  8379  0BDE  1383               	bcf	status, 7	;select IRP bank0
  8380  0BDF  0080               	movwf	indf
  8381  0BE0  0880               	movf	(indf),f
  8382  0BE1  1D03               	skipz
  8383  0BE2  2BE4               	goto	u3481
  8384  0BE3  2BE5               	goto	u3480
  8385  0BE4                     u3481:
  8386  0BE4  2BC5               	goto	l3370
  8387  0BE5                     u3480:
  8388  0BE5  2BE6               	goto	l1387
  8389                           	
  8390  0BE6                     l1386:	
  8391                           	line	22
  8392                           ;	Return value of _strcpy is never used
  8393                           	
  8394  0BE6                     l1387:	
  8395  0BE6  0008               	return
  8396                           	opt stack 0
  8397                           GLOBAL	__end_of_strcpy
  8398  0BE7                     	__end_of_strcpy:
  8399 ;; =============== function _strcpy ends ============
  8400                           
  8401                           	signat	_strcpy,8313
  8402                           	global	_delay
  8403                           psect	text777,local,class=CODE,delta=2
  8404                           global __ptext777
  8405  0ACD                     __ptext777:
  8406                           
  8407 ;; *************** function _delay *****************
  8408 ;; Defined at:
  8409 ;;		line 563 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  x               2    0[COMMON] unsigned int 
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;		None
  8414 ;; Return value:  Size  Location     Type
  8415 ;;		None               void
  8416 ;; Registers used:
  8417 ;;		wreg
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8423 ;;      Params:         2       0       0       0       0
  8424 ;;      Locals:         0       0       0       0       0
  8425 ;;      Temps:          0       0       0       0       0
  8426 ;;      Totals:         2       0       0       0       0
  8427 ;;Total ram usage:        2 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; This function calls:
  8430 ;;		Nothing
  8431 ;; This function is called by:
  8432 ;;		_getlogic
  8433 ;;		_startswitch
  8434 ;;		_getlogicseq
  8435 ;;		_latch
  8436 ;;		_actrow
  8437 ;;		_read_eep
  8438 ;;		_write_eep
  8439 ;;		_scroll
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           psect	text777
  8443                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8444                           	line	563
  8445                           	global	__size_of_delay
  8446  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  8447                           	
  8448  0ACD                     _delay:	
  8449                           	opt	stack 2
  8450                           ; Regs used in _delay: [wreg]
  8451                           	line	564
  8452                           	
  8453  0ACD                     l3364:	
  8454                           ;prev13.c: 564: while(x-->0);
  8455  0ACD  2ACF               	goto	l3366
  8456                           	
  8457  0ACE                     l1232:	
  8458  0ACE  2ACF               	goto	l3366
  8459                           	
  8460  0ACF                     l1231:	
  8461                           	
  8462  0ACF                     l3366:	
  8463  0ACF  3001               	movlw	low(01h)
  8464  0AD0  02F0               	subwf	(delay@x),f
  8465  0AD1  3000               	movlw	high(01h)
  8466  0AD2  1C03               	skipc
  8467  0AD3  03F1               	decf	(delay@x+1),f
  8468  0AD4  02F1               	subwf	(delay@x+1),f
  8469  0AD5  30FF               	movlw	high(0FFFFh)
  8470  0AD6  0671               	xorwf	((delay@x+1)),w
  8471  0AD7  1D03               	skipz
  8472  0AD8  2ADB               	goto	u3475
  8473  0AD9  30FF               	movlw	low(0FFFFh)
  8474  0ADA  0670               	xorwf	((delay@x)),w
  8475  0ADB                     u3475:
  8476                           
  8477  0ADB  1D03               	skipz
  8478  0ADC  2ADE               	goto	u3471
  8479  0ADD  2ADF               	goto	u3470
  8480  0ADE                     u3471:
  8481  0ADE  2ACF               	goto	l3366
  8482  0ADF                     u3470:
  8483  0ADF  2AE0               	goto	l1234
  8484                           	
  8485  0AE0                     l1233:	
  8486                           	line	565
  8487                           	
  8488  0AE0                     l1234:	
  8489  0AE0  0008               	return
  8490                           	opt stack 0
  8491                           GLOBAL	__end_of_delay
  8492  0AE1                     	__end_of_delay:
  8493 ;; =============== function _delay ends ============
  8494                           
  8495                           	signat	_delay,4216
  8496                           	global	_initkeypad
  8497                           psect	text778,local,class=CODE,delta=2
  8498                           global __ptext778
  8499  0A70                     __ptext778:
  8500                           
  8501 ;; *************** function _initkeypad *****************
  8502 ;; Defined at:
  8503 ;;		line 759 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;		None
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;		None
  8508 ;; Return value:  Size  Location     Type
  8509 ;;		None               void
  8510 ;; Registers used:
  8511 ;;		wreg, status,2
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8517 ;;      Params:         0       0       0       0       0
  8518 ;;      Locals:         0       0       0       0       0
  8519 ;;      Temps:          0       0       0       0       0
  8520 ;;      Totals:         0       0       0       0       0
  8521 ;;Total ram usage:        0 bytes
  8522 ;; Hardware stack levels used:    1
  8523 ;; This function calls:
  8524 ;;		Nothing
  8525 ;; This function is called by:
  8526 ;;		_main
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           psect	text778
  8530                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8531                           	line	759
  8532                           	global	__size_of_initkeypad
  8533  0008                     	__size_of_initkeypad	equ	__end_of_initkeypad-_initkeypad
  8534                           	
  8535  0A70                     _initkeypad:	
  8536                           	opt	stack 7
  8537                           ; Regs used in _initkeypad: [wreg+status,2]
  8538                           	line	760
  8539                           	
  8540  0A70                     l1820:	
  8541                           ;prev13.c: 760: PORTB = 0;
  8542  0A70  1283               	bcf	status, 5	;RP0=0, select bank0
  8543  0A71  1303               	bcf	status, 6	;RP1=0, select bank0
  8544  0A72  0186               	clrf	(6)	;volatile
  8545                           	line	761
  8546                           	
  8547  0A73                     l1822:	
  8548                           ;prev13.c: 761: TRISB = 0b11010000;
  8549  0A73  30D0               	movlw	(0D0h)
  8550  0A74  1683               	bsf	status, 5	;RP0=1, select bank1
  8551  0A75  1303               	bcf	status, 6	;RP1=0, select bank1
  8552  0A76  0086               	movwf	(134)^080h	;volatile
  8553                           	line	763
  8554                           	
  8555  0A77                     l1298:	
  8556  0A77  0008               	return
  8557                           	opt stack 0
  8558                           GLOBAL	__end_of_initkeypad
  8559  0A78                     	__end_of_initkeypad:
  8560 ;; =============== function _initkeypad ends ============
  8561                           
  8562                           	signat	_initkeypad,88
  8563                           	global	_buzz
  8564                           psect	text779,local,class=CODE,delta=2
  8565                           global __ptext779
  8566  0AAC                     __ptext779:
  8567                           
  8568 ;; *************** function _buzz *****************
  8569 ;; Defined at:
  8570 ;;		line 42 in file "C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;  val             2    0[COMMON] int 
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;		None
  8575 ;; Return value:  Size  Location     Type
  8576 ;;		None               void
  8577 ;; Registers used:
  8578 ;;		wreg
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8584 ;;      Params:         2       0       0       0       0
  8585 ;;      Locals:         0       0       0       0       0
  8586 ;;      Temps:          0       0       0       0       0
  8587 ;;      Totals:         2       0       0       0       0
  8588 ;;Total ram usage:        2 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; This function calls:
  8591 ;;		Nothing
  8592 ;; This function is called by:
  8593 ;;		_start
  8594 ;;		_startswitch
  8595 ;;		_getlogicseq
  8596 ;; This function uses a non-reentrant model
  8597 ;;
  8598                           psect	text779
  8599                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev1\prev13.c"
  8600                           	line	42
  8601                           	global	__size_of_buzz
  8602  0010                     	__size_of_buzz	equ	__end_of_buzz-_buzz
  8603                           	
  8604  0AAC                     _buzz:	
  8605                           	opt	stack 5
  8606                           ; Regs used in _buzz: [wreg]
  8607                           	line	43
  8608                           	
  8609  0AAC                     l3360:	
  8610                           ;prev13.c: 43: if(val!=99)
  8611  0AAC  3063               	movlw	063h
  8612  0AAD  0670               	xorwf	(buzz@val),w
  8613  0AAE  0471               	iorwf	(buzz@val+1),w
  8614  0AAF  1903               	skipnz
  8615  0AB0  2AB2               	goto	u3461
  8616  0AB1  2AB3               	goto	u3460
  8617  0AB2                     u3461:
  8618  0AB2  2AB7               	goto	l1093
  8619  0AB3                     u3460:
  8620                           	line	44
  8621                           	
  8622  0AB3                     l3362:	
  8623                           ;prev13.c: 44: RB5=1;
  8624  0AB3  1283               	bcf	status, 5	;RP0=0, select bank0
  8625  0AB4  1303               	bcf	status, 6	;RP1=0, select bank0
  8626  0AB5  1686               	bsf	(53/8),(53)&7
  8627  0AB6  2ABB               	goto	l1095
  8628                           	line	45
  8629                           	
  8630  0AB7                     l1093:	
  8631                           	line	46
  8632                           ;prev13.c: 45: else
  8633                           ;prev13.c: 46: RB5=0;
  8634  0AB7  1283               	bcf	status, 5	;RP0=0, select bank0
  8635  0AB8  1303               	bcf	status, 6	;RP1=0, select bank0
  8636  0AB9  1286               	bcf	(53/8),(53)&7
  8637  0ABA  2ABB               	goto	l1095
  8638                           	
  8639  0ABB                     l1094:	
  8640                           	line	47
  8641                           	
  8642  0ABB                     l1095:	
  8643  0ABB  0008               	return
  8644                           	opt stack 0
  8645                           GLOBAL	__end_of_buzz
  8646  0ABC                     	__end_of_buzz:
  8647 ;; =============== function _buzz ends ============
  8648                           
  8649                           	signat	_buzz,4216
  8650                           psect	text780,local,class=CODE,delta=2
  8651                           global __ptext780
  8652  0000                     __ptext780:
  8653                           	global	btemp
  8654  007E                     	btemp set 07Eh
  8655                           
  8656                           	DABS	1,126,2	;btemp
  8657                           	global	wtemp0
  8658  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Mon Aug 14 17:23:04 2017

                   pc 0002                    _RD 0C60                    _f1 00D5                    _f2 00D7  
                  _f3 00D9                    _WR 0C61          ___awdiv@sign 0076                    _lo 00A5  
                  fsr 0004   ___wmul@multiplicand 0072                   _RA0 0028                   _RA1 0029  
                 _RB0 0030                   _RA2 002A                   _RB1 0031                   _RC0 0038  
                 _RB2 0032                   _RC1 0039                   _RB3 0033                   _RD0 0040  
                 _RC2 003A                   _RD1 0041                   _RC3 003B                   _RB5 0035  
                 _RD2 0042                   _RC4 003C                   _RB6 0036                   _RD3 0043  
                 _RC5 003D                   _RB7 0037                   _RD4 0044                   _RC6 003E  
                 _RD5 0045                   _RD6 0046                   _RD7 0047                   _adr 0812  
                 _dat 0A9F                   _cmd 0A92                   _dev 006B                   _plo 00BE  
        ?_getlogicseq 0070                   _num 006D                   fsr0 0004                   indf 0000  
        ___awmod@sign 0076           _startswitch 037E                  l1101 01AA                  l1110 0290  
                l1102 01D6                  l1111 027F                  l1103 01D5                  l1112 028F  
                l1104 01E2                  l1113 028E                  l1105 0209                  l1122 0057  
                l1114 0291                  l1106 0234                  l1123 00C3                  l1115 0292  
                l1107 0246                  l1132 0BBD                  l1140 0435                  l1116 0292  
                l1108 025D                  l1301 00D8                  l1133 0BBD                  l1141 043E  
                l1109 026B                  l1126 0D27                  l1310 0132                  l1302 01A9  
                l1142 0457                  l1231 0ACF                  l1127 0D56                  l1311 011A  
                l1303 00F9                  l1119 0C9B                  l1143 0460                  l1151 04E6  
                l1232 0ACE                  l1128 0D42                  l1240 02DA                  l1320 015E  
                l1312 0131                  l1304 00E3                  l1144 0479                  l1136 03A4  
                l1160 05FC                  l1152 0539                  l1233 0AE0                  l1129 0D5B  
                l1241 02EF                  l1321 0169                  l1313 0125                  l1305 00F8  
                l1145 0482                  l1137 03B0                  l1161 05EF                  l1153 05C8  
                l1234 0AE0                  l1242 031A                  l1322 0168                  l1314 0130  
                l1306 00EE                  l1250 0A6F                  l1146 04C0                  l1138 03BC  
                l1170 06C1                  l1162 05EE                  l1243 0335                  l1323 0181  
                l1315 012F                  l1307 00F7                  l1139 04C0                  l1171 0671  
                l1163 05FA                  l1155 0561                  l1332 0A68                  l1244 037D  
                l1340 0D07                  l1324 01A4                  l1316 0148                  l1308 00F6  
                l1180 072D                  l1172 06C5                  l1164 05F9                  l1156 05C7  
                l1093 0AB7                  l1237 029E                  l1253 0B0F                  l1341 0D06  
                l1325 018C                  l1317 016B                  l1309 010F                  l1181 07BC  
                l1173 06D4                  l1165 05FB                  l1157 0577                  l1094 0ABB  
                l1350 0C49                  l1238 037D                  l1342 0D12                  l1326 01A3  
                l1318 0153                  l1262 0A9E                  l1190 07E2                  l1174 06F6  
                l1166 0633                  l1158 05CB                  ?_dat 0070                  l1095 0ABB  
                l1351 0C49                  l1239 02AD                  l1271 0FFF                  l1335 0CE5  
                l1327 0197                  l1319 016A                  l1247 0B2D                  l1191 07EE  
                l1183 0755                  l1175 06E9                  l1167 06C2                  l1159 05DA  
                l1352 0C4E                  l1360 0B82                  l1336 0D09                  l1328 01A2  
                l1256 0A88                  l1280 0DB3                  l1192 07ED                  l1184 07BB  
                l1176 06E8                  l4000 0508                  l1353 0C66                  l1361 0B82  
                l1337 0CF0                  l1329 01A1                  l1265 0AAB                  l1193 07EF  
                l1185 076B                  l1177 06F4                  l1169 065B                  l1370 0BFD  
                l1610 0E49                  l1362 0B86                  l1338 0D08                  l1274 0D6B  
                l1194 07FF                  l1186 07BF                  l1178 06F3                  l4010 0551  
                l4002 0512                  l1098 0AF4                  ?_cmd 0070                  l1371 0BFC  
                l1611 0E5A                  l1363 0B8C                  l1339 0CFB                  l1347 0EE5  
                l1259 0A91                  l1275 0D7B                  l1187 07CE                  l1179 06F5  
                l1380 0CCE                  l1372 0C0F                  l1268 001D                  l1540 0F0E  
                l1612 0E68                  l1604 0E23                  l1364 0B95                  l1356 0E14  
                l1276 0D82                  l1188 07F0                  l4100 073A                  l4020 059B  
                l4012 055A                  l4004 0525                  l1381 0CD4                  l1373 0C0F  
                l1541 0F1F                  l1613 0E73                  l1605 0E2D                  l1277 0D9F  
                l1189 07E3                  l1542 0F20                  l1614 0E7A                  l1606 0E69  
                l1278 0D85                  l4110 0761                  l4102 0745                  l4022 05A7  
                l4030 05CB                  l4014 0561                  l4006 0539                  l1367 0BF2  
                l1543 0F39                  l1607 0E43                  l1359 0B6F                  l1279 0DB3  
                l1384 0BC5                  l3400 0CCE                  l1376 0C9F                  l1368 0BED  
                l1544 0F47                  l1536 0EF4                  l1608 0E37                  l4112 078F  
                l4120 07BC                  l4104 074E                  l4040 05EF                  l4032 05D9  
                l4024 05BA                  l4016 0567                  l4008 0546                  l1385 0BC4  
                l1377 0C9E                  l1369 0BFB                  l1545 0F52                  l1537 0F02  
                l1609 0E48                  l1298 0A77                  l1386 0BE6                  l3402 0CD4  
                l3410 0BFD                  l1546 0F59                  l1538 0F48                  l4130 07DD  
                l4114 079B                  l4122 07BF                  l4106 0755                  l4050 061F  
                l4042 05F6                  l4034 05DA                  l4026 05C0                  l4018 056D  
                l1387 0BE6                  l1379 0CCD                  l1539 0F1A                  l1820 0A70  
                l3404 0BE8                  l1396 0C13                  l4140 07F9                  l4132 07E3  
                l4124 07CD                  l4116 07AE                  l4108 075B                  l4060 065B  
                l4052 0633                  l4036 05E3                  l4044 05FC                  l4028 05C8  
                l1397 0C1D                  l1822 0A73                  l3406 0BED                  l1398 0C32  
                l4142 07FB                  l4134 07EA                  l4126 07CE                  l4118 07B4  
                l4070 06B4                  l4062 0661                  l4054 0640                  l4046 0602  
                l4038 05E9                  l4150 01D6                  l1399 0C39                  l3360 0AAC  
                l3408 0BF2                  l3520 0A62                  l3600 0E69                  l4128 07D7  
                l4136 07F0                  l4080 06D4                  l4072 06BA                  l4064 0667  
                l4056 064B                  l4048 060C                  l4160 022A                  l4152 01E2  
                l4144 01AA                  l3362 0AB3                  l3370 0BC5                  l3530 0C32  
                l3522 0C10                  l3602 0E6D                  l3610 0C3E                  l4138 07F5  
                l4082 06DD                  l4090 06F6                  l4066 0695                  l4074 06C2  
                l4058 0654                  l4170 0244                  l4162 0230                  l4154 0209  
                l4146 01AE                  l3364 0ACD                  l3380 0D33                  l3372 0D14  
                l3532 0C39                  l3524 0C13                  l3540 0EF8                  l3604 0E73  
                l3620 0C59                  l3612 0C41                  l3700 0CE5                  l4092 06FC  
                l4084 06E3                  l4068 06A1                  l4076 06C5                  l4180 0265  
                l4172 024E                  l4164 0232                  l4156 0216                  l4148 01C1  
                l3366 0ACF                  l3382 0D3E                  l3390 0D56                  l3374 0D18  
                l3526 0C17                  l3550 0F0E                  l3542 0EFD                  l3534 0EE6  
                l3606 0E7A                  l3622 0C62                  l3614 0C44                  l3630 0B7B  
                l3710 0D02                  l3702 0CEC                  l4094 0706                  l4086 06E9  
                l4078 06D3                  l4190 0287                  l4182 026B                  l4174 0254  
                l4166 023C                  l4158 0221                  l3368 0BBF                  l3392 0D5B  
                l3384 0D41                  l3376 0D26                  l3480 0004                  l3528 0C24  
                l3560 0F37                  l3552 0F15                  l3544 0F02                  l3536 0EEB  
                l3624 0C66                  l3616 0C47                  l3608 0C3A                  l3632 0B80  
                l3640 0297                  l3704 0CF0                  l3712 0D09                  l3800 0180  
                l3720 00D6                  l4096 0719                  l4088 06F0                  l4184 0273  
                l4176 0258                  l4168 0240                  l4192 0AE1                  l3386 0D42  
                l3378 0D27                  l3394 0C9D                  l3482 001D                  l3570 0F52  
                l3562 0F39                  l3554 0F1A                  l3546 0F04                  l3538 0EF4  
                l3618 0C4E                  l3634 0B8B                  l3626 0B72                  l3650 02B1  
                l3642 029D                  l3706 0CF7                  l3810 0195                  l3802 0185  
                l3730 00E7                  l3722 00D7                  l3714 00C4                  l4098 072D  
                l4186 0279                  l4178 025D                  l4194 0AE5                  l3388 0D48  
                l3396 0C9F                  l3572 0F59                  l3564 0F40                  l3556 0F20  
                l3548 0F0A                  l3580 0E27                  l3636 0B8C                  l3628 0B78  
                l3660 02E0                  l3652 02C6                  l3644 029E                  l3708 0CFB  
                l3820 01A9                  l3812 0196                  l3804 018A                  l3732 00EC  
                l3724 00DC                  l3740 00F9                  l3716 00CD                  l3900 004C  
                l4188 027F                  l4196 0AEA                  l3398 0CC2                  l3558 0F31  
                l3566 0F48                  l3590 0E43                  l3582 0E2D                  l3574 0E15  
                l3662 02EE                  l3670 031A                  l3654 02CD                  l3646 02A4  
                l3638 0293                  l3814 019B                  l3806 018B                  l3750 0113  
                l3742 0102                  l3734 00ED                  l3726 00E1                  l3718 00D3  
                l3830 0E00                  l3822 0DB4                  l3910 0087                  l3902 0056  
                l4198 0AEF                  l3568 0F4C                  l3592 0E49                  l3584 0E33  
                l3576 0E1A                  l3680 0350                  l3672 031E                  l3664 02EF  
                l3656 02D1                  l3648 02AC                  l3816 01A0                  l3808 0190  
                l3760 0124                  l3752 0118                  l3744 0108                  l3736 00F2  
                l3728 00E2                  l3824 0DC5                  l3840 0EC1                  l3832 0E7B  
                l3912 009B                  l3904 0057                  l3920 0BA0                  l3594 0E53  
                l3586 0E37                  l3578 0E23                  l3682 0358                  l3674 0326  
                l3666 0308                  l3658 02DA                  l3690 0B03                  l3818 01A4  
                l3770 0141                  l3762 0129                  l3754 0119                  l3746 010D  
                l3738 00F5                  l3826 0DD8                  l3842 0ED2                  l3834 0E8E  
                l3850 0A83                  l3914 00AF                  l3906 006A                  l3922 0BA3  
                l3930 039D                  l3596 0E5A                  l3588 0E3E                  l3684 036F  
                l3676 0334                  l3668 030C                  l3692 0F5B                  l3780 0152  
                l3772 0146                  l3764 012E                  l3756 011E                  l3748 010E  
                l3828 0DEC                  l3844 0EE3                  l3836 0E9F                  l3852 0A89  
                l3860 0AA0                  l3908 0073                  l3924 0BA9                  l3916 0B96  
                l3940 03BC                  l3932 03A4                  l3598 0E61                  l3678 0335  
                l3686 0AF7                  l3694 0CD5                  l3790 0167                  l3782 0157  
                l3774 0147                  l3758 0123                  l3766 0132                  l3846 0EE5  
                l3838 0EB0                  l3854 0A8C                  l3870 0B21                  l3862 0B10  
                l3918 0B9E                  l3950 03F7                  l3942 03C9                  l3934 03A9  
                l3926 037E                  l3688 0AFA                  l3696 0CDA                  l3784 015C  
                l3776 014C                  l3792 016B                  l3768 013B                  l3848 0A80  
                l3856 0C67                  l3872 0B27                  l3864 0B13                  l3880 0D6B  
                l3960 043E                  l3952 040A                  l3944 03CD                  l3936 03B0  
                l3928 0397                  l3698 0CE1                  l3794 0174                  l3786 015D  
                l3778 0151                  l3858 0A93                  l3866 0B15                  l3874 0A69  
                l3890 0D98                  l3882 0D74                  l3970 0479                  l3962 044E  
                l3954 0413                  l3946 03DE                  l3938 03B5                  l3796 017A  
                l3788 0162                  l3868 0B1B                  l3892 0D9F                  l3884 0D7B  
                l3876 0D5C                  l3972 0482                  l3964 0457                  l3956 042C  
                l3948 03E7                  l3980 04C1                  l3798 017F                  l3886 0D82  
                l3878 0D65                  l3894 001E                  l3974 048C                  l3966 0460  
                l3958 0435                  l3990 04E0                  l3982 04D8                  l3888 0D85  
                l3896 002C                  l3976 04A1                  l3968 0470                  l3992 04E6  
                l3984 04DA                  l3898 0039                  l3978 04B6                  l3994 04F9  
                l3986 04DC                  l3996 0502                  l3988 04DE                  l3998 0506  
                _EEIF 006C                  STR_1 0890                  STR_2 086E                  STR_3 089F  
                STR_4 08D2                  STR_5 08AE                  STR_6 08BB                  STR_7 08C7  
                STR_8 08DB                  STR_9 087F                  u4010 0E67                  u4011 0E66  
                u4020 0E6D                  u4100 0319                  u4005 0E5B                  u4101 0318  
                u4030 0C4D                  u4110 0333                  u4031 0C4C                  u4111 0332  
                u4040 0B86                  u4120 037C                  u5000 0287                  u4041 0B85  
                u4121 037B                  u4105 0315                  u5001 0286                  u4050 0B8A  
                u4210 0FBD                  u4130 0F6A                  u4051 0B89                  u4115 032F  
                u4211 0FB9                  u4131 0F66                  u3500 0D33                  u4060 029C  
                u4204 0FAB                  u4300 0CEC                  u3501 0D32                  u4125 0378  
                u4061 029B                  u4301 0CEB                  u3510 0D3E                  u4070 02A4  
                u4230 0FD2                  u4150 0F7E                  u4310 0CF7                  u3511 0D3D  
                u4071 02A3                  u4231 0FCE                  u4151 0F7A                  u4311 0CF6  
                u3520 0D55                  u4080 02B1                  u4224 0FC0                  u4144 0F6D  
                u4320 0D02                  u4400 0129                  u3521 0D54                  u4081 02B0  
                u4321 0D01                  u4401 0128                  u3530 0CC2                  u4090 02ED  
                u4250 0FE7                  u4170 0F93                  u4410 0141                  u4330 00D3  
                u3531 0CC1                  u4091 02EC                  u4251 0FE3                  u4171 0F8F  
                u4411 0140                  u4331 00D2                  u3460 0AB3                  u3540 0CCC  
                u4244 0FD5                  u4164 0F81                  u4420 014C                  u4340 00DC  
                u4500 0D74                  u3461 0AB2                  u3525 0D51                  u3541 0CCB  
                u4421 014B                  u4341 00DB                  u4501 0D73                  u3470 0ADF  
                u3550 0BFA                  u4270 0FFC                  u4190 0FA8                  u4430 0157  
                u4350 00E7                  u4510 0DB2                  u3471 0ADE                  u3551 0BF9  
                u4095 02E9                  u4271 0FF8                  u4191 0FA4                  u4431 0156  
                u4351 00E6                  u4511 0DB1                  u3480 0BE5                  u3560 0C0E  
                u3800 0C17                  u4264 0FEA                  u4184 0F96                  u4440 0162  
                u4360 00F2                  u4520 002C                  u4600 0470                  u3481 0BE4  
                u3561 0C0D                  u3801 0C16                  u4441 0161                  u4361 00F1  
                u4521 002B                  u4601 046F                  u3490 0D25                  u4290 0CE1  
                u4450 017A                  u4370 0108                  u4530 0B9E                  u4610 0489  
                u3475 0ADB                  u3491 0D24                  u4291 0CE0                  u4451 0179  
                u4371 0107                  u4531 0B9D                  u4611 0485                  u3900 0F31  
                u4284 0FFF                  u4460 0185                  u4380 0113                  u4540 039D  
                u4700 055A                  u3901 0F30                  u4461 0184                  u4381 0112  
                u4541 039C                  u4701 0559                  u3734 000A                  u3830 0C31  
                u4470 0190                  u4390 011E                  u4550 03A9                  u4710 0560  
                u3495 0D21                  u3735 0008                  u3831 0C30                  u3815 0C1E  
                u4471 018F                  u4391 011D                  u4551 03A8                  u4711 055F  
                u3744 0018                  u3920 0F46                  u3840 0EEB                  u4480 019B  
                u4640 049E                  u4624 048C                  u4560 03B5                  u4800 0661  
                u4720 0567                  u3745 0016                  u3825 0C25                  u3921 0F45  
                u3905 0F2D                  u3841 0EEA                  u4481 019A                  u4641 049A  
                u4561 03B4                  u4801 0660                  u4721 0566                  u3930 0F4C  
                u3850 0EF8                  u4490 0D65                  u4570 03F7                  u4810 0667  
                u4730 056D                  u3915 0F3A                  u3851 0EF7                  u4491 0D64  
                u4635 0492                  u4571 03F6                  u4811 0666                  u4731 056C  
                u3860 0F0A                  u3940 0E1A                  u4580 042C                  u4900 07CC  
                u4820 06D2                  u4740 05D8                  u3861 0F09                  u3941 0E19  
                u4581 042B                  u4901 07CB                  u4821 06D1                  u4741 05D7  
                u3950 0E27                  u4670 04B3                  u4654 04A1                  u4590 044E  
                u4910 07D7                  u4830 06DD                  u4750 05E3                  u3951 0E26  
                u4671 04AF                  u4591 044D                  u4911 07D6                  u4831 06DC  
                u4751 05E2                  u3880 0F1E                  u3960 0E33                  u4920 07DD  
                u4840 06E3                  u4760 05E9                  u3881 0F1D                  u3961 0E32  
                u4665 04A7                  u4921 07DC                  u4905 07C8                  u4841 06E2  
                u4825 06CE                  u4761 05E8                  u4745 05D4                  u4930 07EA  
                u4850 06F0                  u4770 05F6                  u4690 04CB                  u3875 0F0F  
                u4931 07E9                  u4851 06EF                  u4771 05F5                  u3980 0E47  
                u4684 04B6                  u4860 074E                  u4780 0654                  u4940 01E1  
                u3981 0E46                  u4861 074D                  u4781 0653                  u4941 01E0  
                u3990 0E53                  u4870 0754                  u4790 065A                  u4950 022A  
                u3895 0F21                  u3991 0E52                  u3975 0E38                  u4871 0753  
                u4791 0659                  u4951 0229                  u4880 075B                  u4960 023C  
                u4881 075A                  u4961 023B                  u4890 0761                  u4970 024E  
                u3995 0E4F                  u4891 0760                  u4971 024D                  u4980 0265  
                u4981 0264                  u4990 0273                  u4991 0272                  _WREN 0C62  
                __dat 0A80                  __cmd 0A89                  _getn 0003                  _main 0AE1  
                _pdev 00DB                  _buzz 0AAC                  _scan 00C4                  _retm 00DD  
                btemp 007E                  start 0000                 ??_dat 0078                 ??_cmd 0078  
               ?__dat 0070                 ?__cmd 0070                 ?_getn 0070                 ?_main 0070  
               ?_buzz 0070                 ?_scan 0074       __end_of___awdiv 0F5A                 _EEADR 010D  
               STR_10 0817                 _EEDAT 010C                 STR_11 0832                 STR_12 0845  
               STR_20 08DA                 STR_13 092A                 STR_21 0902                 STR_30 08F3  
               STR_22 08EE                 STR_14 0846                 STR_15 0845                 STR_31 091B  
               STR_23 0916                 STR_16 092A                 STR_32 08E9                 STR_24 08E4  
               STR_33 0911                 STR_25 090C                 STR_17 085A                 STR_18 0845  
               STR_34 08FD                 STR_26 08F8                 STR_19 092A                 STR_35 0925  
               STR_27 0920                 STR_28 08DF       __end_of___awmod 0E7B                 STR_29 0907  
               _EEPGD 0C67                 _ANSEL 0188       ___awdiv@divisor 0070       ___awdiv@counter 0075  
               _PORTB 0006                 _TRISA 0085                 _TRISB 0086                 _TRISC 0087  
               _TRISD 0088                 _WRERR 0C63                 _check 0D13                 _delay 0ACD  
               _latch 0AF7                 _itoaa 0293       __end_of_initlcd 0B2E        write_log@devno 0075  
               getn@c 0073                 getn@n 0070                 _start 01AA        write_log@logic 0077  
               _write 0D5C                 pclath 000A                 status 0003                 wtemp0 007E  
        __end_of__dat 0A89          __end_of__cmd 0A92          __end_of_getn 001E          __end_of_main 0AF7  
        __end_of_buzz 0ABC          __end_of_scan 01AA                ??__dat 0072                ??__cmd 0072  
              ??_getn 0071                ??_main 007E                ??_buzz 0072                ??_scan 0076  
              ?_check 0070                ?_delay 0070                ?_latch 0070                ?_itoaa 0079  
              _EECON2 018D      ___awdiv@dividend 0072                ?_start 0070                ?_write 0020  
    __end_of_clearlcd 0A70      __end_of_getlogic 00C4                ___wmul 0C10             ??___awdiv 0074  
           ??___awmod 0074                _actrow 0CD5                check@i 0074                _setLCD 0F5A  
    __end_of_init_fun 0BBE      __end_of_read_eep 0C67                delay@x 0070      __end_of_read_log 0EE6  
    ___awdiv@quotient 0077       ___awmod@divisor 0070       ___awmod@counter 0075                _strcat 0BE7  
              _strcmp 0C9C                clrloop 0A79                _strcpy 0BBE             ??_initlcd 0079  
    __end_of_resetout 0A69      __end_of_setlogic 0C9C           read_log@ads 002C  __size_of_getlogicseq 033F  
              write@i 0079        __pcstackCOMMON 0070          __pidataBANK1 0B4C         __end_of_check 0D5C  
       __end_of_delay 0AE1         __end_of_latch 0B10         __end_of_itoaa 037E         __end_of_start 0293  
       __end_of_write 0DB4               ??_check 0072               ??_delay 0072          ?_startswitch 0070  
             ??_latch 0072               ??_itoaa 007C               ??_start 007E               ??_write 0079  
          __pbssBANK0 006B            __pbssBANK1 00C3            dat@Command 0078            __pmaintext 0AE1  
             ?___wmul 0070               ?_actrow 0072            cmd@Command 0078               ?_setLCD 0070  
             ?_strcat 0070               ?_strcmp 0070               ?_strcpy 0072         getlogicseq@bf 0051  
       getlogicseq@nf 0063         getlogicseq@wf 0065             ?_clearlcd 0070             ?_getlogic 0070  
           ?_init_fun 0070             ?_read_eep 0079             ?_read_log 0022    __size_of_write_eep 0027  
  __size_of_write_log 0061            check@logic 0070            check@input 0073             ?_resetout 0070  
           ?_setlogic 0070               ___awdiv 0EE6               ___awmod 0E15       __size_of___wmul 002A  
     __size_of_actrow 003E       __size_of_setLCD 00A6            _initkeypad 0A70       __size_of_strcat 0029  
     __size_of_strcmp 0039       __size_of_strcpy 0029          setLCD@number 0077          __size_of_dat 000D  
        __size_of_cmd 000D               _initlcd 0B10      ___awmod@dividend 0072               actrow@n 0072  
          ??_clearlcd 0079       getlogicseq@snum 0053               getn@tmp 0074  end_of_initialization 0B48  
          ??_getlogic 007D               buzz@val 0070               init_ram 0AC0            ??_init_fun 007B  
          ??_read_eep 007B            ??_read_log 0024            ??_resetout 0070            ??_setlogic 007C  
        __pstringtext 0800               strcmp@r 0076     __end_of_write_eep 0B96     __end_of_write_log 0E15  
__size_of_startswitch 0143          write_log@ads 007B        __end_of___wmul 0C3A        __end_of_actrow 0D13  
         ?_initkeypad 0070        __end_of_setLCD 1000         ??_getlogicseq 002D        __end_of_strcat 0C10  
      __end_of_strcmp 0CD5        __end_of_strcpy 0BE7   start_initialization 0B2E           __end_of_dat 0AAC  
         __end_of_cmd 0A9F              ??___wmul 0074              ??_actrow 0074           __pdataBANK1 00A0  
            ??_setLCD 0075              ??_strcat 0071              ??_strcmp 0072              ??_strcpy 0074  
          itoaa@count 0020            itoaa@value 0079         __pcstackBANK0 0020     __size_of_clearlcd 0007  
 __end_of_getlogicseq 0800     __size_of_getlogic 00A6   __size_of_initkeypad 0008     __size_of_init_fun 0028  
   __size_of_read_eep 002D     __size_of_read_log 006B              ?___awdiv 0070              ?___awmod 0070  
           __ptext750 001E             __ptext751 0D5C             __ptext760 0DB4             __ptext752 0A69  
           __ptext761 00C4             __ptext753 0B10             __ptext770 0C10             __ptext762 0CD5  
           __ptext754 0A9F             __ptext746 01AA             __ptext771 0A62             __ptext763 0F5A  
           __ptext755 0A92             __ptext747 04C1             __ptext780 0000             __ptext772 0003  
           __ptext764 0AF7             __ptext756 0C67             __ptext748 037E             __ptext773 0BE7  
           __ptext765 0293             __ptext757 0A89             __ptext749 0B96             __ptext774 0C9C  
           __ptext766 0B6F             __ptext758 0A80             __ptext775 0D13             __ptext767 0C3A  
           __ptext759 0E7B             __ptext776 0BBE             __ptext768 0E15             __ptext777 0ACD  
           __ptext769 0EE6             __ptext778 0A70             __ptext779 0AAC     __size_of_resetout 0007  
   __size_of_setlogic 0035             _done_init 00D3              ?_initlcd 0070        __size_of_check 0049  
      __size_of_delay 0014        __size_of_latch 0019        __size_of_itoaa 00EB        __size_of_start 00E9  
      __size_of_write 0058        getlogicseq@num 0069        getlogicseq@str 0031        ___wmul@product 0074  
   getlogicseq@ccount 0067           __stringbase 0812     ___wmul@multiplier 0070           _getlogicseq 04C1  
           _write_eep 0B6F             _write_log 0DB4             init_fetch 0ABC             read_eep@a 0079  
           read_eep@d 0020      __size_of___awdiv 0074      __size_of___awmod 0066             itoaa@temp 0022  
        ??_initkeypad 0070            strcat@from 0070      __size_of_initlcd 001E              _clearlcd 0A69  
       ??_startswitch 007B            ?_write_eep 0072            ?_write_log 0075      getlogicseq@F1874 00C3  
            _getlogic 001E            strcpy@from 0072         __size_of__dat 0009         __size_of__cmd 0009  
       __size_of_getn 001B              _init_fun 0B96         __size_of_main 0016              _read_eep 0C3A  
       __size_of_buzz 0010         __size_of_scan 00E6              _read_log 0E7B              _logic_d1 00AA  
            _logic_d2 00AF              _logic_d3 00B4              _logic_d4 00B9    __end_of_initkeypad 0A78  
            clear_ram 0A78            write@erase 0024              _resetout 0A62              _setlogic 0C67  
          write_eep@x 0072            write_eep@y 0074              itoaa@ptr 007B   __end_of_startswitch 04C1  
       read_log@F1918 00A0             stringcode 080A             write@line 0022         read_log@devno 0022  
       read_log@logic 0027              strcat@cp 0073              strcat@to 0072              strcmp@s1 0077  
            strcmp@s2 0070              strcpy@cp 0078              strcpy@to 0077              stringtab 0800  
            write@str 0020           ??_write_eep 0075           ??_write_log 0078  
