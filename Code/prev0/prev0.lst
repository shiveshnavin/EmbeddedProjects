

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Thu Jul 27 13:19:43 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_initlcd
    43                           	FNCALL	_main,_initkeypad
    44                           	FNCALL	_main,_getlogicseq
    45                           	FNCALL	_getlogicseq,_scroll
    46                           	FNCALL	_getlogicseq,_strcpy
    47                           	FNCALL	_getlogicseq,_write
    48                           	FNCALL	_getlogicseq,_scan
    49                           	FNCALL	_getlogicseq,_itoaa
    50                           	FNCALL	_getlogicseq,_strcat
    51                           	FNCALL	_getlogicseq,_startswitch
    52                           	FNCALL	_scroll,_write
    53                           	FNCALL	_scroll,_delay
    54                           	FNCALL	_scroll,_cmd
    55                           	FNCALL	_write,_clearlcd
    56                           	FNCALL	_write,_cmd
    57                           	FNCALL	_write,_dat
    58                           	FNCALL	_clearlcd,_cmd
    59                           	FNCALL	_scan,_actrow
    60                           	FNCALL	_initlcd,_cmd
    61                           	FNCALL	_actrow,_resetout
    62                           	FNCALL	_actrow,_delay
    63                           	FNCALL	_dat,_setLCD
    64                           	FNCALL	_dat,_delay
    65                           	FNCALL	_cmd,_setLCD
    66                           	FNCALL	_cmd,_delay
    67                           	FNCALL	_itoaa,___wmul
    68                           	FNCALL	_itoaa,___awdiv
    69                           	FNCALL	_itoaa,___awmod
    70                           	FNCALL	_startswitch,_strcmp
    71                           	FNROOT	_main
    72                           	global	_lo
    73                           	global	_logic_d1
    74                           	global	_logic_d2
    75                           	global	_logic_d3
    76                           	global	_logic_d4
    77                           psect	idataBANK0,class=CODE,space=0,delta=2
    78                           global __pidataBANK0
    79  00E1                     __pidataBANK0:
    80                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
    81                           	line	114
    82                           
    83                           ;initializer for _lo
    84  00E1  3430               	retlw	030h
    85  00E2  3430               	retlw	030h
    86  00E3  3430               	retlw	030h
    87  00E4  3430               	retlw	030h
    88  00E5  3400               	retlw	0
    89                           psect	idataBANK1,class=CODE,space=0,delta=2
    90                           global __pidataBANK1
    91  0BAD                     __pidataBANK1:
    92                           	line	110
    93                           
    94                           ;initializer for _logic_d1
    95  0BAD  3431               	retlw	031h
    96  0BAE  3430               	retlw	030h
    97  0BAF  3430               	retlw	030h
    98  0BB0  3431               	retlw	031h
    99  0BB1  3400               	retlw	0
   100                           	line	111
   101                           
   102                           ;initializer for _logic_d2
   103  0BB2  3431               	retlw	031h
   104  0BB3  3430               	retlw	030h
   105  0BB4  3431               	retlw	031h
   106  0BB5  3431               	retlw	031h
   107  0BB6  3400               	retlw	0
   108                           	line	112
   109                           
   110                           ;initializer for _logic_d3
   111  0BB7  3431               	retlw	031h
   112  0BB8  3431               	retlw	031h
   113  0BB9  3431               	retlw	031h
   114  0BBA  3431               	retlw	031h
   115  0BBB  3400               	retlw	0
   116                           	line	113
   117                           
   118                           ;initializer for _logic_d4
   119  0BBC  3431               	retlw	031h
   120  0BBD  3430               	retlw	030h
   121  0BBE  3430               	retlw	030h
   122  0BBF  3430               	retlw	030h
   123  0BC0  3400               	retlw	0
   124                           	global	setLCD@size
   125                           psect	strings,class=STRING,delta=2
   126                           global __pstrings
   127  0003                     __pstrings:
   128                           ;	global	stringdir,stringtab,__stringbase
   129  0003                     stringtab:
   130                           ;	String table - string pointers are 1 byte each
   131  0003  1BFF               	btfsc	(btemp+1),7
   132  0004  280D               	ljmp	stringcode
   133  0005  1383               	bcf	status,7
   134  0006  187F               	btfsc	(btemp+1),0
   135  0007  1783               	bsf	status,7
   136  0008  0800               	movf	indf,w
   137  0009  0A84               	incf fsr
   138  000A  1903               skipnz
   139  000B  0AFF               incf btemp+1
   140  000C  0008               	return
   141  000D                     stringcode:stringdir:
      + 000D                     stringdir:	
   142  000D  3000               movlw high(stringdir)
   143  000E  008A               movwf pclath
   144  000F  0804               movf fsr,w
   145  0010  0A84               incf fsr
   146  0011  0782               	addwf pc
   147  0012                     __stringbase:
   148  0012  3400               	retlw	0
   149                           psect	strings
   150                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
   151                           	line	477
   152  0013                     setLCD@size:
   153  0013  3410               	retlw	010h
   154  0014  3400               	retlw	0
   155                           
   156                           	global	setLCD@size
   157                           	global	getlogicseq@F1256
   158                           	global	_PORTA
   159  0005                     _PORTA	set	5
   160                           	global	_PORTB
   161  0006                     _PORTB	set	6
   162                           	global	_RA5
   163  002D                     _RA5	set	45
   164                           	global	_RB0
   165  0030                     _RB0	set	48
   166                           	global	_RB1
   167  0031                     _RB1	set	49
   168                           	global	_RB2
   169  0032                     _RB2	set	50
   170                           	global	_RB3
   171  0033                     _RB3	set	51
   172                           	global	_RB6
   173  0036                     _RB6	set	54
   174                           	global	_RB7
   175  0037                     _RB7	set	55
   176                           	global	_RC0
   177  0038                     _RC0	set	56
   178                           	global	_RC1
   179  0039                     _RC1	set	57
   180                           	global	_RC2
   181  003A                     _RC2	set	58
   182                           	global	_RC3
   183  003B                     _RC3	set	59
   184                           	global	_RC4
   185  003C                     _RC4	set	60
   186                           	global	_RC5
   187  003D                     _RC5	set	61
   188                           	global	_RC7
   189  003F                     _RC7	set	63
   190                           	global	_RD0
   191  0040                     _RD0	set	64
   192                           	global	_RD1
   193  0041                     _RD1	set	65
   194                           	global	_RD2
   195  0042                     _RD2	set	66
   196                           	global	_RD3
   197  0043                     _RD3	set	67
   198                           	global	_RD4
   199  0044                     _RD4	set	68
   200                           	global	_RD5
   201  0045                     _RD5	set	69
   202                           	global	_RD6
   203  0046                     _RD6	set	70
   204                           	global	_RD7
   205  0047                     _RD7	set	71
   206                           	global	_TRISA
   207  0085                     _TRISA	set	133
   208                           	global	_TRISB
   209  0086                     _TRISB	set	134
   210                           	global	_TRISC
   211  0087                     _TRISC	set	135
   212                           	global	_TRISD
   213  0088                     _TRISD	set	136
   214                           	
   215  0015                     STR_1:	
   216  0015  3457               	retlw	87	;'W'
   217  0016  3445               	retlw	69	;'E'
   218  0017  344C               	retlw	76	;'L'
   219  0018  3443               	retlw	67	;'C'
   220  0019  344F               	retlw	79	;'O'
   221  001A  344D               	retlw	77	;'M'
   222  001B  3445               	retlw	69	;'E'
   223  001C  3420               	retlw	32	;' '
   224  001D  3421               	retlw	33	;'!'
   225  001E  3420               	retlw	32	;' '
   226  001F  3454               	retlw	84	;'T'
   227  0020  344F               	retlw	79	;'O'
   228  0021  3420               	retlw	32	;' '
   229  0022  3450               	retlw	80	;'P'
   230  0023  3452               	retlw	82	;'R'
   231  0024  344F               	retlw	79	;'O'
   232  0025  3447               	retlw	71	;'G'
   233  0026  3452               	retlw	82	;'R'
   234  0027  3441               	retlw	65	;'A'
   235  0028  344D               	retlw	77	;'M'
   236  0029  3441               	retlw	65	;'A'
   237  002A  3442               	retlw	66	;'B'
   238  002B  344C               	retlw	76	;'L'
   239  002C  3445               	retlw	69	;'E'
   240  002D  3420               	retlw	32	;' '
   241  002E  3448               	retlw	72	;'H'
   242  002F  344F               	retlw	79	;'O'
   243  0030  344D               	retlw	77	;'M'
   244  0031  3445               	retlw	69	;'E'
   245  0032  3420               	retlw	32	;' '
   246  0033  3441               	retlw	65	;'A'
   247  0034  3455               	retlw	85	;'U'
   248  0035  3454               	retlw	84	;'T'
   249  0036  344D               	retlw	77	;'M'
   250  0037  3441               	retlw	65	;'A'
   251  0038  3454               	retlw	84	;'T'
   252  0039  344E               	retlw	78	;'N'
   253  003A  3400               	retlw	0
   254                           psect	strings
   255                           	
   256  003B                     STR_2:	
   257  003B  3445               	retlw	69	;'E'
   258  003C  346E               	retlw	110	;'n'
   259  003D  3474               	retlw	116	;'t'
   260  003E  3465               	retlw	101	;'e'
   261  003F  3472               	retlw	114	;'r'
   262  0040  3420               	retlw	32	;' '
   263  0041  344C               	retlw	76	;'L'
   264  0042  346F               	retlw	111	;'o'
   265  0043  3467               	retlw	103	;'g'
   266  0044  3469               	retlw	105	;'i'
   267  0045  3463               	retlw	99	;'c'
   268  0046  3420               	retlw	32	;' '
   269  0047  3444               	retlw	68	;'D'
   270  0048  3445               	retlw	69	;'E'
   271  0049  3456               	retlw	86	;'V'
   272  004A  3431               	retlw	49	;'1'
   273  004B  343A               	retlw	58	;':'
   274  004C  3420               	retlw	32	;' '
   275  004D  3420               	retlw	32	;' '
   276  004E  3400               	retlw	0
   277                           psect	strings
   278                           	
   279  004F                     STR_5:	
   280  004F  3445               	retlw	69	;'E'
   281  0050  346E               	retlw	110	;'n'
   282  0051  3474               	retlw	116	;'t'
   283  0052  3465               	retlw	101	;'e'
   284  0053  3472               	retlw	114	;'r'
   285  0054  3420               	retlw	32	;' '
   286  0055  344C               	retlw	76	;'L'
   287  0056  346F               	retlw	111	;'o'
   288  0057  3467               	retlw	103	;'g'
   289  0058  3469               	retlw	105	;'i'
   290  0059  3463               	retlw	99	;'c'
   291  005A  3420               	retlw	32	;' '
   292  005B  3444               	retlw	68	;'D'
   293  005C  3445               	retlw	69	;'E'
   294  005D  3456               	retlw	86	;'V'
   295  005E  3432               	retlw	50	;'2'
   296  005F  343A               	retlw	58	;':'
   297  0060  3420               	retlw	32	;' '
   298  0061  3420               	retlw	32	;' '
   299  0062  3400               	retlw	0
   300                           psect	strings
   301                           	
   302  0063                     STR_8:	
   303  0063  3445               	retlw	69	;'E'
   304  0064  346E               	retlw	110	;'n'
   305  0065  3474               	retlw	116	;'t'
   306  0066  3465               	retlw	101	;'e'
   307  0067  3472               	retlw	114	;'r'
   308  0068  3420               	retlw	32	;' '
   309  0069  344C               	retlw	76	;'L'
   310  006A  346F               	retlw	111	;'o'
   311  006B  3467               	retlw	103	;'g'
   312  006C  3469               	retlw	105	;'i'
   313  006D  3463               	retlw	99	;'c'
   314  006E  3420               	retlw	32	;' '
   315  006F  3444               	retlw	68	;'D'
   316  0070  3445               	retlw	69	;'E'
   317  0071  3456               	retlw	86	;'V'
   318  0072  3433               	retlw	51	;'3'
   319  0073  343A               	retlw	58	;':'
   320  0074  3420               	retlw	32	;' '
   321  0075  3420               	retlw	32	;' '
   322  0076  3400               	retlw	0
   323                           psect	strings
   324                           	
   325  0077                     STR_11:	
   326  0077  3445               	retlw	69	;'E'
   327  0078  346E               	retlw	110	;'n'
   328  0079  3474               	retlw	116	;'t'
   329  007A  3465               	retlw	101	;'e'
   330  007B  3472               	retlw	114	;'r'
   331  007C  3420               	retlw	32	;' '
   332  007D  344C               	retlw	76	;'L'
   333  007E  346F               	retlw	111	;'o'
   334  007F  3467               	retlw	103	;'g'
   335  0080  3469               	retlw	105	;'i'
   336  0081  3463               	retlw	99	;'c'
   337  0082  3420               	retlw	32	;' '
   338  0083  3444               	retlw	68	;'D'
   339  0084  3445               	retlw	69	;'E'
   340  0085  3456               	retlw	86	;'V'
   341  0086  3434               	retlw	52	;'4'
   342  0087  343A               	retlw	58	;':'
   343  0088  3420               	retlw	32	;' '
   344  0089  3420               	retlw	32	;' '
   345  008A  3400               	retlw	0
   346                           psect	strings
   347                           	
   348  008B                     STR_4:	
   349  008B  342D               	retlw	45	;'-'
   350  008C  342D               	retlw	45	;'-'
   351  008D  342D               	retlw	45	;'-'
   352  008E  342D               	retlw	45	;'-'
   353  008F  3400               	retlw	0
   354                           psect	strings
   355                           	
   356  0090                     STR_14:	
   357  0090  3430               	retlw	48	;'0'
   358  0091  3430               	retlw	48	;'0'
   359  0092  3430               	retlw	48	;'0'
   360  0093  3430               	retlw	48	;'0'
   361  0094  3400               	retlw	0
   362                           psect	strings
   363                           	
   364  0095                     STR_22:	
   365  0095  3431               	retlw	49	;'1'
   366  0096  3430               	retlw	48	;'0'
   367  0097  3430               	retlw	48	;'0'
   368  0098  3430               	retlw	48	;'0'
   369  0099  3400               	retlw	0
   370                           psect	strings
   371                           	
   372  009A                     STR_18:	
   373  009A  3430               	retlw	48	;'0'
   374  009B  3431               	retlw	49	;'1'
   375  009C  3430               	retlw	48	;'0'
   376  009D  3430               	retlw	48	;'0'
   377  009E  3400               	retlw	0
   378                           psect	strings
   379                           	
   380  009F                     STR_26:	
   381  009F  3431               	retlw	49	;'1'
   382  00A0  3431               	retlw	49	;'1'
   383  00A1  3430               	retlw	48	;'0'
   384  00A2  3430               	retlw	48	;'0'
   385  00A3  3400               	retlw	0
   386                           psect	strings
   387                           	
   388  00A4                     STR_16:	
   389  00A4  3430               	retlw	48	;'0'
   390  00A5  3430               	retlw	48	;'0'
   391  00A6  3431               	retlw	49	;'1'
   392  00A7  3430               	retlw	48	;'0'
   393  00A8  3400               	retlw	0
   394                           psect	strings
   395                           	
   396  00A9                     STR_24:	
   397  00A9  3431               	retlw	49	;'1'
   398  00AA  3430               	retlw	48	;'0'
   399  00AB  3431               	retlw	49	;'1'
   400  00AC  3430               	retlw	48	;'0'
   401  00AD  3400               	retlw	0
   402                           psect	strings
   403                           	
   404  00AE                     STR_20:	
   405  00AE  3430               	retlw	48	;'0'
   406  00AF  3431               	retlw	49	;'1'
   407  00B0  3431               	retlw	49	;'1'
   408  00B1  3430               	retlw	48	;'0'
   409  00B2  3400               	retlw	0
   410                           psect	strings
   411                           	
   412  00B3                     STR_28:	
   413  00B3  3431               	retlw	49	;'1'
   414  00B4  3431               	retlw	49	;'1'
   415  00B5  3431               	retlw	49	;'1'
   416  00B6  3430               	retlw	48	;'0'
   417  00B7  3400               	retlw	0
   418                           psect	strings
   419                           	
   420  00B8                     STR_15:	
   421  00B8  3430               	retlw	48	;'0'
   422  00B9  3430               	retlw	48	;'0'
   423  00BA  3430               	retlw	48	;'0'
   424  00BB  3431               	retlw	49	;'1'
   425  00BC  3400               	retlw	0
   426                           psect	strings
   427                           	
   428  00BD                     STR_23:	
   429  00BD  3431               	retlw	49	;'1'
   430  00BE  3430               	retlw	48	;'0'
   431  00BF  3430               	retlw	48	;'0'
   432  00C0  3431               	retlw	49	;'1'
   433  00C1  3400               	retlw	0
   434                           psect	strings
   435                           	
   436  00C2                     STR_19:	
   437  00C2  3430               	retlw	48	;'0'
   438  00C3  3431               	retlw	49	;'1'
   439  00C4  3430               	retlw	48	;'0'
   440  00C5  3431               	retlw	49	;'1'
   441  00C6  3400               	retlw	0
   442                           psect	strings
   443                           	
   444  00C7                     STR_27:	
   445  00C7  3431               	retlw	49	;'1'
   446  00C8  3431               	retlw	49	;'1'
   447  00C9  3430               	retlw	48	;'0'
   448  00CA  3431               	retlw	49	;'1'
   449  00CB  3400               	retlw	0
   450                           psect	strings
   451                           	
   452  00CC                     STR_17:	
   453  00CC  3430               	retlw	48	;'0'
   454  00CD  3430               	retlw	48	;'0'
   455  00CE  3431               	retlw	49	;'1'
   456  00CF  3431               	retlw	49	;'1'
   457  00D0  3400               	retlw	0
   458                           psect	strings
   459                           	
   460  00D1                     STR_25:	
   461  00D1  3431               	retlw	49	;'1'
   462  00D2  3430               	retlw	48	;'0'
   463  00D3  3431               	retlw	49	;'1'
   464  00D4  3431               	retlw	49	;'1'
   465  00D5  3400               	retlw	0
   466                           psect	strings
   467                           	
   468  00D6                     STR_21:	
   469  00D6  3430               	retlw	48	;'0'
   470  00D7  3431               	retlw	49	;'1'
   471  00D8  3431               	retlw	49	;'1'
   472  00D9  3431               	retlw	49	;'1'
   473  00DA  3400               	retlw	0
   474                           psect	strings
   475                           	
   476  00DB                     STR_29:	
   477  00DB  3431               	retlw	49	;'1'
   478  00DC  3431               	retlw	49	;'1'
   479  00DD  3431               	retlw	49	;'1'
   480  00DE  3431               	retlw	49	;'1'
   481  00DF  3400               	retlw	0
   482                           psect	strings
   483  008B                     STR_7	equ	STR_4+0
   484  008B                     STR_10	equ	STR_4+0
   485  008B                     STR_13	equ	STR_4+0
   486  004E                     STR_3	equ	STR_2+19
   487  004E                     STR_6	equ	STR_2+19
   488  004E                     STR_9	equ	STR_2+19
   489  004E                     STR_12	equ	STR_2+19
   490                           	file	"prev0.as"
   491                           	line	#
   492                           psect cinit,class=CODE,delta=2
   493                           global start_initialization
   494  0C40                     start_initialization:
   495                           
   496                           psect	dataBANK0,class=BANK0,space=1
   497                           global __pdataBANK0
   498  0060                     __pdataBANK0:
   499                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
   500                           	line	114
   501  0060                     _lo:
   502  0060                            ds      5
   503                           
   504                           psect	dataBANK1,class=BANK1,space=1
   505                           global __pdataBANK1
   506  00DA                     __pdataBANK1:
   507                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
   508                           	line	110
   509  00DA                     _logic_d1:
   510  00DA                            ds      5
   511                           
   512                           psect	dataBANK1
   513                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
   514                           	line	111
   515  00DF                     _logic_d2:
   516  00DF                            ds      5
   517                           
   518                           psect	dataBANK1
   519                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
   520                           	line	112
   521  00E4                     _logic_d3:
   522  00E4                            ds      5
   523                           
   524                           psect	dataBANK1
   525                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
   526                           	line	113
   527  00E9                     _logic_d4:
   528  00E9                            ds      5
   529                           
   530                           psect	bssBANK3,class=BANK3,space=1
   531                           global __pbssBANK3
   532  0190                     __pbssBANK3:
   533  0190                     getlogicseq@F1256:
   534  0190                            ds      16
   535                           
   536                           psect clrtext,class=CODE,delta=2
   537                           global clear_ram
   538                           ;	Called with FSR containing the base address, and
   539                           ;	W with the last address+1
   540  0B76                     clear_ram:
   541  0B76  0064               	clrwdt			;clear the watchdog before getting into this loop
   542  0B77                     clrloop:
   543  0B77  0180               	clrf	indf		;clear RAM location pointed to by FSR
   544  0B78  0A84               	incf	fsr,f		;increment pointer
   545  0B79  0604               	xorwf	fsr,w		;XOR with final address
   546  0B7A  1903               	btfsc	status,2	;have we reached the end yet?
   547  0B7B  3400               	retlw	0		;all done for this memory range, return
   548  0B7C  0604               	xorwf	fsr,w		;XOR again to restore value
   549  0B7D  2B77               	goto	clrloop		;do the next byte
   550                           
   551                           ; Clear objects allocated to BANK3
   552                           psect cinit,class=CODE,delta=2
   553  0C40  1783               	bsf	status, 7	;select IRP bank2
   554  0C41  3090               	movlw	low(__pbssBANK3)
   555  0C42  0084               	movwf	fsr
   556  0C43  30A0               	movlw	low((__pbssBANK3)+010h)
   557  0C44  120A  158A  2376   	fcall	clear_ram
              120A  158A         
   558                           global btemp
   559                           psect inittext,class=CODE,delta=2
   560                           global init_fetch,btemp
   561                           ;	Called with low address in FSR and high address in W
   562  0B88                     init_fetch:
   563  0B88  087E               	movf btemp,w
   564  0B89  008A               	movwf pclath
   565  0B8A  087F               	movf btemp+1,w
   566  0B8B  0082               	movwf pc
   567                           global init_ram
   568                           ;Called with:
   569                           ;	high address of idata address in btemp 
   570                           ;	low address of idata address in btemp+1 
   571                           ;	low address of data in FSR
   572                           ;	high address + 1 of data in btemp-1
   573  0B8C                     init_ram:
   574  0B8C  2388  120A  158A   	fcall init_fetch
   575  0B8F  0080               	movwf indf,f
   576  0B90  0A84               	incf fsr,f
   577  0B91  0804               	movf fsr,w
   578  0B92  067D               	xorwf btemp-1,w
   579  0B93  1903               	btfsc status,2
   580  0B94  3400               	retlw 0
   581  0B95  0AFF               	incf btemp+1,f
   582  0B96  1903               	btfsc status,2
   583  0B97  0AFE               	incf btemp,f
   584  0B98  2B8C               	goto init_ram
   585                           ; Initialize objects allocated to BANK1
   586                           psect cinit,class=CODE,delta=2
   587                           global init_ram, __pidataBANK1
   588  0C49  1383               	bcf	status, 7	;select IRP bank0
   589  0C4A  30EE               	movlw low(__pdataBANK1+20)
   590  0C4B  00FD               	movwf btemp-1,f
   591  0C4C  300B               	movlw high(__pidataBANK1)
   592  0C4D  00FE               	movwf btemp,f
   593  0C4E  30AD               	movlw low(__pidataBANK1)
   594  0C4F  00FF               	movwf btemp+1,f
   595  0C50  30DA               	movlw low(__pdataBANK1)
   596  0C51  0084               	movwf fsr,f
   597  0C52  120A  158A  238C   	fcall init_ram
              120A  158A         
   598                           ; Initialize objects allocated to BANK0
   599                           psect cinit,class=CODE,delta=2
   600                           global init_ram, __pidataBANK0
   601  0C57  3065               	movlw low(__pdataBANK0+5)
   602  0C58  00FD               	movwf btemp-1,f
   603  0C59  3000               	movlw high(__pidataBANK0)
   604  0C5A  00FE               	movwf btemp,f
   605  0C5B  30E1               	movlw low(__pidataBANK0)
   606  0C5C  00FF               	movwf btemp+1,f
   607  0C5D  3060               	movlw low(__pdataBANK0)
   608  0C5E  0084               	movwf fsr,f
   609  0C5F  120A  158A  238C   	fcall init_ram
              120A  158A         
   610                           psect cinit,class=CODE,delta=2
   611                           global end_of_initialization
   612                           
   613                           ;End of C runtime variable initialization code
   614                           
   615  0C64                     end_of_initialization:
   616  0C64  0183               clrf status
   617  0C65  120A  158A  2BC1   ljmp _main	;jump to C main() function
   618                           psect	cstackBANK1,class=BANK1,space=1
   619                           global __pcstackBANK1
   620  00A0                     __pcstackBANK1:
   621                           	global	getlogicseq@str
   622  00A0                     getlogicseq@str:	; 32 bytes @ 0x0
   623  00A0                     	ds	32
   624                           	global	getlogicseq@bf
   625  00C0                     getlogicseq@bf:	; 2 bytes @ 0x20
   626  00C0                     	ds	2
   627                           	global	getlogicseq@snum
   628  00C2                     getlogicseq@snum:	; 16 bytes @ 0x22
   629  00C2                     	ds	16
   630                           	global	getlogicseq@nf
   631  00D2                     getlogicseq@nf:	; 2 bytes @ 0x32
   632  00D2                     	ds	2
   633                           	global	getlogicseq@wf
   634  00D4                     getlogicseq@wf:	; 2 bytes @ 0x34
   635  00D4                     	ds	2
   636                           	global	getlogicseq@ccount
   637  00D6                     getlogicseq@ccount:	; 2 bytes @ 0x36
   638  00D6                     	ds	2
   639                           	global	getlogicseq@num
   640  00D8                     getlogicseq@num:	; 2 bytes @ 0x38
   641  00D8                     	ds	2
   642                           psect	cstackCOMMON,class=COMMON,space=1
   643                           global __pcstackCOMMON
   644  0070                     __pcstackCOMMON:
   645                           	global	?_initlcd
   646  0070                     ?_initlcd:	; 0 bytes @ 0x0
   647                           	global	?_initkeypad
   648  0070                     ?_initkeypad:	; 0 bytes @ 0x0
   649                           	global	??_initkeypad
   650  0070                     ??_initkeypad:	; 0 bytes @ 0x0
   651                           	global	?_getlogicseq
   652  0070                     ?_getlogicseq:	; 0 bytes @ 0x0
   653                           	global	?_setLCD
   654  0070                     ?_setLCD:	; 0 bytes @ 0x0
   655                           	global	?_startswitch
   656  0070                     ?_startswitch:	; 0 bytes @ 0x0
   657                           	global	?_delay
   658  0070                     ?_delay:	; 0 bytes @ 0x0
   659                           	global	?_clearlcd
   660  0070                     ?_clearlcd:	; 0 bytes @ 0x0
   661                           	global	?_resetout
   662  0070                     ?_resetout:	; 0 bytes @ 0x0
   663                           	global	??_resetout
   664  0070                     ??_resetout:	; 0 bytes @ 0x0
   665                           	global	?_strcpy
   666  0070                     ?_strcpy:	; 1 bytes @ 0x0
   667                           	global	?_strcat
   668  0070                     ?_strcat:	; 1 bytes @ 0x0
   669                           	global	?_strcmp
   670  0070                     ?_strcmp:	; 2 bytes @ 0x0
   671                           	global	?_main
   672  0070                     ?_main:	; 2 bytes @ 0x0
   673                           	global	?___wmul
   674  0070                     ?___wmul:	; 2 bytes @ 0x0
   675                           	global	?___awdiv
   676  0070                     ?___awdiv:	; 2 bytes @ 0x0
   677                           	global	?___awmod
   678  0070                     ?___awmod:	; 2 bytes @ 0x0
   679                           	global	strcat@from
   680  0070                     strcat@from:	; 1 bytes @ 0x0
   681                           	global	strcpy@from
   682  0070                     strcpy@from:	; 1 bytes @ 0x0
   683                           	global	delay@x
   684  0070                     delay@x:	; 2 bytes @ 0x0
   685                           	global	setLCD@number
   686  0070                     setLCD@number:	; 2 bytes @ 0x0
   687                           	global	strcmp@s2
   688  0070                     strcmp@s2:	; 2 bytes @ 0x0
   689                           	global	___wmul@multiplier
   690  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   691                           	global	___awdiv@divisor
   692  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   693                           	global	___awmod@divisor
   694  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   695  0070                     	ds	1
   696                           	global	??_strcpy
   697  0071                     ??_strcpy:	; 0 bytes @ 0x1
   698                           	global	??_strcat
   699  0071                     ??_strcat:	; 0 bytes @ 0x1
   700  0071                     	ds	1
   701                           	global	??_strcmp
   702  0072                     ??_strcmp:	; 0 bytes @ 0x2
   703                           	global	??_setLCD
   704  0072                     ??_setLCD:	; 0 bytes @ 0x2
   705                           	global	?_actrow
   706  0072                     ?_actrow:	; 0 bytes @ 0x2
   707                           	global	??_delay
   708  0072                     ??_delay:	; 0 bytes @ 0x2
   709                           	global	strcat@to
   710  0072                     strcat@to:	; 1 bytes @ 0x2
   711                           	global	strcpy@to
   712  0072                     strcpy@to:	; 1 bytes @ 0x2
   713                           	global	actrow@n
   714  0072                     actrow@n:	; 2 bytes @ 0x2
   715                           	global	___wmul@multiplicand
   716  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   717                           	global	___awdiv@dividend
   718  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   719                           	global	___awmod@dividend
   720  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   721  0072                     	ds	1
   722                           	global	strcat@cp
   723  0073                     strcat@cp:	; 1 bytes @ 0x3
   724                           	global	strcpy@cp
   725  0073                     strcpy@cp:	; 1 bytes @ 0x3
   726  0073                     	ds	1
   727                           	global	??_actrow
   728  0074                     ??_actrow:	; 0 bytes @ 0x4
   729                           	global	??___wmul
   730  0074                     ??___wmul:	; 0 bytes @ 0x4
   731                           	global	??___awdiv
   732  0074                     ??___awdiv:	; 0 bytes @ 0x4
   733                           	global	??___awmod
   734  0074                     ??___awmod:	; 0 bytes @ 0x4
   735                           	global	?_scan
   736  0074                     ?_scan:	; 2 bytes @ 0x4
   737                           	global	___wmul@product
   738  0074                     ___wmul@product:	; 2 bytes @ 0x4
   739  0074                     	ds	1
   740                           	global	___awdiv@counter
   741  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   742                           	global	___awmod@counter
   743  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   744  0075                     	ds	1
   745                           	global	??_scan
   746  0076                     ??_scan:	; 0 bytes @ 0x6
   747                           	global	strcmp@r
   748  0076                     strcmp@r:	; 1 bytes @ 0x6
   749                           	global	___awdiv@sign
   750  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   751                           	global	___awmod@sign
   752  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   753  0076                     	ds	1
   754                           	global	strcmp@s1
   755  0077                     strcmp@s1:	; 1 bytes @ 0x7
   756                           	global	___awdiv@quotient
   757  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   758  0077                     	ds	1
   759                           	global	?_cmd
   760  0078                     ?_cmd:	; 0 bytes @ 0x8
   761                           	global	??_startswitch
   762  0078                     ??_startswitch:	; 0 bytes @ 0x8
   763                           	global	?_dat
   764  0078                     ?_dat:	; 0 bytes @ 0x8
   765                           	global	cmd@Command
   766  0078                     cmd@Command:	; 2 bytes @ 0x8
   767                           	global	dat@Command
   768  0078                     dat@Command:	; 2 bytes @ 0x8
   769  0078                     	ds	1
   770                           	global	?_itoaa
   771  0079                     ?_itoaa:	; 2 bytes @ 0x9
   772                           	global	startswitch@dev
   773  0079                     startswitch@dev:	; 2 bytes @ 0x9
   774                           	global	itoaa@value
   775  0079                     itoaa@value:	; 2 bytes @ 0x9
   776  0079                     	ds	1
   777                           	global	??_initlcd
   778  007A                     ??_initlcd:	; 0 bytes @ 0xA
   779                           	global	??_write
   780  007A                     ??_write:	; 0 bytes @ 0xA
   781                           	global	??_cmd
   782  007A                     ??_cmd:	; 0 bytes @ 0xA
   783                           	global	??_clearlcd
   784  007A                     ??_clearlcd:	; 0 bytes @ 0xA
   785                           	global	??_dat
   786  007A                     ??_dat:	; 0 bytes @ 0xA
   787  007A                     	ds	1
   788                           	global	itoaa@ptr
   789  007B                     itoaa@ptr:	; 1 bytes @ 0xB
   790  007B                     	ds	1
   791                           	global	??_itoaa
   792  007C                     ??_itoaa:	; 0 bytes @ 0xC
   793                           	global	write@i
   794  007C                     write@i:	; 2 bytes @ 0xC
   795  007C                     	ds	2
   796                           	global	??_main
   797  007E                     ??_main:	; 0 bytes @ 0xE
   798                           psect	cstackBANK0,class=BANK0,space=1
   799                           global __pcstackBANK0
   800  0020                     __pcstackBANK0:
   801                           	global	itoaa@count
   802  0020                     itoaa@count:	; 2 bytes @ 0x0
   803                           	global	setLCD@vbool
   804  0020                     setLCD@vbool:	; 32 bytes @ 0x0
   805  0020                     	ds	2
   806                           	global	itoaa@temp
   807  0022                     itoaa@temp:	; 2 bytes @ 0x2
   808  0022                     	ds	30
   809                           	global	setLCD@i
   810  0040                     setLCD@i:	; 2 bytes @ 0x20
   811  0040                     	ds	2
   812                           	global	?_write
   813  0042                     ?_write:	; 0 bytes @ 0x22
   814                           	global	write@str
   815  0042                     write@str:	; 2 bytes @ 0x22
   816  0042                     	ds	2
   817                           	global	write@line
   818  0044                     write@line:	; 2 bytes @ 0x24
   819  0044                     	ds	2
   820                           	global	write@erase
   821  0046                     write@erase:	; 2 bytes @ 0x26
   822  0046                     	ds	2
   823                           	global	?_scroll
   824  0048                     ?_scroll:	; 0 bytes @ 0x28
   825                           	global	scroll@loops
   826  0048                     scroll@loops:	; 2 bytes @ 0x28
   827  0048                     	ds	2
   828                           	global	??_scroll
   829  004A                     ??_scroll:	; 0 bytes @ 0x2A
   830  004A                     	ds	3
   831                           	global	scroll@st
   832  004D                     scroll@st:	; 2 bytes @ 0x2D
   833  004D                     	ds	2
   834                           	global	scroll@en
   835  004F                     scroll@en:	; 2 bytes @ 0x2F
   836  004F                     	ds	2
   837                           	global	scroll@startat
   838  0051                     scroll@startat:	; 2 bytes @ 0x31
   839  0051                     	ds	2
   840                           	global	scroll@endat
   841  0053                     scroll@endat:	; 2 bytes @ 0x33
   842  0053                     	ds	2
   843                           	global	scroll@loopn
   844  0055                     scroll@loopn:	; 2 bytes @ 0x35
   845  0055                     	ds	2
   846                           	global	scroll@str
   847  0057                     scroll@str:	; 1 bytes @ 0x37
   848  0057                     	ds	1
   849                           	global	scroll@len
   850  0058                     scroll@len:	; 2 bytes @ 0x38
   851  0058                     	ds	2
   852                           	global	scroll@i
   853  005A                     scroll@i:	; 2 bytes @ 0x3A
   854  005A                     	ds	2
   855                           	global	??_getlogicseq
   856  005C                     ??_getlogicseq:	; 0 bytes @ 0x3C
   857  005C                     	ds	4
   858 ;;Data sizes: Strings 203, constant 2, data 25, bss 16, persistent 0 stack 0
   859 ;;Auto spaces:   Size  Autos    Used
   860 ;; COMMON          14     14      14
   861 ;; BANK0           80     64      69
   862 ;; BANK1           80     58      78
   863 ;; BANK3           96      0      16
   864 ;; BANK2           96      0       0
   865                           
   866 ;;
   867 ;; Pointer list with targets:
   868                           
   869 ;; ?___awmod	int  size(1) Largest target is 0
   870 ;;
   871 ;; ?___awdiv	int  size(1) Largest target is 0
   872 ;;
   873 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   874 ;;
   875 ;; ?_strcat	PTR unsigned char  size(1) Largest target is 5
   876 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
   877 ;;
   878 ;; ?_itoaa	int  size(1) Largest target is 0
   879 ;;
   880 ;; ?_strcpy	PTR unsigned char  size(1) Largest target is 32
   881 ;;		 -> getlogicseq@str(BANK1[32]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
   882 ;;		 -> logic_d1(BANK1[5]), 
   883 ;;
   884 ;; ?_strcmp	int  size(1) Largest target is 0
   885 ;;
   886 ;; strcpy@from	PTR const unsigned char  size(1) Largest target is 20
   887 ;;		 -> STR_12(CODE[1]), STR_11(CODE[20]), STR_9(CODE[1]), STR_8(CODE[20]), 
   888 ;;		 -> STR_6(CODE[1]), STR_5(CODE[20]), STR_3(CODE[1]), STR_2(CODE[20]), 
   889 ;;
   890 ;; strcpy@to	PTR unsigned char  size(1) Largest target is 32
   891 ;;		 -> getlogicseq@str(BANK1[32]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
   892 ;;		 -> logic_d1(BANK1[5]), 
   893 ;;
   894 ;; strcpy@cp	PTR unsigned char  size(1) Largest target is 32
   895 ;;		 -> getlogicseq@str(BANK1[32]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
   896 ;;		 -> logic_d1(BANK1[5]), 
   897 ;;
   898 ;; strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
   899 ;;		 -> STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[5]), STR_26(CODE[5]), 
   900 ;;		 -> STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), 
   901 ;;		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[5]), 
   902 ;;		 -> STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[5]), 
   903 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
   904 ;;
   905 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
   906 ;;		 -> lo(BANK0[5]), 
   907 ;;
   908 ;; strcat@from	PTR const unsigned char  size(1) Largest target is 16
   909 ;;		 -> getlogicseq@snum(BANK1[16]), 
   910 ;;
   911 ;; strcat@to	PTR unsigned char  size(1) Largest target is 5
   912 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
   913 ;;
   914 ;; strcat@cp	PTR unsigned char  size(1) Largest target is 5
   915 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
   916 ;;
   917 ;; scroll@str	PTR unsigned char  size(1) Largest target is 38
   918 ;;		 -> STR_1(CODE[38]), 
   919 ;;
   920 ;; write@str	PTR unsigned char  size(2) Largest target is 38
   921 ;;		 -> STR_13(CODE[5]), STR_10(CODE[5]), STR_7(CODE[5]), STR_4(CODE[5]), 
   922 ;;		 -> getlogicseq@str(BANK1[32]), STR_1(CODE[38]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), 
   923 ;;		 -> logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
   924 ;;
   925 ;; itoaa@ptr	PTR unsigned char  size(1) Largest target is 16
   926 ;;		 -> getlogicseq@snum(BANK1[16]), 
   927 ;;
   928 ;; sp__strcat	PTR unsigned char  size(1) Largest target is 5
   929 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK1[5]), 
   930 ;;
   931 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 32
   932 ;;		 -> getlogicseq@str(BANK1[32]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
   933 ;;		 -> logic_d1(BANK1[5]), 
   934 ;;
   935                           
   936                           
   937 ;;
   938 ;; Critical Paths under _main in COMMON
   939 ;;
   940 ;;   _getlogicseq->_write
   941 ;;   _scroll->_write
   942 ;;   _write->_cmd
   943 ;;   _write->_dat
   944 ;;   _clearlcd->_cmd
   945 ;;   _scan->_actrow
   946 ;;   _initlcd->_cmd
   947 ;;   _actrow->_delay
   948 ;;   _dat->_setLCD
   949 ;;   _cmd->_setLCD
   950 ;;   _itoaa->___awdiv
   951 ;;   _startswitch->_strcmp
   952 ;;
   953 ;; Critical Paths under _main in BANK0
   954 ;;
   955 ;;   _main->_getlogicseq
   956 ;;   _getlogicseq->_scroll
   957 ;;   _scroll->_write
   958 ;;   _dat->_setLCD
   959 ;;   _cmd->_setLCD
   960 ;;
   961 ;; Critical Paths under _main in BANK1
   962 ;;
   963 ;;   _main->_getlogicseq
   964 ;;
   965 ;; Critical Paths under _main in BANK3
   966 ;;
   967 ;;   None.
   968 ;;
   969 ;; Critical Paths under _main in BANK2
   970 ;;
   971 ;;   None.
   972                           
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   975 ;;
   976                           
   977 ;;
   978 ;;Call Graph Tables:
   979 ;;
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   982 ;; ---------------------------------------------------------------------------------
   983 ;; (0) _main                                                 0     0      0    6165
   984 ;;                            _initlcd
   985 ;;                         _initkeypad
   986 ;;                        _getlogicseq
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (1) _getlogicseq                                         62    62      0    5801
   989 ;;                                             60 BANK0      4     4      0
   990 ;;                                              0 BANK1     58    58      0
   991 ;;                             _scroll
   992 ;;                             _strcpy
   993 ;;                              _write
   994 ;;                               _scan
   995 ;;                              _itoaa
   996 ;;                             _strcat
   997 ;;                        _startswitch
   998 ;; ---------------------------------------------------------------------------------
   999 ;; (2) _scroll                                              52    50      2    1820
  1000 ;;                                             40 BANK0     20    18      2
  1001 ;;                              _write
  1002 ;;                              _delay
  1003 ;;                                _cmd
  1004 ;; ---------------------------------------------------------------------------------
  1005 ;; (2) _write                                               10     4      6    1226
  1006 ;;                                             10 COMMON     4     4      0
  1007 ;;                                             34 BANK0      6     0      6
  1008 ;;                           _clearlcd
  1009 ;;                                _cmd
  1010 ;;                                _dat
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (3) _clearlcd                                             0     0      0     364
  1013 ;;                                _cmd
  1014 ;; ---------------------------------------------------------------------------------
  1015 ;; (2) _scan                                                 2     0      2     110
  1016 ;;                                              4 COMMON     2     0      2
  1017 ;;                             _actrow
  1018 ;; ---------------------------------------------------------------------------------
  1019 ;; (1) _initlcd                                              0     0      0     364
  1020 ;;                                _cmd
  1021 ;; ---------------------------------------------------------------------------------
  1022 ;; (3) _actrow                                               2     0      2     110
  1023 ;;                                              2 COMMON     2     0      2
  1024 ;;                           _resetout
  1025 ;;                              _delay
  1026 ;; ---------------------------------------------------------------------------------
  1027 ;; (3) _dat                                                  2     0      2     364
  1028 ;;                                              8 COMMON     2     0      2
  1029 ;;                             _setLCD
  1030 ;;                              _delay
  1031 ;; ---------------------------------------------------------------------------------
  1032 ;; (3) _cmd                                                  2     0      2     364
  1033 ;;                                              8 COMMON     2     0      2
  1034 ;;                             _setLCD
  1035 ;;                              _delay
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; (2) _itoaa                                                8     5      3    1078
  1038 ;;                                              9 COMMON     4     1      3
  1039 ;;                                              0 BANK0      4     4      0
  1040 ;;                             ___wmul
  1041 ;;                            ___awdiv
  1042 ;;                            ___awmod
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (2) _startswitch                                          3     3      0     204
  1045 ;;                                              8 COMMON     3     3      0
  1046 ;;                             _strcmp
  1047 ;; ---------------------------------------------------------------------------------
  1048 ;; (3) ___awmod                                              7     3      4     296
  1049 ;;                                              0 COMMON     7     3      4
  1050 ;; ---------------------------------------------------------------------------------
  1051 ;; (3) ___awdiv                                              9     5      4     300
  1052 ;;                                              0 COMMON     9     5      4
  1053 ;; ---------------------------------------------------------------------------------
  1054 ;; (3) ___wmul                                               6     2      4      92
  1055 ;;                                              0 COMMON     6     2      4
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (4) _resetout                                             0     0      0       0
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (5) _setLCD                                              42    40      2     320
  1060 ;;                                              0 COMMON     8     6      2
  1061 ;;                                              0 BANK0     34    34      0
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (4) _delay                                                2     0      2      22
  1064 ;;                                              0 COMMON     2     0      2
  1065 ;; ---------------------------------------------------------------------------------
  1066 ;; (2) _strcat                                               4     3      1      96
  1067 ;;                                              0 COMMON     4     3      1
  1068 ;; ---------------------------------------------------------------------------------
  1069 ;; (3) _strcpy                                               4     3      1      73
  1070 ;;                                              0 COMMON     4     3      1
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; (4) _strcmp                                               8     6      2      89
  1073 ;;                                              0 COMMON     8     6      2
  1074 ;; ---------------------------------------------------------------------------------
  1075 ;; (1) _initkeypad                                           0     0      0       0
  1076 ;; ---------------------------------------------------------------------------------
  1077 ;; Estimated maximum stack depth 5
  1078 ;; ---------------------------------------------------------------------------------
  1079                           
  1080 ;; Call Graph Graphs:
  1081                           
  1082 ;; _main (ROOT)
  1083 ;;   _initlcd
  1084 ;;     _cmd
  1085 ;;       _setLCD
  1086 ;;       _delay
  1087 ;;   _initkeypad
  1088 ;;   _getlogicseq
  1089 ;;     _scroll
  1090 ;;       _write
  1091 ;;         _clearlcd
  1092 ;;           _cmd
  1093 ;;             _setLCD
  1094 ;;             _delay
  1095 ;;         _cmd
  1096 ;;           _setLCD
  1097 ;;           _delay
  1098 ;;         _dat
  1099 ;;           _setLCD
  1100 ;;           _delay
  1101 ;;       _delay
  1102 ;;       _cmd
  1103 ;;         _setLCD
  1104 ;;         _delay
  1105 ;;     _strcpy
  1106 ;;     _write
  1107 ;;       _clearlcd
  1108 ;;         _cmd
  1109 ;;           _setLCD
  1110 ;;           _delay
  1111 ;;       _cmd
  1112 ;;         _setLCD
  1113 ;;         _delay
  1114 ;;       _dat
  1115 ;;         _setLCD
  1116 ;;         _delay
  1117 ;;     _scan
  1118 ;;       _actrow
  1119 ;;         _resetout
  1120 ;;         _delay
  1121 ;;     _itoaa
  1122 ;;       ___wmul
  1123 ;;       ___awdiv
  1124 ;;       ___awmod
  1125 ;;     _strcat
  1126 ;;     _startswitch
  1127 ;;       _strcmp
  1128 ;;
  1129                           
  1130 ;; Address spaces:
  1131                           
  1132 ;;Name               Size   Autos  Total    Cost      Usage
  1133 ;;BANK3               60      0      10       9       16.7%
  1134 ;;BITBANK3            60      0       0       8        0.0%
  1135 ;;SFR3                 0      0       0       4        0.0%
  1136 ;;BITSFR3              0      0       0       4        0.0%
  1137 ;;BANK2               60      0       0      11        0.0%
  1138 ;;BITBANK2            60      0       0      10        0.0%
  1139 ;;SFR2                 0      0       0       5        0.0%
  1140 ;;BITSFR2              0      0       0       5        0.0%
  1141 ;;SFR1                 0      0       0       2        0.0%
  1142 ;;BITSFR1              0      0       0       2        0.0%
  1143 ;;BANK1               50     3A      4E       7       97.5%
  1144 ;;BITBANK1            50      0       0       6        0.0%
  1145 ;;CODE                 0      0       0       0        0.0%
  1146 ;;DATA                 0      0      B8      12        0.0%
  1147 ;;ABS                  0      0      B1       3        0.0%
  1148 ;;NULL                 0      0       0       0        0.0%
  1149 ;;STACK                0      0       7       2        0.0%
  1150 ;;BANK0               50     40      45       5       86.3%
  1151 ;;BITBANK0            50      0       0       4        0.0%
  1152 ;;SFR0                 0      0       0       1        0.0%
  1153 ;;BITSFR0              0      0       0       1        0.0%
  1154 ;;COMMON               E      E       E       1      100.0%
  1155 ;;BITCOMMON            E      0       0       0        0.0%
  1156 ;;EEDATA             100      0       0       0        0.0%
  1157                           
  1158                           	global	_main
  1159                           psect	maintext,global,class=CODE,delta=2
  1160                           global __pmaintext
  1161  0BC1                     __pmaintext:
  1162                           
  1163 ;; *************** function _main *****************
  1164 ;; Defined at:
  1165 ;;		line 82 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2  676[COMMON] int 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 17F/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0
  1182 ;;      Totals:         0       0       0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels required when called:    7
  1185 ;; This function calls:
  1186 ;;		_initlcd
  1187 ;;		_initkeypad
  1188 ;;		_getlogicseq
  1189 ;; This function is called by:
  1190 ;;		Startup code after reset
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           psect	maintext
  1194                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  1195                           	line	82
  1196                           	global	__size_of_main
  1197  0015                     	__size_of_main	equ	__end_of_main-_main
  1198                           	
  1199  0BC1                     _main:	
  1200                           	opt	stack 1
  1201                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1202                           	line	87
  1203                           	
  1204  0BC1                     l3470:	
  1205                           ;lcd1.c: 87: initlcd();
  1206  0BC1  120A  158A  24BB   	fcall	_initlcd
              120A  158A         
  1207                           	line	88
  1208                           	
  1209  0BC6                     l3472:	
  1210                           ;lcd1.c: 88: initkeypad();
  1211  0BC6  120A  158A  236E   	fcall	_initkeypad
              120A  158A         
  1212  0BCB  2BCC               	goto	l3474
  1213                           	line	92
  1214                           ;lcd1.c: 92: while(1){
  1215                           	
  1216  0BCC                     l677:	
  1217                           	line	94
  1218                           	
  1219  0BCC                     l3474:	
  1220                           ;lcd1.c: 94: getlogicseq();
  1221  0BCC  120A  118A  23FD   	fcall	_getlogicseq
              120A  158A         
  1222  0BD1  2BCC               	goto	l3474
  1223                           	line	95
  1224                           	
  1225  0BD2                     l678:	
  1226                           	line	92
  1227  0BD2  2BCC               	goto	l3474
  1228                           	
  1229  0BD3                     l679:	
  1230                           	line	101
  1231                           	
  1232  0BD3                     l680:	
  1233                           	global	start
  1234  0BD3  120A  118A  2800   	ljmp	start
  1235                           	opt stack 0
  1236                           GLOBAL	__end_of_main
  1237  0BD6                     	__end_of_main:
  1238 ;; =============== function _main ends ============
  1239                           
  1240                           	signat	_main,90
  1241                           	global	_getlogicseq
  1242                           psect	text490,local,class=CODE,delta=2
  1243                           global __ptext490
  1244  03FD                     __ptext490:
  1245                           
  1246 ;; *************** function _getlogicseq *****************
  1247 ;; Defined at:
  1248 ;;		line 154 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  str            32    0[BANK1 ] unsigned char [32]
  1253 ;;  snum           16   34[BANK1 ] unsigned char [16]
  1254 ;;  num             2   56[BANK1 ] int 
  1255 ;;  ccount          2   54[BANK1 ] int 
  1256 ;;  wf              2   52[BANK1 ] int 
  1257 ;;  nf              2   50[BANK1 ] int 
  1258 ;;  bf              2   32[BANK1 ] int 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;		None               void
  1261 ;; Registers used:
  1262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         0       0       0       0       0
  1269 ;;      Locals:         0       0      58       0       0
  1270 ;;      Temps:          0       4       0       0       0
  1271 ;;      Totals:         0       4      58       0       0
  1272 ;;Total ram usage:       62 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    6
  1275 ;; This function calls:
  1276 ;;		_scroll
  1277 ;;		_strcpy
  1278 ;;		_write
  1279 ;;		_scan
  1280 ;;		_itoaa
  1281 ;;		_strcat
  1282 ;;		_startswitch
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           psect	text490
  1288                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  1289                           	line	154
  1290                           	global	__size_of_getlogicseq
  1291  0403                     	__size_of_getlogicseq	equ	__end_of_getlogicseq-_getlogicseq
  1292                           	
  1293  03FD                     _getlogicseq:	
  1294                           	opt	stack 1
  1295                           ; Regs used in _getlogicseq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1296                           	line	157
  1297                           	
  1298  03FD                     l3270:	
  1299                           ;lcd1.c: 157: scroll("WELCOME ! TO PROGRAMABLE HOME AUTMATN",0);
  1300  03FD  3000               	movlw	low(0)
  1301  03FE  1283               	bcf	status, 5	;RP0=0, select bank0
  1302  03FF  1303               	bcf	status, 6	;RP1=0, select bank0
  1303  0400  00C8               	movwf	(?_scroll)
  1304  0401  3000               	movlw	high(0)
  1305  0402  00C9               	movwf	((?_scroll))+1
  1306  0403  3003               	movlw	((STR_1-__stringbase))&0ffh
  1307  0404  120A  158A  2732   	fcall	_scroll
              120A  118A         
  1308                           	line	162
  1309                           	
  1310  0409                     l3272:	
  1311                           ;lcd1.c: 161: int num ;
  1312                           ;lcd1.c: 162: char snum[16]="";
  1313  0409  30C2               	movlw	(getlogicseq@snum)&0ffh
  1314  040A  0084               	movwf	fsr0
  1315  040B  3090               	movlw	low(getlogicseq@F1256)
  1316  040C  1283               	bcf	status, 5	;RP0=0, select bank0
  1317  040D  1303               	bcf	status, 6	;RP1=0, select bank0
  1318  040E  00DC               	movwf	(??_getlogicseq+0)+0
  1319  040F  0804               	movf	fsr0,w
  1320  0410  00DD               	movwf	((??_getlogicseq+0)+0+1)
  1321  0411  3010               	movlw	16
  1322  0412  00DE               	movwf	((??_getlogicseq+0)+0+2)
  1323  0413                     u4380:
  1324  0413  085C               	movf	(??_getlogicseq+0)+0,w
  1325  0414  0084               	movwf	fsr0
  1326  0415  1783               	bsf	status, 7	;select IRP bank3
  1327                           	
  1328  0416  0800               	movf	indf,w
  1329  0417  00DF               	movwf	((??_getlogicseq+0)+0+3)
  1330  0418  0ADC               	incf	(??_getlogicseq+0)+0,f
  1331  0419  085D               	movf	((??_getlogicseq+0)+0+1),w
  1332  041A  0084               	movwf	fsr0
  1333  041B  1383               	bcf	status, 7	;select IRP bank1
  1334                           	
  1335  041C  085F               	movf	((??_getlogicseq+0)+0+3),w
  1336  041D  0080               	movwf	indf
  1337  041E  0ADD               	incf	((??_getlogicseq+0)+0+1),f
  1338  041F  0BDE               	decfsz	((??_getlogicseq+0)+0+2),f
  1339  0420  2C13               	goto	u4380
  1340                           	line	163
  1341                           	
  1342  0421                     l3274:	
  1343                           ;lcd1.c: 163: int wf=0;
  1344  0421  1683               	bsf	status, 5	;RP0=1, select bank1
  1345  0422  1303               	bcf	status, 6	;RP1=0, select bank1
  1346  0423  01D4               	clrf	(getlogicseq@wf)^080h
  1347  0424  01D5               	clrf	(getlogicseq@wf+1)^080h
  1348                           	line	164
  1349                           	
  1350  0425                     l3276:	
  1351                           ;lcd1.c: 164: int nf=0;
  1352  0425  01D2               	clrf	(getlogicseq@nf)^080h
  1353  0426  01D3               	clrf	(getlogicseq@nf+1)^080h
  1354                           	line	165
  1355                           	
  1356  0427                     l3278:	
  1357                           ;lcd1.c: 165: int bf=0;
  1358  0427  01C0               	clrf	(getlogicseq@bf)^080h
  1359  0428  01C1               	clrf	(getlogicseq@bf+1)^080h
  1360                           	line	166
  1361                           	
  1362  0429                     l3280:	
  1363                           ;lcd1.c: 166: int ccount=0;
  1364  0429  01D6               	clrf	(getlogicseq@ccount)^080h
  1365  042A  01D7               	clrf	(getlogicseq@ccount+1)^080h
  1366  042B  2C2C               	goto	l3282
  1367                           	line	168
  1368                           ;lcd1.c: 167: char str[32];
  1369                           ;lcd1.c: 168: START_SEQ:
  1370                           	
  1371  042C                     l699:	
  1372                           	line	170
  1373                           	
  1374  042C                     l3282:	
  1375                           ;lcd1.c: 170: wf=0;ccount=0;
  1376  042C  01D4               	clrf	(getlogicseq@wf)^080h
  1377  042D  01D5               	clrf	(getlogicseq@wf+1)^080h
  1378                           	
  1379  042E                     l3284:	
  1380  042E  01D6               	clrf	(getlogicseq@ccount)^080h
  1381  042F  01D7               	clrf	(getlogicseq@ccount+1)^080h
  1382                           	line	171
  1383                           	
  1384  0430                     l3286:	
  1385                           ;lcd1.c: 171: strcpy(str,"Enter Logic DEV1:  ");
  1386  0430  3029               	movlw	((STR_2-__stringbase))&0ffh
  1387  0431  1283               	bcf	status, 5	;RP0=0, select bank0
  1388  0432  1303               	bcf	status, 6	;RP1=0, select bank0
  1389  0433  00DC               	movwf	(??_getlogicseq+0)+0
  1390  0434  085C               	movf	(??_getlogicseq+0)+0,w
  1391  0435  00F0               	movwf	(?_strcpy)
  1392  0436  30A0               	movlw	(getlogicseq@str)&0ffh
  1393  0437  120A  158A  23D6   	fcall	_strcpy
              120A  118A         
  1394                           	line	172
  1395                           	
  1396  043C                     l3288:	
  1397                           ;lcd1.c: 172: write(str,1,1);
  1398  043C  30A0               	movlw	(getlogicseq@str&0ffh)
  1399  043D  1283               	bcf	status, 5	;RP0=0, select bank0
  1400  043E  1303               	bcf	status, 6	;RP1=0, select bank0
  1401  043F  00C2               	movwf	(?_write)
  1402  0440  3000               	movlw	(0x1/2)
  1403  0441  00C3               	movwf	(?_write+1)
  1404  0442  3001               	movlw	low(01h)
  1405  0443  00C4               	movwf	0+(?_write)+02h
  1406  0444  3000               	movlw	high(01h)
  1407  0445  00C5               	movwf	(0+(?_write)+02h)+1
  1408  0446  3001               	movlw	low(01h)
  1409  0447  00C6               	movwf	0+(?_write)+04h
  1410  0448  3000               	movlw	high(01h)
  1411  0449  00C7               	movwf	(0+(?_write)+04h)+1
  1412  044A  120A  158A  2565   	fcall	_write
              120A  118A         
  1413                           	line	173
  1414                           	
  1415  044F                     l3290:	
  1416                           ;lcd1.c: 173: write(logic_d1,2,0);
  1417  044F  30DA               	movlw	(_logic_d1&0ffh)
  1418  0450  1283               	bcf	status, 5	;RP0=0, select bank0
  1419  0451  1303               	bcf	status, 6	;RP1=0, select bank0
  1420  0452  00C2               	movwf	(?_write)
  1421  0453  3000               	movlw	(0x1/2)
  1422  0454  00C3               	movwf	(?_write+1)
  1423  0455  3002               	movlw	low(02h)
  1424  0456  00C4               	movwf	0+(?_write)+02h
  1425  0457  3000               	movlw	high(02h)
  1426  0458  00C5               	movwf	(0+(?_write)+02h)+1
  1427  0459  3000               	movlw	low(0)
  1428  045A  00C6               	movwf	0+(?_write)+04h
  1429  045B  3000               	movlw	high(0)
  1430  045C  00C7               	movwf	(0+(?_write)+04h)+1
  1431  045D  120A  158A  2565   	fcall	_write
              120A  118A         
  1432  0462  2C63               	goto	l3292
  1433                           	line	175
  1434                           ;lcd1.c: 175: while(1)
  1435                           	
  1436  0463                     l700:	
  1437                           	line	177
  1438                           	
  1439  0463                     l3292:	
  1440                           ;lcd1.c: 176: {
  1441                           ;lcd1.c: 177: num=scan();
  1442  0463  120A  118A  20E6   	fcall	_scan
              120A  118A         
  1443  0468  0875               	movf	(1+(?_scan)),w
  1444  0469  1683               	bsf	status, 5	;RP0=1, select bank1
  1445  046A  1303               	bcf	status, 6	;RP1=0, select bank1
  1446  046B  01D9               	clrf	(getlogicseq@num+1)^080h
  1447  046C  07D9               	addwf	(getlogicseq@num+1)^080h
  1448  046D  0874               	movf	(0+(?_scan)),w
  1449  046E  01D8               	clrf	(getlogicseq@num)^080h
  1450  046F  07D8               	addwf	(getlogicseq@num)^080h
  1451                           
  1452                           	line	178
  1453                           	
  1454  0470                     l3294:	
  1455                           ;lcd1.c: 178: if(num==1||num==0){
  1456  0470  3001               	movlw	01h
  1457  0471  0658               	xorwf	(getlogicseq@num)^080h,w
  1458  0472  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1459  0473  1903               	skipnz
  1460  0474  2C76               	goto	u4391
  1461  0475  2C77               	goto	u4390
  1462  0476                     u4391:
  1463  0476  2C7E               	goto	l3298
  1464  0477                     u4390:
  1465                           	
  1466  0477                     l3296:	
  1467  0477  0859               	movf	((getlogicseq@num+1)^080h),w
  1468  0478  0458               	iorwf	((getlogicseq@num)^080h),w
  1469  0479  1D03               	skipz
  1470  047A  2C7C               	goto	u4401
  1471  047B  2C7D               	goto	u4400
  1472  047C                     u4401:
  1473  047C  2CEA               	goto	l3314
  1474  047D                     u4400:
  1475  047D  2C7E               	goto	l3298
  1476                           	
  1477  047E                     l703:	
  1478                           	line	179
  1479                           	
  1480  047E                     l3298:	
  1481                           ;lcd1.c: 179: if(wf==0)
  1482  047E  0855               	movf	((getlogicseq@wf+1)^080h),w
  1483  047F  0454               	iorwf	((getlogicseq@wf)^080h),w
  1484  0480  1D03               	skipz
  1485  0481  2C83               	goto	u4411
  1486  0482  2C84               	goto	u4410
  1487  0483                     u4411:
  1488  0483  2CED               	goto	l3316
  1489  0484                     u4410:
  1490                           	line	181
  1491                           	
  1492  0484                     l3300:	
  1493                           ;lcd1.c: 180: {
  1494                           ;lcd1.c: 181: if(ccount==0)
  1495  0484  0857               	movf	((getlogicseq@ccount+1)^080h),w
  1496  0485  0456               	iorwf	((getlogicseq@ccount)^080h),w
  1497  0486  1D03               	skipz
  1498  0487  2C89               	goto	u4421
  1499  0488  2C8A               	goto	u4420
  1500  0489                     u4421:
  1501  0489  2C97               	goto	l3304
  1502  048A                     u4420:
  1503                           	line	182
  1504                           	
  1505  048A                     l3302:	
  1506                           ;lcd1.c: 182: strcpy(logic_d1,"");
  1507  048A  303C               	movlw	((STR_3-__stringbase))&0ffh
  1508  048B  1283               	bcf	status, 5	;RP0=0, select bank0
  1509  048C  1303               	bcf	status, 6	;RP1=0, select bank0
  1510  048D  00DC               	movwf	(??_getlogicseq+0)+0
  1511  048E  085C               	movf	(??_getlogicseq+0)+0,w
  1512  048F  00F0               	movwf	(?_strcpy)
  1513  0490  30DA               	movlw	(_logic_d1)&0ffh
  1514  0491  120A  158A  23D6   	fcall	_strcpy
              120A  118A         
  1515  0496  2C97               	goto	l3304
  1516                           	
  1517  0497                     l705:	
  1518                           	line	183
  1519                           	
  1520  0497                     l3304:	
  1521                           ;lcd1.c: 183: write("----",2,0);
  1522  0497  3079               	movlw	low((STR_4-__stringbase))
  1523  0498  1283               	bcf	status, 5	;RP0=0, select bank0
  1524  0499  1303               	bcf	status, 6	;RP1=0, select bank0
  1525  049A  00C2               	movwf	(?_write)
  1526  049B  3080               	movlw	80h
  1527  049C  00C3               	movwf	(?_write+1)
  1528  049D  3002               	movlw	low(02h)
  1529  049E  00C4               	movwf	0+(?_write)+02h
  1530  049F  3000               	movlw	high(02h)
  1531  04A0  00C5               	movwf	(0+(?_write)+02h)+1
  1532  04A1  3000               	movlw	low(0)
  1533  04A2  00C6               	movwf	0+(?_write)+04h
  1534  04A3  3000               	movlw	high(0)
  1535  04A4  00C7               	movwf	(0+(?_write)+04h)+1
  1536  04A5  120A  158A  2565   	fcall	_write
              120A  118A         
  1537                           	line	184
  1538                           	
  1539  04AA                     l3306:	
  1540                           ;lcd1.c: 184: itoaa(num, snum);
  1541  04AA  1683               	bsf	status, 5	;RP0=1, select bank1
  1542  04AB  1303               	bcf	status, 6	;RP1=0, select bank1
  1543  04AC  0859               	movf	(getlogicseq@num+1)^080h,w
  1544  04AD  01FA               	clrf	(?_itoaa+1)
  1545  04AE  07FA               	addwf	(?_itoaa+1)
  1546  04AF  0858               	movf	(getlogicseq@num)^080h,w
  1547  04B0  01F9               	clrf	(?_itoaa)
  1548  04B1  07F9               	addwf	(?_itoaa)
  1549                           
  1550  04B2  30C2               	movlw	(getlogicseq@snum)&0ffh
  1551  04B3  1283               	bcf	status, 5	;RP0=0, select bank0
  1552  04B4  1303               	bcf	status, 6	;RP1=0, select bank0
  1553  04B5  00DC               	movwf	(??_getlogicseq+0)+0
  1554  04B6  085C               	movf	(??_getlogicseq+0)+0,w
  1555  04B7  00FB               	movwf	0+(?_itoaa)+02h
  1556  04B8  120A  118A  21CE   	fcall	_itoaa
              120A  118A         
  1557                           	line	185
  1558                           ;lcd1.c: 185: strcat(logic_d1,snum);
  1559  04BD  30C2               	movlw	(getlogicseq@snum)&0ffh
  1560  04BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1561  04BF  1303               	bcf	status, 6	;RP1=0, select bank0
  1562  04C0  00DC               	movwf	(??_getlogicseq+0)+0
  1563  04C1  085C               	movf	(??_getlogicseq+0)+0,w
  1564  04C2  00F0               	movwf	(?_strcat)
  1565  04C3  30DA               	movlw	(_logic_d1)&0ffh
  1566  04C4  120A  158A  2468   	fcall	_strcat
              120A  118A         
  1567                           	line	186
  1568                           	
  1569  04C9                     l3308:	
  1570                           ;lcd1.c: 186: write( logic_d1,2,0); ;
  1571  04C9  30DA               	movlw	(_logic_d1&0ffh)
  1572  04CA  1283               	bcf	status, 5	;RP0=0, select bank0
  1573  04CB  1303               	bcf	status, 6	;RP1=0, select bank0
  1574  04CC  00C2               	movwf	(?_write)
  1575  04CD  3000               	movlw	(0x1/2)
  1576  04CE  00C3               	movwf	(?_write+1)
  1577  04CF  3002               	movlw	low(02h)
  1578  04D0  00C4               	movwf	0+(?_write)+02h
  1579  04D1  3000               	movlw	high(02h)
  1580  04D2  00C5               	movwf	(0+(?_write)+02h)+1
  1581  04D3  3000               	movlw	low(0)
  1582  04D4  00C6               	movwf	0+(?_write)+04h
  1583  04D5  3000               	movlw	high(0)
  1584  04D6  00C7               	movwf	(0+(?_write)+04h)+1
  1585  04D7  120A  158A  2565   	fcall	_write
              120A  118A         
  1586                           	line	187
  1587                           	
  1588  04DC                     l3310:	
  1589                           ;lcd1.c: 187: wf=1;
  1590  04DC  3001               	movlw	low(01h)
  1591  04DD  1683               	bsf	status, 5	;RP0=1, select bank1
  1592  04DE  1303               	bcf	status, 6	;RP1=0, select bank1
  1593  04DF  00D4               	movwf	(getlogicseq@wf)^080h
  1594  04E0  3000               	movlw	high(01h)
  1595  04E1  00D5               	movwf	((getlogicseq@wf)^080h)+1
  1596                           	line	188
  1597                           	
  1598  04E2                     l3312:	
  1599                           ;lcd1.c: 188: ccount++;
  1600  04E2  3001               	movlw	low(01h)
  1601  04E3  07D6               	addwf	(getlogicseq@ccount)^080h,f
  1602  04E4  1803               	skipnc
  1603  04E5  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  1604  04E6  3000               	movlw	high(01h)
  1605  04E7  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  1606  04E8  2CED               	goto	l3316
  1607                           	line	189
  1608                           	
  1609  04E9                     l704:	
  1610                           	line	190
  1611                           ;lcd1.c: 189: }
  1612                           ;lcd1.c: 190: }
  1613  04E9  2CED               	goto	l3316
  1614                           	line	191
  1615                           	
  1616  04EA                     l701:	
  1617                           	line	192
  1618                           	
  1619  04EA                     l3314:	
  1620                           ;lcd1.c: 191: else{
  1621                           ;lcd1.c: 192: wf=0;
  1622  04EA  01D4               	clrf	(getlogicseq@wf)^080h
  1623  04EB  01D5               	clrf	(getlogicseq@wf+1)^080h
  1624  04EC  2CED               	goto	l3316
  1625                           	line	193
  1626                           	
  1627  04ED                     l706:	
  1628                           	line	194
  1629                           	
  1630  04ED                     l3316:	
  1631                           ;lcd1.c: 193: }
  1632                           ;lcd1.c: 194: if(ccount>3)
  1633  04ED  0857               	movf	(getlogicseq@ccount+1)^080h,w
  1634  04EE  3A80               	xorlw	80h
  1635  04EF  00FF               	movwf	btemp+1
  1636  04F0  3080               	movlw	(high(04h))^80h
  1637  04F1  027F               	subwf	btemp+1,w
  1638  04F2  1D03               	skipz
  1639  04F3  2CF6               	goto	u4435
  1640  04F4  3004               	movlw	low(04h)
  1641  04F5  0256               	subwf	(getlogicseq@ccount)^080h,w
  1642  04F6                     u4435:
  1643                           
  1644  04F6  1C03               	skipc
  1645  04F7  2CF9               	goto	u4431
  1646  04F8  2CFA               	goto	u4430
  1647  04F9                     u4431:
  1648  04F9  2CFC               	goto	l3320
  1649  04FA                     u4430:
  1650  04FA  2D1E               	goto	l3330
  1651                           	line	195
  1652                           	
  1653  04FB                     l3318:	
  1654                           ;lcd1.c: 195: break;
  1655  04FB  2D1E               	goto	l3330
  1656                           	
  1657  04FC                     l707:	
  1658                           	line	198
  1659                           	
  1660  04FC                     l3320:	
  1661                           ;lcd1.c: 198: if(num==2)
  1662  04FC  3002               	movlw	02h
  1663  04FD  1683               	bsf	status, 5	;RP0=1, select bank1
  1664  04FE  1303               	bcf	status, 6	;RP1=0, select bank1
  1665  04FF  0658               	xorwf	(getlogicseq@num)^080h,w
  1666  0500  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1667  0501  1D03               	skipz
  1668  0502  2D04               	goto	u4441
  1669  0503  2D05               	goto	u4440
  1670  0504                     u4441:
  1671  0504  2D11               	goto	l3326
  1672  0505                     u4440:
  1673                           	line	200
  1674                           	
  1675  0505                     l3322:	
  1676                           ;lcd1.c: 199: {
  1677                           ;lcd1.c: 200: if(nf==0){
  1678  0505  0853               	movf	((getlogicseq@nf+1)^080h),w
  1679  0506  0452               	iorwf	((getlogicseq@nf)^080h),w
  1680  0507  1D03               	skipz
  1681  0508  2D0A               	goto	u4451
  1682  0509  2D0B               	goto	u4450
  1683  050A                     u4451:
  1684  050A  2C63               	goto	l3292
  1685  050B                     u4450:
  1686                           	line	201
  1687                           	
  1688  050B                     l3324:	
  1689                           ;lcd1.c: 201: nf=1;
  1690  050B  3001               	movlw	low(01h)
  1691  050C  00D2               	movwf	(getlogicseq@nf)^080h
  1692  050D  3000               	movlw	high(01h)
  1693  050E  00D3               	movwf	((getlogicseq@nf)^080h)+1
  1694                           	line	202
  1695                           ;lcd1.c: 202: break;
  1696  050F  2D1E               	goto	l3330
  1697                           	line	203
  1698                           	
  1699  0510                     l710:	
  1700                           	line	204
  1701                           ;lcd1.c: 203: }
  1702                           ;lcd1.c: 204: }
  1703  0510  2C63               	goto	l3292
  1704                           	line	205
  1705                           	
  1706  0511                     l709:	
  1707                           	
  1708  0511                     l3326:	
  1709                           ;lcd1.c: 205: else if(num==99){
  1710  0511  3063               	movlw	063h
  1711  0512  0658               	xorwf	(getlogicseq@num)^080h,w
  1712  0513  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1713  0514  1D03               	skipz
  1714  0515  2D17               	goto	u4461
  1715  0516  2D18               	goto	u4460
  1716  0517                     u4461:
  1717  0517  2C63               	goto	l3292
  1718  0518                     u4460:
  1719                           	line	206
  1720                           	
  1721  0518                     l3328:	
  1722                           ;lcd1.c: 206: nf=0;
  1723  0518  01D2               	clrf	(getlogicseq@nf)^080h
  1724  0519  01D3               	clrf	(getlogicseq@nf+1)^080h
  1725  051A  2C63               	goto	l3292
  1726                           	line	207
  1727                           	
  1728  051B                     l712:	
  1729  051B  2C63               	goto	l3292
  1730                           	line	208
  1731                           	
  1732  051C                     l711:	
  1733  051C  2C63               	goto	l3292
  1734                           	
  1735  051D                     l713:	
  1736                           	line	175
  1737  051D  2C63               	goto	l3292
  1738                           	
  1739  051E                     l708:	
  1740                           	line	211
  1741                           	
  1742  051E                     l3330:	
  1743                           ;lcd1.c: 207: }
  1744                           ;lcd1.c: 208: }
  1745                           ;lcd1.c: 211: wf=0;ccount=0;
  1746  051E  1683               	bsf	status, 5	;RP0=1, select bank1
  1747  051F  1303               	bcf	status, 6	;RP1=0, select bank1
  1748  0520  01D4               	clrf	(getlogicseq@wf)^080h
  1749  0521  01D5               	clrf	(getlogicseq@wf+1)^080h
  1750  0522  01D6               	clrf	(getlogicseq@ccount)^080h
  1751  0523  01D7               	clrf	(getlogicseq@ccount+1)^080h
  1752                           	line	212
  1753                           	
  1754  0524                     l3332:	
  1755                           ;lcd1.c: 212: strcpy(str,"Enter Logic DEV2:  ");
  1756  0524  303D               	movlw	((STR_5-__stringbase))&0ffh
  1757  0525  1283               	bcf	status, 5	;RP0=0, select bank0
  1758  0526  1303               	bcf	status, 6	;RP1=0, select bank0
  1759  0527  00DC               	movwf	(??_getlogicseq+0)+0
  1760  0528  085C               	movf	(??_getlogicseq+0)+0,w
  1761  0529  00F0               	movwf	(?_strcpy)
  1762  052A  30A0               	movlw	(getlogicseq@str)&0ffh
  1763  052B  120A  158A  23D6   	fcall	_strcpy
              120A  118A         
  1764                           	line	213
  1765                           	
  1766  0530                     l3334:	
  1767                           ;lcd1.c: 213: write(str,1,1);
  1768  0530  30A0               	movlw	(getlogicseq@str&0ffh)
  1769  0531  1283               	bcf	status, 5	;RP0=0, select bank0
  1770  0532  1303               	bcf	status, 6	;RP1=0, select bank0
  1771  0533  00C2               	movwf	(?_write)
  1772  0534  3000               	movlw	(0x1/2)
  1773  0535  00C3               	movwf	(?_write+1)
  1774  0536  3001               	movlw	low(01h)
  1775  0537  00C4               	movwf	0+(?_write)+02h
  1776  0538  3000               	movlw	high(01h)
  1777  0539  00C5               	movwf	(0+(?_write)+02h)+1
  1778  053A  3001               	movlw	low(01h)
  1779  053B  00C6               	movwf	0+(?_write)+04h
  1780  053C  3000               	movlw	high(01h)
  1781  053D  00C7               	movwf	(0+(?_write)+04h)+1
  1782  053E  120A  158A  2565   	fcall	_write
              120A  118A         
  1783                           	line	214
  1784                           	
  1785  0543                     l3336:	
  1786                           ;lcd1.c: 214: write(logic_d2,2,0);
  1787  0543  30DF               	movlw	(_logic_d2&0ffh)
  1788  0544  1283               	bcf	status, 5	;RP0=0, select bank0
  1789  0545  1303               	bcf	status, 6	;RP1=0, select bank0
  1790  0546  00C2               	movwf	(?_write)
  1791  0547  3000               	movlw	(0x1/2)
  1792  0548  00C3               	movwf	(?_write+1)
  1793  0549  3002               	movlw	low(02h)
  1794  054A  00C4               	movwf	0+(?_write)+02h
  1795  054B  3000               	movlw	high(02h)
  1796  054C  00C5               	movwf	(0+(?_write)+02h)+1
  1797  054D  3000               	movlw	low(0)
  1798  054E  00C6               	movwf	0+(?_write)+04h
  1799  054F  3000               	movlw	high(0)
  1800  0550  00C7               	movwf	(0+(?_write)+04h)+1
  1801  0551  120A  158A  2565   	fcall	_write
              120A  118A         
  1802  0556  2D57               	goto	l3338
  1803                           	line	216
  1804                           ;lcd1.c: 216: while(1)
  1805                           	
  1806  0557                     l714:	
  1807                           	line	218
  1808                           	
  1809  0557                     l3338:	
  1810                           ;lcd1.c: 217: {
  1811                           ;lcd1.c: 218: num=scan();
  1812  0557  120A  118A  20E6   	fcall	_scan
              120A  118A         
  1813  055C  0875               	movf	(1+(?_scan)),w
  1814  055D  1683               	bsf	status, 5	;RP0=1, select bank1
  1815  055E  1303               	bcf	status, 6	;RP1=0, select bank1
  1816  055F  01D9               	clrf	(getlogicseq@num+1)^080h
  1817  0560  07D9               	addwf	(getlogicseq@num+1)^080h
  1818  0561  0874               	movf	(0+(?_scan)),w
  1819  0562  01D8               	clrf	(getlogicseq@num)^080h
  1820  0563  07D8               	addwf	(getlogicseq@num)^080h
  1821                           
  1822                           	line	219
  1823                           	
  1824  0564                     l3340:	
  1825                           ;lcd1.c: 219: if(num==1||num==0){
  1826  0564  3001               	movlw	01h
  1827  0565  0658               	xorwf	(getlogicseq@num)^080h,w
  1828  0566  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1829  0567  1903               	skipnz
  1830  0568  2D6A               	goto	u4471
  1831  0569  2D6B               	goto	u4470
  1832  056A                     u4471:
  1833  056A  2D72               	goto	l3344
  1834  056B                     u4470:
  1835                           	
  1836  056B                     l3342:	
  1837  056B  0859               	movf	((getlogicseq@num+1)^080h),w
  1838  056C  0458               	iorwf	((getlogicseq@num)^080h),w
  1839  056D  1D03               	skipz
  1840  056E  2D70               	goto	u4481
  1841  056F  2D71               	goto	u4480
  1842  0570                     u4481:
  1843  0570  2DDE               	goto	l3360
  1844  0571                     u4480:
  1845  0571  2D72               	goto	l3344
  1846                           	
  1847  0572                     l717:	
  1848                           	line	220
  1849                           	
  1850  0572                     l3344:	
  1851                           ;lcd1.c: 220: if(wf==0)
  1852  0572  0855               	movf	((getlogicseq@wf+1)^080h),w
  1853  0573  0454               	iorwf	((getlogicseq@wf)^080h),w
  1854  0574  1D03               	skipz
  1855  0575  2D77               	goto	u4491
  1856  0576  2D78               	goto	u4490
  1857  0577                     u4491:
  1858  0577  2DE1               	goto	l3362
  1859  0578                     u4490:
  1860                           	line	221
  1861                           	
  1862  0578                     l3346:	
  1863                           ;lcd1.c: 221: { if(ccount==0)
  1864  0578  0857               	movf	((getlogicseq@ccount+1)^080h),w
  1865  0579  0456               	iorwf	((getlogicseq@ccount)^080h),w
  1866  057A  1D03               	skipz
  1867  057B  2D7D               	goto	u4501
  1868  057C  2D7E               	goto	u4500
  1869  057D                     u4501:
  1870  057D  2D8B               	goto	l3350
  1871  057E                     u4500:
  1872                           	line	222
  1873                           	
  1874  057E                     l3348:	
  1875                           ;lcd1.c: 222: strcpy(logic_d2,"");
  1876  057E  303C               	movlw	((STR_6-__stringbase))&0ffh
  1877  057F  1283               	bcf	status, 5	;RP0=0, select bank0
  1878  0580  1303               	bcf	status, 6	;RP1=0, select bank0
  1879  0581  00DC               	movwf	(??_getlogicseq+0)+0
  1880  0582  085C               	movf	(??_getlogicseq+0)+0,w
  1881  0583  00F0               	movwf	(?_strcpy)
  1882  0584  30DF               	movlw	(_logic_d2)&0ffh
  1883  0585  120A  158A  23D6   	fcall	_strcpy
              120A  118A         
  1884  058A  2D8B               	goto	l3350
  1885                           	
  1886  058B                     l719:	
  1887                           	line	223
  1888                           	
  1889  058B                     l3350:	
  1890                           ;lcd1.c: 223: write("----",2,0);
  1891  058B  3079               	movlw	low((STR_7-__stringbase))
  1892  058C  1283               	bcf	status, 5	;RP0=0, select bank0
  1893  058D  1303               	bcf	status, 6	;RP1=0, select bank0
  1894  058E  00C2               	movwf	(?_write)
  1895  058F  3080               	movlw	80h
  1896  0590  00C3               	movwf	(?_write+1)
  1897  0591  3002               	movlw	low(02h)
  1898  0592  00C4               	movwf	0+(?_write)+02h
  1899  0593  3000               	movlw	high(02h)
  1900  0594  00C5               	movwf	(0+(?_write)+02h)+1
  1901  0595  3000               	movlw	low(0)
  1902  0596  00C6               	movwf	0+(?_write)+04h
  1903  0597  3000               	movlw	high(0)
  1904  0598  00C7               	movwf	(0+(?_write)+04h)+1
  1905  0599  120A  158A  2565   	fcall	_write
              120A  118A         
  1906                           	line	224
  1907                           	
  1908  059E                     l3352:	
  1909                           ;lcd1.c: 224: itoaa(num, snum);
  1910  059E  1683               	bsf	status, 5	;RP0=1, select bank1
  1911  059F  1303               	bcf	status, 6	;RP1=0, select bank1
  1912  05A0  0859               	movf	(getlogicseq@num+1)^080h,w
  1913  05A1  01FA               	clrf	(?_itoaa+1)
  1914  05A2  07FA               	addwf	(?_itoaa+1)
  1915  05A3  0858               	movf	(getlogicseq@num)^080h,w
  1916  05A4  01F9               	clrf	(?_itoaa)
  1917  05A5  07F9               	addwf	(?_itoaa)
  1918                           
  1919  05A6  30C2               	movlw	(getlogicseq@snum)&0ffh
  1920  05A7  1283               	bcf	status, 5	;RP0=0, select bank0
  1921  05A8  1303               	bcf	status, 6	;RP1=0, select bank0
  1922  05A9  00DC               	movwf	(??_getlogicseq+0)+0
  1923  05AA  085C               	movf	(??_getlogicseq+0)+0,w
  1924  05AB  00FB               	movwf	0+(?_itoaa)+02h
  1925  05AC  120A  118A  21CE   	fcall	_itoaa
              120A  118A         
  1926                           	line	225
  1927                           ;lcd1.c: 225: strcat(logic_d2,snum);
  1928  05B1  30C2               	movlw	(getlogicseq@snum)&0ffh
  1929  05B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1930  05B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1931  05B4  00DC               	movwf	(??_getlogicseq+0)+0
  1932  05B5  085C               	movf	(??_getlogicseq+0)+0,w
  1933  05B6  00F0               	movwf	(?_strcat)
  1934  05B7  30DF               	movlw	(_logic_d2)&0ffh
  1935  05B8  120A  158A  2468   	fcall	_strcat
              120A  118A         
  1936                           	line	226
  1937                           	
  1938  05BD                     l3354:	
  1939                           ;lcd1.c: 226: write( logic_d2,2,0); ;
  1940  05BD  30DF               	movlw	(_logic_d2&0ffh)
  1941  05BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1942  05BF  1303               	bcf	status, 6	;RP1=0, select bank0
  1943  05C0  00C2               	movwf	(?_write)
  1944  05C1  3000               	movlw	(0x1/2)
  1945  05C2  00C3               	movwf	(?_write+1)
  1946  05C3  3002               	movlw	low(02h)
  1947  05C4  00C4               	movwf	0+(?_write)+02h
  1948  05C5  3000               	movlw	high(02h)
  1949  05C6  00C5               	movwf	(0+(?_write)+02h)+1
  1950  05C7  3000               	movlw	low(0)
  1951  05C8  00C6               	movwf	0+(?_write)+04h
  1952  05C9  3000               	movlw	high(0)
  1953  05CA  00C7               	movwf	(0+(?_write)+04h)+1
  1954  05CB  120A  158A  2565   	fcall	_write
              120A  118A         
  1955                           	line	227
  1956                           	
  1957  05D0                     l3356:	
  1958                           ;lcd1.c: 227: wf=1;
  1959  05D0  3001               	movlw	low(01h)
  1960  05D1  1683               	bsf	status, 5	;RP0=1, select bank1
  1961  05D2  1303               	bcf	status, 6	;RP1=0, select bank1
  1962  05D3  00D4               	movwf	(getlogicseq@wf)^080h
  1963  05D4  3000               	movlw	high(01h)
  1964  05D5  00D5               	movwf	((getlogicseq@wf)^080h)+1
  1965                           	line	228
  1966                           	
  1967  05D6                     l3358:	
  1968                           ;lcd1.c: 228: ccount++;
  1969  05D6  3001               	movlw	low(01h)
  1970  05D7  07D6               	addwf	(getlogicseq@ccount)^080h,f
  1971  05D8  1803               	skipnc
  1972  05D9  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  1973  05DA  3000               	movlw	high(01h)
  1974  05DB  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  1975  05DC  2DE1               	goto	l3362
  1976                           	line	229
  1977                           	
  1978  05DD                     l718:	
  1979                           	line	230
  1980                           ;lcd1.c: 229: }
  1981                           ;lcd1.c: 230: }
  1982  05DD  2DE1               	goto	l3362
  1983                           	line	231
  1984                           	
  1985  05DE                     l715:	
  1986                           	line	232
  1987                           	
  1988  05DE                     l3360:	
  1989                           ;lcd1.c: 231: else{
  1990                           ;lcd1.c: 232: wf=0;
  1991  05DE  01D4               	clrf	(getlogicseq@wf)^080h
  1992  05DF  01D5               	clrf	(getlogicseq@wf+1)^080h
  1993  05E0  2DE1               	goto	l3362
  1994                           	line	233
  1995                           	
  1996  05E1                     l720:	
  1997                           	line	234
  1998                           	
  1999  05E1                     l3362:	
  2000                           ;lcd1.c: 233: }
  2001                           ;lcd1.c: 234: if(ccount>3)
  2002  05E1  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2003  05E2  3A80               	xorlw	80h
  2004  05E3  00FF               	movwf	btemp+1
  2005  05E4  3080               	movlw	(high(04h))^80h
  2006  05E5  027F               	subwf	btemp+1,w
  2007  05E6  1D03               	skipz
  2008  05E7  2DEA               	goto	u4515
  2009  05E8  3004               	movlw	low(04h)
  2010  05E9  0256               	subwf	(getlogicseq@ccount)^080h,w
  2011  05EA                     u4515:
  2012                           
  2013  05EA  1C03               	skipc
  2014  05EB  2DED               	goto	u4511
  2015  05EC  2DEE               	goto	u4510
  2016  05ED                     u4511:
  2017  05ED  2DF0               	goto	l3366
  2018  05EE                     u4510:
  2019  05EE  2E12               	goto	l3376
  2020                           	line	235
  2021                           	
  2022  05EF                     l3364:	
  2023                           ;lcd1.c: 235: break;
  2024  05EF  2E12               	goto	l3376
  2025                           	
  2026  05F0                     l721:	
  2027                           	line	237
  2028                           	
  2029  05F0                     l3366:	
  2030                           ;lcd1.c: 237: if(num==2)
  2031  05F0  3002               	movlw	02h
  2032  05F1  1683               	bsf	status, 5	;RP0=1, select bank1
  2033  05F2  1303               	bcf	status, 6	;RP1=0, select bank1
  2034  05F3  0658               	xorwf	(getlogicseq@num)^080h,w
  2035  05F4  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2036  05F5  1D03               	skipz
  2037  05F6  2DF8               	goto	u4521
  2038  05F7  2DF9               	goto	u4520
  2039  05F8                     u4521:
  2040  05F8  2E05               	goto	l3372
  2041  05F9                     u4520:
  2042                           	line	239
  2043                           	
  2044  05F9                     l3368:	
  2045                           ;lcd1.c: 238: {
  2046                           ;lcd1.c: 239: if(nf==0){
  2047  05F9  0853               	movf	((getlogicseq@nf+1)^080h),w
  2048  05FA  0452               	iorwf	((getlogicseq@nf)^080h),w
  2049  05FB  1D03               	skipz
  2050  05FC  2DFE               	goto	u4531
  2051  05FD  2DFF               	goto	u4530
  2052  05FE                     u4531:
  2053  05FE  2D57               	goto	l3338
  2054  05FF                     u4530:
  2055                           	line	240
  2056                           	
  2057  05FF                     l3370:	
  2058                           ;lcd1.c: 240: nf=1;
  2059  05FF  3001               	movlw	low(01h)
  2060  0600  00D2               	movwf	(getlogicseq@nf)^080h
  2061  0601  3000               	movlw	high(01h)
  2062  0602  00D3               	movwf	((getlogicseq@nf)^080h)+1
  2063                           	line	241
  2064                           ;lcd1.c: 241: break;
  2065  0603  2E12               	goto	l3376
  2066                           	line	242
  2067                           	
  2068  0604                     l724:	
  2069                           	line	243
  2070                           ;lcd1.c: 242: }
  2071                           ;lcd1.c: 243: }
  2072  0604  2D57               	goto	l3338
  2073                           	line	244
  2074                           	
  2075  0605                     l723:	
  2076                           	
  2077  0605                     l3372:	
  2078                           ;lcd1.c: 244: else if(num==99){
  2079  0605  3063               	movlw	063h
  2080  0606  0658               	xorwf	(getlogicseq@num)^080h,w
  2081  0607  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2082  0608  1D03               	skipz
  2083  0609  2E0B               	goto	u4541
  2084  060A  2E0C               	goto	u4540
  2085  060B                     u4541:
  2086  060B  2D57               	goto	l3338
  2087  060C                     u4540:
  2088                           	line	245
  2089                           	
  2090  060C                     l3374:	
  2091                           ;lcd1.c: 245: nf=0;
  2092  060C  01D2               	clrf	(getlogicseq@nf)^080h
  2093  060D  01D3               	clrf	(getlogicseq@nf+1)^080h
  2094  060E  2D57               	goto	l3338
  2095                           	line	246
  2096                           	
  2097  060F                     l726:	
  2098  060F  2D57               	goto	l3338
  2099                           	line	247
  2100                           	
  2101  0610                     l725:	
  2102  0610  2D57               	goto	l3338
  2103                           	
  2104  0611                     l727:	
  2105                           	line	216
  2106  0611  2D57               	goto	l3338
  2107                           	
  2108  0612                     l722:	
  2109                           	line	250
  2110                           	
  2111  0612                     l3376:	
  2112                           ;lcd1.c: 246: }
  2113                           ;lcd1.c: 247: }
  2114                           ;lcd1.c: 250: wf=0;ccount=0;
  2115  0612  1683               	bsf	status, 5	;RP0=1, select bank1
  2116  0613  1303               	bcf	status, 6	;RP1=0, select bank1
  2117  0614  01D4               	clrf	(getlogicseq@wf)^080h
  2118  0615  01D5               	clrf	(getlogicseq@wf+1)^080h
  2119  0616  01D6               	clrf	(getlogicseq@ccount)^080h
  2120  0617  01D7               	clrf	(getlogicseq@ccount+1)^080h
  2121                           	line	251
  2122                           	
  2123  0618                     l3378:	
  2124                           ;lcd1.c: 251: strcpy(str,"Enter Logic DEV3:  ");
  2125  0618  3051               	movlw	((STR_8-__stringbase))&0ffh
  2126  0619  1283               	bcf	status, 5	;RP0=0, select bank0
  2127  061A  1303               	bcf	status, 6	;RP1=0, select bank0
  2128  061B  00DC               	movwf	(??_getlogicseq+0)+0
  2129  061C  085C               	movf	(??_getlogicseq+0)+0,w
  2130  061D  00F0               	movwf	(?_strcpy)
  2131  061E  30A0               	movlw	(getlogicseq@str)&0ffh
  2132  061F  120A  158A  23D6   	fcall	_strcpy
              120A  118A         
  2133                           	line	252
  2134                           	
  2135  0624                     l3380:	
  2136                           ;lcd1.c: 252: write(str,1,1);
  2137  0624  30A0               	movlw	(getlogicseq@str&0ffh)
  2138  0625  1283               	bcf	status, 5	;RP0=0, select bank0
  2139  0626  1303               	bcf	status, 6	;RP1=0, select bank0
  2140  0627  00C2               	movwf	(?_write)
  2141  0628  3000               	movlw	(0x1/2)
  2142  0629  00C3               	movwf	(?_write+1)
  2143  062A  3001               	movlw	low(01h)
  2144  062B  00C4               	movwf	0+(?_write)+02h
  2145  062C  3000               	movlw	high(01h)
  2146  062D  00C5               	movwf	(0+(?_write)+02h)+1
  2147  062E  3001               	movlw	low(01h)
  2148  062F  00C6               	movwf	0+(?_write)+04h
  2149  0630  3000               	movlw	high(01h)
  2150  0631  00C7               	movwf	(0+(?_write)+04h)+1
  2151  0632  120A  158A  2565   	fcall	_write
              120A  118A         
  2152                           	line	253
  2153                           	
  2154  0637                     l3382:	
  2155                           ;lcd1.c: 253: write(logic_d3,2,0);
  2156  0637  30E4               	movlw	(_logic_d3&0ffh)
  2157  0638  1283               	bcf	status, 5	;RP0=0, select bank0
  2158  0639  1303               	bcf	status, 6	;RP1=0, select bank0
  2159  063A  00C2               	movwf	(?_write)
  2160  063B  3000               	movlw	(0x1/2)
  2161  063C  00C3               	movwf	(?_write+1)
  2162  063D  3002               	movlw	low(02h)
  2163  063E  00C4               	movwf	0+(?_write)+02h
  2164  063F  3000               	movlw	high(02h)
  2165  0640  00C5               	movwf	(0+(?_write)+02h)+1
  2166  0641  3000               	movlw	low(0)
  2167  0642  00C6               	movwf	0+(?_write)+04h
  2168  0643  3000               	movlw	high(0)
  2169  0644  00C7               	movwf	(0+(?_write)+04h)+1
  2170  0645  120A  158A  2565   	fcall	_write
              120A  118A         
  2171  064A  2E4B               	goto	l3384
  2172                           	line	255
  2173                           ;lcd1.c: 255: while(1)
  2174                           	
  2175  064B                     l728:	
  2176                           	line	257
  2177                           	
  2178  064B                     l3384:	
  2179                           ;lcd1.c: 256: {
  2180                           ;lcd1.c: 257: num=scan();
  2181  064B  120A  118A  20E6   	fcall	_scan
              120A  118A         
  2182  0650  0875               	movf	(1+(?_scan)),w
  2183  0651  1683               	bsf	status, 5	;RP0=1, select bank1
  2184  0652  1303               	bcf	status, 6	;RP1=0, select bank1
  2185  0653  01D9               	clrf	(getlogicseq@num+1)^080h
  2186  0654  07D9               	addwf	(getlogicseq@num+1)^080h
  2187  0655  0874               	movf	(0+(?_scan)),w
  2188  0656  01D8               	clrf	(getlogicseq@num)^080h
  2189  0657  07D8               	addwf	(getlogicseq@num)^080h
  2190                           
  2191                           	line	258
  2192                           	
  2193  0658                     l3386:	
  2194                           ;lcd1.c: 258: if(num==1||num==0){
  2195  0658  3001               	movlw	01h
  2196  0659  0658               	xorwf	(getlogicseq@num)^080h,w
  2197  065A  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2198  065B  1903               	skipnz
  2199  065C  2E5E               	goto	u4551
  2200  065D  2E5F               	goto	u4550
  2201  065E                     u4551:
  2202  065E  2E66               	goto	l3390
  2203  065F                     u4550:
  2204                           	
  2205  065F                     l3388:	
  2206  065F  0859               	movf	((getlogicseq@num+1)^080h),w
  2207  0660  0458               	iorwf	((getlogicseq@num)^080h),w
  2208  0661  1D03               	skipz
  2209  0662  2E64               	goto	u4561
  2210  0663  2E65               	goto	u4560
  2211  0664                     u4561:
  2212  0664  2ED2               	goto	l3406
  2213  0665                     u4560:
  2214  0665  2E66               	goto	l3390
  2215                           	
  2216  0666                     l731:	
  2217                           	line	259
  2218                           	
  2219  0666                     l3390:	
  2220                           ;lcd1.c: 259: if(wf==0)
  2221  0666  0855               	movf	((getlogicseq@wf+1)^080h),w
  2222  0667  0454               	iorwf	((getlogicseq@wf)^080h),w
  2223  0668  1D03               	skipz
  2224  0669  2E6B               	goto	u4571
  2225  066A  2E6C               	goto	u4570
  2226  066B                     u4571:
  2227  066B  2ED5               	goto	l3408
  2228  066C                     u4570:
  2229                           	line	260
  2230                           	
  2231  066C                     l3392:	
  2232                           ;lcd1.c: 260: { if(ccount==0)
  2233  066C  0857               	movf	((getlogicseq@ccount+1)^080h),w
  2234  066D  0456               	iorwf	((getlogicseq@ccount)^080h),w
  2235  066E  1D03               	skipz
  2236  066F  2E71               	goto	u4581
  2237  0670  2E72               	goto	u4580
  2238  0671                     u4581:
  2239  0671  2E7F               	goto	l3396
  2240  0672                     u4580:
  2241                           	line	261
  2242                           	
  2243  0672                     l3394:	
  2244                           ;lcd1.c: 261: strcpy(logic_d3,"");
  2245  0672  303C               	movlw	((STR_9-__stringbase))&0ffh
  2246  0673  1283               	bcf	status, 5	;RP0=0, select bank0
  2247  0674  1303               	bcf	status, 6	;RP1=0, select bank0
  2248  0675  00DC               	movwf	(??_getlogicseq+0)+0
  2249  0676  085C               	movf	(??_getlogicseq+0)+0,w
  2250  0677  00F0               	movwf	(?_strcpy)
  2251  0678  30E4               	movlw	(_logic_d3)&0ffh
  2252  0679  120A  158A  23D6   	fcall	_strcpy
              120A  118A         
  2253  067E  2E7F               	goto	l3396
  2254                           	
  2255  067F                     l733:	
  2256                           	line	262
  2257                           	
  2258  067F                     l3396:	
  2259                           ;lcd1.c: 262: write("----",2,0);
  2260  067F  3079               	movlw	low((STR_10-__stringbase))
  2261  0680  1283               	bcf	status, 5	;RP0=0, select bank0
  2262  0681  1303               	bcf	status, 6	;RP1=0, select bank0
  2263  0682  00C2               	movwf	(?_write)
  2264  0683  3080               	movlw	80h
  2265  0684  00C3               	movwf	(?_write+1)
  2266  0685  3002               	movlw	low(02h)
  2267  0686  00C4               	movwf	0+(?_write)+02h
  2268  0687  3000               	movlw	high(02h)
  2269  0688  00C5               	movwf	(0+(?_write)+02h)+1
  2270  0689  3000               	movlw	low(0)
  2271  068A  00C6               	movwf	0+(?_write)+04h
  2272  068B  3000               	movlw	high(0)
  2273  068C  00C7               	movwf	(0+(?_write)+04h)+1
  2274  068D  120A  158A  2565   	fcall	_write
              120A  118A         
  2275                           	line	263
  2276                           	
  2277  0692                     l3398:	
  2278                           ;lcd1.c: 263: itoaa(num, snum);
  2279  0692  1683               	bsf	status, 5	;RP0=1, select bank1
  2280  0693  1303               	bcf	status, 6	;RP1=0, select bank1
  2281  0694  0859               	movf	(getlogicseq@num+1)^080h,w
  2282  0695  01FA               	clrf	(?_itoaa+1)
  2283  0696  07FA               	addwf	(?_itoaa+1)
  2284  0697  0858               	movf	(getlogicseq@num)^080h,w
  2285  0698  01F9               	clrf	(?_itoaa)
  2286  0699  07F9               	addwf	(?_itoaa)
  2287                           
  2288  069A  30C2               	movlw	(getlogicseq@snum)&0ffh
  2289  069B  1283               	bcf	status, 5	;RP0=0, select bank0
  2290  069C  1303               	bcf	status, 6	;RP1=0, select bank0
  2291  069D  00DC               	movwf	(??_getlogicseq+0)+0
  2292  069E  085C               	movf	(??_getlogicseq+0)+0,w
  2293  069F  00FB               	movwf	0+(?_itoaa)+02h
  2294  06A0  120A  118A  21CE   	fcall	_itoaa
              120A  118A         
  2295                           	line	264
  2296                           ;lcd1.c: 264: strcat(logic_d3,snum);
  2297  06A5  30C2               	movlw	(getlogicseq@snum)&0ffh
  2298  06A6  1283               	bcf	status, 5	;RP0=0, select bank0
  2299  06A7  1303               	bcf	status, 6	;RP1=0, select bank0
  2300  06A8  00DC               	movwf	(??_getlogicseq+0)+0
  2301  06A9  085C               	movf	(??_getlogicseq+0)+0,w
  2302  06AA  00F0               	movwf	(?_strcat)
  2303  06AB  30E4               	movlw	(_logic_d3)&0ffh
  2304  06AC  120A  158A  2468   	fcall	_strcat
              120A  118A         
  2305                           	line	265
  2306                           	
  2307  06B1                     l3400:	
  2308                           ;lcd1.c: 265: write( logic_d3,2,0); ;
  2309  06B1  30E4               	movlw	(_logic_d3&0ffh)
  2310  06B2  1283               	bcf	status, 5	;RP0=0, select bank0
  2311  06B3  1303               	bcf	status, 6	;RP1=0, select bank0
  2312  06B4  00C2               	movwf	(?_write)
  2313  06B5  3000               	movlw	(0x1/2)
  2314  06B6  00C3               	movwf	(?_write+1)
  2315  06B7  3002               	movlw	low(02h)
  2316  06B8  00C4               	movwf	0+(?_write)+02h
  2317  06B9  3000               	movlw	high(02h)
  2318  06BA  00C5               	movwf	(0+(?_write)+02h)+1
  2319  06BB  3000               	movlw	low(0)
  2320  06BC  00C6               	movwf	0+(?_write)+04h
  2321  06BD  3000               	movlw	high(0)
  2322  06BE  00C7               	movwf	(0+(?_write)+04h)+1
  2323  06BF  120A  158A  2565   	fcall	_write
              120A  118A         
  2324                           	line	266
  2325                           	
  2326  06C4                     l3402:	
  2327                           ;lcd1.c: 266: wf=1;
  2328  06C4  3001               	movlw	low(01h)
  2329  06C5  1683               	bsf	status, 5	;RP0=1, select bank1
  2330  06C6  1303               	bcf	status, 6	;RP1=0, select bank1
  2331  06C7  00D4               	movwf	(getlogicseq@wf)^080h
  2332  06C8  3000               	movlw	high(01h)
  2333  06C9  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2334                           	line	267
  2335                           	
  2336  06CA                     l3404:	
  2337                           ;lcd1.c: 267: ccount++;
  2338  06CA  3001               	movlw	low(01h)
  2339  06CB  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2340  06CC  1803               	skipnc
  2341  06CD  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2342  06CE  3000               	movlw	high(01h)
  2343  06CF  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2344  06D0  2ED5               	goto	l3408
  2345                           	line	268
  2346                           	
  2347  06D1                     l732:	
  2348                           	line	269
  2349                           ;lcd1.c: 268: }
  2350                           ;lcd1.c: 269: }
  2351  06D1  2ED5               	goto	l3408
  2352                           	line	270
  2353                           	
  2354  06D2                     l729:	
  2355                           	line	271
  2356                           	
  2357  06D2                     l3406:	
  2358                           ;lcd1.c: 270: else{
  2359                           ;lcd1.c: 271: wf=0;
  2360  06D2  01D4               	clrf	(getlogicseq@wf)^080h
  2361  06D3  01D5               	clrf	(getlogicseq@wf+1)^080h
  2362  06D4  2ED5               	goto	l3408
  2363                           	line	272
  2364                           	
  2365  06D5                     l734:	
  2366                           	line	273
  2367                           	
  2368  06D5                     l3408:	
  2369                           ;lcd1.c: 272: }
  2370                           ;lcd1.c: 273: if(ccount>3)
  2371  06D5  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2372  06D6  3A80               	xorlw	80h
  2373  06D7  00FF               	movwf	btemp+1
  2374  06D8  3080               	movlw	(high(04h))^80h
  2375  06D9  027F               	subwf	btemp+1,w
  2376  06DA  1D03               	skipz
  2377  06DB  2EDE               	goto	u4595
  2378  06DC  3004               	movlw	low(04h)
  2379  06DD  0256               	subwf	(getlogicseq@ccount)^080h,w
  2380  06DE                     u4595:
  2381                           
  2382  06DE  1C03               	skipc
  2383  06DF  2EE1               	goto	u4591
  2384  06E0  2EE2               	goto	u4590
  2385  06E1                     u4591:
  2386  06E1  2EE4               	goto	l3412
  2387  06E2                     u4590:
  2388  06E2  2F06               	goto	l3422
  2389                           	line	274
  2390                           	
  2391  06E3                     l3410:	
  2392                           ;lcd1.c: 274: break;
  2393  06E3  2F06               	goto	l3422
  2394                           	
  2395  06E4                     l735:	
  2396                           	line	276
  2397                           	
  2398  06E4                     l3412:	
  2399                           ;lcd1.c: 276: if(num==2)
  2400  06E4  3002               	movlw	02h
  2401  06E5  1683               	bsf	status, 5	;RP0=1, select bank1
  2402  06E6  1303               	bcf	status, 6	;RP1=0, select bank1
  2403  06E7  0658               	xorwf	(getlogicseq@num)^080h,w
  2404  06E8  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2405  06E9  1D03               	skipz
  2406  06EA  2EEC               	goto	u4601
  2407  06EB  2EED               	goto	u4600
  2408  06EC                     u4601:
  2409  06EC  2EF9               	goto	l3418
  2410  06ED                     u4600:
  2411                           	line	278
  2412                           	
  2413  06ED                     l3414:	
  2414                           ;lcd1.c: 277: {
  2415                           ;lcd1.c: 278: if(nf==0){
  2416  06ED  0853               	movf	((getlogicseq@nf+1)^080h),w
  2417  06EE  0452               	iorwf	((getlogicseq@nf)^080h),w
  2418  06EF  1D03               	skipz
  2419  06F0  2EF2               	goto	u4611
  2420  06F1  2EF3               	goto	u4610
  2421  06F2                     u4611:
  2422  06F2  2E4B               	goto	l3384
  2423  06F3                     u4610:
  2424                           	line	279
  2425                           	
  2426  06F3                     l3416:	
  2427                           ;lcd1.c: 279: nf=1;
  2428  06F3  3001               	movlw	low(01h)
  2429  06F4  00D2               	movwf	(getlogicseq@nf)^080h
  2430  06F5  3000               	movlw	high(01h)
  2431  06F6  00D3               	movwf	((getlogicseq@nf)^080h)+1
  2432                           	line	280
  2433                           ;lcd1.c: 280: break;
  2434  06F7  2F06               	goto	l3422
  2435                           	line	281
  2436                           	
  2437  06F8                     l738:	
  2438                           	line	282
  2439                           ;lcd1.c: 281: }
  2440                           ;lcd1.c: 282: }
  2441  06F8  2E4B               	goto	l3384
  2442                           	line	283
  2443                           	
  2444  06F9                     l737:	
  2445                           	
  2446  06F9                     l3418:	
  2447                           ;lcd1.c: 283: else if(num==99){
  2448  06F9  3063               	movlw	063h
  2449  06FA  0658               	xorwf	(getlogicseq@num)^080h,w
  2450  06FB  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2451  06FC  1D03               	skipz
  2452  06FD  2EFF               	goto	u4621
  2453  06FE  2F00               	goto	u4620
  2454  06FF                     u4621:
  2455  06FF  2E4B               	goto	l3384
  2456  0700                     u4620:
  2457                           	line	284
  2458                           	
  2459  0700                     l3420:	
  2460                           ;lcd1.c: 284: nf=0;
  2461  0700  01D2               	clrf	(getlogicseq@nf)^080h
  2462  0701  01D3               	clrf	(getlogicseq@nf+1)^080h
  2463  0702  2E4B               	goto	l3384
  2464                           	line	285
  2465                           	
  2466  0703                     l740:	
  2467  0703  2E4B               	goto	l3384
  2468                           	line	286
  2469                           	
  2470  0704                     l739:	
  2471  0704  2E4B               	goto	l3384
  2472                           	
  2473  0705                     l741:	
  2474                           	line	255
  2475  0705  2E4B               	goto	l3384
  2476                           	
  2477  0706                     l736:	
  2478                           	line	290
  2479                           	
  2480  0706                     l3422:	
  2481                           ;lcd1.c: 285: }
  2482                           ;lcd1.c: 286: }
  2483                           ;lcd1.c: 290: wf=0;ccount=0;
  2484  0706  1683               	bsf	status, 5	;RP0=1, select bank1
  2485  0707  1303               	bcf	status, 6	;RP1=0, select bank1
  2486  0708  01D4               	clrf	(getlogicseq@wf)^080h
  2487  0709  01D5               	clrf	(getlogicseq@wf+1)^080h
  2488  070A  01D6               	clrf	(getlogicseq@ccount)^080h
  2489  070B  01D7               	clrf	(getlogicseq@ccount+1)^080h
  2490                           	line	291
  2491                           	
  2492  070C                     l3424:	
  2493                           ;lcd1.c: 291: strcpy(str,"Enter Logic DEV4:  ");
  2494  070C  3065               	movlw	((STR_11-__stringbase))&0ffh
  2495  070D  1283               	bcf	status, 5	;RP0=0, select bank0
  2496  070E  1303               	bcf	status, 6	;RP1=0, select bank0
  2497  070F  00DC               	movwf	(??_getlogicseq+0)+0
  2498  0710  085C               	movf	(??_getlogicseq+0)+0,w
  2499  0711  00F0               	movwf	(?_strcpy)
  2500  0712  30A0               	movlw	(getlogicseq@str)&0ffh
  2501  0713  120A  158A  23D6   	fcall	_strcpy
              120A  118A         
  2502                           	line	292
  2503                           	
  2504  0718                     l3426:	
  2505                           ;lcd1.c: 292: write(str,1,1);
  2506  0718  30A0               	movlw	(getlogicseq@str&0ffh)
  2507  0719  1283               	bcf	status, 5	;RP0=0, select bank0
  2508  071A  1303               	bcf	status, 6	;RP1=0, select bank0
  2509  071B  00C2               	movwf	(?_write)
  2510  071C  3000               	movlw	(0x1/2)
  2511  071D  00C3               	movwf	(?_write+1)
  2512  071E  3001               	movlw	low(01h)
  2513  071F  00C4               	movwf	0+(?_write)+02h
  2514  0720  3000               	movlw	high(01h)
  2515  0721  00C5               	movwf	(0+(?_write)+02h)+1
  2516  0722  3001               	movlw	low(01h)
  2517  0723  00C6               	movwf	0+(?_write)+04h
  2518  0724  3000               	movlw	high(01h)
  2519  0725  00C7               	movwf	(0+(?_write)+04h)+1
  2520  0726  120A  158A  2565   	fcall	_write
              120A  118A         
  2521                           	line	293
  2522                           	
  2523  072B                     l3428:	
  2524                           ;lcd1.c: 293: write(logic_d4,2,0);
  2525  072B  30E9               	movlw	(_logic_d4&0ffh)
  2526  072C  1283               	bcf	status, 5	;RP0=0, select bank0
  2527  072D  1303               	bcf	status, 6	;RP1=0, select bank0
  2528  072E  00C2               	movwf	(?_write)
  2529  072F  3000               	movlw	(0x1/2)
  2530  0730  00C3               	movwf	(?_write+1)
  2531  0731  3002               	movlw	low(02h)
  2532  0732  00C4               	movwf	0+(?_write)+02h
  2533  0733  3000               	movlw	high(02h)
  2534  0734  00C5               	movwf	(0+(?_write)+02h)+1
  2535  0735  3000               	movlw	low(0)
  2536  0736  00C6               	movwf	0+(?_write)+04h
  2537  0737  3000               	movlw	high(0)
  2538  0738  00C7               	movwf	(0+(?_write)+04h)+1
  2539  0739  120A  158A  2565   	fcall	_write
              120A  118A         
  2540  073E  2F3F               	goto	l3430
  2541                           	line	295
  2542                           ;lcd1.c: 295: while(1)
  2543                           	
  2544  073F                     l742:	
  2545                           	line	297
  2546                           	
  2547  073F                     l3430:	
  2548                           ;lcd1.c: 296: {
  2549                           ;lcd1.c: 297: num=scan();
  2550  073F  120A  118A  20E6   	fcall	_scan
              120A  118A         
  2551  0744  0875               	movf	(1+(?_scan)),w
  2552  0745  1683               	bsf	status, 5	;RP0=1, select bank1
  2553  0746  1303               	bcf	status, 6	;RP1=0, select bank1
  2554  0747  01D9               	clrf	(getlogicseq@num+1)^080h
  2555  0748  07D9               	addwf	(getlogicseq@num+1)^080h
  2556  0749  0874               	movf	(0+(?_scan)),w
  2557  074A  01D8               	clrf	(getlogicseq@num)^080h
  2558  074B  07D8               	addwf	(getlogicseq@num)^080h
  2559                           
  2560                           	line	298
  2561                           	
  2562  074C                     l3432:	
  2563                           ;lcd1.c: 298: if(num==1||num==0){
  2564  074C  3001               	movlw	01h
  2565  074D  0658               	xorwf	(getlogicseq@num)^080h,w
  2566  074E  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2567  074F  1903               	skipnz
  2568  0750  2F52               	goto	u4631
  2569  0751  2F53               	goto	u4630
  2570  0752                     u4631:
  2571  0752  2F5A               	goto	l3436
  2572  0753                     u4630:
  2573                           	
  2574  0753                     l3434:	
  2575  0753  0859               	movf	((getlogicseq@num+1)^080h),w
  2576  0754  0458               	iorwf	((getlogicseq@num)^080h),w
  2577  0755  1D03               	skipz
  2578  0756  2F58               	goto	u4641
  2579  0757  2F59               	goto	u4640
  2580  0758                     u4641:
  2581  0758  2FC6               	goto	l3452
  2582  0759                     u4640:
  2583  0759  2F5A               	goto	l3436
  2584                           	
  2585  075A                     l745:	
  2586                           	line	299
  2587                           	
  2588  075A                     l3436:	
  2589                           ;lcd1.c: 299: if(wf==0)
  2590  075A  0855               	movf	((getlogicseq@wf+1)^080h),w
  2591  075B  0454               	iorwf	((getlogicseq@wf)^080h),w
  2592  075C  1D03               	skipz
  2593  075D  2F5F               	goto	u4651
  2594  075E  2F60               	goto	u4650
  2595  075F                     u4651:
  2596  075F  2FC9               	goto	l3454
  2597  0760                     u4650:
  2598                           	line	301
  2599                           	
  2600  0760                     l3438:	
  2601                           ;lcd1.c: 300: {
  2602                           ;lcd1.c: 301: if(ccount==0)
  2603  0760  0857               	movf	((getlogicseq@ccount+1)^080h),w
  2604  0761  0456               	iorwf	((getlogicseq@ccount)^080h),w
  2605  0762  1D03               	skipz
  2606  0763  2F65               	goto	u4661
  2607  0764  2F66               	goto	u4660
  2608  0765                     u4661:
  2609  0765  2F73               	goto	l3442
  2610  0766                     u4660:
  2611                           	line	302
  2612                           	
  2613  0766                     l3440:	
  2614                           ;lcd1.c: 302: strcpy(logic_d4,"");
  2615  0766  303C               	movlw	((STR_12-__stringbase))&0ffh
  2616  0767  1283               	bcf	status, 5	;RP0=0, select bank0
  2617  0768  1303               	bcf	status, 6	;RP1=0, select bank0
  2618  0769  00DC               	movwf	(??_getlogicseq+0)+0
  2619  076A  085C               	movf	(??_getlogicseq+0)+0,w
  2620  076B  00F0               	movwf	(?_strcpy)
  2621  076C  30E9               	movlw	(_logic_d4)&0ffh
  2622  076D  120A  158A  23D6   	fcall	_strcpy
              120A  118A         
  2623  0772  2F73               	goto	l3442
  2624                           	
  2625  0773                     l747:	
  2626                           	line	303
  2627                           	
  2628  0773                     l3442:	
  2629                           ;lcd1.c: 303: write("----",2,0);
  2630  0773  3079               	movlw	low((STR_13-__stringbase))
  2631  0774  1283               	bcf	status, 5	;RP0=0, select bank0
  2632  0775  1303               	bcf	status, 6	;RP1=0, select bank0
  2633  0776  00C2               	movwf	(?_write)
  2634  0777  3080               	movlw	80h
  2635  0778  00C3               	movwf	(?_write+1)
  2636  0779  3002               	movlw	low(02h)
  2637  077A  00C4               	movwf	0+(?_write)+02h
  2638  077B  3000               	movlw	high(02h)
  2639  077C  00C5               	movwf	(0+(?_write)+02h)+1
  2640  077D  3000               	movlw	low(0)
  2641  077E  00C6               	movwf	0+(?_write)+04h
  2642  077F  3000               	movlw	high(0)
  2643  0780  00C7               	movwf	(0+(?_write)+04h)+1
  2644  0781  120A  158A  2565   	fcall	_write
              120A  118A         
  2645                           	line	304
  2646                           	
  2647  0786                     l3444:	
  2648                           ;lcd1.c: 304: itoaa(num, snum);
  2649  0786  1683               	bsf	status, 5	;RP0=1, select bank1
  2650  0787  1303               	bcf	status, 6	;RP1=0, select bank1
  2651  0788  0859               	movf	(getlogicseq@num+1)^080h,w
  2652  0789  01FA               	clrf	(?_itoaa+1)
  2653  078A  07FA               	addwf	(?_itoaa+1)
  2654  078B  0858               	movf	(getlogicseq@num)^080h,w
  2655  078C  01F9               	clrf	(?_itoaa)
  2656  078D  07F9               	addwf	(?_itoaa)
  2657                           
  2658  078E  30C2               	movlw	(getlogicseq@snum)&0ffh
  2659  078F  1283               	bcf	status, 5	;RP0=0, select bank0
  2660  0790  1303               	bcf	status, 6	;RP1=0, select bank0
  2661  0791  00DC               	movwf	(??_getlogicseq+0)+0
  2662  0792  085C               	movf	(??_getlogicseq+0)+0,w
  2663  0793  00FB               	movwf	0+(?_itoaa)+02h
  2664  0794  120A  118A  21CE   	fcall	_itoaa
              120A  118A         
  2665                           	line	305
  2666                           ;lcd1.c: 305: strcat(logic_d4,snum);
  2667  0799  30C2               	movlw	(getlogicseq@snum)&0ffh
  2668  079A  1283               	bcf	status, 5	;RP0=0, select bank0
  2669  079B  1303               	bcf	status, 6	;RP1=0, select bank0
  2670  079C  00DC               	movwf	(??_getlogicseq+0)+0
  2671  079D  085C               	movf	(??_getlogicseq+0)+0,w
  2672  079E  00F0               	movwf	(?_strcat)
  2673  079F  30E9               	movlw	(_logic_d4)&0ffh
  2674  07A0  120A  158A  2468   	fcall	_strcat
              120A  118A         
  2675                           	line	306
  2676                           	
  2677  07A5                     l3446:	
  2678                           ;lcd1.c: 306: write( logic_d4,2,0); ;
  2679  07A5  30E9               	movlw	(_logic_d4&0ffh)
  2680  07A6  1283               	bcf	status, 5	;RP0=0, select bank0
  2681  07A7  1303               	bcf	status, 6	;RP1=0, select bank0
  2682  07A8  00C2               	movwf	(?_write)
  2683  07A9  3000               	movlw	(0x1/2)
  2684  07AA  00C3               	movwf	(?_write+1)
  2685  07AB  3002               	movlw	low(02h)
  2686  07AC  00C4               	movwf	0+(?_write)+02h
  2687  07AD  3000               	movlw	high(02h)
  2688  07AE  00C5               	movwf	(0+(?_write)+02h)+1
  2689  07AF  3000               	movlw	low(0)
  2690  07B0  00C6               	movwf	0+(?_write)+04h
  2691  07B1  3000               	movlw	high(0)
  2692  07B2  00C7               	movwf	(0+(?_write)+04h)+1
  2693  07B3  120A  158A  2565   	fcall	_write
              120A  118A         
  2694                           	line	307
  2695                           	
  2696  07B8                     l3448:	
  2697                           ;lcd1.c: 307: wf=1;
  2698  07B8  3001               	movlw	low(01h)
  2699  07B9  1683               	bsf	status, 5	;RP0=1, select bank1
  2700  07BA  1303               	bcf	status, 6	;RP1=0, select bank1
  2701  07BB  00D4               	movwf	(getlogicseq@wf)^080h
  2702  07BC  3000               	movlw	high(01h)
  2703  07BD  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2704                           	line	308
  2705                           	
  2706  07BE                     l3450:	
  2707                           ;lcd1.c: 308: ccount++;
  2708  07BE  3001               	movlw	low(01h)
  2709  07BF  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2710  07C0  1803               	skipnc
  2711  07C1  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2712  07C2  3000               	movlw	high(01h)
  2713  07C3  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2714  07C4  2FC9               	goto	l3454
  2715                           	line	309
  2716                           	
  2717  07C5                     l746:	
  2718                           	line	310
  2719                           ;lcd1.c: 309: }
  2720                           ;lcd1.c: 310: }
  2721  07C5  2FC9               	goto	l3454
  2722                           	line	311
  2723                           	
  2724  07C6                     l743:	
  2725                           	line	312
  2726                           	
  2727  07C6                     l3452:	
  2728                           ;lcd1.c: 311: else{
  2729                           ;lcd1.c: 312: wf=0;
  2730  07C6  01D4               	clrf	(getlogicseq@wf)^080h
  2731  07C7  01D5               	clrf	(getlogicseq@wf+1)^080h
  2732  07C8  2FC9               	goto	l3454
  2733                           	line	313
  2734                           	
  2735  07C9                     l748:	
  2736                           	line	314
  2737                           	
  2738  07C9                     l3454:	
  2739                           ;lcd1.c: 313: }
  2740                           ;lcd1.c: 314: if(ccount>3)
  2741  07C9  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2742  07CA  3A80               	xorlw	80h
  2743  07CB  00FF               	movwf	btemp+1
  2744  07CC  3080               	movlw	(high(04h))^80h
  2745  07CD  027F               	subwf	btemp+1,w
  2746  07CE  1D03               	skipz
  2747  07CF  2FD2               	goto	u4675
  2748  07D0  3004               	movlw	low(04h)
  2749  07D1  0256               	subwf	(getlogicseq@ccount)^080h,w
  2750  07D2                     u4675:
  2751                           
  2752  07D2  1C03               	skipc
  2753  07D3  2FD5               	goto	u4671
  2754  07D4  2FD6               	goto	u4670
  2755  07D5                     u4671:
  2756  07D5  2FD8               	goto	l3458
  2757  07D6                     u4670:
  2758  07D6  2FFA               	goto	l3468
  2759                           	line	315
  2760                           	
  2761  07D7                     l3456:	
  2762                           ;lcd1.c: 315: break;
  2763  07D7  2FFA               	goto	l3468
  2764                           	
  2765  07D8                     l749:	
  2766                           	line	317
  2767                           	
  2768  07D8                     l3458:	
  2769                           ;lcd1.c: 317: if(num==2)
  2770  07D8  3002               	movlw	02h
  2771  07D9  1683               	bsf	status, 5	;RP0=1, select bank1
  2772  07DA  1303               	bcf	status, 6	;RP1=0, select bank1
  2773  07DB  0658               	xorwf	(getlogicseq@num)^080h,w
  2774  07DC  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2775  07DD  1D03               	skipz
  2776  07DE  2FE0               	goto	u4681
  2777  07DF  2FE1               	goto	u4680
  2778  07E0                     u4681:
  2779  07E0  2FED               	goto	l3464
  2780  07E1                     u4680:
  2781                           	line	319
  2782                           	
  2783  07E1                     l3460:	
  2784                           ;lcd1.c: 318: {
  2785                           ;lcd1.c: 319: if(nf==0){
  2786  07E1  0853               	movf	((getlogicseq@nf+1)^080h),w
  2787  07E2  0452               	iorwf	((getlogicseq@nf)^080h),w
  2788  07E3  1D03               	skipz
  2789  07E4  2FE6               	goto	u4691
  2790  07E5  2FE7               	goto	u4690
  2791  07E6                     u4691:
  2792  07E6  2F3F               	goto	l3430
  2793  07E7                     u4690:
  2794                           	line	320
  2795                           	
  2796  07E7                     l3462:	
  2797                           ;lcd1.c: 320: nf=1;
  2798  07E7  3001               	movlw	low(01h)
  2799  07E8  00D2               	movwf	(getlogicseq@nf)^080h
  2800  07E9  3000               	movlw	high(01h)
  2801  07EA  00D3               	movwf	((getlogicseq@nf)^080h)+1
  2802                           	line	321
  2803                           ;lcd1.c: 321: break;
  2804  07EB  2FFA               	goto	l3468
  2805                           	line	322
  2806                           	
  2807  07EC                     l752:	
  2808                           	line	323
  2809                           ;lcd1.c: 322: }
  2810                           ;lcd1.c: 323: }
  2811  07EC  2F3F               	goto	l3430
  2812                           	line	324
  2813                           	
  2814  07ED                     l751:	
  2815                           	
  2816  07ED                     l3464:	
  2817                           ;lcd1.c: 324: else if(num==99){
  2818  07ED  3063               	movlw	063h
  2819  07EE  0658               	xorwf	(getlogicseq@num)^080h,w
  2820  07EF  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2821  07F0  1D03               	skipz
  2822  07F1  2FF3               	goto	u4701
  2823  07F2  2FF4               	goto	u4700
  2824  07F3                     u4701:
  2825  07F3  2F3F               	goto	l3430
  2826  07F4                     u4700:
  2827                           	line	325
  2828                           	
  2829  07F4                     l3466:	
  2830                           ;lcd1.c: 325: nf=0;
  2831  07F4  01D2               	clrf	(getlogicseq@nf)^080h
  2832  07F5  01D3               	clrf	(getlogicseq@nf+1)^080h
  2833  07F6  2F3F               	goto	l3430
  2834                           	line	326
  2835                           	
  2836  07F7                     l754:	
  2837  07F7  2F3F               	goto	l3430
  2838                           	line	327
  2839                           	
  2840  07F8                     l753:	
  2841  07F8  2F3F               	goto	l3430
  2842                           	
  2843  07F9                     l755:	
  2844                           	line	295
  2845  07F9  2F3F               	goto	l3430
  2846                           	
  2847  07FA                     l750:	
  2848                           	line	328
  2849                           	
  2850  07FA                     l3468:	
  2851                           ;lcd1.c: 326: }
  2852                           ;lcd1.c: 327: }
  2853                           ;lcd1.c: 328: startswitch();;
  2854  07FA  120A  158A  26A3   	fcall	_startswitch
              120A  118A         
  2855                           	line	331
  2856                           	
  2857  07FF                     l756:	
  2858  07FF  0008               	return
  2859                           	opt stack 0
  2860                           GLOBAL	__end_of_getlogicseq
  2861  0800                     	__end_of_getlogicseq:
  2862 ;; =============== function _getlogicseq ends ============
  2863                           
  2864                           	signat	_getlogicseq,88
  2865                           	global	_scroll
  2866                           psect	text491,local,class=CODE,delta=2
  2867                           global __ptext491
  2868  0F32                     __ptext491:
  2869                           
  2870 ;; *************** function _scroll *****************
  2871 ;; Defined at:
  2872 ;;		line 520 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  str             1    wreg     PTR unsigned char 
  2875 ;;		 -> STR_1(38), 
  2876 ;;  loops           2   40[BANK0 ] int 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  str             1   55[BANK0 ] PTR unsigned char 
  2879 ;;		 -> STR_1(38), 
  2880 ;;  dest           32    0        unsigned char [32]
  2881 ;;  endat           2   51[BANK0 ] int 
  2882 ;;  startat         2   49[BANK0 ] int 
  2883 ;;  i               2   58[BANK0 ] int 
  2884 ;;  len             2   56[BANK0 ] int 
  2885 ;;  loopn           2   53[BANK0 ] int 
  2886 ;;  en              2   47[BANK0 ] int 
  2887 ;;  st              2   45[BANK0 ] int 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;		None               void
  2890 ;; Registers used:
  2891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       2       0       0       0
  2898 ;;      Locals:         0      15       0       0       0
  2899 ;;      Temps:          0       3       0       0       0
  2900 ;;      Totals:         0      20       0       0       0
  2901 ;;Total ram usage:       20 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    5
  2904 ;; This function calls:
  2905 ;;		_write
  2906 ;;		_delay
  2907 ;;		_cmd
  2908 ;; This function is called by:
  2909 ;;		_getlogicseq
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           psect	text491
  2913                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  2914                           	line	520
  2915                           	global	__size_of_scroll
  2916  00CE                     	__size_of_scroll	equ	__end_of_scroll-_scroll
  2917                           	
  2918  0F32                     _scroll:	
  2919                           	opt	stack 1
  2920                           ; Regs used in _scroll: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2921                           ;scroll@str stored from wreg
  2922                           	line	522
  2923  0F32  1283               	bcf	status, 5	;RP0=0, select bank0
  2924  0F33  1303               	bcf	status, 6	;RP1=0, select bank0
  2925  0F34  00D7               	movwf	(scroll@str)
  2926                           	
  2927  0F35                     l3230:	
  2928                           ;lcd1.c: 522: write(str,1,0); ;
  2929  0F35  0857               	movf	(scroll@str),w
  2930  0F36  00C2               	movwf	(?_write)
  2931  0F37  3080               	movlw	80h
  2932  0F38  00C3               	movwf	(?_write+1)
  2933  0F39  3001               	movlw	low(01h)
  2934  0F3A  00C4               	movwf	0+(?_write)+02h
  2935  0F3B  3000               	movlw	high(01h)
  2936  0F3C  00C5               	movwf	(0+(?_write)+02h)+1
  2937  0F3D  3000               	movlw	low(0)
  2938  0F3E  00C6               	movwf	0+(?_write)+04h
  2939  0F3F  3000               	movlw	high(0)
  2940  0F40  00C7               	movwf	(0+(?_write)+04h)+1
  2941  0F41  120A  158A  2565   	fcall	_write
              120A  158A         
  2942                           	line	523
  2943                           	
  2944  0F46                     l3232:	
  2945                           ;lcd1.c: 523: int loopn=0;
  2946  0F46  1283               	bcf	status, 5	;RP0=0, select bank0
  2947  0F47  1303               	bcf	status, 6	;RP1=0, select bank0
  2948  0F48  01D5               	clrf	(scroll@loopn)
  2949  0F49  01D6               	clrf	(scroll@loopn+1)
  2950                           	line	525
  2951                           	
  2952  0F4A                     l3234:	
  2953                           ;lcd1.c: 524: int i;
  2954                           ;lcd1.c: 525: int len=0;;
  2955  0F4A  01D8               	clrf	(scroll@len)
  2956  0F4B  01D9               	clrf	(scroll@len+1)
  2957                           	line	526
  2958                           	
  2959  0F4C                     l3236:	
  2960                           ;lcd1.c: 526: int st=0;
  2961  0F4C  01CD               	clrf	(scroll@st)
  2962  0F4D  01CE               	clrf	(scroll@st+1)
  2963                           	line	528
  2964                           ;lcd1.c: 527: int en;
  2965                           ;lcd1.c: 528: while(str[i]!='\0')
  2966  0F4E  2F5C               	goto	l3240
  2967                           	
  2968  0F4F                     l838:	
  2969                           	line	529
  2970                           	
  2971  0F4F                     l3238:	
  2972                           ;lcd1.c: 529: { i++;
  2973  0F4F  3001               	movlw	low(01h)
  2974  0F50  07DA               	addwf	(scroll@i),f
  2975  0F51  1803               	skipnc
  2976  0F52  0ADB               	incf	(scroll@i+1),f
  2977  0F53  3000               	movlw	high(01h)
  2978  0F54  07DB               	addwf	(scroll@i+1),f
  2979                           	line	530
  2980                           ;lcd1.c: 530: len++;
  2981  0F55  3001               	movlw	low(01h)
  2982  0F56  07D8               	addwf	(scroll@len),f
  2983  0F57  1803               	skipnc
  2984  0F58  0AD9               	incf	(scroll@len+1),f
  2985  0F59  3000               	movlw	high(01h)
  2986  0F5A  07D9               	addwf	(scroll@len+1),f
  2987  0F5B  2F5C               	goto	l3240
  2988                           	line	531
  2989                           	
  2990  0F5C                     l837:	
  2991                           	line	528
  2992                           	
  2993  0F5C                     l3240:	
  2994  0F5C  085A               	movf	(scroll@i),w
  2995  0F5D  0757               	addwf	(scroll@str),w
  2996  0F5E  0084               	movwf	fsr0
  2997  0F5F  120A  118A  200D   	fcall	stringdir
              120A  158A         
  2998  0F64  3800               	iorlw	0
  2999  0F65  1D03               	skipz
  3000  0F66  2F68               	goto	u4331
  3001  0F67  2F69               	goto	u4330
  3002  0F68                     u4331:
  3003  0F68  2F4F               	goto	l3238
  3004  0F69                     u4330:
  3005  0F69  2F6A               	goto	l3242
  3006                           	
  3007  0F6A                     l839:	
  3008                           	line	532
  3009                           	
  3010  0F6A                     l3242:	
  3011                           ;lcd1.c: 531: }
  3012                           ;lcd1.c: 532: en=len-1;
  3013  0F6A  0858               	movf	(scroll@len),w
  3014  0F6B  3EFF               	addlw	low(-1)
  3015  0F6C  00CF               	movwf	(scroll@en)
  3016  0F6D  0859               	movf	(scroll@len+1),w
  3017  0F6E  1803               	skipnc
  3018  0F6F  3E01               	addlw	1
  3019  0F70  3EFF               	addlw	high(-1)
  3020  0F71  00D0               	movwf	1+(scroll@en)
  3021                           	line	534
  3022                           	
  3023  0F72                     l3244:	
  3024                           ;lcd1.c: 534: if(len>32)
  3025  0F72  0859               	movf	(scroll@len+1),w
  3026  0F73  3A80               	xorlw	80h
  3027  0F74  00FF               	movwf	btemp+1
  3028  0F75  3080               	movlw	(high(021h))^80h
  3029  0F76  027F               	subwf	btemp+1,w
  3030  0F77  1D03               	skipz
  3031  0F78  2F7B               	goto	u4345
  3032  0F79  3021               	movlw	low(021h)
  3033  0F7A  0258               	subwf	(scroll@len),w
  3034  0F7B                     u4345:
  3035                           
  3036  0F7B  1C03               	skipc
  3037  0F7C  2F7E               	goto	u4341
  3038  0F7D  2F7F               	goto	u4340
  3039  0F7E                     u4341:
  3040  0F7E  2FFF               	goto	l849
  3041  0F7F                     u4340:
  3042                           	line	538
  3043                           	
  3044  0F7F                     l3246:	
  3045                           ;lcd1.c: 535: {
  3046                           ;lcd1.c: 537: char dest [32] ;
  3047                           ;lcd1.c: 538: int startat=0;
  3048  0F7F  1283               	bcf	status, 5	;RP0=0, select bank0
  3049  0F80  1303               	bcf	status, 6	;RP1=0, select bank0
  3050  0F81  01D1               	clrf	(scroll@startat)
  3051  0F82  01D2               	clrf	(scroll@startat+1)
  3052                           	line	539
  3053                           	
  3054  0F83                     l3248:	
  3055                           ;lcd1.c: 539: int endat=31;
  3056  0F83  301F               	movlw	low(01Fh)
  3057  0F84  00D3               	movwf	(scroll@endat)
  3058  0F85  3000               	movlw	high(01Fh)
  3059  0F86  00D4               	movwf	((scroll@endat))+1
  3060  0F87  2F88               	goto	l3250
  3061                           	line	540
  3062                           ;lcd1.c: 540: START:
  3063                           	
  3064  0F88                     l841:	
  3065                           	line	541
  3066                           	
  3067  0F88                     l3250:	
  3068                           ;lcd1.c: 541: i=0;
  3069  0F88  1283               	bcf	status, 5	;RP0=0, select bank0
  3070  0F89  1303               	bcf	status, 6	;RP1=0, select bank0
  3071  0F8A  01DA               	clrf	(scroll@i)
  3072  0F8B  01DB               	clrf	(scroll@i+1)
  3073                           	line	542
  3074                           ;lcd1.c: 542: while(i++<32)
  3075  0F8C  2FA0               	goto	l3256
  3076                           	
  3077  0F8D                     l843:	
  3078                           	line	545
  3079                           	
  3080  0F8D                     l3252:	
  3081                           ;lcd1.c: 543: {
  3082                           ;lcd1.c: 545: delay(3000);
  3083  0F8D  30B8               	movlw	low(0BB8h)
  3084  0F8E  00F0               	movwf	(?_delay)
  3085  0F8F  300B               	movlw	high(0BB8h)
  3086  0F90  00F1               	movwf	((?_delay))+1
  3087  0F91  120A  158A  2399   	fcall	_delay
              120A  158A         
  3088                           	line	546
  3089                           	
  3090  0F96                     l3254:	
  3091                           ;lcd1.c: 546: cmd(0x1E);
  3092  0F96  301E               	movlw	low(01Eh)
  3093  0F97  00F8               	movwf	(?_cmd)
  3094  0F98  3000               	movlw	high(01Eh)
  3095  0F99  00F9               	movwf	((?_cmd))+1
  3096  0F9A  120A  158A  23F6   	fcall	_cmd
              120A  158A         
  3097  0F9F  2FA0               	goto	l3256
  3098                           	line	549
  3099                           	
  3100  0FA0                     l842:	
  3101                           	line	542
  3102                           	
  3103  0FA0                     l3256:	
  3104  0FA0  3001               	movlw	low(01h)
  3105  0FA1  1283               	bcf	status, 5	;RP0=0, select bank0
  3106  0FA2  1303               	bcf	status, 6	;RP1=0, select bank0
  3107  0FA3  07DA               	addwf	(scroll@i),f
  3108  0FA4  1803               	skipnc
  3109  0FA5  0ADB               	incf	(scroll@i+1),f
  3110  0FA6  3000               	movlw	high(01h)
  3111  0FA7  07DB               	addwf	(scroll@i+1),f
  3112  0FA8  085B               	movf	((scroll@i+1)),w
  3113  0FA9  3A80               	xorlw	80h
  3114  0FAA  00FF               	movwf	btemp+1
  3115  0FAB  3080               	movlw	(high(021h))^80h
  3116  0FAC  027F               	subwf	btemp+1,w
  3117  0FAD  1D03               	skipz
  3118  0FAE  2FB1               	goto	u4355
  3119  0FAF  3021               	movlw	low(021h)
  3120  0FB0  025A               	subwf	((scroll@i)),w
  3121  0FB1                     u4355:
  3122                           
  3123  0FB1  1C03               	skipc
  3124  0FB2  2FB4               	goto	u4351
  3125  0FB3  2FB5               	goto	u4350
  3126  0FB4                     u4351:
  3127  0FB4  2F8D               	goto	l3252
  3128  0FB5                     u4350:
  3129  0FB5  2FB6               	goto	l3258
  3130                           	
  3131  0FB6                     l844:	
  3132                           	line	551
  3133                           	
  3134  0FB6                     l3258:	
  3135                           ;lcd1.c: 549: }
  3136                           ;lcd1.c: 551: i=0;
  3137  0FB6  1283               	bcf	status, 5	;RP0=0, select bank0
  3138  0FB7  1303               	bcf	status, 6	;RP1=0, select bank0
  3139  0FB8  01DA               	clrf	(scroll@i)
  3140  0FB9  01DB               	clrf	(scroll@i+1)
  3141                           	line	552
  3142                           ;lcd1.c: 552: while(i++<32)
  3143  0FBA  2FCE               	goto	l3264
  3144                           	
  3145  0FBB                     l846:	
  3146                           	line	555
  3147                           	
  3148  0FBB                     l3260:	
  3149                           ;lcd1.c: 553: {
  3150                           ;lcd1.c: 555: delay(3000);
  3151  0FBB  30B8               	movlw	low(0BB8h)
  3152  0FBC  00F0               	movwf	(?_delay)
  3153  0FBD  300B               	movlw	high(0BB8h)
  3154  0FBE  00F1               	movwf	((?_delay))+1
  3155  0FBF  120A  158A  2399   	fcall	_delay
              120A  158A         
  3156                           	line	556
  3157                           	
  3158  0FC4                     l3262:	
  3159                           ;lcd1.c: 556: cmd(0x18);
  3160  0FC4  3018               	movlw	low(018h)
  3161  0FC5  00F8               	movwf	(?_cmd)
  3162  0FC6  3000               	movlw	high(018h)
  3163  0FC7  00F9               	movwf	((?_cmd))+1
  3164  0FC8  120A  158A  23F6   	fcall	_cmd
              120A  158A         
  3165  0FCD  2FCE               	goto	l3264
  3166                           	line	559
  3167                           	
  3168  0FCE                     l845:	
  3169                           	line	552
  3170                           	
  3171  0FCE                     l3264:	
  3172  0FCE  3001               	movlw	low(01h)
  3173  0FCF  1283               	bcf	status, 5	;RP0=0, select bank0
  3174  0FD0  1303               	bcf	status, 6	;RP1=0, select bank0
  3175  0FD1  07DA               	addwf	(scroll@i),f
  3176  0FD2  1803               	skipnc
  3177  0FD3  0ADB               	incf	(scroll@i+1),f
  3178  0FD4  3000               	movlw	high(01h)
  3179  0FD5  07DB               	addwf	(scroll@i+1),f
  3180  0FD6  085B               	movf	((scroll@i+1)),w
  3181  0FD7  3A80               	xorlw	80h
  3182  0FD8  00FF               	movwf	btemp+1
  3183  0FD9  3080               	movlw	(high(021h))^80h
  3184  0FDA  027F               	subwf	btemp+1,w
  3185  0FDB  1D03               	skipz
  3186  0FDC  2FDF               	goto	u4365
  3187  0FDD  3021               	movlw	low(021h)
  3188  0FDE  025A               	subwf	((scroll@i)),w
  3189  0FDF                     u4365:
  3190                           
  3191  0FDF  1C03               	skipc
  3192  0FE0  2FE2               	goto	u4361
  3193  0FE1  2FE3               	goto	u4360
  3194  0FE2                     u4361:
  3195  0FE2  2FBB               	goto	l3260
  3196  0FE3                     u4360:
  3197  0FE3  2FE4               	goto	l3266
  3198                           	
  3199  0FE4                     l847:	
  3200                           	line	560
  3201                           	
  3202  0FE4                     l3266:	
  3203                           ;lcd1.c: 559: }
  3204                           ;lcd1.c: 560: if(loopn++<loops)
  3205  0FE4  1283               	bcf	status, 5	;RP0=0, select bank0
  3206  0FE5  1303               	bcf	status, 6	;RP1=0, select bank0
  3207  0FE6  0856               	movf	(scroll@loopn+1),w
  3208  0FE7  00CB               	movwf	(??_scroll+0)+0+1
  3209  0FE8  0855               	movf	(scroll@loopn),w
  3210  0FE9  00CA               	movwf	(??_scroll+0)+0
  3211  0FEA  3001               	movlw	(01h)
  3212  0FEB  07D5               	addwf	(scroll@loopn),f
  3213  0FEC  1803               	skipnc
  3214  0FED  0AD6               	incf	(scroll@loopn+1),f
  3215  0FEE  084B               	movf	1+(??_scroll+0)+0,w
  3216  0FEF  3A80               	xorlw	80h
  3217  0FF0  00CC               	movwf	(??_scroll+2)+0
  3218  0FF1  0849               	movf	(scroll@loops+1),w
  3219  0FF2  3A80               	xorlw	80h
  3220  0FF3  024C               	subwf	(??_scroll+2)+0,w
  3221  0FF4  1D03               	skipz
  3222  0FF5  2FF8               	goto	u4375
  3223  0FF6  0848               	movf	(scroll@loops),w
  3224  0FF7  024A               	subwf	0+(??_scroll+0)+0,w
  3225  0FF8                     u4375:
  3226                           
  3227  0FF8  1803               	skipnc
  3228  0FF9  2FFB               	goto	u4371
  3229  0FFA  2FFC               	goto	u4370
  3230  0FFB                     u4371:
  3231  0FFB  2FFF               	goto	l849
  3232  0FFC                     u4370:
  3233  0FFC  2F88               	goto	l3250
  3234                           	line	561
  3235                           	
  3236  0FFD                     l3268:	
  3237                           ;lcd1.c: 561: goto START;
  3238  0FFD  2F88               	goto	l3250
  3239                           	
  3240  0FFE                     l848:	
  3241  0FFE  2FFF               	goto	l849
  3242                           	line	562
  3243                           	
  3244  0FFF                     l840:	
  3245                           	line	567
  3246                           	
  3247  0FFF                     l849:	
  3248  0FFF  0008               	return
  3249                           	opt stack 0
  3250                           GLOBAL	__end_of_scroll
  3251  1000                     	__end_of_scroll:
  3252 ;; =============== function _scroll ends ============
  3253                           
  3254                           	signat	_scroll,8312
  3255                           	global	_write
  3256                           psect	text492,local,class=CODE,delta=2
  3257                           global __ptext492
  3258  0D65                     __ptext492:
  3259                           
  3260 ;; *************** function _write *****************
  3261 ;; Defined at:
  3262 ;;		line 499 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  str             2   34[BANK0 ] PTR unsigned char 
  3265 ;;		 -> STR_13(5), STR_10(5), STR_7(5), STR_4(5), 
  3266 ;;		 -> getlogicseq@str(32), STR_1(38), logic_d4(5), logic_d3(5), 
  3267 ;;		 -> logic_d2(5), logic_d1(5), 
  3268 ;;  line            2   36[BANK0 ] int 
  3269 ;;  erase           2   38[BANK0 ] int 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  i               2   12[COMMON] int 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       6       0       0       0
  3282 ;;      Locals:         2       0       0       0       0
  3283 ;;      Temps:          2       0       0       0       0
  3284 ;;      Totals:         4       6       0       0       0
  3285 ;;Total ram usage:       10 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    4
  3288 ;; This function calls:
  3289 ;;		_clearlcd
  3290 ;;		_cmd
  3291 ;;		_dat
  3292 ;; This function is called by:
  3293 ;;		_getlogicseq
  3294 ;;		_scroll
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           psect	text492
  3298                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  3299                           	line	499
  3300                           	global	__size_of_write
  3301  0064                     	__size_of_write	equ	__end_of_write-_write
  3302                           	
  3303  0D65                     _write:	
  3304                           	opt	stack 2
  3305                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3306                           	line	500
  3307                           	
  3308  0D65                     l3212:	
  3309                           ;lcd1.c: 500: if(erase==1)
  3310  0D65  3001               	movlw	01h
  3311  0D66  1283               	bcf	status, 5	;RP0=0, select bank0
  3312  0D67  1303               	bcf	status, 6	;RP1=0, select bank0
  3313  0D68  0646               	xorwf	(write@erase),w
  3314  0D69  0447               	iorwf	(write@erase+1),w
  3315  0D6A  1D03               	skipz
  3316  0D6B  2D6D               	goto	u4301
  3317  0D6C  2D6E               	goto	u4300
  3318  0D6D                     u4301:
  3319  0D6D  2D74               	goto	l3216
  3320  0D6E                     u4300:
  3321                           	line	501
  3322                           	
  3323  0D6E                     l3214:	
  3324                           ;lcd1.c: 501: clearlcd();
  3325  0D6E  120A  158A  237E   	fcall	_clearlcd
              120A  158A         
  3326  0D73  2D74               	goto	l3216
  3327                           	
  3328  0D74                     l828:	
  3329                           	line	503
  3330                           	
  3331  0D74                     l3216:	
  3332                           ;lcd1.c: 503: if(line==2)
  3333  0D74  3002               	movlw	02h
  3334  0D75  1283               	bcf	status, 5	;RP0=0, select bank0
  3335  0D76  1303               	bcf	status, 6	;RP1=0, select bank0
  3336  0D77  0644               	xorwf	(write@line),w
  3337  0D78  0445               	iorwf	(write@line+1),w
  3338  0D79  1D03               	skipz
  3339  0D7A  2D7C               	goto	u4311
  3340  0D7B  2D7D               	goto	u4310
  3341  0D7C                     u4311:
  3342  0D7C  2D87               	goto	l3220
  3343  0D7D                     u4310:
  3344                           	line	504
  3345                           	
  3346  0D7D                     l3218:	
  3347                           ;lcd1.c: 504: cmd(0xC0);
  3348  0D7D  30C0               	movlw	low(0C0h)
  3349  0D7E  00F8               	movwf	(?_cmd)
  3350  0D7F  3000               	movlw	high(0C0h)
  3351  0D80  00F9               	movwf	((?_cmd))+1
  3352  0D81  120A  158A  23F6   	fcall	_cmd
              120A  158A         
  3353  0D86  2D91               	goto	l3222
  3354                           	line	505
  3355                           	
  3356  0D87                     l829:	
  3357                           	line	506
  3358                           	
  3359  0D87                     l3220:	
  3360                           ;lcd1.c: 505: else
  3361                           ;lcd1.c: 506: cmd(0x2);
  3362  0D87  3002               	movlw	low(02h)
  3363  0D88  00F8               	movwf	(?_cmd)
  3364  0D89  3000               	movlw	high(02h)
  3365  0D8A  00F9               	movwf	((?_cmd))+1
  3366  0D8B  120A  158A  23F6   	fcall	_cmd
              120A  158A         
  3367  0D90  2D91               	goto	l3222
  3368                           	
  3369  0D91                     l830:	
  3370                           	line	508
  3371                           	
  3372  0D91                     l3222:	
  3373                           ;lcd1.c: 508: int i=0;
  3374  0D91  01FC               	clrf	(write@i)
  3375  0D92  01FD               	clrf	(write@i+1)
  3376                           	line	509
  3377                           ;lcd1.c: 509: while(str[i]!='\0')
  3378  0D93  2DB4               	goto	l3228
  3379                           	
  3380  0D94                     l832:	
  3381                           	line	511
  3382                           	
  3383  0D94                     l3224:	
  3384                           ;lcd1.c: 510: {
  3385                           ;lcd1.c: 511: dat(str[i]);
  3386  0D94  087C               	movf	(write@i),w
  3387  0D95  1283               	bcf	status, 5	;RP0=0, select bank0
  3388  0D96  1303               	bcf	status, 6	;RP1=0, select bank0
  3389  0D97  0742               	addwf	(write@str),w
  3390  0D98  0084               	movwf	fsr0
  3391  0D99  0843               	movf	(write@str+1),w
  3392  0D9A  1803               	skipnc
  3393  0D9B  0A43               	incf	(write@str+1),w
  3394  0D9C  00FF               	movwf	btemp+1
  3395  0D9D  120A  118A  2003   	fcall	stringtab
              120A  158A         
  3396  0DA2  00FA               	movwf	(??_write+0)+0
  3397  0DA3  01FB               	clrf	(??_write+0)+0+1
  3398  0DA4  087A               	movf	0+(??_write+0)+0,w
  3399  0DA5  00F8               	movwf	(?_dat)
  3400  0DA6  087B               	movf	1+(??_write+0)+0,w
  3401  0DA7  00F9               	movwf	(?_dat+1)
  3402  0DA8  120A  158A  241B   	fcall	_dat
              120A  158A         
  3403                           	line	512
  3404                           	
  3405  0DAD                     l3226:	
  3406                           ;lcd1.c: 512: i++;
  3407  0DAD  3001               	movlw	low(01h)
  3408  0DAE  07FC               	addwf	(write@i),f
  3409  0DAF  1803               	skipnc
  3410  0DB0  0AFD               	incf	(write@i+1),f
  3411  0DB1  3000               	movlw	high(01h)
  3412  0DB2  07FD               	addwf	(write@i+1),f
  3413  0DB3  2DB4               	goto	l3228
  3414                           	line	513
  3415                           	
  3416  0DB4                     l831:	
  3417                           	line	509
  3418                           	
  3419  0DB4                     l3228:	
  3420  0DB4  087C               	movf	(write@i),w
  3421  0DB5  1283               	bcf	status, 5	;RP0=0, select bank0
  3422  0DB6  1303               	bcf	status, 6	;RP1=0, select bank0
  3423  0DB7  0742               	addwf	(write@str),w
  3424  0DB8  0084               	movwf	fsr0
  3425  0DB9  0843               	movf	(write@str+1),w
  3426  0DBA  1803               	skipnc
  3427  0DBB  0A43               	incf	(write@str+1),w
  3428  0DBC  00FF               	movwf	btemp+1
  3429  0DBD  120A  118A  2003   	fcall	stringtab
              120A  158A         
  3430  0DC2  3800               	iorlw	0
  3431  0DC3  1D03               	skipz
  3432  0DC4  2DC6               	goto	u4321
  3433  0DC5  2DC7               	goto	u4320
  3434  0DC6                     u4321:
  3435  0DC6  2D94               	goto	l3224
  3436  0DC7                     u4320:
  3437  0DC7  2DC8               	goto	l834
  3438                           	
  3439  0DC8                     l833:	
  3440                           	line	516
  3441                           	
  3442  0DC8                     l834:	
  3443  0DC8  0008               	return
  3444                           	opt stack 0
  3445                           GLOBAL	__end_of_write
  3446  0DC9                     	__end_of_write:
  3447 ;; =============== function _write ends ============
  3448                           
  3449                           	signat	_write,12408
  3450                           	global	_clearlcd
  3451                           psect	text493,local,class=CODE,delta=2
  3452                           global __ptext493
  3453  0B7E                     __ptext493:
  3454                           
  3455 ;; *************** function _clearlcd *****************
  3456 ;; Defined at:
  3457 ;;		line 442 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;		None               void
  3464 ;; Registers used:
  3465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    3
  3478 ;; This function calls:
  3479 ;;		_cmd
  3480 ;; This function is called by:
  3481 ;;		_write
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           psect	text493
  3485                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  3486                           	line	442
  3487                           	global	__size_of_clearlcd
  3488  000A                     	__size_of_clearlcd	equ	__end_of_clearlcd-_clearlcd
  3489                           	
  3490  0B7E                     _clearlcd:	
  3491                           	opt	stack 2
  3492                           ; Regs used in _clearlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3493                           	line	443
  3494                           	
  3495  0B7E                     l3210:	
  3496                           ;lcd1.c: 443: cmd(0x01);
  3497  0B7E  3001               	movlw	low(01h)
  3498  0B7F  00F8               	movwf	(?_cmd)
  3499  0B80  3000               	movlw	high(01h)
  3500  0B81  00F9               	movwf	((?_cmd))+1
  3501  0B82  120A  158A  23F6   	fcall	_cmd
              120A  158A         
  3502                           	line	444
  3503                           	
  3504  0B87                     l812:	
  3505  0B87  0008               	return
  3506                           	opt stack 0
  3507                           GLOBAL	__end_of_clearlcd
  3508  0B88                     	__end_of_clearlcd:
  3509 ;; =============== function _clearlcd ends ============
  3510                           
  3511                           	signat	_clearlcd,88
  3512                           	global	_scan
  3513                           psect	text494,local,class=CODE,delta=2
  3514                           global __ptext494
  3515  00E6                     __ptext494:
  3516                           
  3517 ;; *************** function _scan *****************
  3518 ;; Defined at:
  3519 ;;		line 581 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  2    4[COMMON] int 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0, pclath, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3533 ;;      Params:         2       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0
  3536 ;;      Totals:         2       0       0       0       0
  3537 ;;Total ram usage:        2 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    2
  3540 ;; This function calls:
  3541 ;;		_actrow
  3542 ;; This function is called by:
  3543 ;;		_getlogicseq
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           psect	text494
  3547                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  3548                           	line	581
  3549                           	global	__size_of_scan
  3550  00E8                     	__size_of_scan	equ	__end_of_scan-_scan
  3551                           	
  3552  00E6                     _scan:	
  3553                           	opt	stack 4
  3554                           ; Regs used in _scan: [wreg+status,2+status,0+pclath+cstack]
  3555                           	line	582
  3556                           	
  3557  00E6                     l3102:	
  3558                           ;lcd1.c: 582: actrow(1) ;
  3559  00E6  3001               	movlw	low(01h)
  3560  00E7  00F2               	movwf	(?_actrow)
  3561  00E8  3000               	movlw	high(01h)
  3562  00E9  00F3               	movwf	((?_actrow))+1
  3563  00EA  120A  158A  2527   	fcall	_actrow
              120A  118A         
  3564                           	line	583
  3565                           	
  3566  00EF                     l3104:	
  3567                           ;lcd1.c: 583: if( RC2==1)
  3568  00EF  1283               	bcf	status, 5	;RP0=0, select bank0
  3569  00F0  1303               	bcf	status, 6	;RP1=0, select bank0
  3570  00F1  1D07               	btfss	(58/8),(58)&7
  3571  00F2  28F4               	goto	u4141
  3572  00F3  28F5               	goto	u4140
  3573  00F4                     u4141:
  3574  00F4  28FA               	goto	l855
  3575  00F5                     u4140:
  3576                           	line	584
  3577                           	
  3578  00F5                     l3106:	
  3579                           ;lcd1.c: 584: return 0;
  3580  00F5  01F4               	clrf	(?_scan)
  3581  00F6  01F5               	clrf	(?_scan+1)
  3582  00F7  29CD               	goto	l856
  3583                           	
  3584  00F8                     l3108:	
  3585  00F8  29CD               	goto	l856
  3586                           	
  3587  00F9                     l3110:	
  3588  00F9  291D               	goto	l3128
  3589                           	line	585
  3590                           	
  3591  00FA                     l855:	
  3592                           ;lcd1.c: 585: else if(RC3==1)
  3593  00FA  1D87               	btfss	(59/8),(59)&7
  3594  00FB  28FD               	goto	u4151
  3595  00FC  28FE               	goto	u4150
  3596  00FD                     u4151:
  3597  00FD  2905               	goto	l858
  3598  00FE                     u4150:
  3599                           	line	586
  3600                           	
  3601  00FE                     l3112:	
  3602                           ;lcd1.c: 586: return 1;
  3603  00FE  3001               	movlw	low(01h)
  3604  00FF  00F4               	movwf	(?_scan)
  3605  0100  3000               	movlw	high(01h)
  3606  0101  00F5               	movwf	((?_scan))+1
  3607  0102  29CD               	goto	l856
  3608                           	
  3609  0103                     l3114:	
  3610  0103  29CD               	goto	l856
  3611                           	
  3612  0104                     l3116:	
  3613  0104  291D               	goto	l3128
  3614                           	line	587
  3615                           	
  3616  0105                     l858:	
  3617                           ;lcd1.c: 587: else if(RB6==1)
  3618  0105  1F06               	btfss	(54/8),(54)&7
  3619  0106  2908               	goto	u4161
  3620  0107  2909               	goto	u4160
  3621  0108                     u4161:
  3622  0108  2910               	goto	l860
  3623  0109                     u4160:
  3624                           	line	588
  3625                           	
  3626  0109                     l3118:	
  3627                           ;lcd1.c: 588: return 2;
  3628  0109  3002               	movlw	low(02h)
  3629  010A  00F4               	movwf	(?_scan)
  3630  010B  3000               	movlw	high(02h)
  3631  010C  00F5               	movwf	((?_scan))+1
  3632  010D  29CD               	goto	l856
  3633                           	
  3634  010E                     l3120:	
  3635  010E  29CD               	goto	l856
  3636                           	
  3637  010F                     l3122:	
  3638  010F  291D               	goto	l3128
  3639                           	line	589
  3640                           	
  3641  0110                     l860:	
  3642                           ;lcd1.c: 589: else if(RB7==1)
  3643  0110  1F86               	btfss	(55/8),(55)&7
  3644  0111  2913               	goto	u4171
  3645  0112  2914               	goto	u4170
  3646  0113                     u4171:
  3647  0113  291D               	goto	l3128
  3648  0114                     u4170:
  3649                           	line	590
  3650                           	
  3651  0114                     l3124:	
  3652                           ;lcd1.c: 590: return 4;
  3653  0114  3004               	movlw	low(04h)
  3654  0115  00F4               	movwf	(?_scan)
  3655  0116  3000               	movlw	high(04h)
  3656  0117  00F5               	movwf	((?_scan))+1
  3657  0118  29CD               	goto	l856
  3658                           	
  3659  0119                     l3126:	
  3660  0119  29CD               	goto	l856
  3661                           	
  3662  011A                     l862:	
  3663  011A  291D               	goto	l3128
  3664                           	line	592
  3665                           	
  3666  011B                     l861:	
  3667  011B  291D               	goto	l3128
  3668                           	
  3669  011C                     l859:	
  3670  011C  291D               	goto	l3128
  3671                           	
  3672  011D                     l857:	
  3673                           	
  3674  011D                     l3128:	
  3675                           ;lcd1.c: 592: actrow(2) ;
  3676  011D  3002               	movlw	low(02h)
  3677  011E  00F2               	movwf	(?_actrow)
  3678  011F  3000               	movlw	high(02h)
  3679  0120  00F3               	movwf	((?_actrow))+1
  3680  0121  120A  158A  2527   	fcall	_actrow
              120A  118A         
  3681                           	line	594
  3682                           	
  3683  0126                     l3130:	
  3684                           ;lcd1.c: 594: if( RC2==1)
  3685  0126  1283               	bcf	status, 5	;RP0=0, select bank0
  3686  0127  1303               	bcf	status, 6	;RP1=0, select bank0
  3687  0128  1D07               	btfss	(58/8),(58)&7
  3688  0129  292B               	goto	u4181
  3689  012A  292C               	goto	u4180
  3690  012B                     u4181:
  3691  012B  2933               	goto	l863
  3692  012C                     u4180:
  3693                           	line	595
  3694                           	
  3695  012C                     l3132:	
  3696                           ;lcd1.c: 595: return 5;
  3697  012C  3005               	movlw	low(05h)
  3698  012D  00F4               	movwf	(?_scan)
  3699  012E  3000               	movlw	high(05h)
  3700  012F  00F5               	movwf	((?_scan))+1
  3701  0130  29CD               	goto	l856
  3702                           	
  3703  0131                     l3134:	
  3704  0131  29CD               	goto	l856
  3705                           	
  3706  0132                     l3136:	
  3707  0132  2956               	goto	l3154
  3708                           	line	596
  3709                           	
  3710  0133                     l863:	
  3711                           ;lcd1.c: 596: else if(RC3==1)
  3712  0133  1D87               	btfss	(59/8),(59)&7
  3713  0134  2936               	goto	u4191
  3714  0135  2937               	goto	u4190
  3715  0136                     u4191:
  3716  0136  293E               	goto	l865
  3717  0137                     u4190:
  3718                           	line	597
  3719                           	
  3720  0137                     l3138:	
  3721                           ;lcd1.c: 597: return 6;
  3722  0137  3006               	movlw	low(06h)
  3723  0138  00F4               	movwf	(?_scan)
  3724  0139  3000               	movlw	high(06h)
  3725  013A  00F5               	movwf	((?_scan))+1
  3726  013B  29CD               	goto	l856
  3727                           	
  3728  013C                     l3140:	
  3729  013C  29CD               	goto	l856
  3730                           	
  3731  013D                     l3142:	
  3732  013D  2956               	goto	l3154
  3733                           	line	598
  3734                           	
  3735  013E                     l865:	
  3736                           ;lcd1.c: 598: else if(RB6==1)
  3737  013E  1F06               	btfss	(54/8),(54)&7
  3738  013F  2941               	goto	u4201
  3739  0140  2942               	goto	u4200
  3740  0141                     u4201:
  3741  0141  2949               	goto	l867
  3742  0142                     u4200:
  3743                           	line	599
  3744                           	
  3745  0142                     l3144:	
  3746                           ;lcd1.c: 599: return 7;
  3747  0142  3007               	movlw	low(07h)
  3748  0143  00F4               	movwf	(?_scan)
  3749  0144  3000               	movlw	high(07h)
  3750  0145  00F5               	movwf	((?_scan))+1
  3751  0146  29CD               	goto	l856
  3752                           	
  3753  0147                     l3146:	
  3754  0147  29CD               	goto	l856
  3755                           	
  3756  0148                     l3148:	
  3757  0148  2956               	goto	l3154
  3758                           	line	600
  3759                           	
  3760  0149                     l867:	
  3761                           ;lcd1.c: 600: else if(RB7==1)
  3762  0149  1F86               	btfss	(55/8),(55)&7
  3763  014A  294C               	goto	u4211
  3764  014B  294D               	goto	u4210
  3765  014C                     u4211:
  3766  014C  2956               	goto	l3154
  3767  014D                     u4210:
  3768                           	line	601
  3769                           	
  3770  014D                     l3150:	
  3771                           ;lcd1.c: 601: return 8;
  3772  014D  3008               	movlw	low(08h)
  3773  014E  00F4               	movwf	(?_scan)
  3774  014F  3000               	movlw	high(08h)
  3775  0150  00F5               	movwf	((?_scan))+1
  3776  0151  29CD               	goto	l856
  3777                           	
  3778  0152                     l3152:	
  3779  0152  29CD               	goto	l856
  3780                           	
  3781  0153                     l869:	
  3782  0153  2956               	goto	l3154
  3783                           	line	603
  3784                           	
  3785  0154                     l868:	
  3786  0154  2956               	goto	l3154
  3787                           	
  3788  0155                     l866:	
  3789  0155  2956               	goto	l3154
  3790                           	
  3791  0156                     l864:	
  3792                           	
  3793  0156                     l3154:	
  3794                           ;lcd1.c: 603: actrow(3) ;
  3795  0156  3003               	movlw	low(03h)
  3796  0157  00F2               	movwf	(?_actrow)
  3797  0158  3000               	movlw	high(03h)
  3798  0159  00F3               	movwf	((?_actrow))+1
  3799  015A  120A  158A  2527   	fcall	_actrow
              120A  118A         
  3800                           	line	605
  3801                           	
  3802  015F                     l3156:	
  3803                           ;lcd1.c: 605: if( RC2==1)
  3804  015F  1283               	bcf	status, 5	;RP0=0, select bank0
  3805  0160  1303               	bcf	status, 6	;RP1=0, select bank0
  3806  0161  1D07               	btfss	(58/8),(58)&7
  3807  0162  2964               	goto	u4221
  3808  0163  2965               	goto	u4220
  3809  0164                     u4221:
  3810  0164  296C               	goto	l870
  3811  0165                     u4220:
  3812                           	line	606
  3813                           	
  3814  0165                     l3158:	
  3815                           ;lcd1.c: 606: return 9;
  3816  0165  3009               	movlw	low(09h)
  3817  0166  00F4               	movwf	(?_scan)
  3818  0167  3000               	movlw	high(09h)
  3819  0168  00F5               	movwf	((?_scan))+1
  3820  0169  29CD               	goto	l856
  3821                           	
  3822  016A                     l3160:	
  3823  016A  29CD               	goto	l856
  3824                           	
  3825  016B                     l3162:	
  3826  016B  298F               	goto	l3180
  3827                           	line	607
  3828                           	
  3829  016C                     l870:	
  3830                           ;lcd1.c: 607: else if(RC3==1)
  3831  016C  1D87               	btfss	(59/8),(59)&7
  3832  016D  296F               	goto	u4231
  3833  016E  2970               	goto	u4230
  3834  016F                     u4231:
  3835  016F  2977               	goto	l872
  3836  0170                     u4230:
  3837                           	line	608
  3838                           	
  3839  0170                     l3164:	
  3840                           ;lcd1.c: 608: return 10;
  3841  0170  300A               	movlw	low(0Ah)
  3842  0171  00F4               	movwf	(?_scan)
  3843  0172  3000               	movlw	high(0Ah)
  3844  0173  00F5               	movwf	((?_scan))+1
  3845  0174  29CD               	goto	l856
  3846                           	
  3847  0175                     l3166:	
  3848  0175  29CD               	goto	l856
  3849                           	
  3850  0176                     l3168:	
  3851  0176  298F               	goto	l3180
  3852                           	line	609
  3853                           	
  3854  0177                     l872:	
  3855                           ;lcd1.c: 609: else if(RB6==1)
  3856  0177  1F06               	btfss	(54/8),(54)&7
  3857  0178  297A               	goto	u4241
  3858  0179  297B               	goto	u4240
  3859  017A                     u4241:
  3860  017A  2982               	goto	l874
  3861  017B                     u4240:
  3862                           	line	610
  3863                           	
  3864  017B                     l3170:	
  3865                           ;lcd1.c: 610: return 11;
  3866  017B  300B               	movlw	low(0Bh)
  3867  017C  00F4               	movwf	(?_scan)
  3868  017D  3000               	movlw	high(0Bh)
  3869  017E  00F5               	movwf	((?_scan))+1
  3870  017F  29CD               	goto	l856
  3871                           	
  3872  0180                     l3172:	
  3873  0180  29CD               	goto	l856
  3874                           	
  3875  0181                     l3174:	
  3876  0181  298F               	goto	l3180
  3877                           	line	611
  3878                           	
  3879  0182                     l874:	
  3880                           ;lcd1.c: 611: else if(RB7==1)
  3881  0182  1F86               	btfss	(55/8),(55)&7
  3882  0183  2985               	goto	u4251
  3883  0184  2986               	goto	u4250
  3884  0185                     u4251:
  3885  0185  298F               	goto	l3180
  3886  0186                     u4250:
  3887                           	line	612
  3888                           	
  3889  0186                     l3176:	
  3890                           ;lcd1.c: 612: return 12;
  3891  0186  300C               	movlw	low(0Ch)
  3892  0187  00F4               	movwf	(?_scan)
  3893  0188  3000               	movlw	high(0Ch)
  3894  0189  00F5               	movwf	((?_scan))+1
  3895  018A  29CD               	goto	l856
  3896                           	
  3897  018B                     l3178:	
  3898  018B  29CD               	goto	l856
  3899                           	
  3900  018C                     l876:	
  3901  018C  298F               	goto	l3180
  3902                           	line	615
  3903                           	
  3904  018D                     l875:	
  3905  018D  298F               	goto	l3180
  3906                           	
  3907  018E                     l873:	
  3908  018E  298F               	goto	l3180
  3909                           	
  3910  018F                     l871:	
  3911                           	
  3912  018F                     l3180:	
  3913                           ;lcd1.c: 615: actrow(4) ;
  3914  018F  3004               	movlw	low(04h)
  3915  0190  00F2               	movwf	(?_actrow)
  3916  0191  3000               	movlw	high(04h)
  3917  0192  00F3               	movwf	((?_actrow))+1
  3918  0193  120A  158A  2527   	fcall	_actrow
              120A  118A         
  3919                           	line	617
  3920                           	
  3921  0198                     l3182:	
  3922                           ;lcd1.c: 617: if( RC2==1)
  3923  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  3924  0199  1303               	bcf	status, 6	;RP1=0, select bank0
  3925  019A  1D07               	btfss	(58/8),(58)&7
  3926  019B  299D               	goto	u4261
  3927  019C  299E               	goto	u4260
  3928  019D                     u4261:
  3929  019D  29A5               	goto	l877
  3930  019E                     u4260:
  3931                           	line	618
  3932                           	
  3933  019E                     l3184:	
  3934                           ;lcd1.c: 618: return 13;
  3935  019E  300D               	movlw	low(0Dh)
  3936  019F  00F4               	movwf	(?_scan)
  3937  01A0  3000               	movlw	high(0Dh)
  3938  01A1  00F5               	movwf	((?_scan))+1
  3939  01A2  29CD               	goto	l856
  3940                           	
  3941  01A3                     l3186:	
  3942  01A3  29CD               	goto	l856
  3943                           	
  3944  01A4                     l3188:	
  3945  01A4  29C8               	goto	l3206
  3946                           	line	619
  3947                           	
  3948  01A5                     l877:	
  3949                           ;lcd1.c: 619: else if(RC3==1)
  3950  01A5  1D87               	btfss	(59/8),(59)&7
  3951  01A6  29A8               	goto	u4271
  3952  01A7  29A9               	goto	u4270
  3953  01A8                     u4271:
  3954  01A8  29B0               	goto	l879
  3955  01A9                     u4270:
  3956                           	line	620
  3957                           	
  3958  01A9                     l3190:	
  3959                           ;lcd1.c: 620: return 14;
  3960  01A9  300E               	movlw	low(0Eh)
  3961  01AA  00F4               	movwf	(?_scan)
  3962  01AB  3000               	movlw	high(0Eh)
  3963  01AC  00F5               	movwf	((?_scan))+1
  3964  01AD  29CD               	goto	l856
  3965                           	
  3966  01AE                     l3192:	
  3967  01AE  29CD               	goto	l856
  3968                           	
  3969  01AF                     l3194:	
  3970  01AF  29C8               	goto	l3206
  3971                           	line	621
  3972                           	
  3973  01B0                     l879:	
  3974                           ;lcd1.c: 621: else if(RB6==1)
  3975  01B0  1F06               	btfss	(54/8),(54)&7
  3976  01B1  29B3               	goto	u4281
  3977  01B2  29B4               	goto	u4280
  3978  01B3                     u4281:
  3979  01B3  29BB               	goto	l881
  3980  01B4                     u4280:
  3981                           	line	622
  3982                           	
  3983  01B4                     l3196:	
  3984                           ;lcd1.c: 622: return 15;
  3985  01B4  300F               	movlw	low(0Fh)
  3986  01B5  00F4               	movwf	(?_scan)
  3987  01B6  3000               	movlw	high(0Fh)
  3988  01B7  00F5               	movwf	((?_scan))+1
  3989  01B8  29CD               	goto	l856
  3990                           	
  3991  01B9                     l3198:	
  3992  01B9  29CD               	goto	l856
  3993                           	
  3994  01BA                     l3200:	
  3995  01BA  29C8               	goto	l3206
  3996                           	line	623
  3997                           	
  3998  01BB                     l881:	
  3999                           ;lcd1.c: 623: else if(RB7==1)
  4000  01BB  1F86               	btfss	(55/8),(55)&7
  4001  01BC  29BE               	goto	u4291
  4002  01BD  29BF               	goto	u4290
  4003  01BE                     u4291:
  4004  01BE  29C8               	goto	l3206
  4005  01BF                     u4290:
  4006                           	line	624
  4007                           	
  4008  01BF                     l3202:	
  4009                           ;lcd1.c: 624: return 16;
  4010  01BF  3010               	movlw	low(010h)
  4011  01C0  00F4               	movwf	(?_scan)
  4012  01C1  3000               	movlw	high(010h)
  4013  01C2  00F5               	movwf	((?_scan))+1
  4014  01C3  29CD               	goto	l856
  4015                           	
  4016  01C4                     l3204:	
  4017  01C4  29CD               	goto	l856
  4018                           	
  4019  01C5                     l883:	
  4020  01C5  29C8               	goto	l3206
  4021                           	line	628
  4022                           	
  4023  01C6                     l882:	
  4024  01C6  29C8               	goto	l3206
  4025                           	
  4026  01C7                     l880:	
  4027  01C7  29C8               	goto	l3206
  4028                           	
  4029  01C8                     l878:	
  4030                           	
  4031  01C8                     l3206:	
  4032                           ;lcd1.c: 628: return 99;
  4033  01C8  3063               	movlw	low(063h)
  4034  01C9  00F4               	movwf	(?_scan)
  4035  01CA  3000               	movlw	high(063h)
  4036  01CB  00F5               	movwf	((?_scan))+1
  4037  01CC  29CD               	goto	l856
  4038                           	
  4039  01CD                     l3208:	
  4040                           	line	632
  4041                           	
  4042  01CD                     l856:	
  4043  01CD  0008               	return
  4044                           	opt stack 0
  4045                           GLOBAL	__end_of_scan
  4046  01CE                     	__end_of_scan:
  4047 ;; =============== function _scan ends ============
  4048                           
  4049                           	signat	_scan,90
  4050                           	global	_initlcd
  4051                           psect	text495,local,class=CODE,delta=2
  4052                           global __ptext495
  4053  0CBB                     __ptext495:
  4054                           
  4055 ;; *************** function _initlcd *****************
  4056 ;; Defined at:
  4057 ;;		line 424 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;		None               void
  4064 ;; Registers used:
  4065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4071 ;;      Params:         0       0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0
  4074 ;;      Totals:         0       0       0       0       0
  4075 ;;Total ram usage:        0 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    3
  4078 ;; This function calls:
  4079 ;;		_cmd
  4080 ;; This function is called by:
  4081 ;;		_main
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           psect	text495
  4085                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4086                           	line	424
  4087                           	global	__size_of_initlcd
  4088  0033                     	__size_of_initlcd	equ	__end_of_initlcd-_initlcd
  4089                           	
  4090  0CBB                     _initlcd:	
  4091                           	opt	stack 4
  4092                           ; Regs used in _initlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4093                           	line	426
  4094                           	
  4095  0CBB                     l3088:	
  4096                           ;lcd1.c: 426: TRISC=0b11111100;
  4097  0CBB  30FC               	movlw	(0FCh)
  4098  0CBC  1683               	bsf	status, 5	;RP0=1, select bank1
  4099  0CBD  1303               	bcf	status, 6	;RP1=0, select bank1
  4100  0CBE  0087               	movwf	(135)^080h	;volatile
  4101                           	line	428
  4102                           	
  4103  0CBF                     l3090:	
  4104                           ;lcd1.c: 428: TRISD=0x00;
  4105  0CBF  0188               	clrf	(136)^080h	;volatile
  4106                           	line	430
  4107                           	
  4108  0CC0                     l3092:	
  4109                           ;lcd1.c: 430: cmd(0x38);
  4110  0CC0  3038               	movlw	low(038h)
  4111  0CC1  00F8               	movwf	(?_cmd)
  4112  0CC2  3000               	movlw	high(038h)
  4113  0CC3  00F9               	movwf	((?_cmd))+1
  4114  0CC4  120A  158A  23F6   	fcall	_cmd
              120A  158A         
  4115                           	line	432
  4116                           	
  4117  0CC9                     l3094:	
  4118                           ;lcd1.c: 432: cmd(0x0C);
  4119  0CC9  300C               	movlw	low(0Ch)
  4120  0CCA  00F8               	movwf	(?_cmd)
  4121  0CCB  3000               	movlw	high(0Ch)
  4122  0CCC  00F9               	movwf	((?_cmd))+1
  4123  0CCD  120A  158A  23F6   	fcall	_cmd
              120A  158A         
  4124                           	line	434
  4125                           	
  4126  0CD2                     l3096:	
  4127                           ;lcd1.c: 434: cmd(0x01);
  4128  0CD2  3001               	movlw	low(01h)
  4129  0CD3  00F8               	movwf	(?_cmd)
  4130  0CD4  3000               	movlw	high(01h)
  4131  0CD5  00F9               	movwf	((?_cmd))+1
  4132  0CD6  120A  158A  23F6   	fcall	_cmd
              120A  158A         
  4133                           	line	436
  4134                           	
  4135  0CDB                     l3098:	
  4136                           ;lcd1.c: 436: cmd(0x80);
  4137  0CDB  3080               	movlw	low(080h)
  4138  0CDC  00F8               	movwf	(?_cmd)
  4139  0CDD  3000               	movlw	high(080h)
  4140  0CDE  00F9               	movwf	((?_cmd))+1
  4141  0CDF  120A  158A  23F6   	fcall	_cmd
              120A  158A         
  4142                           	line	438
  4143                           	
  4144  0CE4                     l3100:	
  4145                           ;lcd1.c: 438: cmd(0x0f);
  4146  0CE4  300F               	movlw	low(0Fh)
  4147  0CE5  00F8               	movwf	(?_cmd)
  4148  0CE6  3000               	movlw	high(0Fh)
  4149  0CE7  00F9               	movwf	((?_cmd))+1
  4150  0CE8  120A  158A  23F6   	fcall	_cmd
              120A  158A         
  4151                           	line	440
  4152                           	
  4153  0CED                     l809:	
  4154  0CED  0008               	return
  4155                           	opt stack 0
  4156                           GLOBAL	__end_of_initlcd
  4157  0CEE                     	__end_of_initlcd:
  4158 ;; =============== function _initlcd ends ============
  4159                           
  4160                           	signat	_initlcd,88
  4161                           	global	_actrow
  4162                           psect	text496,local,class=CODE,delta=2
  4163                           global __ptext496
  4164  0D27                     __ptext496:
  4165                           
  4166 ;; *************** function _actrow *****************
  4167 ;; Defined at:
  4168 ;;		line 640 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  n               2    2[COMMON] int 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;		None               void
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         2       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0
  4185 ;;      Totals:         2       0       0       0       0
  4186 ;;Total ram usage:        2 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    1
  4189 ;; This function calls:
  4190 ;;		_resetout
  4191 ;;		_delay
  4192 ;; This function is called by:
  4193 ;;		_scan
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           psect	text496
  4197                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4198                           	line	640
  4199                           	global	__size_of_actrow
  4200  003E                     	__size_of_actrow	equ	__end_of_actrow-_actrow
  4201                           	
  4202  0D27                     _actrow:	
  4203                           	opt	stack 4
  4204                           ; Regs used in _actrow: [wreg+status,2+status,0+pclath+cstack]
  4205                           	line	641
  4206                           	
  4207  0D27                     l3068:	
  4208                           ;lcd1.c: 641: resetout();
  4209  0D27  120A  158A  2367   	fcall	_resetout
              120A  158A         
  4210                           	line	643
  4211                           	
  4212  0D2C                     l3070:	
  4213                           ;lcd1.c: 643: if(n==1)
  4214  0D2C  3001               	movlw	01h
  4215  0D2D  0672               	xorwf	(actrow@n),w
  4216  0D2E  0473               	iorwf	(actrow@n+1),w
  4217  0D2F  1D03               	skipz
  4218  0D30  2D32               	goto	u4101
  4219  0D31  2D33               	goto	u4100
  4220  0D32                     u4101:
  4221  0D32  2D37               	goto	l3074
  4222  0D33                     u4100:
  4223                           	line	645
  4224                           	
  4225  0D33                     l3072:	
  4226                           ;lcd1.c: 644: {
  4227                           ;lcd1.c: 645: RB0=1;
  4228  0D33  1283               	bcf	status, 5	;RP0=0, select bank0
  4229  0D34  1303               	bcf	status, 6	;RP1=0, select bank0
  4230  0D35  1406               	bsf	(48/8),(48)&7
  4231                           	line	646
  4232                           ;lcd1.c: 646: }
  4233  0D36  2D5B               	goto	l3086
  4234                           	line	647
  4235                           	
  4236  0D37                     l889:	
  4237                           	
  4238  0D37                     l3074:	
  4239                           ;lcd1.c: 647: else if(n==2)
  4240  0D37  3002               	movlw	02h
  4241  0D38  0672               	xorwf	(actrow@n),w
  4242  0D39  0473               	iorwf	(actrow@n+1),w
  4243  0D3A  1D03               	skipz
  4244  0D3B  2D3D               	goto	u4111
  4245  0D3C  2D3E               	goto	u4110
  4246  0D3D                     u4111:
  4247  0D3D  2D42               	goto	l3078
  4248  0D3E                     u4110:
  4249                           	line	649
  4250                           	
  4251  0D3E                     l3076:	
  4252                           ;lcd1.c: 648: {
  4253                           ;lcd1.c: 649: RB1=1;
  4254  0D3E  1283               	bcf	status, 5	;RP0=0, select bank0
  4255  0D3F  1303               	bcf	status, 6	;RP1=0, select bank0
  4256  0D40  1486               	bsf	(49/8),(49)&7
  4257                           	line	650
  4258                           ;lcd1.c: 650: }
  4259  0D41  2D5B               	goto	l3086
  4260                           	line	651
  4261                           	
  4262  0D42                     l891:	
  4263                           	
  4264  0D42                     l3078:	
  4265                           ;lcd1.c: 651: else if(n==3)
  4266  0D42  3003               	movlw	03h
  4267  0D43  0672               	xorwf	(actrow@n),w
  4268  0D44  0473               	iorwf	(actrow@n+1),w
  4269  0D45  1D03               	skipz
  4270  0D46  2D48               	goto	u4121
  4271  0D47  2D49               	goto	u4120
  4272  0D48                     u4121:
  4273  0D48  2D4D               	goto	l3082
  4274  0D49                     u4120:
  4275                           	line	653
  4276                           	
  4277  0D49                     l3080:	
  4278                           ;lcd1.c: 652: {
  4279                           ;lcd1.c: 653: RB2=1;
  4280  0D49  1283               	bcf	status, 5	;RP0=0, select bank0
  4281  0D4A  1303               	bcf	status, 6	;RP1=0, select bank0
  4282  0D4B  1506               	bsf	(50/8),(50)&7
  4283                           	line	654
  4284                           ;lcd1.c: 654: }
  4285  0D4C  2D5B               	goto	l3086
  4286                           	line	655
  4287                           	
  4288  0D4D                     l893:	
  4289                           	
  4290  0D4D                     l3082:	
  4291                           ;lcd1.c: 655: else if(n==4)
  4292  0D4D  3004               	movlw	04h
  4293  0D4E  0672               	xorwf	(actrow@n),w
  4294  0D4F  0473               	iorwf	(actrow@n+1),w
  4295  0D50  1D03               	skipz
  4296  0D51  2D53               	goto	u4131
  4297  0D52  2D54               	goto	u4130
  4298  0D53                     u4131:
  4299  0D53  2D5B               	goto	l3086
  4300  0D54                     u4130:
  4301                           	line	657
  4302                           	
  4303  0D54                     l3084:	
  4304                           ;lcd1.c: 656: {
  4305                           ;lcd1.c: 657: RB3=1;
  4306  0D54  1283               	bcf	status, 5	;RP0=0, select bank0
  4307  0D55  1303               	bcf	status, 6	;RP1=0, select bank0
  4308  0D56  1586               	bsf	(51/8),(51)&7
  4309  0D57  2D5B               	goto	l3086
  4310                           	line	658
  4311                           	
  4312  0D58                     l895:	
  4313  0D58  2D5B               	goto	l3086
  4314                           	line	659
  4315                           	
  4316  0D59                     l894:	
  4317  0D59  2D5B               	goto	l3086
  4318                           	
  4319  0D5A                     l892:	
  4320  0D5A  2D5B               	goto	l3086
  4321                           	
  4322  0D5B                     l890:	
  4323                           	
  4324  0D5B                     l3086:	
  4325                           ;lcd1.c: 658: }
  4326                           ;lcd1.c: 659: delay(200);
  4327  0D5B  30C8               	movlw	low(0C8h)
  4328  0D5C  00F0               	movwf	(?_delay)
  4329  0D5D  3000               	movlw	high(0C8h)
  4330  0D5E  00F1               	movwf	((?_delay))+1
  4331  0D5F  120A  158A  2399   	fcall	_delay
              120A  158A         
  4332                           	line	662
  4333                           	
  4334  0D64                     l896:	
  4335  0D64  0008               	return
  4336                           	opt stack 0
  4337                           GLOBAL	__end_of_actrow
  4338  0D65                     	__end_of_actrow:
  4339 ;; =============== function _actrow ends ============
  4340                           
  4341                           	signat	_actrow,4216
  4342                           	global	_dat
  4343                           psect	text497,local,class=CODE,delta=2
  4344                           global __ptext497
  4345  0C1B                     __ptext497:
  4346                           
  4347 ;; *************** function _dat *****************
  4348 ;; Defined at:
  4349 ;;		line 457 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  Command         2    8[COMMON] unsigned int 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;		None               void
  4356 ;; Registers used:
  4357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4363 ;;      Params:         2       0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0
  4365 ;;      Temps:          0       0       0       0       0
  4366 ;;      Totals:         2       0       0       0       0
  4367 ;;Total ram usage:        2 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    2
  4370 ;; This function calls:
  4371 ;;		_setLCD
  4372 ;;		_delay
  4373 ;; This function is called by:
  4374 ;;		_write
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           psect	text497
  4378                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4379                           	line	457
  4380                           	global	__size_of_dat
  4381  0025                     	__size_of_dat	equ	__end_of_dat-_dat
  4382                           	
  4383  0C1B                     _dat:	
  4384                           	opt	stack 3
  4385                           ; Regs used in _dat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4386                           	line	458
  4387                           	
  4388  0C1B                     l3056:	
  4389                           ;lcd1.c: 458: setLCD(Command);
  4390  0C1B  0879               	movf	(dat@Command+1),w
  4391  0C1C  01F1               	clrf	(?_setLCD+1)
  4392  0C1D  07F1               	addwf	(?_setLCD+1)
  4393  0C1E  0878               	movf	(dat@Command),w
  4394  0C1F  01F0               	clrf	(?_setLCD)
  4395  0C20  07F0               	addwf	(?_setLCD)
  4396                           
  4397  0C21  120A  118A  22B9   	fcall	_setLCD
              120A  158A         
  4398                           	line	460
  4399                           	
  4400  0C26                     l3058:	
  4401                           ;lcd1.c: 460: RC0=1;
  4402  0C26  1283               	bcf	status, 5	;RP0=0, select bank0
  4403  0C27  1303               	bcf	status, 6	;RP1=0, select bank0
  4404  0C28  1407               	bsf	(56/8),(56)&7
  4405                           	line	462
  4406                           	
  4407  0C29                     l3060:	
  4408                           ;lcd1.c: 462: RC1=1;
  4409  0C29  1487               	bsf	(57/8),(57)&7
  4410                           	line	464
  4411                           	
  4412  0C2A                     l3062:	
  4413                           ;lcd1.c: 464: delay(20);
  4414  0C2A  3014               	movlw	low(014h)
  4415  0C2B  00F0               	movwf	(?_delay)
  4416  0C2C  3000               	movlw	high(014h)
  4417  0C2D  00F1               	movwf	((?_delay))+1
  4418  0C2E  120A  158A  2399   	fcall	_delay
              120A  158A         
  4419                           	line	466
  4420                           	
  4421  0C33                     l3064:	
  4422                           ;lcd1.c: 466: RC1=0;
  4423  0C33  1283               	bcf	status, 5	;RP0=0, select bank0
  4424  0C34  1303               	bcf	status, 6	;RP1=0, select bank0
  4425  0C35  1087               	bcf	(57/8),(57)&7
  4426                           	line	468
  4427                           	
  4428  0C36                     l3066:	
  4429                           ;lcd1.c: 468: delay(20);
  4430  0C36  3014               	movlw	low(014h)
  4431  0C37  00F0               	movwf	(?_delay)
  4432  0C38  3000               	movlw	high(014h)
  4433  0C39  00F1               	movwf	((?_delay))+1
  4434  0C3A  120A  158A  2399   	fcall	_delay
              120A  158A         
  4435                           	line	474
  4436                           	
  4437  0C3F                     l818:	
  4438  0C3F  0008               	return
  4439                           	opt stack 0
  4440                           GLOBAL	__end_of_dat
  4441  0C40                     	__end_of_dat:
  4442 ;; =============== function _dat ends ============
  4443                           
  4444                           	signat	_dat,4216
  4445                           	global	_cmd
  4446                           psect	text498,local,class=CODE,delta=2
  4447                           global __ptext498
  4448  0BF6                     __ptext498:
  4449                           
  4450 ;; *************** function _cmd *****************
  4451 ;; Defined at:
  4452 ;;		line 446 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  Command         2    8[COMMON] unsigned int 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;		None
  4457 ;; Return value:  Size  Location     Type
  4458 ;;		None               void
  4459 ;; Registers used:
  4460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4466 ;;      Params:         2       0       0       0       0
  4467 ;;      Locals:         0       0       0       0       0
  4468 ;;      Temps:          0       0       0       0       0
  4469 ;;      Totals:         2       0       0       0       0
  4470 ;;Total ram usage:        2 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:    2
  4473 ;; This function calls:
  4474 ;;		_setLCD
  4475 ;;		_delay
  4476 ;; This function is called by:
  4477 ;;		_initlcd
  4478 ;;		_clearlcd
  4479 ;;		_write
  4480 ;;		_scroll
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           psect	text498
  4484                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4485                           	line	446
  4486                           	global	__size_of_cmd
  4487  0025                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  4488                           	
  4489  0BF6                     _cmd:	
  4490                           	opt	stack 3
  4491                           ; Regs used in _cmd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4492                           	line	447
  4493                           	
  4494  0BF6                     l3044:	
  4495                           ;lcd1.c: 447: setLCD(Command);
  4496  0BF6  0879               	movf	(cmd@Command+1),w
  4497  0BF7  01F1               	clrf	(?_setLCD+1)
  4498  0BF8  07F1               	addwf	(?_setLCD+1)
  4499  0BF9  0878               	movf	(cmd@Command),w
  4500  0BFA  01F0               	clrf	(?_setLCD)
  4501  0BFB  07F0               	addwf	(?_setLCD)
  4502                           
  4503  0BFC  120A  118A  22B9   	fcall	_setLCD
              120A  158A         
  4504                           	line	448
  4505                           	
  4506  0C01                     l3046:	
  4507                           ;lcd1.c: 448: RC0=0;
  4508  0C01  1283               	bcf	status, 5	;RP0=0, select bank0
  4509  0C02  1303               	bcf	status, 6	;RP1=0, select bank0
  4510  0C03  1007               	bcf	(56/8),(56)&7
  4511                           	line	449
  4512                           	
  4513  0C04                     l3048:	
  4514                           ;lcd1.c: 449: RC1=1;
  4515  0C04  1487               	bsf	(57/8),(57)&7
  4516                           	line	450
  4517                           	
  4518  0C05                     l3050:	
  4519                           ;lcd1.c: 450: delay(20);
  4520  0C05  3014               	movlw	low(014h)
  4521  0C06  00F0               	movwf	(?_delay)
  4522  0C07  3000               	movlw	high(014h)
  4523  0C08  00F1               	movwf	((?_delay))+1
  4524  0C09  120A  158A  2399   	fcall	_delay
              120A  158A         
  4525                           	line	451
  4526                           	
  4527  0C0E                     l3052:	
  4528                           ;lcd1.c: 451: RC1=0;
  4529  0C0E  1283               	bcf	status, 5	;RP0=0, select bank0
  4530  0C0F  1303               	bcf	status, 6	;RP1=0, select bank0
  4531  0C10  1087               	bcf	(57/8),(57)&7
  4532                           	line	452
  4533                           	
  4534  0C11                     l3054:	
  4535                           ;lcd1.c: 452: delay(20);
  4536  0C11  3014               	movlw	low(014h)
  4537  0C12  00F0               	movwf	(?_delay)
  4538  0C13  3000               	movlw	high(014h)
  4539  0C14  00F1               	movwf	((?_delay))+1
  4540  0C15  120A  158A  2399   	fcall	_delay
              120A  158A         
  4541                           	line	454
  4542                           	
  4543  0C1A                     l815:	
  4544  0C1A  0008               	return
  4545                           	opt stack 0
  4546                           GLOBAL	__end_of_cmd
  4547  0C1B                     	__end_of_cmd:
  4548 ;; =============== function _cmd ends ============
  4549                           
  4550                           	signat	_cmd,4216
  4551                           	global	_itoaa
  4552                           psect	text499,local,class=CODE,delta=2
  4553                           global __ptext499
  4554  01CE                     __ptext499:
  4555                           
  4556 ;; *************** function _itoaa *****************
  4557 ;; Defined at:
  4558 ;;		line 397 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  value           2    9[COMMON] int 
  4561 ;;  ptr             1   11[COMMON] PTR unsigned char 
  4562 ;;		 -> getlogicseq@snum(16), 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  temp            2    2[BANK0 ] int 
  4565 ;;  count           2    0[BANK0 ] int 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  2    9[COMMON] int 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4575 ;;      Params:         3       0       0       0       0
  4576 ;;      Locals:         0       4       0       0       0
  4577 ;;      Temps:          1       0       0       0       0
  4578 ;;      Totals:         4       4       0       0       0
  4579 ;;Total ram usage:        8 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    1
  4582 ;; This function calls:
  4583 ;;		___wmul
  4584 ;;		___awdiv
  4585 ;;		___awmod
  4586 ;; This function is called by:
  4587 ;;		_getlogicseq
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           psect	text499
  4591                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4592                           	line	397
  4593                           	global	__size_of_itoaa
  4594  00EB                     	__size_of_itoaa	equ	__end_of_itoaa-_itoaa
  4595                           	
  4596  01CE                     _itoaa:	
  4597                           	opt	stack 5
  4598                           ; Regs used in _itoaa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4599                           	line	398
  4600                           	
  4601  01CE                     l2996:	
  4602                           ;lcd1.c: 398: int count=0,temp;
  4603  01CE  1283               	bcf	status, 5	;RP0=0, select bank0
  4604  01CF  1303               	bcf	status, 6	;RP1=0, select bank0
  4605  01D0  01A0               	clrf	(itoaa@count)
  4606  01D1  01A1               	clrf	(itoaa@count+1)
  4607                           	line	399
  4608                           	
  4609  01D2                     l2998:	
  4610                           ;lcd1.c: 399: if(ptr==(0))
  4611  01D2  08FB               	movf	(itoaa@ptr),f
  4612  01D3  1D03               	skipz
  4613  01D4  29D6               	goto	u4031
  4614  01D5  29D7               	goto	u4030
  4615  01D6                     u4031:
  4616  01D6  29D9               	goto	l3002
  4617  01D7                     u4030:
  4618  01D7  2AB8               	goto	l800
  4619                           	line	400
  4620                           	
  4621  01D8                     l3000:	
  4622                           ;lcd1.c: 400: return 0;
  4623                           ;	Return value of _itoaa is never used
  4624  01D8  2AB8               	goto	l800
  4625                           	
  4626  01D9                     l799:	
  4627                           	line	401
  4628                           	
  4629  01D9                     l3002:	
  4630                           ;lcd1.c: 401: if(value==0)
  4631  01D9  087A               	movf	((itoaa@value+1)),w
  4632  01DA  0479               	iorwf	((itoaa@value)),w
  4633  01DB  1D03               	skipz
  4634  01DC  29DE               	goto	u4041
  4635  01DD  29DF               	goto	u4040
  4636  01DE                     u4041:
  4637  01DE  29E8               	goto	l801
  4638  01DF                     u4040:
  4639                           	line	403
  4640                           	
  4641  01DF                     l3004:	
  4642                           ;lcd1.c: 402: {
  4643                           ;lcd1.c: 403: *ptr='0';
  4644  01DF  3030               	movlw	(030h)
  4645  01E0  00FC               	movwf	(??_itoaa+0)+0
  4646  01E1  087B               	movf	(itoaa@ptr),w
  4647  01E2  0084               	movwf	fsr0
  4648  01E3  087C               	movf	(??_itoaa+0)+0,w
  4649  01E4  1383               	bcf	status, 7	;select IRP bank0
  4650  01E5  0080               	movwf	indf
  4651  01E6  2AB8               	goto	l800
  4652                           	line	404
  4653                           	
  4654  01E7                     l3006:	
  4655                           ;lcd1.c: 404: return 1;
  4656                           ;	Return value of _itoaa is never used
  4657  01E7  2AB8               	goto	l800
  4658                           	line	405
  4659                           	
  4660  01E8                     l801:	
  4661                           	line	407
  4662                           ;lcd1.c: 405: }
  4663                           ;lcd1.c: 407: if(value<0)
  4664  01E8  1FFA               	btfss	(itoaa@value+1),7
  4665  01E9  29EB               	goto	u4051
  4666  01EA  29EC               	goto	u4050
  4667  01EB                     u4051:
  4668  01EB  2A15               	goto	l3016
  4669  01EC                     u4050:
  4670                           	line	409
  4671                           	
  4672  01EC                     l3008:	
  4673                           ;lcd1.c: 408: {
  4674                           ;lcd1.c: 409: value*=(-1);
  4675  01EC  30FF               	movlw	low(-1)
  4676  01ED  00F0               	movwf	(?___wmul)
  4677  01EE  30FF               	movlw	high(-1)
  4678  01EF  00F1               	movwf	((?___wmul))+1
  4679  01F0  087A               	movf	(itoaa@value+1),w
  4680  01F1  01F3               	clrf	1+(?___wmul)+02h
  4681  01F2  07F3               	addwf	1+(?___wmul)+02h
  4682  01F3  0879               	movf	(itoaa@value),w
  4683  01F4  01F2               	clrf	0+(?___wmul)+02h
  4684  01F5  07F2               	addwf	0+(?___wmul)+02h
  4685                           
  4686  01F6  120A  158A  2491   	fcall	___wmul
              120A  118A         
  4687  01FB  0871               	movf	(1+(?___wmul)),w
  4688  01FC  01FA               	clrf	(itoaa@value+1)
  4689  01FD  07FA               	addwf	(itoaa@value+1)
  4690  01FE  0870               	movf	(0+(?___wmul)),w
  4691  01FF  01F9               	clrf	(itoaa@value)
  4692  0200  07F9               	addwf	(itoaa@value)
  4693                           
  4694                           	line	410
  4695                           	
  4696  0201                     l3010:	
  4697                           ;lcd1.c: 410: *ptr++='-';
  4698  0201  302D               	movlw	(02Dh)
  4699  0202  00FC               	movwf	(??_itoaa+0)+0
  4700  0203  087B               	movf	(itoaa@ptr),w
  4701  0204  0084               	movwf	fsr0
  4702  0205  087C               	movf	(??_itoaa+0)+0,w
  4703  0206  1383               	bcf	status, 7	;select IRP bank0
  4704  0207  0080               	movwf	indf
  4705                           	
  4706  0208                     l3012:	
  4707  0208  3001               	movlw	(01h)
  4708  0209  00FC               	movwf	(??_itoaa+0)+0
  4709  020A  087C               	movf	(??_itoaa+0)+0,w
  4710  020B  07FB               	addwf	(itoaa@ptr),f
  4711                           	line	411
  4712                           	
  4713  020C                     l3014:	
  4714                           ;lcd1.c: 411: count++;
  4715  020C  3001               	movlw	low(01h)
  4716  020D  1283               	bcf	status, 5	;RP0=0, select bank0
  4717  020E  1303               	bcf	status, 6	;RP1=0, select bank0
  4718  020F  07A0               	addwf	(itoaa@count),f
  4719  0210  1803               	skipnc
  4720  0211  0AA1               	incf	(itoaa@count+1),f
  4721  0212  3000               	movlw	high(01h)
  4722  0213  07A1               	addwf	(itoaa@count+1),f
  4723  0214  2A15               	goto	l3016
  4724                           	line	412
  4725                           	
  4726  0215                     l802:	
  4727                           	line	413
  4728                           	
  4729  0215                     l3016:	
  4730                           ;lcd1.c: 412: }
  4731                           ;lcd1.c: 413: for(temp=value;temp>0;temp/=10,ptr++);
  4732  0215  087A               	movf	(itoaa@value+1),w
  4733  0216  01A3               	clrf	(itoaa@temp+1)
  4734  0217  07A3               	addwf	(itoaa@temp+1)
  4735  0218  0879               	movf	(itoaa@value),w
  4736  0219  01A2               	clrf	(itoaa@temp)
  4737  021A  07A2               	addwf	(itoaa@temp)
  4738                           
  4739                           	
  4740  021B                     l3018:	
  4741  021B  0823               	movf	(itoaa@temp+1),w
  4742  021C  3A80               	xorlw	80h
  4743  021D  00FF               	movwf	btemp+1
  4744  021E  3080               	movlw	(high(01h))^80h
  4745  021F  027F               	subwf	btemp+1,w
  4746  0220  1D03               	skipz
  4747  0221  2A24               	goto	u4065
  4748  0222  3001               	movlw	low(01h)
  4749  0223  0222               	subwf	(itoaa@temp),w
  4750  0224                     u4065:
  4751                           
  4752  0224  1803               	skipnc
  4753  0225  2A27               	goto	u4061
  4754  0226  2A28               	goto	u4060
  4755  0227                     u4061:
  4756  0227  2A2A               	goto	l3022
  4757  0228                     u4060:
  4758  0228  2A55               	goto	l3028
  4759                           	
  4760  0229                     l3020:	
  4761  0229  2A55               	goto	l3028
  4762                           	
  4763  022A                     l803:	
  4764                           	
  4765  022A                     l3022:	
  4766  022A  300A               	movlw	low(0Ah)
  4767  022B  00F0               	movwf	(?___awdiv)
  4768  022C  3000               	movlw	high(0Ah)
  4769  022D  00F1               	movwf	((?___awdiv))+1
  4770  022E  1283               	bcf	status, 5	;RP0=0, select bank0
  4771  022F  1303               	bcf	status, 6	;RP1=0, select bank0
  4772  0230  0823               	movf	(itoaa@temp+1),w
  4773  0231  01F3               	clrf	1+(?___awdiv)+02h
  4774  0232  07F3               	addwf	1+(?___awdiv)+02h
  4775  0233  0822               	movf	(itoaa@temp),w
  4776  0234  01F2               	clrf	0+(?___awdiv)+02h
  4777  0235  07F2               	addwf	0+(?___awdiv)+02h
  4778                           
  4779  0236  120A  158A  262F   	fcall	___awdiv
              120A  118A         
  4780  023B  0871               	movf	(1+(?___awdiv)),w
  4781  023C  1283               	bcf	status, 5	;RP0=0, select bank0
  4782  023D  1303               	bcf	status, 6	;RP1=0, select bank0
  4783  023E  01A3               	clrf	(itoaa@temp+1)
  4784  023F  07A3               	addwf	(itoaa@temp+1)
  4785  0240  0870               	movf	(0+(?___awdiv)),w
  4786  0241  01A2               	clrf	(itoaa@temp)
  4787  0242  07A2               	addwf	(itoaa@temp)
  4788                           
  4789                           	
  4790  0243                     l3024:	
  4791  0243  3001               	movlw	(01h)
  4792  0244  00FC               	movwf	(??_itoaa+0)+0
  4793  0245  087C               	movf	(??_itoaa+0)+0,w
  4794  0246  07FB               	addwf	(itoaa@ptr),f
  4795                           	
  4796  0247                     l3026:	
  4797  0247  0823               	movf	(itoaa@temp+1),w
  4798  0248  3A80               	xorlw	80h
  4799  0249  00FF               	movwf	btemp+1
  4800  024A  3080               	movlw	(high(01h))^80h
  4801  024B  027F               	subwf	btemp+1,w
  4802  024C  1D03               	skipz
  4803  024D  2A50               	goto	u4075
  4804  024E  3001               	movlw	low(01h)
  4805  024F  0222               	subwf	(itoaa@temp),w
  4806  0250                     u4075:
  4807                           
  4808  0250  1803               	skipnc
  4809  0251  2A53               	goto	u4071
  4810  0252  2A54               	goto	u4070
  4811  0253                     u4071:
  4812  0253  2A2A               	goto	l3022
  4813  0254                     u4070:
  4814  0254  2A55               	goto	l3028
  4815                           	
  4816  0255                     l804:	
  4817                           	line	414
  4818                           	
  4819  0255                     l3028:	
  4820                           ;lcd1.c: 414: *ptr='\0';
  4821  0255  087B               	movf	(itoaa@ptr),w
  4822  0256  0084               	movwf	fsr0
  4823  0257  1383               	bcf	status, 7	;select IRP bank0
  4824  0258  0180               	clrf	indf
  4825                           	line	415
  4826                           	
  4827  0259                     l3030:	
  4828                           ;lcd1.c: 415: for(temp=value;temp>0;temp/=10)
  4829  0259  087A               	movf	(itoaa@value+1),w
  4830  025A  1283               	bcf	status, 5	;RP0=0, select bank0
  4831  025B  1303               	bcf	status, 6	;RP1=0, select bank0
  4832  025C  01A3               	clrf	(itoaa@temp+1)
  4833  025D  07A3               	addwf	(itoaa@temp+1)
  4834  025E  0879               	movf	(itoaa@value),w
  4835  025F  01A2               	clrf	(itoaa@temp)
  4836  0260  07A2               	addwf	(itoaa@temp)
  4837                           
  4838                           	
  4839  0261                     l3032:	
  4840  0261  0823               	movf	(itoaa@temp+1),w
  4841  0262  3A80               	xorlw	80h
  4842  0263  00FF               	movwf	btemp+1
  4843  0264  3080               	movlw	(high(01h))^80h
  4844  0265  027F               	subwf	btemp+1,w
  4845  0266  1D03               	skipz
  4846  0267  2A6A               	goto	u4085
  4847  0268  3001               	movlw	low(01h)
  4848  0269  0222               	subwf	(itoaa@temp),w
  4849  026A                     u4085:
  4850                           
  4851  026A  1803               	skipnc
  4852  026B  2A6D               	goto	u4081
  4853  026C  2A6E               	goto	u4080
  4854  026D                     u4081:
  4855  026D  2A70               	goto	l3036
  4856  026E                     u4080:
  4857  026E  2AB8               	goto	l800
  4858                           	
  4859  026F                     l3034:	
  4860  026F  2AB8               	goto	l800
  4861                           	line	416
  4862                           	
  4863  0270                     l805:	
  4864                           	line	417
  4865                           	
  4866  0270                     l3036:	
  4867                           ;lcd1.c: 416: {
  4868                           ;lcd1.c: 417: *--ptr=temp%10+'0';
  4869  0270  300A               	movlw	low(0Ah)
  4870  0271  00F0               	movwf	(?___awmod)
  4871  0272  3000               	movlw	high(0Ah)
  4872  0273  00F1               	movwf	((?___awmod))+1
  4873  0274  1283               	bcf	status, 5	;RP0=0, select bank0
  4874  0275  1303               	bcf	status, 6	;RP1=0, select bank0
  4875  0276  0823               	movf	(itoaa@temp+1),w
  4876  0277  01F3               	clrf	1+(?___awmod)+02h
  4877  0278  07F3               	addwf	1+(?___awmod)+02h
  4878  0279  0822               	movf	(itoaa@temp),w
  4879  027A  01F2               	clrf	0+(?___awmod)+02h
  4880  027B  07F2               	addwf	0+(?___awmod)+02h
  4881                           
  4882  027C  120A  158A  25C9   	fcall	___awmod
              120A  118A         
  4883  0281  0870               	movf	(0+(?___awmod)),w
  4884  0282  3E30               	addlw	030h
  4885  0283  00FC               	movwf	(??_itoaa+0)+0
  4886  0284  3001               	movlw	low(01h)
  4887  0285  02FB               	subwf	(itoaa@ptr),f
  4888  0286  087B               	movf	((itoaa@ptr)),w
  4889  0287  0084               	movwf	fsr0
  4890  0288  087C               	movf	(??_itoaa+0)+0,w
  4891  0289  1383               	bcf	status, 7	;select IRP bank0
  4892  028A  0080               	movwf	indf
  4893                           	line	418
  4894                           	
  4895  028B                     l3038:	
  4896                           ;lcd1.c: 418: count++;
  4897  028B  3001               	movlw	low(01h)
  4898  028C  1283               	bcf	status, 5	;RP0=0, select bank0
  4899  028D  1303               	bcf	status, 6	;RP1=0, select bank0
  4900  028E  07A0               	addwf	(itoaa@count),f
  4901  028F  1803               	skipnc
  4902  0290  0AA1               	incf	(itoaa@count+1),f
  4903  0291  3000               	movlw	high(01h)
  4904  0292  07A1               	addwf	(itoaa@count+1),f
  4905                           	line	415
  4906                           	
  4907  0293                     l3040:	
  4908  0293  300A               	movlw	low(0Ah)
  4909  0294  00F0               	movwf	(?___awdiv)
  4910  0295  3000               	movlw	high(0Ah)
  4911  0296  00F1               	movwf	((?___awdiv))+1
  4912  0297  0823               	movf	(itoaa@temp+1),w
  4913  0298  01F3               	clrf	1+(?___awdiv)+02h
  4914  0299  07F3               	addwf	1+(?___awdiv)+02h
  4915  029A  0822               	movf	(itoaa@temp),w
  4916  029B  01F2               	clrf	0+(?___awdiv)+02h
  4917  029C  07F2               	addwf	0+(?___awdiv)+02h
  4918                           
  4919  029D  120A  158A  262F   	fcall	___awdiv
              120A  118A         
  4920  02A2  0871               	movf	(1+(?___awdiv)),w
  4921  02A3  1283               	bcf	status, 5	;RP0=0, select bank0
  4922  02A4  1303               	bcf	status, 6	;RP1=0, select bank0
  4923  02A5  01A3               	clrf	(itoaa@temp+1)
  4924  02A6  07A3               	addwf	(itoaa@temp+1)
  4925  02A7  0870               	movf	(0+(?___awdiv)),w
  4926  02A8  01A2               	clrf	(itoaa@temp)
  4927  02A9  07A2               	addwf	(itoaa@temp)
  4928                           
  4929                           	
  4930  02AA                     l3042:	
  4931  02AA  0823               	movf	(itoaa@temp+1),w
  4932  02AB  3A80               	xorlw	80h
  4933  02AC  00FF               	movwf	btemp+1
  4934  02AD  3080               	movlw	(high(01h))^80h
  4935  02AE  027F               	subwf	btemp+1,w
  4936  02AF  1D03               	skipz
  4937  02B0  2AB3               	goto	u4095
  4938  02B1  3001               	movlw	low(01h)
  4939  02B2  0222               	subwf	(itoaa@temp),w
  4940  02B3                     u4095:
  4941                           
  4942  02B3  1803               	skipnc
  4943  02B4  2AB6               	goto	u4091
  4944  02B5  2AB7               	goto	u4090
  4945  02B6                     u4091:
  4946  02B6  2A70               	goto	l3036
  4947  02B7                     u4090:
  4948  02B7  2AB8               	goto	l800
  4949                           	
  4950  02B8                     l806:	
  4951                           	line	421
  4952                           ;lcd1.c: 419: }
  4953                           ;lcd1.c: 420: return count;
  4954                           ;	Return value of _itoaa is never used
  4955                           	
  4956  02B8                     l800:	
  4957  02B8  0008               	return
  4958                           	opt stack 0
  4959                           GLOBAL	__end_of_itoaa
  4960  02B9                     	__end_of_itoaa:
  4961 ;; =============== function _itoaa ends ============
  4962                           
  4963                           	signat	_itoaa,8314
  4964                           	global	_startswitch
  4965                           psect	text500,local,class=CODE,delta=2
  4966                           global __ptext500
  4967  0EA3                     __ptext500:
  4968                           
  4969 ;; *************** function _startswitch *****************
  4970 ;; Defined at:
  4971 ;;		line 116 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;		None
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  dev             2    9[COMMON] int 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;		None               void
  4978 ;; Registers used:
  4979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4985 ;;      Params:         0       0       0       0       0
  4986 ;;      Locals:         2       0       0       0       0
  4987 ;;      Temps:          1       0       0       0       0
  4988 ;;      Totals:         3       0       0       0       0
  4989 ;;Total ram usage:        3 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    2
  4992 ;; This function calls:
  4993 ;;		_strcmp
  4994 ;; This function is called by:
  4995 ;;		_getlogicseq
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           psect	text500
  4999                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  5000                           	line	116
  5001                           	global	__size_of_startswitch
  5002  008F                     	__size_of_startswitch	equ	__end_of_startswitch-_startswitch
  5003                           	
  5004  0EA3                     _startswitch:	
  5005                           	opt	stack 4
  5006                           ; Regs used in _startswitch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5007                           	line	118
  5008                           	
  5009  0EA3                     l2958:	
  5010                           ;lcd1.c: 118: TRISA=0b110000;
  5011  0EA3  3030               	movlw	(030h)
  5012  0EA4  1683               	bsf	status, 5	;RP0=1, select bank1
  5013  0EA5  1303               	bcf	status, 6	;RP1=0, select bank1
  5014  0EA6  0085               	movwf	(133)^080h	;volatile
  5015                           	line	119
  5016                           	
  5017  0EA7                     l2960:	
  5018                           ;lcd1.c: 119: PORTA=0x0;
  5019  0EA7  1283               	bcf	status, 5	;RP0=0, select bank0
  5020  0EA8  1303               	bcf	status, 6	;RP1=0, select bank0
  5021  0EA9  0185               	clrf	(5)	;volatile
  5022                           	line	123
  5023                           	
  5024  0EAA                     l2962:	
  5025                           ;lcd1.c: 123: if(RC4==1)
  5026  0EAA  1E07               	btfss	(60/8),(60)&7
  5027  0EAB  2EAD               	goto	u3951
  5028  0EAC  2EAE               	goto	u3950
  5029  0EAD                     u3951:
  5030  0EAD  2EB3               	goto	l2966
  5031  0EAE                     u3950:
  5032                           	line	124
  5033                           	
  5034  0EAE                     l2964:	
  5035                           ;lcd1.c: 124: lo[0]='1';
  5036  0EAE  3031               	movlw	(031h)
  5037  0EAF  00F8               	movwf	(??_startswitch+0)+0
  5038  0EB0  0878               	movf	(??_startswitch+0)+0,w
  5039  0EB1  00E0               	movwf	(_lo)
  5040  0EB2  2EB3               	goto	l2966
  5041                           	
  5042  0EB3                     l683:	
  5043                           	line	125
  5044                           	
  5045  0EB3                     l2966:	
  5046                           ;lcd1.c: 125: if(RC5==1)
  5047  0EB3  1E87               	btfss	(61/8),(61)&7
  5048  0EB4  2EB6               	goto	u3961
  5049  0EB5  2EB7               	goto	u3960
  5050  0EB6                     u3961:
  5051  0EB6  2EBC               	goto	l2970
  5052  0EB7                     u3960:
  5053                           	line	126
  5054                           	
  5055  0EB7                     l2968:	
  5056                           ;lcd1.c: 126: lo[1]='1';
  5057  0EB7  3031               	movlw	(031h)
  5058  0EB8  00F8               	movwf	(??_startswitch+0)+0
  5059  0EB9  0878               	movf	(??_startswitch+0)+0,w
  5060  0EBA  00E1               	movwf	0+(_lo)+01h
  5061  0EBB  2EBC               	goto	l2970
  5062                           	
  5063  0EBC                     l684:	
  5064                           	line	127
  5065                           	
  5066  0EBC                     l2970:	
  5067                           ;lcd1.c: 127: if(RA5==1)
  5068  0EBC  1E85               	btfss	(45/8),(45)&7
  5069  0EBD  2EBF               	goto	u3971
  5070  0EBE  2EC0               	goto	u3970
  5071  0EBF                     u3971:
  5072  0EBF  2EC5               	goto	l2974
  5073  0EC0                     u3970:
  5074                           	line	128
  5075                           	
  5076  0EC0                     l2972:	
  5077                           ;lcd1.c: 128: lo[2]='1';
  5078  0EC0  3031               	movlw	(031h)
  5079  0EC1  00F8               	movwf	(??_startswitch+0)+0
  5080  0EC2  0878               	movf	(??_startswitch+0)+0,w
  5081  0EC3  00E2               	movwf	0+(_lo)+02h
  5082  0EC4  2EC5               	goto	l2974
  5083                           	
  5084  0EC5                     l685:	
  5085                           	line	129
  5086                           	
  5087  0EC5                     l2974:	
  5088                           ;lcd1.c: 129: if(RC7==1)
  5089  0EC5  1F87               	btfss	(63/8),(63)&7
  5090  0EC6  2EC8               	goto	u3981
  5091  0EC7  2EC9               	goto	u3980
  5092  0EC8                     u3981:
  5093  0EC8  2ECE               	goto	l2978
  5094  0EC9                     u3980:
  5095                           	line	130
  5096                           	
  5097  0EC9                     l2976:	
  5098                           ;lcd1.c: 130: lo[4]='1';
  5099  0EC9  3031               	movlw	(031h)
  5100  0ECA  00F8               	movwf	(??_startswitch+0)+0
  5101  0ECB  0878               	movf	(??_startswitch+0)+0,w
  5102  0ECC  00E4               	movwf	0+(_lo)+04h
  5103  0ECD  2ECE               	goto	l2978
  5104                           	
  5105  0ECE                     l686:	
  5106                           	line	132
  5107                           	
  5108  0ECE                     l2978:	
  5109                           ;lcd1.c: 132: int dev=0b0000;
  5110  0ECE  01F9               	clrf	(startswitch@dev)
  5111  0ECF  01FA               	clrf	(startswitch@dev+1)
  5112                           	line	133
  5113                           	
  5114  0ED0                     l2980:	
  5115                           ;lcd1.c: 133: if(strcmp(lo,logic_d1)==0)
  5116  0ED0  30DA               	movlw	(_logic_d1&0ffh)
  5117  0ED1  00F0               	movwf	(?_strcmp)
  5118  0ED2  3000               	movlw	(0x1/2)
  5119  0ED3  00F1               	movwf	(?_strcmp+1)
  5120  0ED4  3060               	movlw	(_lo)&0ffh
  5121  0ED5  120A  158A  24EE   	fcall	_strcmp
              120A  158A         
  5122  0EDA  0871               	movf	((1+(?_strcmp))),w
  5123  0EDB  0470               	iorwf	((0+(?_strcmp))),w
  5124  0EDC  1D03               	skipz
  5125  0EDD  2EDF               	goto	u3991
  5126  0EDE  2EE0               	goto	u3990
  5127  0EDF                     u3991:
  5128  0EDF  2EE7               	goto	l2984
  5129  0EE0                     u3990:
  5130                           	line	134
  5131                           	
  5132  0EE0                     l2982:	
  5133                           ;lcd1.c: 134: dev=dev|0b0001;
  5134  0EE0  3001               	movlw	low(01h)
  5135  0EE1  0479               	iorwf	(startswitch@dev),w
  5136  0EE2  00F9               	movwf	(startswitch@dev)
  5137  0EE3  3000               	movlw	high(01h)
  5138  0EE4  047A               	iorwf	(startswitch@dev+1),w
  5139  0EE5  00FA               	movwf	1+(startswitch@dev)
  5140  0EE6  2EE7               	goto	l2984
  5141                           	
  5142  0EE7                     l687:	
  5143                           	line	136
  5144                           	
  5145  0EE7                     l2984:	
  5146                           ;lcd1.c: 136: if(strcmp(lo,logic_d2)==0)
  5147  0EE7  30DF               	movlw	(_logic_d2&0ffh)
  5148  0EE8  00F0               	movwf	(?_strcmp)
  5149  0EE9  3000               	movlw	(0x1/2)
  5150  0EEA  00F1               	movwf	(?_strcmp+1)
  5151  0EEB  3060               	movlw	(_lo)&0ffh
  5152  0EEC  120A  158A  24EE   	fcall	_strcmp
              120A  158A         
  5153  0EF1  0871               	movf	((1+(?_strcmp))),w
  5154  0EF2  0470               	iorwf	((0+(?_strcmp))),w
  5155  0EF3  1D03               	skipz
  5156  0EF4  2EF6               	goto	u4001
  5157  0EF5  2EF7               	goto	u4000
  5158  0EF6                     u4001:
  5159  0EF6  2EFE               	goto	l2988
  5160  0EF7                     u4000:
  5161                           	line	137
  5162                           	
  5163  0EF7                     l2986:	
  5164                           ;lcd1.c: 137: dev=dev|0b0010;
  5165  0EF7  3002               	movlw	low(02h)
  5166  0EF8  0479               	iorwf	(startswitch@dev),w
  5167  0EF9  00F9               	movwf	(startswitch@dev)
  5168  0EFA  3000               	movlw	high(02h)
  5169  0EFB  047A               	iorwf	(startswitch@dev+1),w
  5170  0EFC  00FA               	movwf	1+(startswitch@dev)
  5171  0EFD  2EFE               	goto	l2988
  5172                           	
  5173  0EFE                     l688:	
  5174                           	line	139
  5175                           	
  5176  0EFE                     l2988:	
  5177                           ;lcd1.c: 139: if(strcmp(lo,logic_d3)==0)
  5178  0EFE  30E4               	movlw	(_logic_d3&0ffh)
  5179  0EFF  00F0               	movwf	(?_strcmp)
  5180  0F00  3000               	movlw	(0x1/2)
  5181  0F01  00F1               	movwf	(?_strcmp+1)
  5182  0F02  3060               	movlw	(_lo)&0ffh
  5183  0F03  120A  158A  24EE   	fcall	_strcmp
              120A  158A         
  5184  0F08  0871               	movf	((1+(?_strcmp))),w
  5185  0F09  0470               	iorwf	((0+(?_strcmp))),w
  5186  0F0A  1D03               	skipz
  5187  0F0B  2F0D               	goto	u4011
  5188  0F0C  2F0E               	goto	u4010
  5189  0F0D                     u4011:
  5190  0F0D  2F15               	goto	l2992
  5191  0F0E                     u4010:
  5192                           	line	140
  5193                           	
  5194  0F0E                     l2990:	
  5195                           ;lcd1.c: 140: dev=dev|0b0100;
  5196  0F0E  3004               	movlw	low(04h)
  5197  0F0F  0479               	iorwf	(startswitch@dev),w
  5198  0F10  00F9               	movwf	(startswitch@dev)
  5199  0F11  3000               	movlw	high(04h)
  5200  0F12  047A               	iorwf	(startswitch@dev+1),w
  5201  0F13  00FA               	movwf	1+(startswitch@dev)
  5202  0F14  2F15               	goto	l2992
  5203                           	
  5204  0F15                     l689:	
  5205                           	line	142
  5206                           	
  5207  0F15                     l2992:	
  5208                           ;lcd1.c: 142: if(strcmp(lo,logic_d4)==0)
  5209  0F15  30E9               	movlw	(_logic_d4&0ffh)
  5210  0F16  00F0               	movwf	(?_strcmp)
  5211  0F17  3000               	movlw	(0x1/2)
  5212  0F18  00F1               	movwf	(?_strcmp+1)
  5213  0F19  3060               	movlw	(_lo)&0ffh
  5214  0F1A  120A  158A  24EE   	fcall	_strcmp
              120A  158A         
  5215  0F1F  0871               	movf	((1+(?_strcmp))),w
  5216  0F20  0470               	iorwf	((0+(?_strcmp))),w
  5217  0F21  1D03               	skipz
  5218  0F22  2F24               	goto	u4021
  5219  0F23  2F25               	goto	u4020
  5220  0F24                     u4021:
  5221  0F24  2F2B               	goto	l690
  5222  0F25                     u4020:
  5223                           	line	143
  5224                           	
  5225  0F25                     l2994:	
  5226                           ;lcd1.c: 143: dev=dev|0b1000;
  5227  0F25  3008               	movlw	low(08h)
  5228  0F26  0479               	iorwf	(startswitch@dev),w
  5229  0F27  00F9               	movwf	(startswitch@dev)
  5230  0F28  3000               	movlw	high(08h)
  5231  0F29  047A               	iorwf	(startswitch@dev+1),w
  5232  0F2A  00FA               	movwf	1+(startswitch@dev)
  5233                           	
  5234  0F2B                     l690:	
  5235                           	line	145
  5236                           ;lcd1.c: 145: PORTA=dev;
  5237  0F2B  0879               	movf	(startswitch@dev),w
  5238  0F2C  1283               	bcf	status, 5	;RP0=0, select bank0
  5239  0F2D  1303               	bcf	status, 6	;RP1=0, select bank0
  5240  0F2E  0085               	movwf	(5)	;volatile
  5241  0F2F  2F30               	goto	l692
  5242                           	line	147
  5243                           ;lcd1.c: 147: while(1);
  5244                           	
  5245  0F30                     l691:	
  5246                           	
  5247  0F30                     l692:	
  5248  0F30  2F30               	goto	l692
  5249                           	
  5250  0F31                     l693:	
  5251                           	line	150
  5252                           	
  5253  0F31                     l694:	
  5254  0F31  0008               	return
  5255                           	opt stack 0
  5256                           GLOBAL	__end_of_startswitch
  5257  0F32                     	__end_of_startswitch:
  5258 ;; =============== function _startswitch ends ============
  5259                           
  5260                           	signat	_startswitch,88
  5261                           	global	___awmod
  5262                           psect	text501,local,class=CODE,delta=2
  5263                           global __ptext501
  5264  0DC9                     __ptext501:
  5265                           
  5266 ;; *************** function ___awmod *****************
  5267 ;; Defined at:
  5268 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  divisor         2    0[COMMON] int 
  5271 ;;  dividend        2    2[COMMON] int 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;  sign            1    6[COMMON] unsigned char 
  5274 ;;  counter         1    5[COMMON] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  2    0[COMMON] int 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5284 ;;      Params:         4       0       0       0       0
  5285 ;;      Locals:         2       0       0       0       0
  5286 ;;      Temps:          1       0       0       0       0
  5287 ;;      Totals:         7       0       0       0       0
  5288 ;;Total ram usage:        7 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_itoaa
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           psect	text501
  5297                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  5298                           	line	5
  5299                           	global	__size_of___awmod
  5300  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  5301                           	
  5302  0DC9                     ___awmod:	
  5303                           	opt	stack 5
  5304                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5305                           	line	8
  5306                           	
  5307  0DC9                     l2924:	
  5308  0DC9  01F6               	clrf	(___awmod@sign)
  5309                           	line	9
  5310  0DCA  1FF3               	btfss	(___awmod@dividend+1),7
  5311  0DCB  2DCD               	goto	u3861
  5312  0DCC  2DCE               	goto	u3860
  5313  0DCD                     u3861:
  5314  0DCD  2DD7               	goto	l2928
  5315  0DCE                     u3860:
  5316                           	line	10
  5317                           	
  5318  0DCE                     l2926:	
  5319  0DCE  09F2               	comf	(___awmod@dividend),f
  5320  0DCF  09F3               	comf	(___awmod@dividend+1),f
  5321  0DD0  0AF2               	incf	(___awmod@dividend),f
  5322  0DD1  1903               	skipnz
  5323  0DD2  0AF3               	incf	(___awmod@dividend+1),f
  5324                           	line	11
  5325  0DD3  01F6               	clrf	(___awmod@sign)
  5326  0DD4  1403               	bsf	status,0
  5327  0DD5  0DF6               	rlf	(___awmod@sign),f
  5328  0DD6  2DD7               	goto	l2928
  5329                           	line	12
  5330                           	
  5331  0DD7                     l1136:	
  5332                           	line	13
  5333                           	
  5334  0DD7                     l2928:	
  5335  0DD7  1FF1               	btfss	(___awmod@divisor+1),7
  5336  0DD8  2DDA               	goto	u3871
  5337  0DD9  2DDB               	goto	u3870
  5338  0DDA                     u3871:
  5339  0DDA  2DE1               	goto	l2932
  5340  0DDB                     u3870:
  5341                           	line	14
  5342                           	
  5343  0DDB                     l2930:	
  5344  0DDB  09F0               	comf	(___awmod@divisor),f
  5345  0DDC  09F1               	comf	(___awmod@divisor+1),f
  5346  0DDD  0AF0               	incf	(___awmod@divisor),f
  5347  0DDE  1903               	skipnz
  5348  0DDF  0AF1               	incf	(___awmod@divisor+1),f
  5349  0DE0  2DE1               	goto	l2932
  5350                           	
  5351  0DE1                     l1137:	
  5352                           	line	15
  5353                           	
  5354  0DE1                     l2932:	
  5355  0DE1  0871               	movf	(___awmod@divisor+1),w
  5356  0DE2  0470               	iorwf	(___awmod@divisor),w
  5357  0DE3  1903               	skipnz
  5358  0DE4  2DE6               	goto	u3881
  5359  0DE5  2DE7               	goto	u3880
  5360  0DE6                     u3881:
  5361  0DE6  2E1D               	goto	l2950
  5362  0DE7                     u3880:
  5363                           	line	16
  5364                           	
  5365  0DE7                     l2934:	
  5366  0DE7  01F5               	clrf	(___awmod@counter)
  5367  0DE8  1403               	bsf	status,0
  5368  0DE9  0DF5               	rlf	(___awmod@counter),f
  5369                           	line	17
  5370  0DEA  2DF7               	goto	l2940
  5371                           	
  5372  0DEB                     l1140:	
  5373                           	line	18
  5374                           	
  5375  0DEB                     l2936:	
  5376  0DEB  3001               	movlw	01h
  5377                           	
  5378  0DEC                     u3895:
  5379  0DEC  1003               	clrc
  5380  0DED  0DF0               	rlf	(___awmod@divisor),f
  5381  0DEE  0DF1               	rlf	(___awmod@divisor+1),f
  5382  0DEF  3EFF               	addlw	-1
  5383  0DF0  1D03               	skipz
  5384  0DF1  2DEC               	goto	u3895
  5385                           	line	19
  5386                           	
  5387  0DF2                     l2938:	
  5388  0DF2  3001               	movlw	(01h)
  5389  0DF3  00F4               	movwf	(??___awmod+0)+0
  5390  0DF4  0874               	movf	(??___awmod+0)+0,w
  5391  0DF5  07F5               	addwf	(___awmod@counter),f
  5392  0DF6  2DF7               	goto	l2940
  5393                           	line	20
  5394                           	
  5395  0DF7                     l1139:	
  5396                           	line	17
  5397                           	
  5398  0DF7                     l2940:	
  5399  0DF7  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  5400  0DF8  2DFA               	goto	u3901
  5401  0DF9  2DFB               	goto	u3900
  5402  0DFA                     u3901:
  5403  0DFA  2DEB               	goto	l2936
  5404  0DFB                     u3900:
  5405  0DFB  2DFD               	goto	l2942
  5406                           	
  5407  0DFC                     l1141:	
  5408  0DFC  2DFD               	goto	l2942
  5409                           	line	21
  5410                           	
  5411  0DFD                     l1142:	
  5412                           	line	22
  5413                           	
  5414  0DFD                     l2942:	
  5415  0DFD  0871               	movf	(___awmod@divisor+1),w
  5416  0DFE  0273               	subwf	(___awmod@dividend+1),w
  5417  0DFF  1D03               	skipz
  5418  0E00  2E03               	goto	u3915
  5419  0E01  0870               	movf	(___awmod@divisor),w
  5420  0E02  0272               	subwf	(___awmod@dividend),w
  5421  0E03                     u3915:
  5422  0E03  1C03               	skipc
  5423  0E04  2E06               	goto	u3911
  5424  0E05  2E07               	goto	u3910
  5425  0E06                     u3911:
  5426  0E06  2E0E               	goto	l2946
  5427  0E07                     u3910:
  5428                           	line	23
  5429                           	
  5430  0E07                     l2944:	
  5431  0E07  0870               	movf	(___awmod@divisor),w
  5432  0E08  02F2               	subwf	(___awmod@dividend),f
  5433  0E09  0871               	movf	(___awmod@divisor+1),w
  5434  0E0A  1C03               	skipc
  5435  0E0B  03F3               	decf	(___awmod@dividend+1),f
  5436  0E0C  02F3               	subwf	(___awmod@dividend+1),f
  5437  0E0D  2E0E               	goto	l2946
  5438                           	
  5439  0E0E                     l1143:	
  5440                           	line	24
  5441                           	
  5442  0E0E                     l2946:	
  5443  0E0E  3001               	movlw	01h
  5444                           	
  5445  0E0F                     u3925:
  5446  0E0F  1003               	clrc
  5447  0E10  0CF1               	rrf	(___awmod@divisor+1),f
  5448  0E11  0CF0               	rrf	(___awmod@divisor),f
  5449  0E12  3EFF               	addlw	-1
  5450  0E13  1D03               	skipz
  5451  0E14  2E0F               	goto	u3925
  5452                           	line	25
  5453                           	
  5454  0E15                     l2948:	
  5455  0E15  3001               	movlw	low(01h)
  5456  0E16  02F5               	subwf	(___awmod@counter),f
  5457  0E17  1D03               	btfss	status,2
  5458  0E18  2E1A               	goto	u3931
  5459  0E19  2E1B               	goto	u3930
  5460  0E1A                     u3931:
  5461  0E1A  2DFD               	goto	l2942
  5462  0E1B                     u3930:
  5463  0E1B  2E1D               	goto	l2950
  5464                           	
  5465  0E1C                     l1144:	
  5466  0E1C  2E1D               	goto	l2950
  5467                           	line	26
  5468                           	
  5469  0E1D                     l1138:	
  5470                           	line	27
  5471                           	
  5472  0E1D                     l2950:	
  5473  0E1D  0876               	movf	(___awmod@sign),w
  5474  0E1E  1D03               	skipz
  5475  0E1F  2E21               	goto	u3940
  5476  0E20  2E27               	goto	l2954
  5477  0E21                     u3940:
  5478                           	line	28
  5479                           	
  5480  0E21                     l2952:	
  5481  0E21  09F2               	comf	(___awmod@dividend),f
  5482  0E22  09F3               	comf	(___awmod@dividend+1),f
  5483  0E23  0AF2               	incf	(___awmod@dividend),f
  5484  0E24  1903               	skipnz
  5485  0E25  0AF3               	incf	(___awmod@dividend+1),f
  5486  0E26  2E27               	goto	l2954
  5487                           	
  5488  0E27                     l1145:	
  5489                           	line	29
  5490                           	
  5491  0E27                     l2954:	
  5492  0E27  0873               	movf	(___awmod@dividend+1),w
  5493  0E28  01F1               	clrf	(?___awmod+1)
  5494  0E29  07F1               	addwf	(?___awmod+1)
  5495  0E2A  0872               	movf	(___awmod@dividend),w
  5496  0E2B  01F0               	clrf	(?___awmod)
  5497  0E2C  07F0               	addwf	(?___awmod)
  5498                           
  5499  0E2D  2E2E               	goto	l1146
  5500                           	
  5501  0E2E                     l2956:	
  5502                           	line	30
  5503                           	
  5504  0E2E                     l1146:	
  5505  0E2E  0008               	return
  5506                           	opt stack 0
  5507                           GLOBAL	__end_of___awmod
  5508  0E2F                     	__end_of___awmod:
  5509 ;; =============== function ___awmod ends ============
  5510                           
  5511                           	signat	___awmod,8314
  5512                           	global	___awdiv
  5513                           psect	text502,local,class=CODE,delta=2
  5514                           global __ptext502
  5515  0E2F                     __ptext502:
  5516                           
  5517 ;; *************** function ___awdiv *****************
  5518 ;; Defined at:
  5519 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  divisor         2    0[COMMON] int 
  5522 ;;  dividend        2    2[COMMON] int 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  quotient        2    7[COMMON] int 
  5525 ;;  sign            1    6[COMMON] unsigned char 
  5526 ;;  counter         1    5[COMMON] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  2    0[COMMON] int 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2, status,0
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5536 ;;      Params:         4       0       0       0       0
  5537 ;;      Locals:         4       0       0       0       0
  5538 ;;      Temps:          1       0       0       0       0
  5539 ;;      Totals:         9       0       0       0       0
  5540 ;;Total ram usage:        9 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_itoaa
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           psect	text502
  5549                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  5550                           	line	5
  5551                           	global	__size_of___awdiv
  5552  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5553                           	
  5554  0E2F                     ___awdiv:	
  5555                           	opt	stack 5
  5556                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5557                           	line	9
  5558                           	
  5559  0E2F                     l2884:	
  5560  0E2F  01F6               	clrf	(___awdiv@sign)
  5561                           	line	10
  5562  0E30  1FF1               	btfss	(___awdiv@divisor+1),7
  5563  0E31  2E33               	goto	u3761
  5564  0E32  2E34               	goto	u3760
  5565  0E33                     u3761:
  5566  0E33  2E3D               	goto	l2888
  5567  0E34                     u3760:
  5568                           	line	11
  5569                           	
  5570  0E34                     l2886:	
  5571  0E34  09F0               	comf	(___awdiv@divisor),f
  5572  0E35  09F1               	comf	(___awdiv@divisor+1),f
  5573  0E36  0AF0               	incf	(___awdiv@divisor),f
  5574  0E37  1903               	skipnz
  5575  0E38  0AF1               	incf	(___awdiv@divisor+1),f
  5576                           	line	12
  5577  0E39  01F6               	clrf	(___awdiv@sign)
  5578  0E3A  1403               	bsf	status,0
  5579  0E3B  0DF6               	rlf	(___awdiv@sign),f
  5580  0E3C  2E3D               	goto	l2888
  5581                           	line	13
  5582                           	
  5583  0E3D                     l1068:	
  5584                           	line	14
  5585                           	
  5586  0E3D                     l2888:	
  5587  0E3D  1FF3               	btfss	(___awdiv@dividend+1),7
  5588  0E3E  2E40               	goto	u3771
  5589  0E3F  2E41               	goto	u3770
  5590  0E40                     u3771:
  5591  0E40  2E4B               	goto	l2894
  5592  0E41                     u3770:
  5593                           	line	15
  5594                           	
  5595  0E41                     l2890:	
  5596  0E41  09F2               	comf	(___awdiv@dividend),f
  5597  0E42  09F3               	comf	(___awdiv@dividend+1),f
  5598  0E43  0AF2               	incf	(___awdiv@dividend),f
  5599  0E44  1903               	skipnz
  5600  0E45  0AF3               	incf	(___awdiv@dividend+1),f
  5601                           	line	16
  5602                           	
  5603  0E46                     l2892:	
  5604  0E46  3001               	movlw	(01h)
  5605  0E47  00F4               	movwf	(??___awdiv+0)+0
  5606  0E48  0874               	movf	(??___awdiv+0)+0,w
  5607  0E49  06F6               	xorwf	(___awdiv@sign),f
  5608  0E4A  2E4B               	goto	l2894
  5609                           	line	17
  5610                           	
  5611  0E4B                     l1069:	
  5612                           	line	18
  5613                           	
  5614  0E4B                     l2894:	
  5615  0E4B  01F7               	clrf	(___awdiv@quotient)
  5616  0E4C  01F8               	clrf	(___awdiv@quotient+1)
  5617                           	line	19
  5618                           	
  5619  0E4D                     l2896:	
  5620  0E4D  0871               	movf	(___awdiv@divisor+1),w
  5621  0E4E  0470               	iorwf	(___awdiv@divisor),w
  5622  0E4F  1903               	skipnz
  5623  0E50  2E52               	goto	u3781
  5624  0E51  2E53               	goto	u3780
  5625  0E52                     u3781:
  5626  0E52  2E91               	goto	l2916
  5627  0E53                     u3780:
  5628                           	line	20
  5629                           	
  5630  0E53                     l2898:	
  5631  0E53  01F5               	clrf	(___awdiv@counter)
  5632  0E54  1403               	bsf	status,0
  5633  0E55  0DF5               	rlf	(___awdiv@counter),f
  5634                           	line	21
  5635  0E56  2E63               	goto	l2904
  5636                           	
  5637  0E57                     l1072:	
  5638                           	line	22
  5639                           	
  5640  0E57                     l2900:	
  5641  0E57  3001               	movlw	01h
  5642                           	
  5643  0E58                     u3795:
  5644  0E58  1003               	clrc
  5645  0E59  0DF0               	rlf	(___awdiv@divisor),f
  5646  0E5A  0DF1               	rlf	(___awdiv@divisor+1),f
  5647  0E5B  3EFF               	addlw	-1
  5648  0E5C  1D03               	skipz
  5649  0E5D  2E58               	goto	u3795
  5650                           	line	23
  5651                           	
  5652  0E5E                     l2902:	
  5653  0E5E  3001               	movlw	(01h)
  5654  0E5F  00F4               	movwf	(??___awdiv+0)+0
  5655  0E60  0874               	movf	(??___awdiv+0)+0,w
  5656  0E61  07F5               	addwf	(___awdiv@counter),f
  5657  0E62  2E63               	goto	l2904
  5658                           	line	24
  5659                           	
  5660  0E63                     l1071:	
  5661                           	line	21
  5662                           	
  5663  0E63                     l2904:	
  5664  0E63  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  5665  0E64  2E66               	goto	u3801
  5666  0E65  2E67               	goto	u3800
  5667  0E66                     u3801:
  5668  0E66  2E57               	goto	l2900
  5669  0E67                     u3800:
  5670  0E67  2E69               	goto	l2906
  5671                           	
  5672  0E68                     l1073:	
  5673  0E68  2E69               	goto	l2906
  5674                           	line	25
  5675                           	
  5676  0E69                     l1074:	
  5677                           	line	26
  5678                           	
  5679  0E69                     l2906:	
  5680  0E69  3001               	movlw	01h
  5681                           	
  5682  0E6A                     u3815:
  5683  0E6A  1003               	clrc
  5684  0E6B  0DF7               	rlf	(___awdiv@quotient),f
  5685  0E6C  0DF8               	rlf	(___awdiv@quotient+1),f
  5686  0E6D  3EFF               	addlw	-1
  5687  0E6E  1D03               	skipz
  5688  0E6F  2E6A               	goto	u3815
  5689                           	line	27
  5690  0E70  0871               	movf	(___awdiv@divisor+1),w
  5691  0E71  0273               	subwf	(___awdiv@dividend+1),w
  5692  0E72  1D03               	skipz
  5693  0E73  2E76               	goto	u3825
  5694  0E74  0870               	movf	(___awdiv@divisor),w
  5695  0E75  0272               	subwf	(___awdiv@dividend),w
  5696  0E76                     u3825:
  5697  0E76  1C03               	skipc
  5698  0E77  2E79               	goto	u3821
  5699  0E78  2E7A               	goto	u3820
  5700  0E79                     u3821:
  5701  0E79  2E82               	goto	l2912
  5702  0E7A                     u3820:
  5703                           	line	28
  5704                           	
  5705  0E7A                     l2908:	
  5706  0E7A  0870               	movf	(___awdiv@divisor),w
  5707  0E7B  02F2               	subwf	(___awdiv@dividend),f
  5708  0E7C  0871               	movf	(___awdiv@divisor+1),w
  5709  0E7D  1C03               	skipc
  5710  0E7E  03F3               	decf	(___awdiv@dividend+1),f
  5711  0E7F  02F3               	subwf	(___awdiv@dividend+1),f
  5712                           	line	29
  5713                           	
  5714  0E80                     l2910:	
  5715  0E80  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5716  0E81  2E82               	goto	l2912
  5717                           	line	30
  5718                           	
  5719  0E82                     l1075:	
  5720                           	line	31
  5721                           	
  5722  0E82                     l2912:	
  5723  0E82  3001               	movlw	01h
  5724                           	
  5725  0E83                     u3835:
  5726  0E83  1003               	clrc
  5727  0E84  0CF1               	rrf	(___awdiv@divisor+1),f
  5728  0E85  0CF0               	rrf	(___awdiv@divisor),f
  5729  0E86  3EFF               	addlw	-1
  5730  0E87  1D03               	skipz
  5731  0E88  2E83               	goto	u3835
  5732                           	line	32
  5733                           	
  5734  0E89                     l2914:	
  5735  0E89  3001               	movlw	low(01h)
  5736  0E8A  02F5               	subwf	(___awdiv@counter),f
  5737  0E8B  1D03               	btfss	status,2
  5738  0E8C  2E8E               	goto	u3841
  5739  0E8D  2E8F               	goto	u3840
  5740  0E8E                     u3841:
  5741  0E8E  2E69               	goto	l2906
  5742  0E8F                     u3840:
  5743  0E8F  2E91               	goto	l2916
  5744                           	
  5745  0E90                     l1076:	
  5746  0E90  2E91               	goto	l2916
  5747                           	line	33
  5748                           	
  5749  0E91                     l1070:	
  5750                           	line	34
  5751                           	
  5752  0E91                     l2916:	
  5753  0E91  0876               	movf	(___awdiv@sign),w
  5754  0E92  1D03               	skipz
  5755  0E93  2E95               	goto	u3850
  5756  0E94  2E9B               	goto	l2920
  5757  0E95                     u3850:
  5758                           	line	35
  5759                           	
  5760  0E95                     l2918:	
  5761  0E95  09F7               	comf	(___awdiv@quotient),f
  5762  0E96  09F8               	comf	(___awdiv@quotient+1),f
  5763  0E97  0AF7               	incf	(___awdiv@quotient),f
  5764  0E98  1903               	skipnz
  5765  0E99  0AF8               	incf	(___awdiv@quotient+1),f
  5766  0E9A  2E9B               	goto	l2920
  5767                           	
  5768  0E9B                     l1077:	
  5769                           	line	36
  5770                           	
  5771  0E9B                     l2920:	
  5772  0E9B  0878               	movf	(___awdiv@quotient+1),w
  5773  0E9C  01F1               	clrf	(?___awdiv+1)
  5774  0E9D  07F1               	addwf	(?___awdiv+1)
  5775  0E9E  0877               	movf	(___awdiv@quotient),w
  5776  0E9F  01F0               	clrf	(?___awdiv)
  5777  0EA0  07F0               	addwf	(?___awdiv)
  5778                           
  5779  0EA1  2EA2               	goto	l1078
  5780                           	
  5781  0EA2                     l2922:	
  5782                           	line	37
  5783                           	
  5784  0EA2                     l1078:	
  5785  0EA2  0008               	return
  5786                           	opt stack 0
  5787                           GLOBAL	__end_of___awdiv
  5788  0EA3                     	__end_of___awdiv:
  5789 ;; =============== function ___awdiv ends ============
  5790                           
  5791                           	signat	___awdiv,8314
  5792                           	global	___wmul
  5793                           psect	text503,local,class=CODE,delta=2
  5794                           global __ptext503
  5795  0C91                     __ptext503:
  5796                           
  5797 ;; *************** function ___wmul *****************
  5798 ;; Defined at:
  5799 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  multiplier      2    0[COMMON] unsigned int 
  5802 ;;  multiplicand    2    2[COMMON] unsigned int 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;  product         2    4[COMMON] unsigned int 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  2    0[COMMON] unsigned int 
  5807 ;; Registers used:
  5808 ;;		wreg, status,2, status,0
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5814 ;;      Params:         4       0       0       0       0
  5815 ;;      Locals:         2       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0
  5817 ;;      Totals:         6       0       0       0       0
  5818 ;;Total ram usage:        6 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_itoaa
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           psect	text503
  5827                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  5828                           	line	3
  5829                           	global	__size_of___wmul
  5830  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  5831                           	
  5832  0C91                     ___wmul:	
  5833                           	opt	stack 5
  5834                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5835                           	line	4
  5836                           	
  5837  0C91                     l2872:	
  5838  0C91  01F4               	clrf	(___wmul@product)
  5839  0C92  01F5               	clrf	(___wmul@product+1)
  5840  0C93  2C94               	goto	l2874
  5841                           	line	6
  5842                           	
  5843  0C94                     l928:	
  5844                           	line	7
  5845                           	
  5846  0C94                     l2874:	
  5847  0C94  1C70               	btfss	(___wmul@multiplier),(0)&7
  5848  0C95  2C97               	goto	u3721
  5849  0C96  2C98               	goto	u3720
  5850  0C97                     u3721:
  5851  0C97  2C9E               	goto	l929
  5852  0C98                     u3720:
  5853                           	line	8
  5854                           	
  5855  0C98                     l2876:	
  5856  0C98  0872               	movf	(___wmul@multiplicand),w
  5857  0C99  07F4               	addwf	(___wmul@product),f
  5858  0C9A  1803               	skipnc
  5859  0C9B  0AF5               	incf	(___wmul@product+1),f
  5860  0C9C  0873               	movf	(___wmul@multiplicand+1),w
  5861  0C9D  07F5               	addwf	(___wmul@product+1),f
  5862                           	
  5863  0C9E                     l929:	
  5864                           	line	9
  5865  0C9E  3001               	movlw	01h
  5866                           	
  5867  0C9F                     u3735:
  5868  0C9F  1003               	clrc
  5869  0CA0  0DF2               	rlf	(___wmul@multiplicand),f
  5870  0CA1  0DF3               	rlf	(___wmul@multiplicand+1),f
  5871  0CA2  3EFF               	addlw	-1
  5872  0CA3  1D03               	skipz
  5873  0CA4  2C9F               	goto	u3735
  5874                           	line	10
  5875                           	
  5876  0CA5                     l2878:	
  5877  0CA5  3001               	movlw	01h
  5878                           	
  5879  0CA6                     u3745:
  5880  0CA6  1003               	clrc
  5881  0CA7  0CF1               	rrf	(___wmul@multiplier+1),f
  5882  0CA8  0CF0               	rrf	(___wmul@multiplier),f
  5883  0CA9  3EFF               	addlw	-1
  5884  0CAA  1D03               	skipz
  5885  0CAB  2CA6               	goto	u3745
  5886                           	line	11
  5887  0CAC  0871               	movf	((___wmul@multiplier+1)),w
  5888  0CAD  0470               	iorwf	((___wmul@multiplier)),w
  5889  0CAE  1D03               	skipz
  5890  0CAF  2CB1               	goto	u3751
  5891  0CB0  2CB2               	goto	u3750
  5892  0CB1                     u3751:
  5893  0CB1  2C94               	goto	l2874
  5894  0CB2                     u3750:
  5895  0CB2  2CB3               	goto	l2880
  5896                           	
  5897  0CB3                     l930:	
  5898                           	line	12
  5899                           	
  5900  0CB3                     l2880:	
  5901  0CB3  0875               	movf	(___wmul@product+1),w
  5902  0CB4  01F1               	clrf	(?___wmul+1)
  5903  0CB5  07F1               	addwf	(?___wmul+1)
  5904  0CB6  0874               	movf	(___wmul@product),w
  5905  0CB7  01F0               	clrf	(?___wmul)
  5906  0CB8  07F0               	addwf	(?___wmul)
  5907                           
  5908  0CB9  2CBA               	goto	l931
  5909                           	
  5910  0CBA                     l2882:	
  5911                           	line	13
  5912                           	
  5913  0CBA                     l931:	
  5914  0CBA  0008               	return
  5915                           	opt stack 0
  5916                           GLOBAL	__end_of___wmul
  5917  0CBB                     	__end_of___wmul:
  5918 ;; =============== function ___wmul ends ============
  5919                           
  5920                           	signat	___wmul,8314
  5921                           	global	_resetout
  5922                           psect	text504,local,class=CODE,delta=2
  5923                           global __ptext504
  5924  0B67                     __ptext504:
  5925                           
  5926 ;; *************** function _resetout *****************
  5927 ;; Defined at:
  5928 ;;		line 636 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;		None
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;		None               void
  5935 ;; Registers used:
  5936 ;;		None
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5942 ;;      Params:         0       0       0       0       0
  5943 ;;      Locals:         0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0
  5945 ;;      Totals:         0       0       0       0       0
  5946 ;;Total ram usage:        0 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_actrow
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           psect	text504
  5955                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  5956                           	line	636
  5957                           	global	__size_of_resetout
  5958  0007                     	__size_of_resetout	equ	__end_of_resetout-_resetout
  5959                           	
  5960  0B67                     _resetout:	
  5961                           	opt	stack 4
  5962                           ; Regs used in _resetout: []
  5963                           	line	637
  5964                           	
  5965  0B67                     l2870:	
  5966                           ;lcd1.c: 637: RC2=0;RC3=0;RB6=0;RB7=0;
  5967  0B67  1283               	bcf	status, 5	;RP0=0, select bank0
  5968  0B68  1303               	bcf	status, 6	;RP1=0, select bank0
  5969  0B69  1107               	bcf	(58/8),(58)&7
  5970  0B6A  1187               	bcf	(59/8),(59)&7
  5971  0B6B  1306               	bcf	(54/8),(54)&7
  5972  0B6C  1386               	bcf	(55/8),(55)&7
  5973                           	line	638
  5974                           	
  5975  0B6D                     l886:	
  5976  0B6D  0008               	return
  5977                           	opt stack 0
  5978                           GLOBAL	__end_of_resetout
  5979  0B6E                     	__end_of_resetout:
  5980 ;; =============== function _resetout ends ============
  5981                           
  5982                           	signat	_resetout,88
  5983                           	global	_setLCD
  5984                           psect	text505,local,class=CODE,delta=2
  5985                           global __ptext505
  5986  02B9                     __ptext505:
  5987                           
  5988 ;; *************** function _setLCD *****************
  5989 ;; Defined at:
  5990 ;;		line 476 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  number          2    0[COMMON] int 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  vbool          32    0[BANK0 ] int [16]
  5995 ;;  i               2   32[BANK0 ] int 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;		None               void
  5998 ;; Registers used:
  5999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6005 ;;      Params:         2       0       0       0       0
  6006 ;;      Locals:         0      34       0       0       0
  6007 ;;      Temps:          6       0       0       0       0
  6008 ;;      Totals:         8      34       0       0       0
  6009 ;;Total ram usage:       42 bytes
  6010 ;; Hardware stack levels used:    2
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_cmd
  6015 ;;		_dat
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           psect	text505
  6019                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  6020                           	line	476
  6021                           	global	__size_of_setLCD
  6022  0144                     	__size_of_setLCD	equ	__end_of_setLCD-_setLCD
  6023                           	
  6024  02B9                     _setLCD:	
  6025                           	opt	stack 3
  6026                           ; Regs used in _setLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6027                           	line	481
  6028                           	
  6029  02B9                     l2856:	
  6030                           ;lcd1.c: 477: const int size=8*sizeof(int);
  6031                           ;lcd1.c: 478: int vbool[8*sizeof(int)];
  6032                           ;lcd1.c: 479: int i;;
  6033                           ;lcd1.c: 481: for (i = 0; i <size; i++)
  6034  02B9  1283               	bcf	status, 5	;RP0=0, select bank0
  6035  02BA  1303               	bcf	status, 6	;RP1=0, select bank0
  6036  02BB  01C0               	clrf	(setLCD@i)
  6037  02BC  01C1               	clrf	(setLCD@i+1)
  6038                           	
  6039  02BD                     l2858:	
  6040  02BD  3001               	movlw	(setLCD@size-__stringbase)
  6041  02BE  0084               	movwf	fsr0
  6042  02BF  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6043  02C4  00F2               	movwf	(??_setLCD+0)+0
  6044  02C5  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6045  02CA  00F3               	movwf	(??_setLCD+0)+0+1
  6046  02CB  0841               	movf	(setLCD@i+1),w
  6047  02CC  3A80               	xorlw	80h
  6048  02CD  00F4               	movwf	(??_setLCD+2)+0
  6049  02CE  0873               	movf	1+(??_setLCD+0)+0,w
  6050  02CF  3A80               	xorlw	80h
  6051  02D0  0274               	subwf	(??_setLCD+2)+0,w
  6052  02D1  1D03               	skipz
  6053  02D2  2AD5               	goto	u3535
  6054  02D3  0872               	movf	0+(??_setLCD+0)+0,w
  6055  02D4  0240               	subwf	(setLCD@i),w
  6056  02D5                     u3535:
  6057                           
  6058  02D5  1C03               	skipc
  6059  02D6  2AD8               	goto	u3531
  6060  02D7  2AD9               	goto	u3530
  6061  02D8                     u3531:
  6062  02D8  2ADB               	goto	l2862
  6063  02D9                     u3530:
  6064  02D9  2B1C               	goto	l2868
  6065                           	
  6066  02DA                     l2860:	
  6067  02DA  2B1C               	goto	l2868
  6068                           	line	482
  6069                           	
  6070  02DB                     l823:	
  6071                           	line	483
  6072                           	
  6073  02DB                     l2862:	
  6074                           ;lcd1.c: 482: {
  6075                           ;lcd1.c: 483: vbool[i] = number<<i < 0;
  6076  02DB  1283               	bcf	status, 5	;RP0=0, select bank0
  6077  02DC  1303               	bcf	status, 6	;RP1=0, select bank0
  6078  02DD  0A40               	incf	(setLCD@i),w
  6079  02DE  00F2               	movwf	(??_setLCD+0)+0
  6080  02DF  0871               	movf	(setLCD@number+1),w
  6081  02E0  00F4               	movwf	(??_setLCD+1)+0+1
  6082  02E1  0870               	movf	(setLCD@number),w
  6083  02E2  00F3               	movwf	(??_setLCD+1)+0
  6084  02E3  2AE7               	goto	u3544
  6085  02E4                     u3545:
  6086  02E4  1003               	clrc
  6087  02E5  0DF3               	rlf	(??_setLCD+1)+0,f
  6088  02E6  0DF4               	rlf	(??_setLCD+1)+1,f
  6089  02E7                     u3544:
  6090  02E7  0BF2               	decfsz	(??_setLCD+0)+0,f
  6091  02E8  2AE4               	goto	u3545
  6092  02E9  3000               	movlw	0
  6093  02EA  1BF4               	btfsc	1+(??_setLCD+1)+0,7
  6094  02EB  3001               	movlw	1
  6095  02EC  00F5               	movwf	(??_setLCD+3)+0
  6096  02ED  01F6               	clrf	(??_setLCD+3)+0+1
  6097  02EE  0840               	movf	(setLCD@i),w
  6098  02EF  00F7               	movwf	(??_setLCD+5)+0
  6099  02F0  0777               	addwf	(??_setLCD+5)+0,w
  6100  02F1  3E20               	addlw	setLCD@vbool&0ffh
  6101  02F2  0084               	movwf	fsr0
  6102  02F3  0875               	movf	0+(??_setLCD+3)+0,w
  6103  02F4  1383               	bcf	status, 7	;select IRP bank0
  6104  02F5  0080               	movwf	indf
  6105  02F6  0A84               	incf	fsr0,f
  6106  02F7  0876               	movf	1+(??_setLCD+3)+0,w
  6107  02F8  0080               	movwf	indf
  6108                           	line	481
  6109                           	
  6110  02F9                     l2864:	
  6111  02F9  3001               	movlw	low(01h)
  6112  02FA  07C0               	addwf	(setLCD@i),f
  6113  02FB  1803               	skipnc
  6114  02FC  0AC1               	incf	(setLCD@i+1),f
  6115  02FD  3000               	movlw	high(01h)
  6116  02FE  07C1               	addwf	(setLCD@i+1),f
  6117                           	
  6118  02FF                     l2866:	
  6119  02FF  3001               	movlw	(setLCD@size-__stringbase)
  6120  0300  0084               	movwf	fsr0
  6121  0301  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6122  0306  00F2               	movwf	(??_setLCD+0)+0
  6123  0307  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6124  030C  00F3               	movwf	(??_setLCD+0)+0+1
  6125  030D  0841               	movf	(setLCD@i+1),w
  6126  030E  3A80               	xorlw	80h
  6127  030F  00F4               	movwf	(??_setLCD+2)+0
  6128  0310  0873               	movf	1+(??_setLCD+0)+0,w
  6129  0311  3A80               	xorlw	80h
  6130  0312  0274               	subwf	(??_setLCD+2)+0,w
  6131  0313  1D03               	skipz
  6132  0314  2B17               	goto	u3555
  6133  0315  0872               	movf	0+(??_setLCD+0)+0,w
  6134  0316  0240               	subwf	(setLCD@i),w
  6135  0317                     u3555:
  6136                           
  6137  0317  1C03               	skipc
  6138  0318  2B1A               	goto	u3551
  6139  0319  2B1B               	goto	u3550
  6140  031A                     u3551:
  6141  031A  2ADB               	goto	l2862
  6142  031B                     u3550:
  6143  031B  2B1C               	goto	l2868
  6144                           	
  6145  031C                     l824:	
  6146                           	line	486
  6147                           	
  6148  031C                     l2868:	
  6149                           ;lcd1.c: 484: }
  6150                           ;lcd1.c: 486: RD0=vbool[size-1];
  6151  031C  3001               	movlw	(setLCD@size-__stringbase)
  6152  031D  0084               	movwf	fsr0
  6153  031E  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6154  0323  00F2               	movwf	(??_setLCD+0)+0
  6155  0324  0772               	addwf	(??_setLCD+0)+0,w
  6156  0325  3EFE               	addlw	0FEh
  6157  0326  3E20               	addlw	setLCD@vbool&0ffh
  6158  0327  0084               	movwf	fsr0
  6159  0328  1383               	bcf	status, 7	;select IRP bank0
  6160  0329  0800               	movf	indf,w
  6161  032A  00F3               	movwf	(??_setLCD+1)+0+0
  6162  032B  0A84               	incf	fsr0,f
  6163  032C  0800               	movf	indf,w
  6164  032D  00F4               	movwf	(??_setLCD+1)+0+1
  6165  032E  1873               	btfsc	0+(??_setLCD+1)+0,0
  6166  032F  2B31               	goto	u3561
  6167  0330  2B35               	goto	u3560
  6168                           	
  6169  0331                     u3561:
  6170  0331  1283               	bcf	status, 5	;RP0=0, select bank0
  6171  0332  1303               	bcf	status, 6	;RP1=0, select bank0
  6172  0333  1408               	bsf	(64/8),(64)&7
  6173  0334  2B38               	goto	u3574
  6174  0335                     u3560:
  6175  0335  1283               	bcf	status, 5	;RP0=0, select bank0
  6176  0336  1303               	bcf	status, 6	;RP1=0, select bank0
  6177  0337  1008               	bcf	(64/8),(64)&7
  6178  0338                     u3574:
  6179                           	line	487
  6180                           ;lcd1.c: 487: RD1=vbool[size-2];
  6181  0338  3001               	movlw	(setLCD@size-__stringbase)
  6182  0339  0084               	movwf	fsr0
  6183  033A  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6184  033F  00F2               	movwf	(??_setLCD+0)+0
  6185  0340  0772               	addwf	(??_setLCD+0)+0,w
  6186  0341  3EFC               	addlw	0FCh
  6187  0342  3E20               	addlw	setLCD@vbool&0ffh
  6188  0343  0084               	movwf	fsr0
  6189  0344  1383               	bcf	status, 7	;select IRP bank0
  6190  0345  0800               	movf	indf,w
  6191  0346  00F3               	movwf	(??_setLCD+1)+0+0
  6192  0347  0A84               	incf	fsr0,f
  6193  0348  0800               	movf	indf,w
  6194  0349  00F4               	movwf	(??_setLCD+1)+0+1
  6195  034A  1873               	btfsc	0+(??_setLCD+1)+0,0
  6196  034B  2B4D               	goto	u3581
  6197  034C  2B51               	goto	u3580
  6198                           	
  6199  034D                     u3581:
  6200  034D  1283               	bcf	status, 5	;RP0=0, select bank0
  6201  034E  1303               	bcf	status, 6	;RP1=0, select bank0
  6202  034F  1488               	bsf	(65/8),(65)&7
  6203  0350  2B54               	goto	u3594
  6204  0351                     u3580:
  6205  0351  1283               	bcf	status, 5	;RP0=0, select bank0
  6206  0352  1303               	bcf	status, 6	;RP1=0, select bank0
  6207  0353  1088               	bcf	(65/8),(65)&7
  6208  0354                     u3594:
  6209                           	line	488
  6210                           ;lcd1.c: 488: RD2=vbool[size-3];
  6211  0354  3001               	movlw	(setLCD@size-__stringbase)
  6212  0355  0084               	movwf	fsr0
  6213  0356  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6214  035B  00F2               	movwf	(??_setLCD+0)+0
  6215  035C  0772               	addwf	(??_setLCD+0)+0,w
  6216  035D  3EFA               	addlw	0FAh
  6217  035E  3E20               	addlw	setLCD@vbool&0ffh
  6218  035F  0084               	movwf	fsr0
  6219  0360  1383               	bcf	status, 7	;select IRP bank0
  6220  0361  0800               	movf	indf,w
  6221  0362  00F3               	movwf	(??_setLCD+1)+0+0
  6222  0363  0A84               	incf	fsr0,f
  6223  0364  0800               	movf	indf,w
  6224  0365  00F4               	movwf	(??_setLCD+1)+0+1
  6225  0366  1873               	btfsc	0+(??_setLCD+1)+0,0
  6226  0367  2B69               	goto	u3601
  6227  0368  2B6D               	goto	u3600
  6228                           	
  6229  0369                     u3601:
  6230  0369  1283               	bcf	status, 5	;RP0=0, select bank0
  6231  036A  1303               	bcf	status, 6	;RP1=0, select bank0
  6232  036B  1508               	bsf	(66/8),(66)&7
  6233  036C  2B70               	goto	u3614
  6234  036D                     u3600:
  6235  036D  1283               	bcf	status, 5	;RP0=0, select bank0
  6236  036E  1303               	bcf	status, 6	;RP1=0, select bank0
  6237  036F  1108               	bcf	(66/8),(66)&7
  6238  0370                     u3614:
  6239                           	line	489
  6240                           ;lcd1.c: 489: RD3=vbool[size-4];
  6241  0370  3001               	movlw	(setLCD@size-__stringbase)
  6242  0371  0084               	movwf	fsr0
  6243  0372  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6244  0377  00F2               	movwf	(??_setLCD+0)+0
  6245  0378  0772               	addwf	(??_setLCD+0)+0,w
  6246  0379  3EF8               	addlw	0F8h
  6247  037A  3E20               	addlw	setLCD@vbool&0ffh
  6248  037B  0084               	movwf	fsr0
  6249  037C  1383               	bcf	status, 7	;select IRP bank0
  6250  037D  0800               	movf	indf,w
  6251  037E  00F3               	movwf	(??_setLCD+1)+0+0
  6252  037F  0A84               	incf	fsr0,f
  6253  0380  0800               	movf	indf,w
  6254  0381  00F4               	movwf	(??_setLCD+1)+0+1
  6255  0382  1873               	btfsc	0+(??_setLCD+1)+0,0
  6256  0383  2B85               	goto	u3621
  6257  0384  2B89               	goto	u3620
  6258                           	
  6259  0385                     u3621:
  6260  0385  1283               	bcf	status, 5	;RP0=0, select bank0
  6261  0386  1303               	bcf	status, 6	;RP1=0, select bank0
  6262  0387  1588               	bsf	(67/8),(67)&7
  6263  0388  2B8C               	goto	u3634
  6264  0389                     u3620:
  6265  0389  1283               	bcf	status, 5	;RP0=0, select bank0
  6266  038A  1303               	bcf	status, 6	;RP1=0, select bank0
  6267  038B  1188               	bcf	(67/8),(67)&7
  6268  038C                     u3634:
  6269                           	line	490
  6270                           ;lcd1.c: 490: RD4=vbool[size-5];
  6271  038C  3001               	movlw	(setLCD@size-__stringbase)
  6272  038D  0084               	movwf	fsr0
  6273  038E  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6274  0393  00F2               	movwf	(??_setLCD+0)+0
  6275  0394  0772               	addwf	(??_setLCD+0)+0,w
  6276  0395  3EF6               	addlw	0F6h
  6277  0396  3E20               	addlw	setLCD@vbool&0ffh
  6278  0397  0084               	movwf	fsr0
  6279  0398  1383               	bcf	status, 7	;select IRP bank0
  6280  0399  0800               	movf	indf,w
  6281  039A  00F3               	movwf	(??_setLCD+1)+0+0
  6282  039B  0A84               	incf	fsr0,f
  6283  039C  0800               	movf	indf,w
  6284  039D  00F4               	movwf	(??_setLCD+1)+0+1
  6285  039E  1873               	btfsc	0+(??_setLCD+1)+0,0
  6286  039F  2BA1               	goto	u3641
  6287  03A0  2BA5               	goto	u3640
  6288                           	
  6289  03A1                     u3641:
  6290  03A1  1283               	bcf	status, 5	;RP0=0, select bank0
  6291  03A2  1303               	bcf	status, 6	;RP1=0, select bank0
  6292  03A3  1608               	bsf	(68/8),(68)&7
  6293  03A4  2BA8               	goto	u3654
  6294  03A5                     u3640:
  6295  03A5  1283               	bcf	status, 5	;RP0=0, select bank0
  6296  03A6  1303               	bcf	status, 6	;RP1=0, select bank0
  6297  03A7  1208               	bcf	(68/8),(68)&7
  6298  03A8                     u3654:
  6299                           	line	491
  6300                           ;lcd1.c: 491: RD5=vbool[size-6];
  6301  03A8  3001               	movlw	(setLCD@size-__stringbase)
  6302  03A9  0084               	movwf	fsr0
  6303  03AA  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6304  03AF  00F2               	movwf	(??_setLCD+0)+0
  6305  03B0  0772               	addwf	(??_setLCD+0)+0,w
  6306  03B1  3EF4               	addlw	0F4h
  6307  03B2  3E20               	addlw	setLCD@vbool&0ffh
  6308  03B3  0084               	movwf	fsr0
  6309  03B4  1383               	bcf	status, 7	;select IRP bank0
  6310  03B5  0800               	movf	indf,w
  6311  03B6  00F3               	movwf	(??_setLCD+1)+0+0
  6312  03B7  0A84               	incf	fsr0,f
  6313  03B8  0800               	movf	indf,w
  6314  03B9  00F4               	movwf	(??_setLCD+1)+0+1
  6315  03BA  1873               	btfsc	0+(??_setLCD+1)+0,0
  6316  03BB  2BBD               	goto	u3661
  6317  03BC  2BC1               	goto	u3660
  6318                           	
  6319  03BD                     u3661:
  6320  03BD  1283               	bcf	status, 5	;RP0=0, select bank0
  6321  03BE  1303               	bcf	status, 6	;RP1=0, select bank0
  6322  03BF  1688               	bsf	(69/8),(69)&7
  6323  03C0  2BC4               	goto	u3674
  6324  03C1                     u3660:
  6325  03C1  1283               	bcf	status, 5	;RP0=0, select bank0
  6326  03C2  1303               	bcf	status, 6	;RP1=0, select bank0
  6327  03C3  1288               	bcf	(69/8),(69)&7
  6328  03C4                     u3674:
  6329                           	line	492
  6330                           ;lcd1.c: 492: RD6=vbool[size-7];
  6331  03C4  3001               	movlw	(setLCD@size-__stringbase)
  6332  03C5  0084               	movwf	fsr0
  6333  03C6  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6334  03CB  00F2               	movwf	(??_setLCD+0)+0
  6335  03CC  0772               	addwf	(??_setLCD+0)+0,w
  6336  03CD  3EF2               	addlw	0F2h
  6337  03CE  3E20               	addlw	setLCD@vbool&0ffh
  6338  03CF  0084               	movwf	fsr0
  6339  03D0  1383               	bcf	status, 7	;select IRP bank0
  6340  03D1  0800               	movf	indf,w
  6341  03D2  00F3               	movwf	(??_setLCD+1)+0+0
  6342  03D3  0A84               	incf	fsr0,f
  6343  03D4  0800               	movf	indf,w
  6344  03D5  00F4               	movwf	(??_setLCD+1)+0+1
  6345  03D6  1873               	btfsc	0+(??_setLCD+1)+0,0
  6346  03D7  2BD9               	goto	u3681
  6347  03D8  2BDD               	goto	u3680
  6348                           	
  6349  03D9                     u3681:
  6350  03D9  1283               	bcf	status, 5	;RP0=0, select bank0
  6351  03DA  1303               	bcf	status, 6	;RP1=0, select bank0
  6352  03DB  1708               	bsf	(70/8),(70)&7
  6353  03DC  2BE0               	goto	u3694
  6354  03DD                     u3680:
  6355  03DD  1283               	bcf	status, 5	;RP0=0, select bank0
  6356  03DE  1303               	bcf	status, 6	;RP1=0, select bank0
  6357  03DF  1308               	bcf	(70/8),(70)&7
  6358  03E0                     u3694:
  6359                           	line	493
  6360                           ;lcd1.c: 493: RD7=vbool[size-8];
  6361  03E0  3001               	movlw	(setLCD@size-__stringbase)
  6362  03E1  0084               	movwf	fsr0
  6363  03E2  120A  118A  200D   	fcall	stringdir
              120A  118A         
  6364  03E7  00F2               	movwf	(??_setLCD+0)+0
  6365  03E8  0772               	addwf	(??_setLCD+0)+0,w
  6366  03E9  3EF0               	addlw	0F0h
  6367  03EA  3E20               	addlw	setLCD@vbool&0ffh
  6368  03EB  0084               	movwf	fsr0
  6369  03EC  1383               	bcf	status, 7	;select IRP bank0
  6370  03ED  0800               	movf	indf,w
  6371  03EE  00F3               	movwf	(??_setLCD+1)+0+0
  6372  03EF  0A84               	incf	fsr0,f
  6373  03F0  0800               	movf	indf,w
  6374  03F1  00F4               	movwf	(??_setLCD+1)+0+1
  6375  03F2  1873               	btfsc	0+(??_setLCD+1)+0,0
  6376  03F3  2BF5               	goto	u3701
  6377  03F4  2BF9               	goto	u3700
  6378                           	
  6379  03F5                     u3701:
  6380  03F5  1283               	bcf	status, 5	;RP0=0, select bank0
  6381  03F6  1303               	bcf	status, 6	;RP1=0, select bank0
  6382  03F7  1788               	bsf	(71/8),(71)&7
  6383  03F8  2BFC               	goto	u3714
  6384  03F9                     u3700:
  6385  03F9  1283               	bcf	status, 5	;RP0=0, select bank0
  6386  03FA  1303               	bcf	status, 6	;RP1=0, select bank0
  6387  03FB  1388               	bcf	(71/8),(71)&7
  6388  03FC                     u3714:
  6389                           	line	497
  6390                           	
  6391  03FC                     l825:	
  6392  03FC  0008               	return
  6393                           	opt stack 0
  6394                           GLOBAL	__end_of_setLCD
  6395  03FD                     	__end_of_setLCD:
  6396 ;; =============== function _setLCD ends ============
  6397                           
  6398                           	signat	_setLCD,4216
  6399                           	global	_delay
  6400                           psect	text506,local,class=CODE,delta=2
  6401                           global __ptext506
  6402  0B99                     __ptext506:
  6403                           
  6404 ;; *************** function _delay *****************
  6405 ;; Defined at:
  6406 ;;		line 391 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  x               2    0[COMMON] unsigned int 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;		None               void
  6413 ;; Registers used:
  6414 ;;		wreg
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6420 ;;      Params:         2       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0
  6422 ;;      Temps:          0       0       0       0       0
  6423 ;;      Totals:         2       0       0       0       0
  6424 ;;Total ram usage:        2 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; This function calls:
  6427 ;;		Nothing
  6428 ;; This function is called by:
  6429 ;;		_cmd
  6430 ;;		_dat
  6431 ;;		_scroll
  6432 ;;		_actrow
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           psect	text506
  6436                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  6437                           	line	391
  6438                           	global	__size_of_delay
  6439  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  6440                           	
  6441  0B99                     _delay:	
  6442                           	opt	stack 4
  6443                           ; Regs used in _delay: [wreg]
  6444                           	line	392
  6445                           	
  6446  0B99                     l2852:	
  6447                           ;lcd1.c: 392: while(x-->0);
  6448  0B99  2B9B               	goto	l2854
  6449                           	
  6450  0B9A                     l794:	
  6451  0B9A  2B9B               	goto	l2854
  6452                           	
  6453  0B9B                     l793:	
  6454                           	
  6455  0B9B                     l2854:	
  6456  0B9B  3001               	movlw	low(01h)
  6457  0B9C  02F0               	subwf	(delay@x),f
  6458  0B9D  3000               	movlw	high(01h)
  6459  0B9E  1C03               	skipc
  6460  0B9F  03F1               	decf	(delay@x+1),f
  6461  0BA0  02F1               	subwf	(delay@x+1),f
  6462  0BA1  30FF               	movlw	high(0FFFFh)
  6463  0BA2  0671               	xorwf	((delay@x+1)),w
  6464  0BA3  1D03               	skipz
  6465  0BA4  2BA7               	goto	u3525
  6466  0BA5  30FF               	movlw	low(0FFFFh)
  6467  0BA6  0670               	xorwf	((delay@x)),w
  6468  0BA7                     u3525:
  6469                           
  6470  0BA7  1D03               	skipz
  6471  0BA8  2BAA               	goto	u3521
  6472  0BA9  2BAB               	goto	u3520
  6473  0BAA                     u3521:
  6474  0BAA  2B9B               	goto	l2854
  6475  0BAB                     u3520:
  6476  0BAB  2BAC               	goto	l796
  6477                           	
  6478  0BAC                     l795:	
  6479                           	line	393
  6480                           	
  6481  0BAC                     l796:	
  6482  0BAC  0008               	return
  6483                           	opt stack 0
  6484                           GLOBAL	__end_of_delay
  6485  0BAD                     	__end_of_delay:
  6486 ;; =============== function _delay ends ============
  6487                           
  6488                           	signat	_delay,4216
  6489                           	global	_strcat
  6490                           psect	text507,local,class=CODE,delta=2
  6491                           global __ptext507
  6492  0C68                     __ptext507:
  6493                           
  6494 ;; *************** function _strcat *****************
  6495 ;; Defined at:
  6496 ;;		line 10 in file "../../common/strcat.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  to              1    wreg     PTR unsigned char 
  6499 ;;		 -> logic_d4(5), logic_d3(5), logic_d2(5), logic_d1(5), 
  6500 ;;  from            1    0[COMMON] PTR const unsigned char 
  6501 ;;		 -> getlogicseq@snum(16), 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  to              1    2[COMMON] PTR unsigned char 
  6504 ;;		 -> logic_d4(5), logic_d3(5), logic_d2(5), logic_d1(5), 
  6505 ;;  cp              1    3[COMMON] PTR unsigned char 
  6506 ;;		 -> logic_d4(5), logic_d3(5), logic_d2(5), logic_d1(5), 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      PTR unsigned char 
  6509 ;; Registers used:
  6510 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6516 ;;      Params:         1       0       0       0       0
  6517 ;;      Locals:         2       0       0       0       0
  6518 ;;      Temps:          1       0       0       0       0
  6519 ;;      Totals:         4       0       0       0       0
  6520 ;;Total ram usage:        4 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_getlogicseq
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           psect	text507
  6529                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcat.c"
  6530                           	line	10
  6531                           	global	__size_of_strcat
  6532  0029                     	__size_of_strcat	equ	__end_of_strcat-_strcat
  6533                           	
  6534  0C68                     _strcat:	
  6535                           	opt	stack 6
  6536                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  6537                           ;strcat@to stored from wreg
  6538                           	line	18
  6539  0C68  00F2               	movwf	(strcat@to)
  6540                           	
  6541  0C69                     l2776:	
  6542  0C69  0872               	movf	(strcat@to),w
  6543  0C6A  00F1               	movwf	(??_strcat+0)+0
  6544  0C6B  0871               	movf	(??_strcat+0)+0,w
  6545  0C6C  00F3               	movwf	(strcat@cp)
  6546                           	line	19
  6547  0C6D  2C73               	goto	l2780
  6548                           	
  6549  0C6E                     l900:	
  6550                           	line	20
  6551                           	
  6552  0C6E                     l2778:	
  6553  0C6E  3001               	movlw	(01h)
  6554  0C6F  00F1               	movwf	(??_strcat+0)+0
  6555  0C70  0871               	movf	(??_strcat+0)+0,w
  6556  0C71  07F3               	addwf	(strcat@cp),f
  6557  0C72  2C73               	goto	l2780
  6558                           	
  6559  0C73                     l899:	
  6560                           	line	19
  6561                           	
  6562  0C73                     l2780:	
  6563  0C73  0873               	movf	(strcat@cp),w
  6564  0C74  0084               	movwf	fsr0
  6565  0C75  1383               	bcf	status, 7	;select IRP bank0
  6566  0C76  0880               	movf	indf,f
  6567  0C77  1D03               	skipz
  6568  0C78  2C7A               	goto	u3341
  6569  0C79  2C7B               	goto	u3340
  6570  0C7A                     u3341:
  6571  0C7A  2C6E               	goto	l2778
  6572  0C7B                     u3340:
  6573  0C7B  2C7E               	goto	l2782
  6574                           	
  6575  0C7C                     l901:	
  6576                           	line	21
  6577  0C7C  2C7E               	goto	l2782
  6578                           	
  6579  0C7D                     l903:	
  6580                           	line	22
  6581  0C7D  2C7E               	goto	l2782
  6582                           	
  6583  0C7E                     l902:	
  6584                           	line	21
  6585                           	
  6586  0C7E                     l2782:	
  6587  0C7E  0870               	movf	(strcat@from),w
  6588  0C7F  0084               	movwf	fsr0
  6589  0C80  3001               	movlw	01h
  6590  0C81  07F0               	addwf	(strcat@from),f
  6591  0C82  0800               	movf	indf,w
  6592  0C83  00F1               	movwf	(??_strcat+0)+0
  6593  0C84  0873               	movf	(strcat@cp),w
  6594  0C85  0084               	movwf	fsr0
  6595  0C86  3001               	movlw	01h
  6596  0C87  07F3               	addwf	(strcat@cp),f
  6597  0C88  0871               	movf	(??_strcat+0)+0,w
  6598  0C89  0080               	movwf	indf
  6599  0C8A  0880               	movf	(indf),f
  6600  0C8B  1D03               	skipz
  6601  0C8C  2C8E               	goto	u3351
  6602  0C8D  2C8F               	goto	u3350
  6603  0C8E                     u3351:
  6604  0C8E  2C7E               	goto	l2782
  6605  0C8F                     u3350:
  6606  0C8F  2C90               	goto	l905
  6607                           	
  6608  0C90                     l904:	
  6609                           	line	24
  6610                           ;	Return value of _strcat is never used
  6611                           	
  6612  0C90                     l905:	
  6613  0C90  0008               	return
  6614                           	opt stack 0
  6615                           GLOBAL	__end_of_strcat
  6616  0C91                     	__end_of_strcat:
  6617 ;; =============== function _strcat ends ============
  6618                           
  6619                           	signat	_strcat,8313
  6620                           	global	_strcpy
  6621                           psect	text508,local,class=CODE,delta=2
  6622                           global __ptext508
  6623  0BD6                     __ptext508:
  6624                           
  6625 ;; *************** function _strcpy *****************
  6626 ;; Defined at:
  6627 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  to              1    wreg     PTR unsigned char 
  6630 ;;		 -> getlogicseq@str(32), logic_d4(5), logic_d3(5), logic_d2(5), 
  6631 ;;		 -> logic_d1(5), 
  6632 ;;  from            1    0[COMMON] PTR const unsigned char 
  6633 ;;		 -> STR_12(1), STR_11(20), STR_9(1), STR_8(20), 
  6634 ;;		 -> STR_6(1), STR_5(20), STR_3(1), STR_2(20), 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  to              1    2[COMMON] PTR unsigned char 
  6637 ;;		 -> getlogicseq@str(32), logic_d4(5), logic_d3(5), logic_d2(5), 
  6638 ;;		 -> logic_d1(5), 
  6639 ;;  cp              1    3[COMMON] PTR unsigned char 
  6640 ;;		 -> getlogicseq@str(32), logic_d4(5), logic_d3(5), logic_d2(5), 
  6641 ;;		 -> logic_d1(5), 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      PTR unsigned char 
  6644 ;; Registers used:
  6645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6651 ;;      Params:         1       0       0       0       0
  6652 ;;      Locals:         2       0       0       0       0
  6653 ;;      Temps:          1       0       0       0       0
  6654 ;;      Totals:         4       0       0       0       0
  6655 ;;Total ram usage:        4 bytes
  6656 ;; Hardware stack levels used:    2
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_getlogicseq
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           psect	text508
  6664                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  6665                           	line	10
  6666                           	global	__size_of_strcpy
  6667  0020                     	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  6668                           	
  6669  0BD6                     _strcpy:	
  6670                           	opt	stack 5
  6671                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6672                           ;strcpy@to stored from wreg
  6673                           	line	18
  6674  0BD6  00F2               	movwf	(strcpy@to)
  6675                           	
  6676  0BD7                     l2772:	
  6677  0BD7  0872               	movf	(strcpy@to),w
  6678  0BD8  00F1               	movwf	(??_strcpy+0)+0
  6679  0BD9  0871               	movf	(??_strcpy+0)+0,w
  6680  0BDA  00F3               	movwf	(strcpy@cp)
  6681                           	line	19
  6682  0BDB  2BDD               	goto	l2774
  6683                           	
  6684  0BDC                     l917:	
  6685                           	line	20
  6686  0BDC  2BDD               	goto	l2774
  6687                           	
  6688  0BDD                     l916:	
  6689                           	line	19
  6690                           	
  6691  0BDD                     l2774:	
  6692  0BDD  3001               	movlw	01h
  6693  0BDE  07F0               	addwf	(strcpy@from),f
  6694  0BDF  30FF               	movlw	-01h
  6695  0BE0  0770               	addwf	(strcpy@from),w
  6696  0BE1  0084               	movwf	fsr0
  6697  0BE2  120A  118A  200D   	fcall	stringdir
              120A  158A         
  6698  0BE7  00F1               	movwf	(??_strcpy+0)+0
  6699  0BE8  0873               	movf	(strcpy@cp),w
  6700  0BE9  0084               	movwf	fsr0
  6701  0BEA  3001               	movlw	01h
  6702  0BEB  07F3               	addwf	(strcpy@cp),f
  6703  0BEC  0871               	movf	(??_strcpy+0)+0,w
  6704  0BED  1383               	bcf	status, 7	;select IRP bank0
  6705  0BEE  0080               	movwf	indf
  6706  0BEF  0880               	movf	(indf),f
  6707  0BF0  1D03               	skipz
  6708  0BF1  2BF3               	goto	u3331
  6709  0BF2  2BF4               	goto	u3330
  6710  0BF3                     u3331:
  6711  0BF3  2BDD               	goto	l2774
  6712  0BF4                     u3330:
  6713  0BF4  2BF5               	goto	l919
  6714                           	
  6715  0BF5                     l918:	
  6716                           	line	22
  6717                           ;	Return value of _strcpy is never used
  6718                           	
  6719  0BF5                     l919:	
  6720  0BF5  0008               	return
  6721                           	opt stack 0
  6722                           GLOBAL	__end_of_strcpy
  6723  0BF6                     	__end_of_strcpy:
  6724 ;; =============== function _strcpy ends ============
  6725                           
  6726                           	signat	_strcpy,8313
  6727                           	global	_strcmp
  6728                           psect	text509,local,class=CODE,delta=2
  6729                           global __ptext509
  6730  0CEE                     __ptext509:
  6731                           
  6732 ;; *************** function _strcmp *****************
  6733 ;; Defined at:
  6734 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  s1              1    wreg     PTR const unsigned char 
  6737 ;;		 -> lo(5), 
  6738 ;;  s2              2    0[COMMON] PTR const unsigned char 
  6739 ;;		 -> STR_29(5), STR_28(5), STR_27(5), STR_26(5), 
  6740 ;;		 -> STR_25(5), STR_24(5), STR_23(5), STR_22(5), 
  6741 ;;		 -> STR_21(5), STR_20(5), STR_19(5), STR_18(5), 
  6742 ;;		 -> STR_17(5), STR_16(5), STR_15(5), STR_14(5), 
  6743 ;;		 -> logic_d4(5), logic_d3(5), logic_d2(5), logic_d1(5), 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  s1              1    7[COMMON] PTR const unsigned char 
  6746 ;;		 -> lo(5), 
  6747 ;;  r               1    6[COMMON] char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  2    0[COMMON] int 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6757 ;;      Params:         2       0       0       0       0
  6758 ;;      Locals:         2       0       0       0       0
  6759 ;;      Temps:          4       0       0       0       0
  6760 ;;      Totals:         8       0       0       0       0
  6761 ;;Total ram usage:        8 bytes
  6762 ;; Hardware stack levels used:    2
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_startswitch
  6767 ;;		_parselogic
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           psect	text509
  6771                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  6772                           	line	34
  6773                           	global	__size_of_strcmp
  6774  0039                     	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  6775                           	
  6776  0CEE                     _strcmp:	
  6777                           	opt	stack 4
  6778                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6779                           ;strcmp@s1 stored from wreg
  6780  0CEE  00F7               	movwf	(strcmp@s1)
  6781                           	line	37
  6782                           	
  6783  0CEF                     l2762:	
  6784  0CEF  2CF1               	goto	l2764
  6785                           	
  6786  0CF0                     l909:	
  6787                           	line	38
  6788  0CF0  2CF1               	goto	l2764
  6789                           	
  6790  0CF1                     l908:	
  6791                           	line	37
  6792                           	
  6793  0CF1                     l2764:	
  6794  0CF1  0877               	movf	(strcmp@s1),w
  6795  0CF2  0084               	movwf	fsr
  6796  0CF3  1383               	bcf	status, 7	;select IRP bank0
  6797  0CF4  0800               	movf	indf,w
  6798  0CF5  00F2               	movwf	(??_strcmp+0)+0
  6799  0CF6  0871               	movf	(strcmp@s2+1),w
  6800  0CF7  00F4               	movwf	(??_strcmp+1)+0+1
  6801  0CF8  0870               	movf	(strcmp@s2),w
  6802  0CF9  00F3               	movwf	(??_strcmp+1)+0
  6803  0CFA  3001               	movlw	(01h)
  6804  0CFB  07F0               	addwf	(strcmp@s2),f
  6805  0CFC  1803               	skipnc
  6806  0CFD  0AF1               	incf	(strcmp@s2+1),f
  6807  0CFE  0874               	movf	1+(??_strcmp+1)+0,w
  6808  0CFF  1283               	bcf	status, 5	;RP0=0, select bank0
  6809  0D00  1303               	bcf	status, 6	;RP1=0, select bank0
  6810  0D01  00FF               	movwf	btemp+1
  6811  0D02  0873               	movf	0+(??_strcmp+1)+0,w
  6812  0D03  0084               	movwf	fsr0
  6813  0D04  120A  118A  2003   	fcall	stringtab
              120A  158A         
  6814  0D09  3AFF               	xorlw	0ffh
  6815  0D0A  3E01               	addlw	1
  6816  0D0B  0772               	addwf	(??_strcmp+0)+0,w
  6817  0D0C  00F5               	movwf	(??_strcmp+3)+0
  6818  0D0D  0875               	movf	(??_strcmp+3)+0,w
  6819  0D0E  00F6               	movwf	(strcmp@r)
  6820  0D0F  08F6               	movf	((strcmp@r)),f
  6821  0D10  1D03               	skipz
  6822  0D11  2D13               	goto	u3311
  6823  0D12  2D14               	goto	u3310
  6824  0D13                     u3311:
  6825  0D13  2D20               	goto	l2768
  6826  0D14                     u3310:
  6827                           	
  6828  0D14                     l2766:	
  6829  0D14  0877               	movf	(strcmp@s1),w
  6830  0D15  0084               	movwf	fsr0
  6831  0D16  3001               	movlw	01h
  6832  0D17  07F7               	addwf	(strcmp@s1),f
  6833  0D18  1383               	bcf	status, 7	;select IRP bank0
  6834  0D19  0880               	movf	indf,f
  6835  0D1A  1D03               	skipz
  6836  0D1B  2D1D               	goto	u3321
  6837  0D1C  2D1E               	goto	u3320
  6838  0D1D                     u3321:
  6839  0D1D  2CF1               	goto	l2764
  6840  0D1E                     u3320:
  6841  0D1E  2D20               	goto	l2768
  6842                           	
  6843  0D1F                     l911:	
  6844  0D1F  2D20               	goto	l2768
  6845                           	
  6846  0D20                     l912:	
  6847                           	line	39
  6848                           	
  6849  0D20                     l2768:	
  6850  0D20  0876               	movf	(strcmp@r),w
  6851  0D21  00F0               	movwf	(?_strcmp)
  6852  0D22  01F1               	clrf	(?_strcmp+1)
  6853  0D23  1BF0               	btfsc	(?_strcmp),7
  6854  0D24  03F1               	decf	(?_strcmp+1),f
  6855  0D25  2D26               	goto	l913
  6856                           	
  6857  0D26                     l2770:	
  6858                           	line	40
  6859                           	
  6860  0D26                     l913:	
  6861  0D26  0008               	return
  6862                           	opt stack 0
  6863                           GLOBAL	__end_of_strcmp
  6864  0D27                     	__end_of_strcmp:
  6865 ;; =============== function _strcmp ends ============
  6866                           
  6867                           	signat	_strcmp,8314
  6868                           	global	_initkeypad
  6869                           psect	text510,local,class=CODE,delta=2
  6870                           global __ptext510
  6871  0B6E                     __ptext510:
  6872                           
  6873 ;; *************** function _initkeypad *****************
  6874 ;; Defined at:
  6875 ;;		line 574 in file "C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;		None
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;		None
  6880 ;; Return value:  Size  Location     Type
  6881 ;;		None               void
  6882 ;; Registers used:
  6883 ;;		wreg, status,2
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6889 ;;      Params:         0       0       0       0       0
  6890 ;;      Locals:         0       0       0       0       0
  6891 ;;      Temps:          0       0       0       0       0
  6892 ;;      Totals:         0       0       0       0       0
  6893 ;;Total ram usage:        0 bytes
  6894 ;; Hardware stack levels used:    1
  6895 ;; This function calls:
  6896 ;;		Nothing
  6897 ;; This function is called by:
  6898 ;;		_main
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           psect	text510
  6902                           	file	"C:\PIC\PROJECTS\Training_Project\Code\LCD\lcd1.c"
  6903                           	line	574
  6904                           	global	__size_of_initkeypad
  6905  0008                     	__size_of_initkeypad	equ	__end_of_initkeypad-_initkeypad
  6906                           	
  6907  0B6E                     _initkeypad:	
  6908                           	opt	stack 7
  6909                           ; Regs used in _initkeypad: [wreg+status,2]
  6910                           	line	575
  6911                           	
  6912  0B6E                     l1348:	
  6913                           ;lcd1.c: 575: PORTB = 0;
  6914  0B6E  1283               	bcf	status, 5	;RP0=0, select bank0
  6915  0B6F  1303               	bcf	status, 6	;RP1=0, select bank0
  6916  0B70  0186               	clrf	(6)	;volatile
  6917                           	line	576
  6918                           	
  6919  0B71                     l1350:	
  6920                           ;lcd1.c: 576: TRISB = 0b11000000;
  6921  0B71  30C0               	movlw	(0C0h)
  6922  0B72  1683               	bsf	status, 5	;RP0=1, select bank1
  6923  0B73  1303               	bcf	status, 6	;RP1=0, select bank1
  6924  0B74  0086               	movwf	(134)^080h	;volatile
  6925                           	line	578
  6926                           	
  6927  0B75                     l852:	
  6928  0B75  0008               	return
  6929                           	opt stack 0
  6930                           GLOBAL	__end_of_initkeypad
  6931  0B76                     	__end_of_initkeypad:
  6932 ;; =============== function _initkeypad ends ============
  6933                           
  6934                           	signat	_initkeypad,88
  6935                           psect	text511,local,class=CODE,delta=2
  6936                           global __ptext511
  6937  0000                     __ptext511:
  6938                           	global	btemp
  6939  007E                     	btemp set 07Eh
  6940                           
  6941                           	DABS	1,126,2	;btemp
  6942                           	global	wtemp0
  6943  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Thu Jul 27 13:19:43 2017

                   pc 0002          ___awdiv@sign 0076                    _lo 0060                    fsr 0004  
 ___wmul@multiplicand 0072                   l700 0463                   l701 04EA                   l710 0510  
                 l711 051C                   l703 047E                   l800 02B8                   l720 05E1  
                 l712 051B                   l704 04E9                   l801 01E8                   l721 05F0  
                 l713 051D                   l705 0497                   l802 0215                   l722 0612  
                 l714 0557                   l706 04ED                   l803 022A                   l731 0666  
                 l723 0605                   l715 05DE                   l707 04FC                   l900 0C6E  
                 l804 0255                   l812 0B87                   l740 0703                   l732 06D1  
                 l724 0604                   l708 051E                   l901 0C7C                   l805 0270  
                 l741 0705                   l733 067F                   l725 0610                   l717 0572  
                 l709 0511                   l902 0C7E                   l806 02B8                   l830 0D91  
                 l750 07FA                   l742 073F                   l734 06D5                   l726 060F  
                 l718 05DD                   l911 0D1F                   l903 0C7D                   l823 02DB  
                 l815 0C1A                   l831 0DB4                   l751 07ED                   l743 07C6  
                 l735 06E4                   l727 0611                   l719 058B                   l912 0D20  
                 l904 0C90                   l824 031C                   l832 0D94                   l840 0FFF  
                 l752 07EC                   l736 0706                   l728 064B                   l680 0BD3  
                 l913 0D26                   l905 0C90                   l825 03FC                   l809 0CED  
                 l833 0DC8                   l841 0F88                   l753 07F8                   l745 075A  
                 l737 06F9                   l729 06D2                   l930 0CB3                   l690 0F2B  
                 l818 0C3F                   l834 0DC8                   l842 0FA0                   l754 07F7  
                 l746 07C5                   l738 06F8                   l931 0CBA                   l691 0F30  
                 l683 0EB3                   l843 0F8D                   l755 07F9                   l747 0773  
                 l739 0704                   l852 0B75                   l908 0CF1                   l916 0BDD  
                 l692 0F30                   l684 0EBC                   l860 0110                   l828 0D74  
                 l844 0FB6                   l756 07FF                   l748 07C9                   l909 0CF0  
                 l917 0BDC                   l693 0F31                   l685 0EC5                   l861 011B  
                 l829 0D87                   l845 0FCE                   l837 0F5C                   l749 07D8  
                 l677 0BCC                   l918 0BF5                   l694 0F31                   l686 0ECE  
                 l870 016C                   l862 011A                   l846 0FBB                   l838 0F4F  
                 l678 0BD2                   l919 0BF5                   l687 0EE7                   l871 018F  
                 l863 0133                   l855 00FA                   l847 0FE4                   l839 0F6A  
                 l679 0BD3                   l928 0C94                   l688 0EFE                   l880 01C7  
                 l872 0177                   l864 0156                   l856 01CD                   l848 0FFE  
                 l793 0B9B                   l929 0C9E                   l689 0F15                   l881 01BB  
                 l873 018E                   l865 013E                   l857 011D                   l849 0FFF  
                 l794 0B9A                   l890 0D5B                   l882 01C6                   l874 0182  
                 l866 0155                   l858 0105                   l795 0BAC                   l891 0D42  
                 l883 01C5                   l875 018D                   l867 0149                   l859 011C  
                 l699 042C                   l796 0BAC                   l892 0D5A                   l876 018C  
                 l868 0154                   l893 0D4D                   l877 01A5                   l869 0153  
                 l886 0B6D                   l894 0D59                   l878 01C8                   l799 01D9  
                 l895 0D58                   l879 01B0                   l896 0D64                   l889 0D37  
                 l899 0C73                   _RB0 0030                   _RB1 0031                   _RC0 0038  
                 _RB2 0032                   _RC1 0039                   _RB3 0033                   _RA5 002D  
                 _RD0 0040                   _RC2 003A                   _RD1 0041                   _RC3 003B  
                 _RD2 0042                   _RC4 003C                   _RB6 0036                   _RD3 0043  
                 _RC5 003D                   _RB7 0037                   _RD4 0044                   _RD5 0045  
                 _RC7 003F                   _RD6 0046                   _RD7 0047                   _dat 0C1B  
                 _cmd 0BF6          ?_getlogicseq 0070                   fsr0 0004                   indf 0000  
        ___awmod@sign 0076           _startswitch 0EA3                  l1140 0DEB                  l1141 0DFC  
                l1070 0E91                  l1142 0DFD                  l1071 0E63                  l1143 0E0E  
                l1072 0E57                  l1144 0E1C                  l1136 0DD7                  l3000 01D8  
                l1073 0E68                  l1145 0E27                  l1137 0DE1                  l1074 0E69  
                l1146 0E2E                  l1138 0E1D                  l3010 0201                  l3002 01D9  
                l1075 0E82                  l1139 0DF7                  l1076 0E90                  l1068 0E3D  
                l3020 0229                  l3012 0208                  l3004 01DF                  l3100 0CE4  
                l1077 0E9B                  l1069 0E4B                  l1350 0B71                  l1078 0EA2  
                l3030 0259                  l3022 022A                  l3014 020C                  l3006 01E7  
                l3110 00F9                  l3102 00E6                  ?_dat 0078                  l3040 0293  
                l3032 0261                  l3024 0243                  l3008 01EC                  l3016 0215  
                l3200 01BA                  l3120 010E                  l3112 00FE                  l3104 00EF  
                l3042 02AA                  l3034 026F                  l3026 0247                  l3018 021B  
                l3050 0C05                  l3202 01BF                  l3130 0126                  l3122 010F  
                l3114 0103                  l3106 00F5                  l3210 0B7E                  ?_cmd 0078  
                l1348 0B6E                  l3036 0270                  l3028 0255                  l3052 0C0E  
                l3044 0BF6                  l3060 0C29                  l3204 01C4                  l3140 013C  
                l3132 012C                  l3124 0114                  l3116 0104                  l3108 00F8  
                l3220 0D87                  l3212 0D65                  l3300 0484                  l3038 028B  
                l3054 0C11                  l3046 0C01                  l3062 0C2A                  l3070 0D2C  
                l3206 01C8                  l3150 014D                  l3142 013D                  l3134 0131  
                l3126 0119                  l3118 0109                  l3222 0D91                  l3214 0D6E  
                l3230 0F35                  l3310 04DC                  l3302 048A                  l3048 0C04  
                l3064 0C33                  l3056 0C1B                  l3080 0D49                  l3072 0D33  
                l3208 01CD                  l3160 016A                  l3152 0152                  l3144 0142  
                l3136 0132                  l3128 011D                  l3224 0D94                  l3216 0D74  
                l3240 0F5C                  l3232 0F46                  l3400 06B1                  l3320 04FC  
                l3312 04E2                  l3304 0497                  l3066 0C36                  l3058 0C26  
                l3082 0D4D                  l3074 0D37                  l3090 0CBF                  l3170 017B  
                l3162 016B                  l3146 0147                  l3138 0137                  l3154 0156  
                l3226 0DAD                  l3218 0D7D                  l3250 0F88                  l3242 0F6A  
                l3234 0F4A                  l3410 06E3                  l3402 06C4                  l3322 0505  
                l3330 051E                  l3306 04AA                  l3314 04EA                  l3084 0D54  
                l3076 0D3E                  l3068 0D27                  l3092 0CC0                  l3172 0180  
                l3164 0170                  l3180 018F                  l3156 015F                  l3148 0148  
                l3228 0DB4                  l3260 0FBB                  l3252 0F8D                  l3244 0F72  
                l3236 0F4C                  l3420 0700                  l3412 06E4                  l3404 06CA  
                l3340 0564                  l3332 0524                  l3324 050B                  l3308 04C9  
                l3316 04ED                  l3078 0D42                  l3086 0D5B                  l3094 0CC9  
                l3190 01A9                  l3182 0198                  l3174 0181                  l3166 0175  
                l3158 0165                  l3262 0FC4                  l3254 0F96                  l3246 0F7F  
                l3238 0F4F                  l3430 073F                  l3414 06ED                  l3422 0706  
                l3406 06D2                  l3350 058B                  l3342 056B                  l3334 0530  
                l3326 0511                  l3318 04FB                  l3270 03FD                  l3096 0CD2  
                l3088 0CBB                  l3192 01AE                  l3184 019E                  l3176 0186  
                l3168 0176                  l3264 0FCE                  l3256 0FA0                  l3248 0F83  
                l3440 0766                  l3432 074C                  l3424 070C                  l3416 06F3  
                l3408 06D5                  l3352 059E                  l3360 05DE                  l3344 0572  
                l3336 0543                  l3328 0518                  l3280 0429                  l3272 0409  
                l3098 0CDB                  l3194 01AF                  l3186 01A3                  l3178 018B  
                l3266 0FE4                  l3258 0FB6                  l3450 07BE                  l3442 0773  
                l3434 0753                  l3426 0718                  l3418 06F9                  l3370 05FF  
                l3354 05BD                  l3346 0578                  l3362 05E1                  l3338 0557  
                l3290 044F                  l3282 042C                  l3274 0421                  l2900 0E57  
                l3196 01B4                  l3188 01A4                  l3268 0FFD                  l3460 07E1  
                l3444 0786                  l3452 07C6                  l3436 075A                  l3428 072B  
                l3380 0624                  l3372 0605                  l3364 05EF                  l3356 05D0  
                l3348 057E                  l3292 0463                  l3284 042E                  l3276 0425  
                l2910 0E80                  l2902 0E5E                  l3198 01B9                  l3462 07E7  
                l3446 07A5                  l3438 0760                  l3454 07C9                  l3390 0666  
                l3382 0637                  l3374 060C                  l3366 05F0                  l3358 05D6  
                l3294 0470                  l3286 0430                  l3278 0427                  l3470 0BC1  
                l2920 0E9B                  l2912 0E82                  l2904 0E63                  l3464 07ED  
                l3456 07D7                  l3448 07B8                  l3392 066C                  l3384 064B  
                l3368 05F9                  l3376 0612                  l3296 0477                  l3288 043C  
                l3472 0BC6                  l2770 0D26                  l2762 0CEF                  l2922 0EA2  
                l2914 0E89                  l2906 0E69                  l2930 0DDB                  l3466 07F4  
                l3458 07D8                  l3394 0672                  l3386 0658                  l3378 0618  
                l3298 047E                  l3474 0BCC                  l2764 0CF1                  l2772 0BD7  
                l2780 0C73                  l2852 0B99                  l2860 02DA                  l2908 0E7A  
                l2916 0E91                  l2940 0DF7                  l2932 0DE1                  l2924 0DC9  
                l3468 07FA                  l3396 067F                  l3388 065F                  l2766 0D14  
                l2774 0BDD                  l2782 0C7E                  l2854 0B9B                  l2862 02DB  
                l2870 0B67                  l2918 0E95                  l2942 0DFD                  l2934 0DE7  
                l2950 0E1D                  l2926 0DCE                  l3398 0692                  l2768 0D20  
                l2776 0C69                  l2864 02F9                  l2856 02B9                  l2880 0CB3  
                l2872 0C91                  l2952 0E21                  l2944 0E07                  l2936 0DEB  
                l2928 0DD7                  l2960 0EA7                  l2778 0C6E                  l2866 02FF  
                l2858 02BD                  l2882 0CBA                  l2874 0C94                  l2890 0E41  
                l2954 0E27                  l2946 0E0E                  l2938 0DF2                  l2970 0EBC  
                l2962 0EAA                  l2868 031C                  l2876 0C98                  l2892 0E46  
                l2884 0E2F                  l2956 0E2E                  l2948 0E15                  l2980 0ED0  
                l2972 0EC0                  l2964 0EAE                  l2878 0CA5                  l2894 0E4B  
                l2886 0E34                  l2990 0F0E                  l2982 0EE0                  l2974 0EC5  
                l2966 0EB3                  l2958 0EA3                  l2896 0E4D                  l2888 0E3D  
                l2992 0F15                  l2984 0EE7                  l2976 0EC9                  l2968 0EB7  
                l2898 0E53                  l2994 0F25                  l2986 0EF7                  l2978 0ECE  
                l2988 0EFE                  l2996 01CE                  l2998 01D2                  STR_1 0015  
                STR_2 003B                  STR_3 004E                  STR_4 008B                  STR_5 004F  
                STR_6 004E                  STR_7 008B                  STR_8 0063                  STR_9 004E  
                u4000 0EF7                  u4001 0EF6                  u4010 0F0E                  u4011 0F0D  
                u4020 0F25                  u4100 0D33                  u4021 0F24                  u4101 0D32  
                u3310 0D14                  u4030 01D7                  u4110 0D3E                  u3311 0D13  
                u4031 01D6                  u4111 0D3D                  u3320 0D1E                  u4040 01DF  
                u4120 0D49                  u4200 0142                  u3321 0D1D                  u4041 01DE  
                u4121 0D48                  u4201 0141                  u3330 0BF4                  u4050 01EC  
                u4130 0D54                  u4210 014D                  u3331 0BF3                  u4051 01EB  
                u4131 0D53                  u4211 014C                  u3340 0C7B                  u4060 0228  
                u4220 0165                  u4140 00F5                  u4300 0D6E                  u3341 0C7A  
                u4061 0227                  u4221 0164                  u4141 00F4                  u4301 0D6D  
                u3350 0C8F                  u4070 0254                  u4230 0170                  u4150 00FE  
                u4310 0D7D                  u3351 0C8E                  u4071 0253                  u4231 016F  
                u4151 00FD                  u4311 0D7C                  u3520 0BAB                  u3600 036D  
                u4080 026E                  u4240 017B                  u4160 0109                  u4320 0DC7  
                u4400 047D                  u3521 0BAA                  u3601 0369                  u4081 026D  
                u4065 0224                  u4241 017A                  u4161 0108                  u4321 0DC6  
                u4401 047C                  u3530 02D9                  u4090 02B7                  u4250 0186  
                u4170 0114                  u4330 0F69                  u4410 0484                  u3531 02D8  
                u4091 02B6                  u4075 0250                  u4251 0185                  u4171 0113  
                u4331 0F68                  u4411 0483                  u3700 03F9                  u3620 0389  
                u4260 019E                  u4180 012C                  u4340 0F7F                  u4500 057E  
                u4420 048A                  u3525 0BA7                  u3701 03F5                  u3621 0385  
                u4085 026A                  u4261 019D                  u4181 012B                  u4341 0F7E  
                u4501 057D                  u4421 0489                  u3614 0370                  u3550 031B  
                u4270 01A9                  u4190 0137                  u4350 0FB5                  u4510 05EE  
                u4430 04FA                  u3551 031A                  u3535 02D5                  u4095 02B3  
                u4271 01A8                  u4191 0136                  u4351 0FB4                  u4511 05ED  
                u4431 04F9                  u3640 03A5                  u3560 0335                  u3544 02E7  
                u3720 0C98                  u3800 0E67                  u4280 01B4                  u4360 0FE3  
                u4600 06ED                  u4520 05F9                  u4440 0505                  u3641 03A1  
                u3561 0331                  u3545 02E4                  u3721 0C97                  u3801 0E66  
                u4281 01B3                  u4361 0FE2                  u4345 0F7B                  u4601 06EC  
                u4521 05F8                  u4441 0504                  u3714 03FC                  u3634 038C  
                u4290 01BF                  u4370 0FFC                  u4610 06F3                  u4530 05FF  
                u4450 050B                  u3555 0317                  u4291 01BE                  u4371 0FFB  
                u4355 0FB1                  u4611 06F2                  u4531 05FE                  u4515 05EA  
                u4451 050A                  u4435 04F6                  u3660 03C1                  u3580 0351  
                u3820 0E7A                  u3900 0DFB                  u4700 07F4                  u4620 0700  
                u4540 060C                  u4460 0518                  u4380 0413                  u3661 03BD  
                u3581 034D                  u3821 0E79                  u3901 0DFA                  u4365 0FDF  
                u4701 07F3                  u4621 06FF                  u4541 060B                  u4461 0517  
                u3654 03A8                  u3574 0338                  u3750 0CB2                  u3910 0E07  
                u4630 0753                  u4550 065F                  u4470 056B                  u4390 0477  
                u3751 0CB1                  u3735 0C9F                  u3815 0E6A                  u3911 0E06  
                u4375 0FF8                  u4631 0752                  u4551 065E                  u4471 056A  
                u4391 0476                  u3680 03DD                  u3840 0E8F                  u3760 0E34  
                u4640 0759                  u4560 0665                  u4480 0571                  u3681 03D9  
                u3745 0CA6                  u3841 0E8E                  u3825 0E76                  u3761 0E33  
                u4641 0758                  u4561 0664                  u4481 0570                  u3674 03C4  
                u3594 0354                  u3850 0E95                  u3770 0E41                  u3930 0E1B  
                u4650 0760                  u4570 066C                  u4490 0578                  u3835 0E83  
                u3771 0E40                  u3931 0E1A                  u3915 0E03                  u4651 075F  
                u4571 066B                  u4491 0577                  u3780 0E53                  u3940 0E21  
                u3860 0DCE                  u4660 0766                  u4580 0672                  u3781 0E52  
                u3925 0E0F                  u3861 0DCD                  u4661 0765                  u4581 0671  
                u3694 03E0                  u3870 0DDB                  u3950 0EAE                  u4670 07D6  
                u4590 06E2                  u3871 0DDA                  u3951 0EAD                  u4671 07D5  
                u4591 06E1                  u3880 0DE7                  u3960 0EB7                  u4680 07E1  
                u3881 0DE6                  u3961 0EB6                  u4681 07E0                  u3970 0EC0  
                u4690 07E7                  u3795 0E58                  u3971 0EBF                  u4691 07E6  
                u4675 07D2                  u4595 06DE                  u3980 0EC9                  u3981 0EC8  
                u3990 0EE0                  u3895 0DEC                  u3991 0EDF                  _main 0BC1  
                _scan 00E6                  btemp 007E                  start 0000                 ??_dat 007A  
               ??_cmd 007A                 ?_main 0070                 ?_scan 0074       __end_of___awdiv 0EA3  
               STR_10 008B                 STR_11 0077                 STR_12 004E                 STR_20 00AE  
               STR_13 008B                 STR_21 00D6                 STR_22 0095                 STR_14 0090  
               STR_23 00BD                 STR_15 00B8                 STR_24 00A9                 STR_16 00A4  
               STR_25 00D1                 STR_17 00CC                 STR_26 009F                 STR_18 009A  
               STR_27 00C7                 STR_19 00C2                 STR_28 00B3       __end_of___awmod 0E2F  
               STR_29 00DB       ___awdiv@divisor 0070       ___awdiv@counter 0075                 _PORTA 0005  
               _PORTB 0006                 _TRISA 0085                 _TRISB 0086                 _TRISC 0087  
               _TRISD 0088                 _delay 0B99                 _itoaa 01CE       __end_of_initlcd 0CEE  
               _write 0D65                 pclath 000A                 status 0003                 wtemp0 007E  
        __end_of_main 0BD6          __end_of_scan 01CE                ??_main 007E                ??_scan 0076  
      startswitch@dev 0079                ?_delay 0070                ?_itoaa 0079      ___awdiv@dividend 0072  
              ?_write 0042      __end_of_clearlcd 0B88                ___wmul 0C91             ??___awdiv 0074  
           ??___awmod 0074                _actrow 0D27           setLCD@vbool 0020                _setLCD 02B9  
              delay@x 0070      ___awdiv@quotient 0077       ___awmod@divisor 0070                _scroll 0F32  
     ___awmod@counter 0075                _strcat 0C68                _strcmp 0CEE                clrloop 0B77  
              _strcpy 0BD6             ??_initlcd 007A      __end_of_resetout 0B6E  __size_of_getlogicseq 0403  
              write@i 007C        __pcstackCOMMON 0070          __pidataBANK0 00E1          __pidataBANK1 0BAD  
       __end_of_delay 0BAD         __end_of_itoaa 02B9         __end_of_write 0DC9               ??_delay 0072  
        ?_startswitch 0070               ??_itoaa 007C               ??_write 007A            __pbssBANK3 0190  
          dat@Command 0078            __pmaintext 0BC1               ?___wmul 0070               ?_actrow 0072  
          cmd@Command 0078               ?_setLCD 0070               ?_scroll 0048               ?_strcat 0070  
             ?_strcmp 0070               ?_strcpy 0070         getlogicseq@bf 00C0         getlogicseq@nf 00D2  
       getlogicseq@wf 00D4             ?_clearlcd 0070             ?_resetout 0070               ___awdiv 0E2F  
             ___awmod 0DC9       __size_of___wmul 002A       __size_of_actrow 003E       __size_of_setLCD 0144  
     __size_of_scroll 00CE            _initkeypad 0B6E       __size_of_strcat 0029       __size_of_strcmp 0039  
     __size_of_strcpy 0020          setLCD@number 0070          __size_of_dat 0025          __size_of_cmd 0025  
             _initlcd 0CBB      ___awmod@dividend 0072               actrow@n 0072            ??_clearlcd 007A  
         scroll@endat 0053       getlogicseq@snum 00C2           scroll@loopn 0055           scroll@loops 0048  
end_of_initialization 0C64               setLCD@i 0040               init_ram 0B8C               scroll@i 005A  
          ??_resetout 0070               strcmp@r 0076  __size_of_startswitch 008F        __end_of___wmul 0CBB  
      __end_of_actrow 0D65           ?_initkeypad 0070        __end_of_setLCD 03FD        __end_of_scroll 1000  
       ??_getlogicseq 005C        __end_of_strcat 0C91        __end_of_strcmp 0D27        __end_of_strcpy 0BF6  
 start_initialization 0C40           __end_of_dat 0C40           __end_of_cmd 0C1B              ??___wmul 0074  
          setLCD@size 0013              ??_actrow 0074           __pdataBANK0 0060           __pdataBANK1 00DA  
            ??_setLCD 0072              ??_scroll 004A              ??_strcat 0071              ??_strcmp 0072  
            ??_strcpy 0071            itoaa@count 0020            itoaa@value 0079         __pcstackBANK0 0020  
       __pcstackBANK1 00A0     __size_of_clearlcd 000A   __end_of_getlogicseq 0800   __size_of_initkeypad 0008  
            ?___awdiv 0070             __ptext500 0EA3             __ptext501 0DC9             __ptext510 0B6E  
           __ptext502 0E2F             __ptext511 0000             __ptext503 0C91             __ptext504 0B67  
           __ptext505 02B9             __ptext506 0B99             __ptext507 0C68              ?___awmod 0070  
           __ptext508 0BD6             __ptext509 0CEE             __ptext490 03FD             __ptext491 0F32  
           __ptext492 0D65             __ptext493 0B7E             __ptext494 00E6             __ptext495 0CBB  
           __ptext496 0D27             __ptext497 0C1B             __ptext498 0BF6             __ptext499 01CE  
   __size_of_resetout 0007             __pstrings 0003              ?_initlcd 0070        __size_of_delay 0014  
      __size_of_itoaa 00EB        __size_of_write 0064        getlogicseq@num 00D8        getlogicseq@str 00A0  
      ___wmul@product 0074     getlogicseq@ccount 00D6           __stringbase 0012     ___wmul@multiplier 0070  
       scroll@startat 0051           _getlogicseq 03FD             init_fetch 0B88      __size_of___awdiv 0074  
    __size_of___awmod 0066             itoaa@temp 0022          ??_initkeypad 0070            strcat@from 0070  
    __size_of_initlcd 0033              _clearlcd 0B7E         ??_startswitch 0078      getlogicseq@F1256 0190  
          strcpy@from 0070         __size_of_main 0015         __size_of_scan 00E8              _logic_d1 00DA  
            _logic_d2 00DF              _logic_d3 00E4              _logic_d4 00E9             scroll@len 0058  
           scroll@str 0057    __end_of_initkeypad 0B76              clear_ram 0B76            write@erase 0046  
            _resetout 0B67              itoaa@ptr 007B   __end_of_startswitch 0F32             stringcode 000D  
            scroll@en 004F              scroll@st 004D             write@line 0044              strcat@cp 0073  
            strcat@to 0072              strcmp@s1 0077              strcmp@s2 0070              strcpy@cp 0073  
            strcpy@to 0072              stringdir 000D              stringtab 0003              write@str 0042  
