

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Fri Jul 28 12:33:38 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_initlcd
    43                           	FNCALL	_main,_initkeypad
    44                           	FNCALL	_main,_init_fun
    45                           	FNCALL	_main,_getlogicseq
    46                           	FNCALL	_getlogicseq,_scroll
    47                           	FNCALL	_getlogicseq,_strcpy
    48                           	FNCALL	_getlogicseq,_write
    49                           	FNCALL	_getlogicseq,_scan
    50                           	FNCALL	_getlogicseq,_itoaa
    51                           	FNCALL	_getlogicseq,_strcat
    52                           	FNCALL	_getlogicseq,_startswitch
    53                           	FNCALL	_scroll,_write
    54                           	FNCALL	_scroll,_delay
    55                           	FNCALL	_scroll,_cmd
    56                           	FNCALL	_startswitch,_strcpy
    57                           	FNCALL	_startswitch,_strcmp
    58                           	FNCALL	_startswitch,_check
    59                           	FNCALL	_startswitch,_write
    60                           	FNCALL	_write,_clearlcd
    61                           	FNCALL	_write,_cmd
    62                           	FNCALL	_write,_dat
    63                           	FNCALL	_clearlcd,_cmd
    64                           	FNCALL	_scan,_actrow
    65                           	FNCALL	_initlcd,_cmd
    66                           	FNCALL	_actrow,_resetout
    67                           	FNCALL	_actrow,_delay
    68                           	FNCALL	_dat,_setLCD
    69                           	FNCALL	_dat,_delay
    70                           	FNCALL	_cmd,_setLCD
    71                           	FNCALL	_cmd,_delay
    72                           	FNCALL	_itoaa,___wmul
    73                           	FNCALL	_itoaa,___awdiv
    74                           	FNCALL	_itoaa,___awmod
    75                           	FNROOT	_main
    76                           	global	_lo
    77                           	global	_logic_d1
    78                           	global	_logic_d2
    79                           	global	_logic_d3
    80                           	global	_logic_d4
    81                           	global	_plo
    82                           psect	idataBANK0,class=CODE,space=0,delta=2
    83                           global __pidataBANK0
    84  0AEC                     __pidataBANK0:
    85                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
    86                           	line	122
    87                           
    88                           ;initializer for _lo
    89  0AEC  3430               	retlw	030h
    90  0AED  3430               	retlw	030h
    91  0AEE  3430               	retlw	030h
    92  0AEF  3430               	retlw	030h
    93  0AF0  3400               	retlw	0
    94                           	line	118
    95                           
    96                           ;initializer for _logic_d1
    97  0AF1  3431               	retlw	031h
    98  0AF2  3430               	retlw	030h
    99  0AF3  3430               	retlw	030h
   100  0AF4  3431               	retlw	031h
   101  0AF5  3400               	retlw	0
   102                           psect	idataBANK1,class=CODE,space=0,delta=2
   103                           global __pidataBANK1
   104  0B1B                     __pidataBANK1:
   105                           	line	119
   106                           
   107                           ;initializer for _logic_d2
   108  0B1B  3431               	retlw	031h
   109  0B1C  3430               	retlw	030h
   110  0B1D  3431               	retlw	031h
   111  0B1E  3431               	retlw	031h
   112  0B1F  3400               	retlw	0
   113                           	line	120
   114                           
   115                           ;initializer for _logic_d3
   116  0B20  3430               	retlw	030h
   117  0B21  3431               	retlw	031h
   118  0B22  3431               	retlw	031h
   119  0B23  3430               	retlw	030h
   120  0B24  3400               	retlw	0
   121                           	line	121
   122                           
   123                           ;initializer for _logic_d4
   124  0B25  3431               	retlw	031h
   125  0B26  3430               	retlw	030h
   126  0B27  3430               	retlw	030h
   127  0B28  3430               	retlw	030h
   128  0B29  3400               	retlw	0
   129                           	line	123
   130                           
   131                           ;initializer for _plo
   132  0B2A  3430               	retlw	030h
   133  0B2B  3430               	retlw	030h
   134  0B2C  3430               	retlw	030h
   135  0B2D  3430               	retlw	030h
   136  0B2E  3400               	retlw	0
   137                           	global	setLCD@size
   138                           psect	strings,class=STRING,delta=2
   139                           global __pstrings
   140  0800                     __pstrings:
   141                           ;	global	stringdir,stringtab,__stringbase
   142  0800                     stringtab:
   143                           ;	String table - string pointers are 1 byte each
   144  0800  1BFF               	btfsc	(btemp+1),7
   145  0801  280A               	ljmp	stringcode
   146  0802  1383               	bcf	status,7
   147  0803  187F               	btfsc	(btemp+1),0
   148  0804  1783               	bsf	status,7
   149  0805  0800               	movf	indf,w
   150  0806  0A84               	incf fsr
   151  0807  1903               skipnz
   152  0808  0AFF               incf btemp+1
   153  0809  0008               	return
   154  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   155  080A  3008               movlw high(stringdir)
   156  080B  008A               movwf pclath
   157  080C  0804               movf fsr,w
   158  080D  0A84               incf fsr
   159  080E  0782               	addwf pc
   160  080F                     __stringbase:
   161  080F  3400               	retlw	0
   162                           psect	strings
   163                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
   164                           	line	558
   165  0810                     setLCD@size:
   166  0810  3410               	retlw	010h
   167  0811  3400               	retlw	0
   168                           
   169                           	global	setLCD@size
   170                           	global	_dev
   171                           	global	_done_init
   172                           	global	_pdev
   173                           	global	getlogicseq@F1263
   174                           	global	_PORTA
   175  0005                     _PORTA	set	5
   176                           	global	_PORTB
   177  0006                     _PORTB	set	6
   178                           	global	_RB0
   179  0030                     _RB0	set	48
   180                           	global	_RB1
   181  0031                     _RB1	set	49
   182                           	global	_RB2
   183  0032                     _RB2	set	50
   184                           	global	_RB3
   185  0033                     _RB3	set	51
   186                           	global	_RB6
   187  0036                     _RB6	set	54
   188                           	global	_RB7
   189  0037                     _RB7	set	55
   190                           	global	_RC0
   191  0038                     _RC0	set	56
   192                           	global	_RC1
   193  0039                     _RC1	set	57
   194                           	global	_RC2
   195  003A                     _RC2	set	58
   196                           	global	_RC3
   197  003B                     _RC3	set	59
   198                           	global	_RC4
   199  003C                     _RC4	set	60
   200                           	global	_RC5
   201  003D                     _RC5	set	61
   202                           	global	_RC6
   203  003E                     _RC6	set	62
   204                           	global	_RD0
   205  0040                     _RD0	set	64
   206                           	global	_RD1
   207  0041                     _RD1	set	65
   208                           	global	_RD2
   209  0042                     _RD2	set	66
   210                           	global	_RD3
   211  0043                     _RD3	set	67
   212                           	global	_RD4
   213  0044                     _RD4	set	68
   214                           	global	_RD5
   215  0045                     _RD5	set	69
   216                           	global	_RD6
   217  0046                     _RD6	set	70
   218                           	global	_RD7
   219  0047                     _RD7	set	71
   220                           	global	_TRISA
   221  0085                     _TRISA	set	133
   222                           	global	_TRISB
   223  0086                     _TRISB	set	134
   224                           	global	_TRISC
   225  0087                     _TRISC	set	135
   226                           	global	_TRISD
   227  0088                     _TRISD	set	136
   228                           	global	_RCEN
   229  048B                     _RCEN	set	1163
   230                           	global	_TXEN
   231  04C5                     _TXEN	set	1221
   232                           	
   233  0812                     STR_4:	
   234  0812  3457               	retlw	87	;'W'
   235  0813  3445               	retlw	69	;'E'
   236  0814  344C               	retlw	76	;'L'
   237  0815  3443               	retlw	67	;'C'
   238  0816  344F               	retlw	79	;'O'
   239  0817  344D               	retlw	77	;'M'
   240  0818  3445               	retlw	69	;'E'
   241  0819  3420               	retlw	32	;' '
   242  081A  3421               	retlw	33	;'!'
   243  081B  3420               	retlw	32	;' '
   244  081C  3454               	retlw	84	;'T'
   245  081D  344F               	retlw	79	;'O'
   246  081E  3420               	retlw	32	;' '
   247  081F  3450               	retlw	80	;'P'
   248  0820  3452               	retlw	82	;'R'
   249  0821  344F               	retlw	79	;'O'
   250  0822  3447               	retlw	71	;'G'
   251  0823  3452               	retlw	82	;'R'
   252  0824  3441               	retlw	65	;'A'
   253  0825  344D               	retlw	77	;'M'
   254  0826  3441               	retlw	65	;'A'
   255  0827  3442               	retlw	66	;'B'
   256  0828  344C               	retlw	76	;'L'
   257  0829  3445               	retlw	69	;'E'
   258  082A  3420               	retlw	32	;' '
   259  082B  3448               	retlw	72	;'H'
   260  082C  344F               	retlw	79	;'O'
   261  082D  344D               	retlw	77	;'M'
   262  082E  3445               	retlw	69	;'E'
   263  082F  3420               	retlw	32	;' '
   264  0830  3441               	retlw	65	;'A'
   265  0831  3455               	retlw	85	;'U'
   266  0832  3454               	retlw	84	;'T'
   267  0833  344D               	retlw	77	;'M'
   268  0834  3441               	retlw	65	;'A'
   269  0835  3454               	retlw	84	;'T'
   270  0836  344E               	retlw	78	;'N'
   271  0837  3400               	retlw	0
   272                           psect	strings
   273                           	
   274  0838                     STR_5:	
   275  0838  3445               	retlw	69	;'E'
   276  0839  346E               	retlw	110	;'n'
   277  083A  3474               	retlw	116	;'t'
   278  083B  3465               	retlw	101	;'e'
   279  083C  3472               	retlw	114	;'r'
   280  083D  3420               	retlw	32	;' '
   281  083E  344C               	retlw	76	;'L'
   282  083F  346F               	retlw	111	;'o'
   283  0840  3467               	retlw	103	;'g'
   284  0841  3469               	retlw	105	;'i'
   285  0842  3463               	retlw	99	;'c'
   286  0843  3420               	retlw	32	;' '
   287  0844  3444               	retlw	68	;'D'
   288  0845  3445               	retlw	69	;'E'
   289  0846  3456               	retlw	86	;'V'
   290  0847  3431               	retlw	49	;'1'
   291  0848  343A               	retlw	58	;':'
   292  0849  3420               	retlw	32	;' '
   293  084A  3420               	retlw	32	;' '
   294  084B  3400               	retlw	0
   295                           psect	strings
   296                           	
   297  084C                     STR_8:	
   298  084C  3445               	retlw	69	;'E'
   299  084D  346E               	retlw	110	;'n'
   300  084E  3474               	retlw	116	;'t'
   301  084F  3465               	retlw	101	;'e'
   302  0850  3472               	retlw	114	;'r'
   303  0851  3420               	retlw	32	;' '
   304  0852  344C               	retlw	76	;'L'
   305  0853  346F               	retlw	111	;'o'
   306  0854  3467               	retlw	103	;'g'
   307  0855  3469               	retlw	105	;'i'
   308  0856  3463               	retlw	99	;'c'
   309  0857  3420               	retlw	32	;' '
   310  0858  3444               	retlw	68	;'D'
   311  0859  3445               	retlw	69	;'E'
   312  085A  3456               	retlw	86	;'V'
   313  085B  3432               	retlw	50	;'2'
   314  085C  343A               	retlw	58	;':'
   315  085D  3420               	retlw	32	;' '
   316  085E  3420               	retlw	32	;' '
   317  085F  3400               	retlw	0
   318                           psect	strings
   319                           	
   320  0860                     STR_11:	
   321  0860  3445               	retlw	69	;'E'
   322  0861  346E               	retlw	110	;'n'
   323  0862  3474               	retlw	116	;'t'
   324  0863  3465               	retlw	101	;'e'
   325  0864  3472               	retlw	114	;'r'
   326  0865  3420               	retlw	32	;' '
   327  0866  344C               	retlw	76	;'L'
   328  0867  346F               	retlw	111	;'o'
   329  0868  3467               	retlw	103	;'g'
   330  0869  3469               	retlw	105	;'i'
   331  086A  3463               	retlw	99	;'c'
   332  086B  3420               	retlw	32	;' '
   333  086C  3444               	retlw	68	;'D'
   334  086D  3445               	retlw	69	;'E'
   335  086E  3456               	retlw	86	;'V'
   336  086F  3433               	retlw	51	;'3'
   337  0870  343A               	retlw	58	;':'
   338  0871  3420               	retlw	32	;' '
   339  0872  3420               	retlw	32	;' '
   340  0873  3400               	retlw	0
   341                           psect	strings
   342                           	
   343  0874                     STR_14:	
   344  0874  3445               	retlw	69	;'E'
   345  0875  346E               	retlw	110	;'n'
   346  0876  3474               	retlw	116	;'t'
   347  0877  3465               	retlw	101	;'e'
   348  0878  3472               	retlw	114	;'r'
   349  0879  3420               	retlw	32	;' '
   350  087A  344C               	retlw	76	;'L'
   351  087B  346F               	retlw	111	;'o'
   352  087C  3467               	retlw	103	;'g'
   353  087D  3469               	retlw	105	;'i'
   354  087E  3463               	retlw	99	;'c'
   355  087F  3420               	retlw	32	;' '
   356  0880  3444               	retlw	68	;'D'
   357  0881  3445               	retlw	69	;'E'
   358  0882  3456               	retlw	86	;'V'
   359  0883  3434               	retlw	52	;'4'
   360  0884  343A               	retlw	58	;':'
   361  0885  3420               	retlw	32	;' '
   362  0886  3420               	retlw	32	;' '
   363  0887  3400               	retlw	0
   364                           psect	strings
   365                           	
   366  0888                     STR_7:	
   367  0888  342D               	retlw	45	;'-'
   368  0889  342D               	retlw	45	;'-'
   369  088A  342D               	retlw	45	;'-'
   370  088B  342D               	retlw	45	;'-'
   371  088C  3400               	retlw	0
   372                           psect	strings
   373                           	
   374  088D                     STR_1:	
   375  088D  3430               	retlw	48	;'0'
   376  088E  3430               	retlw	48	;'0'
   377  088F  3430               	retlw	48	;'0'
   378  0890  3430               	retlw	48	;'0'
   379  0891  3400               	retlw	0
   380                           psect	strings
   381                           	
   382  0892                     STR_3:	
   383  0892  3431               	retlw	49	;'1'
   384  0893  3430               	retlw	48	;'0'
   385  0894  3430               	retlw	48	;'0'
   386  0895  3430               	retlw	48	;'0'
   387  0896  3400               	retlw	0
   388                           psect	strings
   389                           	
   390  0897                     STR_21:	
   391  0897  3430               	retlw	48	;'0'
   392  0898  3431               	retlw	49	;'1'
   393  0899  3430               	retlw	48	;'0'
   394  089A  3430               	retlw	48	;'0'
   395  089B  3400               	retlw	0
   396                           psect	strings
   397                           	
   398  089C                     STR_29:	
   399  089C  3431               	retlw	49	;'1'
   400  089D  3431               	retlw	49	;'1'
   401  089E  3430               	retlw	48	;'0'
   402  089F  3430               	retlw	48	;'0'
   403  08A0  3400               	retlw	0
   404                           psect	strings
   405                           	
   406  08A1                     STR_19:	
   407  08A1  3430               	retlw	48	;'0'
   408  08A2  3430               	retlw	48	;'0'
   409  08A3  3431               	retlw	49	;'1'
   410  08A4  3430               	retlw	48	;'0'
   411  08A5  3400               	retlw	0
   412                           psect	strings
   413                           	
   414  08A6                     STR_27:	
   415  08A6  3431               	retlw	49	;'1'
   416  08A7  3430               	retlw	48	;'0'
   417  08A8  3431               	retlw	49	;'1'
   418  08A9  3430               	retlw	48	;'0'
   419  08AA  3400               	retlw	0
   420                           psect	strings
   421                           	
   422  08AB                     STR_23:	
   423  08AB  3430               	retlw	48	;'0'
   424  08AC  3431               	retlw	49	;'1'
   425  08AD  3431               	retlw	49	;'1'
   426  08AE  3430               	retlw	48	;'0'
   427  08AF  3400               	retlw	0
   428                           psect	strings
   429                           	
   430  08B0                     STR_31:	
   431  08B0  3431               	retlw	49	;'1'
   432  08B1  3431               	retlw	49	;'1'
   433  08B2  3431               	retlw	49	;'1'
   434  08B3  3430               	retlw	48	;'0'
   435  08B4  3400               	retlw	0
   436                           psect	strings
   437                           	
   438  08B5                     STR_18:	
   439  08B5  3430               	retlw	48	;'0'
   440  08B6  3430               	retlw	48	;'0'
   441  08B7  3430               	retlw	48	;'0'
   442  08B8  3431               	retlw	49	;'1'
   443  08B9  3400               	retlw	0
   444                           psect	strings
   445                           	
   446  08BA                     STR_26:	
   447  08BA  3431               	retlw	49	;'1'
   448  08BB  3430               	retlw	48	;'0'
   449  08BC  3430               	retlw	48	;'0'
   450  08BD  3431               	retlw	49	;'1'
   451  08BE  3400               	retlw	0
   452                           psect	strings
   453                           	
   454  08BF                     STR_22:	
   455  08BF  3430               	retlw	48	;'0'
   456  08C0  3431               	retlw	49	;'1'
   457  08C1  3430               	retlw	48	;'0'
   458  08C2  3431               	retlw	49	;'1'
   459  08C3  3400               	retlw	0
   460                           psect	strings
   461                           	
   462  08C4                     STR_30:	
   463  08C4  3431               	retlw	49	;'1'
   464  08C5  3431               	retlw	49	;'1'
   465  08C6  3430               	retlw	48	;'0'
   466  08C7  3431               	retlw	49	;'1'
   467  08C8  3400               	retlw	0
   468                           psect	strings
   469                           	
   470  08C9                     STR_20:	
   471  08C9  3430               	retlw	48	;'0'
   472  08CA  3430               	retlw	48	;'0'
   473  08CB  3431               	retlw	49	;'1'
   474  08CC  3431               	retlw	49	;'1'
   475  08CD  3400               	retlw	0
   476                           psect	strings
   477                           	
   478  08CE                     STR_28:	
   479  08CE  3431               	retlw	49	;'1'
   480  08CF  3430               	retlw	48	;'0'
   481  08D0  3431               	retlw	49	;'1'
   482  08D1  3431               	retlw	49	;'1'
   483  08D2  3400               	retlw	0
   484                           psect	strings
   485                           	
   486  08D3                     STR_24:	
   487  08D3  3430               	retlw	48	;'0'
   488  08D4  3431               	retlw	49	;'1'
   489  08D5  3431               	retlw	49	;'1'
   490  08D6  3431               	retlw	49	;'1'
   491  08D7  3400               	retlw	0
   492                           psect	strings
   493                           	
   494  08D8                     STR_32:	
   495  08D8  3431               	retlw	49	;'1'
   496  08D9  3431               	retlw	49	;'1'
   497  08DA  3431               	retlw	49	;'1'
   498  08DB  3431               	retlw	49	;'1'
   499  08DC  3400               	retlw	0
   500                           psect	strings
   501  0892                     STR_25	equ	STR_3+0
   502  088D                     STR_2	equ	STR_1+0
   503  088D                     STR_17	equ	STR_1+0
   504  0888                     STR_10	equ	STR_7+0
   505  0888                     STR_13	equ	STR_7+0
   506  0888                     STR_16	equ	STR_7+0
   507  084B                     STR_6	equ	STR_5+19
   508  084B                     STR_9	equ	STR_5+19
   509  084B                     STR_12	equ	STR_5+19
   510  084B                     STR_15	equ	STR_5+19
   511                           	file	"prev0.as"
   512                           	line	#
   513                           psect cinit,class=CODE,delta=2
   514                           global start_initialization
   515  0C29                     start_initialization:
   516                           
   517                           psect	bssBANK0,class=BANK0,space=1
   518                           global __pbssBANK0
   519  006A                     __pbssBANK0:
   520  006A                     _dev:
   521  006A                            ds      2
   522                           
   523  006C                     _done_init:
   524  006C                            ds      2
   525                           
   526  006E                     _pdev:
   527  006E                            ds      2
   528                           
   529                           psect	dataBANK0,class=BANK0,space=1
   530                           global __pdataBANK0
   531  0060                     __pdataBANK0:
   532                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
   533                           	line	122
   534  0060                     _lo:
   535  0060                            ds      5
   536                           
   537                           psect	dataBANK0
   538                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
   539                           	line	118
   540  0065                     _logic_d1:
   541  0065                            ds      5
   542                           
   543                           psect	dataBANK1,class=BANK1,space=1
   544                           global __pdataBANK1
   545  00DA                     __pdataBANK1:
   546                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
   547                           	line	119
   548  00DA                     _logic_d2:
   549  00DA                            ds      5
   550                           
   551                           psect	dataBANK1
   552                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
   553                           	line	120
   554  00DF                     _logic_d3:
   555  00DF                            ds      5
   556                           
   557                           psect	dataBANK1
   558                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
   559                           	line	121
   560  00E4                     _logic_d4:
   561  00E4                            ds      5
   562                           
   563                           psect	dataBANK1
   564                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
   565                           	line	123
   566  00E9                     _plo:
   567  00E9                            ds      5
   568                           
   569                           psect	bssBANK3,class=BANK3,space=1
   570                           global __pbssBANK3
   571  0190                     __pbssBANK3:
   572  0190                     getlogicseq@F1263:
   573  0190                            ds      16
   574                           
   575                           psect clrtext,class=CODE,delta=2
   576                           global clear_ram
   577                           ;	Called with FSR containing the base address, and
   578                           ;	W with the last address+1
   579  0ADA                     clear_ram:
   580  0ADA  0064               	clrwdt			;clear the watchdog before getting into this loop
   581  0ADB                     clrloop:
   582  0ADB  0180               	clrf	indf		;clear RAM location pointed to by FSR
   583  0ADC  0A84               	incf	fsr,f		;increment pointer
   584  0ADD  0604               	xorwf	fsr,w		;XOR with final address
   585  0ADE  1903               	btfsc	status,2	;have we reached the end yet?
   586  0ADF  3400               	retlw	0		;all done for this memory range, return
   587  0AE0  0604               	xorwf	fsr,w		;XOR again to restore value
   588  0AE1  2ADB               	goto	clrloop		;do the next byte
   589                           
   590                           ; Clear objects allocated to BANK0
   591                           psect cinit,class=CODE,delta=2
   592  0C29  01EA               	clrf	((__pbssBANK0)+0)&07Fh
   593  0C2A  01EB               	clrf	((__pbssBANK0)+1)&07Fh
   594  0C2B  01EC               	clrf	((__pbssBANK0)+2)&07Fh
   595  0C2C  01ED               	clrf	((__pbssBANK0)+3)&07Fh
   596  0C2D  01EE               	clrf	((__pbssBANK0)+4)&07Fh
   597  0C2E  01EF               	clrf	((__pbssBANK0)+5)&07Fh
   598                           ; Clear objects allocated to BANK3
   599                           psect cinit,class=CODE,delta=2
   600  0C2F  1783               	bsf	status, 7	;select IRP bank2
   601  0C30  3090               	movlw	low(__pbssBANK3)
   602  0C31  0084               	movwf	fsr
   603  0C32  30A0               	movlw	low((__pbssBANK3)+010h)
   604  0C33  120A  158A  22DA   	fcall	clear_ram
              120A  158A         
   605                           global btemp
   606                           psect inittext,class=CODE,delta=2
   607                           global init_fetch,btemp
   608                           ;	Called with low address in FSR and high address in W
   609  0AF6                     init_fetch:
   610  0AF6  087E               	movf btemp,w
   611  0AF7  008A               	movwf pclath
   612  0AF8  087F               	movf btemp+1,w
   613  0AF9  0082               	movwf pc
   614                           global init_ram
   615                           ;Called with:
   616                           ;	high address of idata address in btemp 
   617                           ;	low address of idata address in btemp+1 
   618                           ;	low address of data in FSR
   619                           ;	high address + 1 of data in btemp-1
   620  0AFA                     init_ram:
   621  0AFA  22F6  120A  158A   	fcall init_fetch
   622  0AFD  0080               	movwf indf,f
   623  0AFE  0A84               	incf fsr,f
   624  0AFF  0804               	movf fsr,w
   625  0B00  067D               	xorwf btemp-1,w
   626  0B01  1903               	btfsc status,2
   627  0B02  3400               	retlw 0
   628  0B03  0AFF               	incf btemp+1,f
   629  0B04  1903               	btfsc status,2
   630  0B05  0AFE               	incf btemp,f
   631  0B06  2AFA               	goto init_ram
   632                           ; Initialize objects allocated to BANK1
   633                           psect cinit,class=CODE,delta=2
   634                           global init_ram, __pidataBANK1
   635  0C38  1383               	bcf	status, 7	;select IRP bank0
   636  0C39  30EE               	movlw low(__pdataBANK1+20)
   637  0C3A  00FD               	movwf btemp-1,f
   638  0C3B  300B               	movlw high(__pidataBANK1)
   639  0C3C  00FE               	movwf btemp,f
   640  0C3D  301B               	movlw low(__pidataBANK1)
   641  0C3E  00FF               	movwf btemp+1,f
   642  0C3F  30DA               	movlw low(__pdataBANK1)
   643  0C40  0084               	movwf fsr,f
   644  0C41  120A  158A  22FA   	fcall init_ram
              120A  158A         
   645                           ; Initialize objects allocated to BANK0
   646                           psect cinit,class=CODE,delta=2
   647                           global init_ram, __pidataBANK0
   648  0C46  306A               	movlw low(__pdataBANK0+10)
   649  0C47  00FD               	movwf btemp-1,f
   650  0C48  300A               	movlw high(__pidataBANK0)
   651  0C49  00FE               	movwf btemp,f
   652  0C4A  30EC               	movlw low(__pidataBANK0)
   653  0C4B  00FF               	movwf btemp+1,f
   654  0C4C  3060               	movlw low(__pdataBANK0)
   655  0C4D  0084               	movwf fsr,f
   656  0C4E  120A  158A  22FA   	fcall init_ram
              120A  158A         
   657                           psect cinit,class=CODE,delta=2
   658                           global end_of_initialization
   659                           
   660                           ;End of C runtime variable initialization code
   661                           
   662  0C53                     end_of_initialization:
   663  0C53  0183               clrf status
   664  0C54  120A  158A  2B2F   ljmp _main	;jump to C main() function
   665                           psect	cstackBANK1,class=BANK1,space=1
   666                           global __pcstackBANK1
   667  00A0                     __pcstackBANK1:
   668                           	global	getlogicseq@str
   669  00A0                     getlogicseq@str:	; 32 bytes @ 0x0
   670  00A0                     	ds	32
   671                           	global	getlogicseq@bf
   672  00C0                     getlogicseq@bf:	; 2 bytes @ 0x20
   673  00C0                     	ds	2
   674                           	global	getlogicseq@snum
   675  00C2                     getlogicseq@snum:	; 16 bytes @ 0x22
   676  00C2                     	ds	16
   677                           	global	getlogicseq@nf
   678  00D2                     getlogicseq@nf:	; 2 bytes @ 0x32
   679  00D2                     	ds	2
   680                           	global	getlogicseq@wf
   681  00D4                     getlogicseq@wf:	; 2 bytes @ 0x34
   682  00D4                     	ds	2
   683                           	global	getlogicseq@ccount
   684  00D6                     getlogicseq@ccount:	; 2 bytes @ 0x36
   685  00D6                     	ds	2
   686                           	global	getlogicseq@num
   687  00D8                     getlogicseq@num:	; 2 bytes @ 0x38
   688  00D8                     	ds	2
   689                           psect	cstackCOMMON,class=COMMON,space=1
   690                           global __pcstackCOMMON
   691  0070                     __pcstackCOMMON:
   692                           	global	?_initlcd
   693  0070                     ?_initlcd:	; 0 bytes @ 0x0
   694                           	global	?_initkeypad
   695  0070                     ?_initkeypad:	; 0 bytes @ 0x0
   696                           	global	??_initkeypad
   697  0070                     ??_initkeypad:	; 0 bytes @ 0x0
   698                           	global	?_init_fun
   699  0070                     ?_init_fun:	; 0 bytes @ 0x0
   700                           	global	??_init_fun
   701  0070                     ??_init_fun:	; 0 bytes @ 0x0
   702                           	global	?_getlogicseq
   703  0070                     ?_getlogicseq:	; 0 bytes @ 0x0
   704                           	global	?_setLCD
   705  0070                     ?_setLCD:	; 0 bytes @ 0x0
   706                           	global	?_startswitch
   707  0070                     ?_startswitch:	; 0 bytes @ 0x0
   708                           	global	?_delay
   709  0070                     ?_delay:	; 0 bytes @ 0x0
   710                           	global	?_clearlcd
   711  0070                     ?_clearlcd:	; 0 bytes @ 0x0
   712                           	global	?_resetout
   713  0070                     ?_resetout:	; 0 bytes @ 0x0
   714                           	global	??_resetout
   715  0070                     ??_resetout:	; 0 bytes @ 0x0
   716                           	global	?_strcpy
   717  0070                     ?_strcpy:	; 1 bytes @ 0x0
   718                           	global	?_strcat
   719  0070                     ?_strcat:	; 1 bytes @ 0x0
   720                           	global	?_strcmp
   721  0070                     ?_strcmp:	; 2 bytes @ 0x0
   722                           	global	?_check
   723  0070                     ?_check:	; 2 bytes @ 0x0
   724                           	global	?_main
   725  0070                     ?_main:	; 2 bytes @ 0x0
   726                           	global	?___wmul
   727  0070                     ?___wmul:	; 2 bytes @ 0x0
   728                           	global	?___awdiv
   729  0070                     ?___awdiv:	; 2 bytes @ 0x0
   730                           	global	?___awmod
   731  0070                     ?___awmod:	; 2 bytes @ 0x0
   732                           	global	check@logic
   733  0070                     check@logic:	; 1 bytes @ 0x0
   734                           	global	strcat@from
   735  0070                     strcat@from:	; 1 bytes @ 0x0
   736                           	global	delay@x
   737  0070                     delay@x:	; 2 bytes @ 0x0
   738                           	global	setLCD@number
   739  0070                     setLCD@number:	; 2 bytes @ 0x0
   740                           	global	strcmp@s2
   741  0070                     strcmp@s2:	; 2 bytes @ 0x0
   742                           	global	strcpy@from
   743  0070                     strcpy@from:	; 2 bytes @ 0x0
   744                           	global	___wmul@multiplier
   745  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   746                           	global	___awdiv@divisor
   747  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   748                           	global	___awmod@divisor
   749  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   750  0070                     	ds	1
   751                           	global	??_strcat
   752  0071                     ??_strcat:	; 0 bytes @ 0x1
   753  0071                     	ds	1
   754                           	global	??_strcpy
   755  0072                     ??_strcpy:	; 0 bytes @ 0x2
   756                           	global	??_strcmp
   757  0072                     ??_strcmp:	; 0 bytes @ 0x2
   758                           	global	??_check
   759  0072                     ??_check:	; 0 bytes @ 0x2
   760                           	global	??_setLCD
   761  0072                     ??_setLCD:	; 0 bytes @ 0x2
   762                           	global	?_actrow
   763  0072                     ?_actrow:	; 0 bytes @ 0x2
   764                           	global	??_delay
   765  0072                     ??_delay:	; 0 bytes @ 0x2
   766                           	global	strcat@to
   767  0072                     strcat@to:	; 1 bytes @ 0x2
   768                           	global	actrow@n
   769  0072                     actrow@n:	; 2 bytes @ 0x2
   770                           	global	___wmul@multiplicand
   771  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   772                           	global	___awdiv@dividend
   773  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   774                           	global	___awmod@dividend
   775  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   776  0072                     	ds	1
   777                           	global	check@input
   778  0073                     check@input:	; 1 bytes @ 0x3
   779                           	global	strcat@cp
   780  0073                     strcat@cp:	; 1 bytes @ 0x3
   781  0073                     	ds	1
   782                           	global	??_actrow
   783  0074                     ??_actrow:	; 0 bytes @ 0x4
   784                           	global	??___wmul
   785  0074                     ??___wmul:	; 0 bytes @ 0x4
   786                           	global	??___awdiv
   787  0074                     ??___awdiv:	; 0 bytes @ 0x4
   788                           	global	??___awmod
   789  0074                     ??___awmod:	; 0 bytes @ 0x4
   790                           	global	?_scan
   791  0074                     ?_scan:	; 2 bytes @ 0x4
   792                           	global	check@i
   793  0074                     check@i:	; 2 bytes @ 0x4
   794                           	global	___wmul@product
   795  0074                     ___wmul@product:	; 2 bytes @ 0x4
   796  0074                     	ds	1
   797                           	global	strcpy@to
   798  0075                     strcpy@to:	; 1 bytes @ 0x5
   799                           	global	___awdiv@counter
   800  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   801                           	global	___awmod@counter
   802  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   803  0075                     	ds	1
   804                           	global	??_scan
   805  0076                     ??_scan:	; 0 bytes @ 0x6
   806                           	global	strcmp@r
   807  0076                     strcmp@r:	; 1 bytes @ 0x6
   808                           	global	strcpy@cp
   809  0076                     strcpy@cp:	; 1 bytes @ 0x6
   810                           	global	___awdiv@sign
   811  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   812                           	global	___awmod@sign
   813  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   814  0076                     	ds	1
   815                           	global	strcmp@s1
   816  0077                     strcmp@s1:	; 1 bytes @ 0x7
   817                           	global	___awdiv@quotient
   818  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   819  0077                     	ds	1
   820                           	global	?_cmd
   821  0078                     ?_cmd:	; 0 bytes @ 0x8
   822                           	global	?_dat
   823  0078                     ?_dat:	; 0 bytes @ 0x8
   824                           	global	cmd@Command
   825  0078                     cmd@Command:	; 2 bytes @ 0x8
   826                           	global	dat@Command
   827  0078                     dat@Command:	; 2 bytes @ 0x8
   828  0078                     	ds	1
   829                           	global	?_itoaa
   830  0079                     ?_itoaa:	; 2 bytes @ 0x9
   831                           	global	itoaa@value
   832  0079                     itoaa@value:	; 2 bytes @ 0x9
   833  0079                     	ds	1
   834                           	global	??_initlcd
   835  007A                     ??_initlcd:	; 0 bytes @ 0xA
   836                           	global	??_write
   837  007A                     ??_write:	; 0 bytes @ 0xA
   838                           	global	??_cmd
   839  007A                     ??_cmd:	; 0 bytes @ 0xA
   840                           	global	??_clearlcd
   841  007A                     ??_clearlcd:	; 0 bytes @ 0xA
   842                           	global	??_dat
   843  007A                     ??_dat:	; 0 bytes @ 0xA
   844  007A                     	ds	1
   845                           	global	itoaa@ptr
   846  007B                     itoaa@ptr:	; 1 bytes @ 0xB
   847  007B                     	ds	1
   848                           	global	??_itoaa
   849  007C                     ??_itoaa:	; 0 bytes @ 0xC
   850                           	global	write@i
   851  007C                     write@i:	; 2 bytes @ 0xC
   852  007C                     	ds	2
   853                           	global	??_main
   854  007E                     ??_main:	; 0 bytes @ 0xE
   855                           psect	cstackBANK0,class=BANK0,space=1
   856                           global __pcstackBANK0
   857  0020                     __pcstackBANK0:
   858                           	global	itoaa@count
   859  0020                     itoaa@count:	; 2 bytes @ 0x0
   860                           	global	setLCD@vbool
   861  0020                     setLCD@vbool:	; 32 bytes @ 0x0
   862  0020                     	ds	2
   863                           	global	itoaa@temp
   864  0022                     itoaa@temp:	; 2 bytes @ 0x2
   865  0022                     	ds	30
   866                           	global	setLCD@i
   867  0040                     setLCD@i:	; 2 bytes @ 0x20
   868  0040                     	ds	2
   869                           	global	?_write
   870  0042                     ?_write:	; 0 bytes @ 0x22
   871                           	global	write@str
   872  0042                     write@str:	; 2 bytes @ 0x22
   873  0042                     	ds	2
   874                           	global	write@line
   875  0044                     write@line:	; 2 bytes @ 0x24
   876  0044                     	ds	2
   877                           	global	write@erase
   878  0046                     write@erase:	; 2 bytes @ 0x26
   879  0046                     	ds	2
   880                           	global	?_scroll
   881  0048                     ?_scroll:	; 0 bytes @ 0x28
   882                           	global	??_startswitch
   883  0048                     ??_startswitch:	; 0 bytes @ 0x28
   884                           	global	scroll@loops
   885  0048                     scroll@loops:	; 2 bytes @ 0x28
   886  0048                     	ds	2
   887                           	global	??_scroll
   888  004A                     ??_scroll:	; 0 bytes @ 0x2A
   889  004A                     	ds	3
   890                           	global	scroll@st
   891  004D                     scroll@st:	; 2 bytes @ 0x2D
   892  004D                     	ds	2
   893                           	global	scroll@en
   894  004F                     scroll@en:	; 2 bytes @ 0x2F
   895  004F                     	ds	2
   896                           	global	scroll@startat
   897  0051                     scroll@startat:	; 2 bytes @ 0x31
   898  0051                     	ds	2
   899                           	global	scroll@endat
   900  0053                     scroll@endat:	; 2 bytes @ 0x33
   901  0053                     	ds	2
   902                           	global	scroll@loopn
   903  0055                     scroll@loopn:	; 2 bytes @ 0x35
   904  0055                     	ds	2
   905                           	global	scroll@str
   906  0057                     scroll@str:	; 1 bytes @ 0x37
   907  0057                     	ds	1
   908                           	global	scroll@len
   909  0058                     scroll@len:	; 2 bytes @ 0x38
   910  0058                     	ds	2
   911                           	global	scroll@i
   912  005A                     scroll@i:	; 2 bytes @ 0x3A
   913  005A                     	ds	2
   914                           	global	??_getlogicseq
   915  005C                     ??_getlogicseq:	; 0 bytes @ 0x3C
   916  005C                     	ds	4
   917 ;;Data sizes: Strings 203, constant 2, data 30, bss 22, persistent 0 stack 0
   918 ;;Auto spaces:   Size  Autos    Used
   919 ;; COMMON          14     14      14
   920 ;; BANK0           80     64      80
   921 ;; BANK1           80     58      78
   922 ;; BANK3           96      0      16
   923 ;; BANK2           96      0       0
   924                           
   925 ;;
   926 ;; Pointer list with targets:
   927                           
   928 ;; ?___awmod	int  size(1) Largest target is 0
   929 ;;
   930 ;; ?___awdiv	int  size(1) Largest target is 0
   931 ;;
   932 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   933 ;;
   934 ;; ?_strcat	PTR unsigned char  size(1) Largest target is 5
   935 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
   936 ;;
   937 ;; ?_itoaa	int  size(1) Largest target is 0
   938 ;;
   939 ;; ?_strcmp	int  size(1) Largest target is 0
   940 ;;
   941 ;; ?_strcpy	PTR unsigned char  size(1) Largest target is 32
   942 ;;		 -> getlogicseq@str(BANK1[32]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
   943 ;;		 -> logic_d1(BANK0[5]), lo(BANK0[5]), plo(BANK1[5]), 
   944 ;;
   945 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 20
   946 ;;		 -> STR_15(CODE[1]), STR_14(CODE[20]), STR_12(CODE[1]), STR_11(CODE[20]), 
   947 ;;		 -> STR_9(CODE[1]), STR_8(CODE[20]), STR_6(CODE[1]), STR_5(CODE[20]), 
   948 ;;		 -> STR_1(CODE[5]), lo(BANK0[5]), 
   949 ;;
   950 ;; strcpy@to	PTR unsigned char  size(1) Largest target is 32
   951 ;;		 -> getlogicseq@str(BANK1[32]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
   952 ;;		 -> logic_d1(BANK0[5]), lo(BANK0[5]), plo(BANK1[5]), 
   953 ;;
   954 ;; strcpy@cp	PTR unsigned char  size(1) Largest target is 32
   955 ;;		 -> getlogicseq@str(BANK1[32]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
   956 ;;		 -> logic_d1(BANK0[5]), lo(BANK0[5]), plo(BANK1[5]), 
   957 ;;
   958 ;; strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
   959 ;;		 -> STR_32(CODE[5]), STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[5]), 
   960 ;;		 -> STR_28(CODE[5]), STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[5]), 
   961 ;;		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[5]), 
   962 ;;		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), 
   963 ;;		 -> STR_3(CODE[5]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
   964 ;;		 -> logic_d1(BANK0[5]), STR_2(CODE[5]), plo(BANK1[5]), 
   965 ;;
   966 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
   967 ;;		 -> lo(BANK0[5]), 
   968 ;;
   969 ;; strcat@from	PTR const unsigned char  size(1) Largest target is 16
   970 ;;		 -> getlogicseq@snum(BANK1[16]), 
   971 ;;
   972 ;; strcat@to	PTR unsigned char  size(1) Largest target is 5
   973 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
   974 ;;
   975 ;; strcat@cp	PTR unsigned char  size(1) Largest target is 5
   976 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
   977 ;;
   978 ;; scroll@str	PTR unsigned char  size(1) Largest target is 38
   979 ;;		 -> STR_4(CODE[38]), 
   980 ;;
   981 ;; write@str	PTR unsigned char  size(2) Largest target is 38
   982 ;;		 -> STR_16(CODE[5]), STR_13(CODE[5]), STR_10(CODE[5]), STR_7(CODE[5]), 
   983 ;;		 -> getlogicseq@str(BANK1[32]), STR_4(CODE[38]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), 
   984 ;;		 -> logic_d2(BANK1[5]), logic_d1(BANK0[5]), lo(BANK0[5]), 
   985 ;;
   986 ;; itoaa@ptr	PTR unsigned char  size(1) Largest target is 16
   987 ;;		 -> getlogicseq@snum(BANK1[16]), 
   988 ;;
   989 ;; check@logic	PTR unsigned char  size(1) Largest target is 5
   990 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
   991 ;;
   992 ;; check@input	PTR unsigned char  size(1) Largest target is 5
   993 ;;		 -> lo(BANK0[5]), 
   994 ;;
   995 ;; sp__strcat	PTR unsigned char  size(1) Largest target is 5
   996 ;;		 -> logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), logic_d1(BANK0[5]), 
   997 ;;
   998 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 32
   999 ;;		 -> getlogicseq@str(BANK1[32]), logic_d4(BANK1[5]), logic_d3(BANK1[5]), logic_d2(BANK1[5]), 
  1000 ;;		 -> logic_d1(BANK0[5]), lo(BANK0[5]), plo(BANK1[5]), 
  1001 ;;
  1002                           
  1003                           
  1004 ;;
  1005 ;; Critical Paths under _main in COMMON
  1006 ;;
  1007 ;;   _getlogicseq->_write
  1008 ;;   _scroll->_write
  1009 ;;   _startswitch->_write
  1010 ;;   _write->_cmd
  1011 ;;   _write->_dat
  1012 ;;   _clearlcd->_cmd
  1013 ;;   _scan->_actrow
  1014 ;;   _initlcd->_cmd
  1015 ;;   _actrow->_delay
  1016 ;;   _dat->_setLCD
  1017 ;;   _cmd->_setLCD
  1018 ;;   _itoaa->___awdiv
  1019 ;;
  1020 ;; Critical Paths under _main in BANK0
  1021 ;;
  1022 ;;   _main->_getlogicseq
  1023 ;;   _getlogicseq->_scroll
  1024 ;;   _scroll->_write
  1025 ;;   _startswitch->_write
  1026 ;;   _dat->_setLCD
  1027 ;;   _cmd->_setLCD
  1028 ;;
  1029 ;; Critical Paths under _main in BANK1
  1030 ;;
  1031 ;;   _main->_getlogicseq
  1032 ;;
  1033 ;; Critical Paths under _main in BANK3
  1034 ;;
  1035 ;;   None.
  1036 ;;
  1037 ;; Critical Paths under _main in BANK2
  1038 ;;
  1039 ;;   None.
  1040                           
  1041 ;;
  1042 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1043 ;;
  1044                           
  1045 ;;
  1046 ;;Call Graph Tables:
  1047 ;;
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1050 ;; ---------------------------------------------------------------------------------
  1051 ;; (0) _main                                                 0     0      0    7484
  1052 ;;                            _initlcd
  1053 ;;                         _initkeypad
  1054 ;;                           _init_fun
  1055 ;;                        _getlogicseq
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (1) _getlogicseq                                         62    62      0    7120
  1058 ;;                                             60 BANK0      4     4      0
  1059 ;;                                              0 BANK1     58    58      0
  1060 ;;                             _scroll
  1061 ;;                             _strcpy
  1062 ;;                              _write
  1063 ;;                               _scan
  1064 ;;                              _itoaa
  1065 ;;                             _strcat
  1066 ;;                        _startswitch
  1067 ;; ---------------------------------------------------------------------------------
  1068 ;; (2) _scroll                                              52    50      2    1820
  1069 ;;                                             40 BANK0     20    18      2
  1070 ;;                              _write
  1071 ;;                              _delay
  1072 ;;                                _cmd
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (2) _startswitch                                          1     1      0    1523
  1075 ;;                                             40 BANK0      1     1      0
  1076 ;;                             _strcpy
  1077 ;;                             _strcmp
  1078 ;;                              _check
  1079 ;;                              _write
  1080 ;; ---------------------------------------------------------------------------------
  1081 ;; (3) _write                                               10     4      6    1226
  1082 ;;                                             10 COMMON     4     4      0
  1083 ;;                                             34 BANK0      6     0      6
  1084 ;;                           _clearlcd
  1085 ;;                                _cmd
  1086 ;;                                _dat
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (4) _clearlcd                                             0     0      0     364
  1089 ;;                                _cmd
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (2) _scan                                                 2     0      2     110
  1092 ;;                                              4 COMMON     2     0      2
  1093 ;;                             _actrow
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (1) _initlcd                                              0     0      0     364
  1096 ;;                                _cmd
  1097 ;; ---------------------------------------------------------------------------------
  1098 ;; (3) _actrow                                               2     0      2     110
  1099 ;;                                              2 COMMON     2     0      2
  1100 ;;                           _resetout
  1101 ;;                              _delay
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (4) _dat                                                  2     0      2     364
  1104 ;;                                              8 COMMON     2     0      2
  1105 ;;                             _setLCD
  1106 ;;                              _delay
  1107 ;; ---------------------------------------------------------------------------------
  1108 ;; (4) _cmd                                                  2     0      2     364
  1109 ;;                                              8 COMMON     2     0      2
  1110 ;;                             _setLCD
  1111 ;;                              _delay
  1112 ;; ---------------------------------------------------------------------------------
  1113 ;; (2) _itoaa                                                8     5      3    1078
  1114 ;;                                              9 COMMON     4     1      3
  1115 ;;                                              0 BANK0      4     4      0
  1116 ;;                             ___wmul
  1117 ;;                            ___awdiv
  1118 ;;                            ___awmod
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; (3) ___awmod                                              7     3      4     296
  1121 ;;                                              0 COMMON     7     3      4
  1122 ;; ---------------------------------------------------------------------------------
  1123 ;; (3) ___awdiv                                              9     5      4     300
  1124 ;;                                              0 COMMON     9     5      4
  1125 ;; ---------------------------------------------------------------------------------
  1126 ;; (3) ___wmul                                               6     2      4      92
  1127 ;;                                              0 COMMON     6     2      4
  1128 ;; ---------------------------------------------------------------------------------
  1129 ;; (4) _resetout                                             0     0      0       0
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (6) _setLCD                                              42    40      2     320
  1132 ;;                                              0 COMMON     8     6      2
  1133 ;;                                              0 BANK0     34    34      0
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; (5) _delay                                                2     0      2      22
  1136 ;;                                              0 COMMON     2     0      2
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (2) _strcat                                               4     3      1      96
  1139 ;;                                              0 COMMON     4     3      1
  1140 ;; ---------------------------------------------------------------------------------
  1141 ;; (3) _check                                                6     4      2     135
  1142 ;;                                              0 COMMON     6     4      2
  1143 ;; ---------------------------------------------------------------------------------
  1144 ;; (4) _strcmp                                               8     6      2      89
  1145 ;;                                              0 COMMON     8     6      2
  1146 ;; ---------------------------------------------------------------------------------
  1147 ;; (4) _strcpy                                               7     5      2      73
  1148 ;;                                              0 COMMON     7     5      2
  1149 ;; ---------------------------------------------------------------------------------
  1150 ;; (1) _init_fun                                             0     0      0       0
  1151 ;; ---------------------------------------------------------------------------------
  1152 ;; (1) _initkeypad                                           0     0      0       0
  1153 ;; ---------------------------------------------------------------------------------
  1154 ;; Estimated maximum stack depth 6
  1155 ;; ---------------------------------------------------------------------------------
  1156                           
  1157 ;; Call Graph Graphs:
  1158                           
  1159 ;; _main (ROOT)
  1160 ;;   _initlcd
  1161 ;;     _cmd
  1162 ;;       _setLCD
  1163 ;;       _delay
  1164 ;;   _initkeypad
  1165 ;;   _init_fun
  1166 ;;   _getlogicseq
  1167 ;;     _scroll
  1168 ;;       _write
  1169 ;;         _clearlcd
  1170 ;;           _cmd
  1171 ;;             _setLCD
  1172 ;;             _delay
  1173 ;;         _cmd
  1174 ;;           _setLCD
  1175 ;;           _delay
  1176 ;;         _dat
  1177 ;;           _setLCD
  1178 ;;           _delay
  1179 ;;       _delay
  1180 ;;       _cmd
  1181 ;;         _setLCD
  1182 ;;         _delay
  1183 ;;     _strcpy
  1184 ;;     _write
  1185 ;;       _clearlcd
  1186 ;;         _cmd
  1187 ;;           _setLCD
  1188 ;;           _delay
  1189 ;;       _cmd
  1190 ;;         _setLCD
  1191 ;;         _delay
  1192 ;;       _dat
  1193 ;;         _setLCD
  1194 ;;         _delay
  1195 ;;     _scan
  1196 ;;       _actrow
  1197 ;;         _resetout
  1198 ;;         _delay
  1199 ;;     _itoaa
  1200 ;;       ___wmul
  1201 ;;       ___awdiv
  1202 ;;       ___awmod
  1203 ;;     _strcat
  1204 ;;     _startswitch
  1205 ;;       _strcpy
  1206 ;;       _strcmp
  1207 ;;       _check
  1208 ;;       _write
  1209 ;;         _clearlcd
  1210 ;;           _cmd
  1211 ;;             _setLCD
  1212 ;;             _delay
  1213 ;;         _cmd
  1214 ;;           _setLCD
  1215 ;;           _delay
  1216 ;;         _dat
  1217 ;;           _setLCD
  1218 ;;           _delay
  1219 ;;
  1220                           
  1221 ;; Address spaces:
  1222                           
  1223 ;;Name               Size   Autos  Total    Cost      Usage
  1224 ;;BANK3               60      0      10       9       16.7%
  1225 ;;BITBANK3            60      0       0       8        0.0%
  1226 ;;SFR3                 0      0       0       4        0.0%
  1227 ;;BITSFR3              0      0       0       4        0.0%
  1228 ;;BANK2               60      0       0      11        0.0%
  1229 ;;BITBANK2            60      0       0      10        0.0%
  1230 ;;SFR2                 0      0       0       5        0.0%
  1231 ;;BITSFR2              0      0       0       5        0.0%
  1232 ;;SFR1                 0      0       0       2        0.0%
  1233 ;;BITSFR1              0      0       0       2        0.0%
  1234 ;;BANK1               50     3A      4E       7       97.5%
  1235 ;;BITBANK1            50      0       0       6        0.0%
  1236 ;;CODE                 0      0       0       0        0.0%
  1237 ;;DATA                 0      0      C3      12        0.0%
  1238 ;;ABS                  0      0      BC       3        0.0%
  1239 ;;NULL                 0      0       0       0        0.0%
  1240 ;;STACK                0      0       7       2        0.0%
  1241 ;;BANK0               50     40      50       5      100.0%
  1242 ;;BITBANK0            50      0       0       4        0.0%
  1243 ;;SFR0                 0      0       0       1        0.0%
  1244 ;;BITSFR0              0      0       0       1        0.0%
  1245 ;;COMMON               E      E       E       1      100.0%
  1246 ;;BITCOMMON            E      0       0       0        0.0%
  1247 ;;EEDATA             100      0       0       0        0.0%
  1248                           
  1249                           	global	_main
  1250                           psect	maintext,global,class=CODE,delta=2
  1251                           global __pmaintext
  1252  0B2F                     __pmaintext:
  1253                           
  1254 ;; *************** function _main *****************
  1255 ;; Defined at:
  1256 ;;		line 84 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2  688[COMMON] int 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 17F/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0
  1273 ;;      Totals:         0       0       0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels required when called:    7
  1276 ;; This function calls:
  1277 ;;		_initlcd
  1278 ;;		_initkeypad
  1279 ;;		_init_fun
  1280 ;;		_getlogicseq
  1281 ;; This function is called by:
  1282 ;;		Startup code after reset
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           psect	maintext
  1286                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  1287                           	line	84
  1288                           	global	__size_of_main
  1289  0019                     	__size_of_main	equ	__end_of_main-_main
  1290                           	
  1291  0B2F                     _main:	
  1292                           	opt	stack 1
  1293                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1294                           	line	88
  1295                           	
  1296  0B2F                     l3641:	
  1297                           ;prev04.c: 88: initlcd();
  1298  0B2F  120A  158A  2457   	fcall	_initlcd
              120A  158A         
  1299                           	line	89
  1300                           	
  1301  0B34                     l3643:	
  1302                           ;prev04.c: 89: initkeypad();
  1303  0B34  120A  158A  22D2   	fcall	_initkeypad
              120A  158A         
  1304                           	line	90
  1305                           	
  1306  0B39                     l3645:	
  1307                           ;prev04.c: 90: init_fun();
  1308  0B39  120A  158A  2348   	fcall	_init_fun
              120A  158A         
  1309                           	line	100
  1310                           ;prev04.c: 100: while(1){
  1311                           	
  1312  0B3E                     l689:	
  1313                           	line	102
  1314                           ;prev04.c: 102: getlogicseq();
  1315  0B3E  120A  118A  2411   	fcall	_getlogicseq
              120A  158A         
  1316  0B43  2B3E               	goto	l689
  1317                           	line	103
  1318                           	
  1319  0B44                     l690:	
  1320                           	line	100
  1321  0B44  2B3E               	goto	l689
  1322                           	
  1323  0B45                     l691:	
  1324                           	line	109
  1325                           	
  1326  0B45                     l692:	
  1327                           	global	start
  1328  0B45  120A  118A  2800   	ljmp	start
  1329                           	opt stack 0
  1330                           GLOBAL	__end_of_main
  1331  0B48                     	__end_of_main:
  1332 ;; =============== function _main ends ============
  1333                           
  1334                           	signat	_main,90
  1335                           	global	_getlogicseq
  1336                           psect	text532,local,class=CODE,delta=2
  1337                           global __ptext532
  1338  0411                     __ptext532:
  1339                           
  1340 ;; *************** function _getlogicseq *****************
  1341 ;; Defined at:
  1342 ;;		line 210 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  str            32    0[BANK1 ] unsigned char [32]
  1347 ;;  snum           16   34[BANK1 ] unsigned char [16]
  1348 ;;  num             2   56[BANK1 ] int 
  1349 ;;  ccount          2   54[BANK1 ] int 
  1350 ;;  wf              2   52[BANK1 ] int 
  1351 ;;  nf              2   50[BANK1 ] int 
  1352 ;;  bf              2   32[BANK1 ] int 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;		None               void
  1355 ;; Registers used:
  1356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       0      58       0       0
  1364 ;;      Temps:          0       4       0       0       0
  1365 ;;      Totals:         0       4      58       0       0
  1366 ;;Total ram usage:       62 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    6
  1369 ;; This function calls:
  1370 ;;		_scroll
  1371 ;;		_strcpy
  1372 ;;		_write
  1373 ;;		_scan
  1374 ;;		_itoaa
  1375 ;;		_strcat
  1376 ;;		_startswitch
  1377 ;; This function is called by:
  1378 ;;		_main
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           psect	text532
  1382                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  1383                           	line	210
  1384                           	global	__size_of_getlogicseq
  1385  03EF                     	__size_of_getlogicseq	equ	__end_of_getlogicseq-_getlogicseq
  1386                           	
  1387  0411                     _getlogicseq:	
  1388                           	opt	stack 1
  1389                           ; Regs used in _getlogicseq: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1390                           	line	213
  1391                           	
  1392  0411                     l3449:	
  1393                           ;prev04.c: 213: scroll("WELCOME ! TO PROGRAMABLE HOME AUTMATN",0);
  1394  0411  3000               	movlw	low(0)
  1395  0412  1283               	bcf	status, 5	;RP0=0, select bank0
  1396  0413  1303               	bcf	status, 6	;RP1=0, select bank0
  1397  0414  00C8               	movwf	(?_scroll)
  1398  0415  3000               	movlw	high(0)
  1399  0416  00C9               	movwf	((?_scroll))+1
  1400  0417  3003               	movlw	((STR_4-__stringbase))&0ffh
  1401  0418  120A  158A  264A   	fcall	_scroll
              120A  118A         
  1402                           	line	218
  1403                           	
  1404  041D                     l3451:	
  1405                           ;prev04.c: 217: int num ;
  1406                           ;prev04.c: 218: char snum[16]="";
  1407  041D  30C2               	movlw	(getlogicseq@snum)&0ffh
  1408  041E  0084               	movwf	fsr0
  1409  041F  3090               	movlw	low(getlogicseq@F1263)
  1410  0420  1283               	bcf	status, 5	;RP0=0, select bank0
  1411  0421  1303               	bcf	status, 6	;RP1=0, select bank0
  1412  0422  00DC               	movwf	(??_getlogicseq+0)+0
  1413  0423  0804               	movf	fsr0,w
  1414  0424  00DD               	movwf	((??_getlogicseq+0)+0+1)
  1415  0425  3010               	movlw	16
  1416  0426  00DE               	movwf	((??_getlogicseq+0)+0+2)
  1417  0427                     u4640:
  1418  0427  085C               	movf	(??_getlogicseq+0)+0,w
  1419  0428  0084               	movwf	fsr0
  1420  0429  1783               	bsf	status, 7	;select IRP bank3
  1421                           	
  1422  042A  0800               	movf	indf,w
  1423  042B  00DF               	movwf	((??_getlogicseq+0)+0+3)
  1424  042C  0ADC               	incf	(??_getlogicseq+0)+0,f
  1425  042D  085D               	movf	((??_getlogicseq+0)+0+1),w
  1426  042E  0084               	movwf	fsr0
  1427  042F  1383               	bcf	status, 7	;select IRP bank1
  1428                           	
  1429  0430  085F               	movf	((??_getlogicseq+0)+0+3),w
  1430  0431  0080               	movwf	indf
  1431  0432  0ADD               	incf	((??_getlogicseq+0)+0+1),f
  1432  0433  0BDE               	decfsz	((??_getlogicseq+0)+0+2),f
  1433  0434  2C27               	goto	u4640
  1434                           	line	219
  1435                           	
  1436  0435                     l3453:	
  1437                           ;prev04.c: 219: int wf=0;
  1438  0435  1683               	bsf	status, 5	;RP0=1, select bank1
  1439  0436  1303               	bcf	status, 6	;RP1=0, select bank1
  1440  0437  01D4               	clrf	(getlogicseq@wf)^080h
  1441  0438  01D5               	clrf	(getlogicseq@wf+1)^080h
  1442                           	line	220
  1443                           	
  1444  0439                     l3455:	
  1445                           ;prev04.c: 220: int nf=0;
  1446  0439  01D2               	clrf	(getlogicseq@nf)^080h
  1447  043A  01D3               	clrf	(getlogicseq@nf+1)^080h
  1448                           	line	221
  1449                           	
  1450  043B                     l3457:	
  1451                           ;prev04.c: 221: int bf=0;
  1452  043B  01C0               	clrf	(getlogicseq@bf)^080h
  1453  043C  01C1               	clrf	(getlogicseq@bf+1)^080h
  1454                           	line	222
  1455                           	
  1456  043D                     l3459:	
  1457                           ;prev04.c: 222: int ccount=0;
  1458  043D  01D6               	clrf	(getlogicseq@ccount)^080h
  1459  043E  01D7               	clrf	(getlogicseq@ccount+1)^080h
  1460  043F  2C40               	goto	l3461
  1461                           	line	224
  1462                           ;prev04.c: 223: char str[32];
  1463                           ;prev04.c: 224: START_SEQ:
  1464                           	
  1465  0440                     l720:	
  1466                           	line	226
  1467                           	
  1468  0440                     l3461:	
  1469                           ;prev04.c: 226: wf=0;ccount=0;
  1470  0440  01D4               	clrf	(getlogicseq@wf)^080h
  1471  0441  01D5               	clrf	(getlogicseq@wf+1)^080h
  1472                           	
  1473  0442                     l3463:	
  1474  0442  01D6               	clrf	(getlogicseq@ccount)^080h
  1475  0443  01D7               	clrf	(getlogicseq@ccount+1)^080h
  1476                           	line	227
  1477                           	
  1478  0444                     l3465:	
  1479                           ;prev04.c: 227: strcpy(str,"Enter Logic DEV1:  ");
  1480  0444  3029               	movlw	low((STR_5-__stringbase))
  1481  0445  00F0               	movwf	(?_strcpy)
  1482  0446  3080               	movlw	80h
  1483  0447  00F1               	movwf	(?_strcpy+1)
  1484  0448  30A0               	movlw	(getlogicseq@str)&0ffh
  1485  0449  120A  158A  23AD   	fcall	_strcpy
              120A  118A         
  1486                           	line	228
  1487                           	
  1488  044E                     l3467:	
  1489                           ;prev04.c: 228: write(str,1,1);
  1490  044E  30A0               	movlw	(getlogicseq@str&0ffh)
  1491  044F  1283               	bcf	status, 5	;RP0=0, select bank0
  1492  0450  1303               	bcf	status, 6	;RP1=0, select bank0
  1493  0451  00C2               	movwf	(?_write)
  1494  0452  3000               	movlw	(0x1/2)
  1495  0453  00C3               	movwf	(?_write+1)
  1496  0454  3001               	movlw	low(01h)
  1497  0455  00C4               	movwf	0+(?_write)+02h
  1498  0456  3000               	movlw	high(01h)
  1499  0457  00C5               	movwf	(0+(?_write)+02h)+1
  1500  0458  3001               	movlw	low(01h)
  1501  0459  00C6               	movwf	0+(?_write)+04h
  1502  045A  3000               	movlw	high(01h)
  1503  045B  00C7               	movwf	(0+(?_write)+04h)+1
  1504  045C  120A  158A  250C   	fcall	_write
              120A  118A         
  1505                           	line	229
  1506                           	
  1507  0461                     l3469:	
  1508                           ;prev04.c: 229: write(logic_d1,2,0);
  1509  0461  3065               	movlw	(_logic_d1&0ffh)
  1510  0462  1283               	bcf	status, 5	;RP0=0, select bank0
  1511  0463  1303               	bcf	status, 6	;RP1=0, select bank0
  1512  0464  00C2               	movwf	(?_write)
  1513  0465  3000               	movlw	(0x0/2)
  1514  0466  00C3               	movwf	(?_write+1)
  1515  0467  3002               	movlw	low(02h)
  1516  0468  00C4               	movwf	0+(?_write)+02h
  1517  0469  3000               	movlw	high(02h)
  1518  046A  00C5               	movwf	(0+(?_write)+02h)+1
  1519  046B  3000               	movlw	low(0)
  1520  046C  00C6               	movwf	0+(?_write)+04h
  1521  046D  3000               	movlw	high(0)
  1522  046E  00C7               	movwf	(0+(?_write)+04h)+1
  1523  046F  120A  158A  250C   	fcall	_write
              120A  118A         
  1524  0474  2C75               	goto	l3471
  1525                           	line	231
  1526                           ;prev04.c: 231: while(1)
  1527                           	
  1528  0475                     l721:	
  1529                           	line	233
  1530                           	
  1531  0475                     l3471:	
  1532                           ;prev04.c: 232: {
  1533                           ;prev04.c: 233: num=scan();
  1534  0475  120A  158A  2718   	fcall	_scan
              120A  118A         
  1535  047A  0875               	movf	(1+(?_scan)),w
  1536  047B  1683               	bsf	status, 5	;RP0=1, select bank1
  1537  047C  1303               	bcf	status, 6	;RP1=0, select bank1
  1538  047D  01D9               	clrf	(getlogicseq@num+1)^080h
  1539  047E  07D9               	addwf	(getlogicseq@num+1)^080h
  1540  047F  0874               	movf	(0+(?_scan)),w
  1541  0480  01D8               	clrf	(getlogicseq@num)^080h
  1542  0481  07D8               	addwf	(getlogicseq@num)^080h
  1543                           
  1544                           	line	234
  1545                           	
  1546  0482                     l3473:	
  1547                           ;prev04.c: 234: if(num==1||num==0){
  1548  0482  3001               	movlw	01h
  1549  0483  0658               	xorwf	(getlogicseq@num)^080h,w
  1550  0484  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1551  0485  1903               	skipnz
  1552  0486  2C88               	goto	u4651
  1553  0487  2C89               	goto	u4650
  1554  0488                     u4651:
  1555  0488  2C90               	goto	l3477
  1556  0489                     u4650:
  1557                           	
  1558  0489                     l3475:	
  1559  0489  0859               	movf	((getlogicseq@num+1)^080h),w
  1560  048A  0458               	iorwf	((getlogicseq@num)^080h),w
  1561  048B  1D03               	skipz
  1562  048C  2C8E               	goto	u4661
  1563  048D  2C8F               	goto	u4660
  1564  048E                     u4661:
  1565  048E  2CF9               	goto	l3491
  1566  048F                     u4660:
  1567  048F  2C90               	goto	l3477
  1568                           	
  1569  0490                     l724:	
  1570                           	line	235
  1571                           	
  1572  0490                     l3477:	
  1573                           ;prev04.c: 235: if(wf==0)
  1574  0490  0855               	movf	((getlogicseq@wf+1)^080h),w
  1575  0491  0454               	iorwf	((getlogicseq@wf)^080h),w
  1576  0492  1D03               	skipz
  1577  0493  2C95               	goto	u4671
  1578  0494  2C96               	goto	u4670
  1579  0495                     u4671:
  1580  0495  2CFC               	goto	l3493
  1581  0496                     u4670:
  1582                           	line	237
  1583                           	
  1584  0496                     l3479:	
  1585                           ;prev04.c: 236: {
  1586                           ;prev04.c: 237: if(ccount==0)
  1587  0496  0857               	movf	((getlogicseq@ccount+1)^080h),w
  1588  0497  0456               	iorwf	((getlogicseq@ccount)^080h),w
  1589  0498  1D03               	skipz
  1590  0499  2C9B               	goto	u4681
  1591  049A  2C9C               	goto	u4680
  1592  049B                     u4681:
  1593  049B  2CA6               	goto	l726
  1594  049C                     u4680:
  1595                           	line	238
  1596                           	
  1597  049C                     l3481:	
  1598                           ;prev04.c: 238: strcpy(logic_d1,"");
  1599  049C  303C               	movlw	low((STR_6-__stringbase))
  1600  049D  00F0               	movwf	(?_strcpy)
  1601  049E  3080               	movlw	80h
  1602  049F  00F1               	movwf	(?_strcpy+1)
  1603  04A0  3065               	movlw	(_logic_d1)&0ffh
  1604  04A1  120A  158A  23AD   	fcall	_strcpy
              120A  118A         
  1605                           	
  1606  04A6                     l726:	
  1607                           	line	239
  1608                           ;prev04.c: 239: write("----",2,0);
  1609  04A6  3079               	movlw	low((STR_7-__stringbase))
  1610  04A7  1283               	bcf	status, 5	;RP0=0, select bank0
  1611  04A8  1303               	bcf	status, 6	;RP1=0, select bank0
  1612  04A9  00C2               	movwf	(?_write)
  1613  04AA  3080               	movlw	80h
  1614  04AB  00C3               	movwf	(?_write+1)
  1615  04AC  3002               	movlw	low(02h)
  1616  04AD  00C4               	movwf	0+(?_write)+02h
  1617  04AE  3000               	movlw	high(02h)
  1618  04AF  00C5               	movwf	(0+(?_write)+02h)+1
  1619  04B0  3000               	movlw	low(0)
  1620  04B1  00C6               	movwf	0+(?_write)+04h
  1621  04B2  3000               	movlw	high(0)
  1622  04B3  00C7               	movwf	(0+(?_write)+04h)+1
  1623  04B4  120A  158A  250C   	fcall	_write
              120A  118A         
  1624                           	line	240
  1625                           ;prev04.c: 240: itoaa(num, snum);
  1626  04B9  1683               	bsf	status, 5	;RP0=1, select bank1
  1627  04BA  1303               	bcf	status, 6	;RP1=0, select bank1
  1628  04BB  0859               	movf	(getlogicseq@num+1)^080h,w
  1629  04BC  01FA               	clrf	(?_itoaa+1)
  1630  04BD  07FA               	addwf	(?_itoaa+1)
  1631  04BE  0858               	movf	(getlogicseq@num)^080h,w
  1632  04BF  01F9               	clrf	(?_itoaa)
  1633  04C0  07F9               	addwf	(?_itoaa)
  1634                           
  1635  04C1  30C2               	movlw	(getlogicseq@snum)&0ffh
  1636  04C2  1283               	bcf	status, 5	;RP0=0, select bank0
  1637  04C3  1303               	bcf	status, 6	;RP1=0, select bank0
  1638  04C4  00DC               	movwf	(??_getlogicseq+0)+0
  1639  04C5  085C               	movf	(??_getlogicseq+0)+0,w
  1640  04C6  00FB               	movwf	0+(?_itoaa)+02h
  1641  04C7  120A  118A  2041   	fcall	_itoaa
              120A  118A         
  1642                           	line	241
  1643                           	
  1644  04CC                     l3483:	
  1645                           ;prev04.c: 241: strcat(logic_d1,snum);
  1646  04CC  30C2               	movlw	(getlogicseq@snum)&0ffh
  1647  04CD  1283               	bcf	status, 5	;RP0=0, select bank0
  1648  04CE  1303               	bcf	status, 6	;RP1=0, select bank0
  1649  04CF  00DC               	movwf	(??_getlogicseq+0)+0
  1650  04D0  085C               	movf	(??_getlogicseq+0)+0,w
  1651  04D1  00F0               	movwf	(?_strcat)
  1652  04D2  3065               	movlw	(_logic_d1)&0ffh
  1653  04D3  120A  158A  23D6   	fcall	_strcat
              120A  118A         
  1654                           	line	242
  1655                           	
  1656  04D8                     l3485:	
  1657                           ;prev04.c: 242: write( logic_d1,2,0); ;
  1658  04D8  3065               	movlw	(_logic_d1&0ffh)
  1659  04D9  1283               	bcf	status, 5	;RP0=0, select bank0
  1660  04DA  1303               	bcf	status, 6	;RP1=0, select bank0
  1661  04DB  00C2               	movwf	(?_write)
  1662  04DC  3000               	movlw	(0x0/2)
  1663  04DD  00C3               	movwf	(?_write+1)
  1664  04DE  3002               	movlw	low(02h)
  1665  04DF  00C4               	movwf	0+(?_write)+02h
  1666  04E0  3000               	movlw	high(02h)
  1667  04E1  00C5               	movwf	(0+(?_write)+02h)+1
  1668  04E2  3000               	movlw	low(0)
  1669  04E3  00C6               	movwf	0+(?_write)+04h
  1670  04E4  3000               	movlw	high(0)
  1671  04E5  00C7               	movwf	(0+(?_write)+04h)+1
  1672  04E6  120A  158A  250C   	fcall	_write
              120A  118A         
  1673                           	line	243
  1674                           	
  1675  04EB                     l3487:	
  1676                           ;prev04.c: 243: wf=1;
  1677  04EB  3001               	movlw	low(01h)
  1678  04EC  1683               	bsf	status, 5	;RP0=1, select bank1
  1679  04ED  1303               	bcf	status, 6	;RP1=0, select bank1
  1680  04EE  00D4               	movwf	(getlogicseq@wf)^080h
  1681  04EF  3000               	movlw	high(01h)
  1682  04F0  00D5               	movwf	((getlogicseq@wf)^080h)+1
  1683                           	line	244
  1684                           	
  1685  04F1                     l3489:	
  1686                           ;prev04.c: 244: ccount++;
  1687  04F1  3001               	movlw	low(01h)
  1688  04F2  07D6               	addwf	(getlogicseq@ccount)^080h,f
  1689  04F3  1803               	skipnc
  1690  04F4  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  1691  04F5  3000               	movlw	high(01h)
  1692  04F6  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  1693  04F7  2CFC               	goto	l3493
  1694                           	line	245
  1695                           	
  1696  04F8                     l725:	
  1697                           	line	246
  1698                           ;prev04.c: 245: }
  1699                           ;prev04.c: 246: }
  1700  04F8  2CFC               	goto	l3493
  1701                           	line	247
  1702                           	
  1703  04F9                     l722:	
  1704                           	line	248
  1705                           	
  1706  04F9                     l3491:	
  1707                           ;prev04.c: 247: else{
  1708                           ;prev04.c: 248: wf=0;
  1709  04F9  01D4               	clrf	(getlogicseq@wf)^080h
  1710  04FA  01D5               	clrf	(getlogicseq@wf+1)^080h
  1711  04FB  2CFC               	goto	l3493
  1712                           	line	249
  1713                           	
  1714  04FC                     l727:	
  1715                           	line	250
  1716                           	
  1717  04FC                     l3493:	
  1718                           ;prev04.c: 249: }
  1719                           ;prev04.c: 250: if(ccount>3)
  1720  04FC  0857               	movf	(getlogicseq@ccount+1)^080h,w
  1721  04FD  3A80               	xorlw	80h
  1722  04FE  00FF               	movwf	btemp+1
  1723  04FF  3080               	movlw	(high(04h))^80h
  1724  0500  027F               	subwf	btemp+1,w
  1725  0501  1D03               	skipz
  1726  0502  2D05               	goto	u4695
  1727  0503  3004               	movlw	low(04h)
  1728  0504  0256               	subwf	(getlogicseq@ccount)^080h,w
  1729  0505                     u4695:
  1730                           
  1731  0505  1C03               	skipc
  1732  0506  2D08               	goto	u4691
  1733  0507  2D09               	goto	u4690
  1734  0508                     u4691:
  1735  0508  2D0B               	goto	l3497
  1736  0509                     u4690:
  1737  0509  2D2D               	goto	l3507
  1738                           	line	251
  1739                           	
  1740  050A                     l3495:	
  1741                           ;prev04.c: 251: break;
  1742  050A  2D2D               	goto	l3507
  1743                           	
  1744  050B                     l728:	
  1745                           	line	254
  1746                           	
  1747  050B                     l3497:	
  1748                           ;prev04.c: 254: if(num==2)
  1749  050B  3002               	movlw	02h
  1750  050C  1683               	bsf	status, 5	;RP0=1, select bank1
  1751  050D  1303               	bcf	status, 6	;RP1=0, select bank1
  1752  050E  0658               	xorwf	(getlogicseq@num)^080h,w
  1753  050F  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1754  0510  1D03               	skipz
  1755  0511  2D13               	goto	u4701
  1756  0512  2D14               	goto	u4700
  1757  0513                     u4701:
  1758  0513  2D20               	goto	l3503
  1759  0514                     u4700:
  1760                           	line	256
  1761                           	
  1762  0514                     l3499:	
  1763                           ;prev04.c: 255: {
  1764                           ;prev04.c: 256: if(nf==0){
  1765  0514  0853               	movf	((getlogicseq@nf+1)^080h),w
  1766  0515  0452               	iorwf	((getlogicseq@nf)^080h),w
  1767  0516  1D03               	skipz
  1768  0517  2D19               	goto	u4711
  1769  0518  2D1A               	goto	u4710
  1770  0519                     u4711:
  1771  0519  2C75               	goto	l3471
  1772  051A                     u4710:
  1773                           	line	257
  1774                           	
  1775  051A                     l3501:	
  1776                           ;prev04.c: 257: nf=1;
  1777  051A  3001               	movlw	low(01h)
  1778  051B  00D2               	movwf	(getlogicseq@nf)^080h
  1779  051C  3000               	movlw	high(01h)
  1780  051D  00D3               	movwf	((getlogicseq@nf)^080h)+1
  1781                           	line	258
  1782                           ;prev04.c: 258: break;
  1783  051E  2D2D               	goto	l3507
  1784                           	line	259
  1785                           	
  1786  051F                     l731:	
  1787                           	line	260
  1788                           ;prev04.c: 259: }
  1789                           ;prev04.c: 260: }
  1790  051F  2C75               	goto	l3471
  1791                           	line	261
  1792                           	
  1793  0520                     l730:	
  1794                           	
  1795  0520                     l3503:	
  1796                           ;prev04.c: 261: else if(num==99){
  1797  0520  3063               	movlw	063h
  1798  0521  0658               	xorwf	(getlogicseq@num)^080h,w
  1799  0522  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1800  0523  1D03               	skipz
  1801  0524  2D26               	goto	u4721
  1802  0525  2D27               	goto	u4720
  1803  0526                     u4721:
  1804  0526  2C75               	goto	l3471
  1805  0527                     u4720:
  1806                           	line	262
  1807                           	
  1808  0527                     l3505:	
  1809                           ;prev04.c: 262: nf=0;
  1810  0527  01D2               	clrf	(getlogicseq@nf)^080h
  1811  0528  01D3               	clrf	(getlogicseq@nf+1)^080h
  1812  0529  2C75               	goto	l3471
  1813                           	line	263
  1814                           	
  1815  052A                     l733:	
  1816  052A  2C75               	goto	l3471
  1817                           	line	264
  1818                           	
  1819  052B                     l732:	
  1820  052B  2C75               	goto	l3471
  1821                           	
  1822  052C                     l734:	
  1823                           	line	231
  1824  052C  2C75               	goto	l3471
  1825                           	
  1826  052D                     l729:	
  1827                           	line	267
  1828                           	
  1829  052D                     l3507:	
  1830                           ;prev04.c: 263: }
  1831                           ;prev04.c: 264: }
  1832                           ;prev04.c: 267: wf=0;ccount=0;
  1833  052D  1683               	bsf	status, 5	;RP0=1, select bank1
  1834  052E  1303               	bcf	status, 6	;RP1=0, select bank1
  1835  052F  01D4               	clrf	(getlogicseq@wf)^080h
  1836  0530  01D5               	clrf	(getlogicseq@wf+1)^080h
  1837  0531  01D6               	clrf	(getlogicseq@ccount)^080h
  1838  0532  01D7               	clrf	(getlogicseq@ccount+1)^080h
  1839                           	line	268
  1840                           	
  1841  0533                     l3509:	
  1842                           ;prev04.c: 268: strcpy(str,"Enter Logic DEV2:  ");
  1843  0533  303D               	movlw	low((STR_8-__stringbase))
  1844  0534  00F0               	movwf	(?_strcpy)
  1845  0535  3080               	movlw	80h
  1846  0536  00F1               	movwf	(?_strcpy+1)
  1847  0537  30A0               	movlw	(getlogicseq@str)&0ffh
  1848  0538  120A  158A  23AD   	fcall	_strcpy
              120A  118A         
  1849                           	line	269
  1850                           	
  1851  053D                     l3511:	
  1852                           ;prev04.c: 269: write(str,1,1);
  1853  053D  30A0               	movlw	(getlogicseq@str&0ffh)
  1854  053E  1283               	bcf	status, 5	;RP0=0, select bank0
  1855  053F  1303               	bcf	status, 6	;RP1=0, select bank0
  1856  0540  00C2               	movwf	(?_write)
  1857  0541  3000               	movlw	(0x1/2)
  1858  0542  00C3               	movwf	(?_write+1)
  1859  0543  3001               	movlw	low(01h)
  1860  0544  00C4               	movwf	0+(?_write)+02h
  1861  0545  3000               	movlw	high(01h)
  1862  0546  00C5               	movwf	(0+(?_write)+02h)+1
  1863  0547  3001               	movlw	low(01h)
  1864  0548  00C6               	movwf	0+(?_write)+04h
  1865  0549  3000               	movlw	high(01h)
  1866  054A  00C7               	movwf	(0+(?_write)+04h)+1
  1867  054B  120A  158A  250C   	fcall	_write
              120A  118A         
  1868                           	line	270
  1869                           	
  1870  0550                     l3513:	
  1871                           ;prev04.c: 270: write(logic_d2,2,0);
  1872  0550  30DA               	movlw	(_logic_d2&0ffh)
  1873  0551  1283               	bcf	status, 5	;RP0=0, select bank0
  1874  0552  1303               	bcf	status, 6	;RP1=0, select bank0
  1875  0553  00C2               	movwf	(?_write)
  1876  0554  3000               	movlw	(0x1/2)
  1877  0555  00C3               	movwf	(?_write+1)
  1878  0556  3002               	movlw	low(02h)
  1879  0557  00C4               	movwf	0+(?_write)+02h
  1880  0558  3000               	movlw	high(02h)
  1881  0559  00C5               	movwf	(0+(?_write)+02h)+1
  1882  055A  3000               	movlw	low(0)
  1883  055B  00C6               	movwf	0+(?_write)+04h
  1884  055C  3000               	movlw	high(0)
  1885  055D  00C7               	movwf	(0+(?_write)+04h)+1
  1886  055E  120A  158A  250C   	fcall	_write
              120A  118A         
  1887  0563  2D64               	goto	l3515
  1888                           	line	272
  1889                           ;prev04.c: 272: while(1)
  1890                           	
  1891  0564                     l735:	
  1892                           	line	274
  1893                           	
  1894  0564                     l3515:	
  1895                           ;prev04.c: 273: {
  1896                           ;prev04.c: 274: num=scan();
  1897  0564  120A  158A  2718   	fcall	_scan
              120A  118A         
  1898  0569  0875               	movf	(1+(?_scan)),w
  1899  056A  1683               	bsf	status, 5	;RP0=1, select bank1
  1900  056B  1303               	bcf	status, 6	;RP1=0, select bank1
  1901  056C  01D9               	clrf	(getlogicseq@num+1)^080h
  1902  056D  07D9               	addwf	(getlogicseq@num+1)^080h
  1903  056E  0874               	movf	(0+(?_scan)),w
  1904  056F  01D8               	clrf	(getlogicseq@num)^080h
  1905  0570  07D8               	addwf	(getlogicseq@num)^080h
  1906                           
  1907                           	line	275
  1908                           	
  1909  0571                     l3517:	
  1910                           ;prev04.c: 275: if(num==1||num==0){
  1911  0571  3001               	movlw	01h
  1912  0572  0658               	xorwf	(getlogicseq@num)^080h,w
  1913  0573  0459               	iorwf	(getlogicseq@num+1)^080h,w
  1914  0574  1903               	skipnz
  1915  0575  2D77               	goto	u4731
  1916  0576  2D78               	goto	u4730
  1917  0577                     u4731:
  1918  0577  2D7F               	goto	l3521
  1919  0578                     u4730:
  1920                           	
  1921  0578                     l3519:	
  1922  0578  0859               	movf	((getlogicseq@num+1)^080h),w
  1923  0579  0458               	iorwf	((getlogicseq@num)^080h),w
  1924  057A  1D03               	skipz
  1925  057B  2D7D               	goto	u4741
  1926  057C  2D7E               	goto	u4740
  1927  057D                     u4741:
  1928  057D  2DE8               	goto	l3535
  1929  057E                     u4740:
  1930  057E  2D7F               	goto	l3521
  1931                           	
  1932  057F                     l738:	
  1933                           	line	276
  1934                           	
  1935  057F                     l3521:	
  1936                           ;prev04.c: 276: if(wf==0)
  1937  057F  0855               	movf	((getlogicseq@wf+1)^080h),w
  1938  0580  0454               	iorwf	((getlogicseq@wf)^080h),w
  1939  0581  1D03               	skipz
  1940  0582  2D84               	goto	u4751
  1941  0583  2D85               	goto	u4750
  1942  0584                     u4751:
  1943  0584  2DEB               	goto	l3537
  1944  0585                     u4750:
  1945                           	line	277
  1946                           	
  1947  0585                     l3523:	
  1948                           ;prev04.c: 277: { if(ccount==0)
  1949  0585  0857               	movf	((getlogicseq@ccount+1)^080h),w
  1950  0586  0456               	iorwf	((getlogicseq@ccount)^080h),w
  1951  0587  1D03               	skipz
  1952  0588  2D8A               	goto	u4761
  1953  0589  2D8B               	goto	u4760
  1954  058A                     u4761:
  1955  058A  2D95               	goto	l740
  1956  058B                     u4760:
  1957                           	line	278
  1958                           	
  1959  058B                     l3525:	
  1960                           ;prev04.c: 278: strcpy(logic_d2,"");
  1961  058B  303C               	movlw	low((STR_9-__stringbase))
  1962  058C  00F0               	movwf	(?_strcpy)
  1963  058D  3080               	movlw	80h
  1964  058E  00F1               	movwf	(?_strcpy+1)
  1965  058F  30DA               	movlw	(_logic_d2)&0ffh
  1966  0590  120A  158A  23AD   	fcall	_strcpy
              120A  118A         
  1967                           	
  1968  0595                     l740:	
  1969                           	line	279
  1970                           ;prev04.c: 279: write("----",2,0);
  1971  0595  3079               	movlw	low((STR_10-__stringbase))
  1972  0596  1283               	bcf	status, 5	;RP0=0, select bank0
  1973  0597  1303               	bcf	status, 6	;RP1=0, select bank0
  1974  0598  00C2               	movwf	(?_write)
  1975  0599  3080               	movlw	80h
  1976  059A  00C3               	movwf	(?_write+1)
  1977  059B  3002               	movlw	low(02h)
  1978  059C  00C4               	movwf	0+(?_write)+02h
  1979  059D  3000               	movlw	high(02h)
  1980  059E  00C5               	movwf	(0+(?_write)+02h)+1
  1981  059F  3000               	movlw	low(0)
  1982  05A0  00C6               	movwf	0+(?_write)+04h
  1983  05A1  3000               	movlw	high(0)
  1984  05A2  00C7               	movwf	(0+(?_write)+04h)+1
  1985  05A3  120A  158A  250C   	fcall	_write
              120A  118A         
  1986                           	line	280
  1987                           ;prev04.c: 280: itoaa(num, snum);
  1988  05A8  1683               	bsf	status, 5	;RP0=1, select bank1
  1989  05A9  1303               	bcf	status, 6	;RP1=0, select bank1
  1990  05AA  0859               	movf	(getlogicseq@num+1)^080h,w
  1991  05AB  01FA               	clrf	(?_itoaa+1)
  1992  05AC  07FA               	addwf	(?_itoaa+1)
  1993  05AD  0858               	movf	(getlogicseq@num)^080h,w
  1994  05AE  01F9               	clrf	(?_itoaa)
  1995  05AF  07F9               	addwf	(?_itoaa)
  1996                           
  1997  05B0  30C2               	movlw	(getlogicseq@snum)&0ffh
  1998  05B1  1283               	bcf	status, 5	;RP0=0, select bank0
  1999  05B2  1303               	bcf	status, 6	;RP1=0, select bank0
  2000  05B3  00DC               	movwf	(??_getlogicseq+0)+0
  2001  05B4  085C               	movf	(??_getlogicseq+0)+0,w
  2002  05B5  00FB               	movwf	0+(?_itoaa)+02h
  2003  05B6  120A  118A  2041   	fcall	_itoaa
              120A  118A         
  2004                           	line	281
  2005                           	
  2006  05BB                     l3527:	
  2007                           ;prev04.c: 281: strcat(logic_d2,snum);
  2008  05BB  30C2               	movlw	(getlogicseq@snum)&0ffh
  2009  05BC  1283               	bcf	status, 5	;RP0=0, select bank0
  2010  05BD  1303               	bcf	status, 6	;RP1=0, select bank0
  2011  05BE  00DC               	movwf	(??_getlogicseq+0)+0
  2012  05BF  085C               	movf	(??_getlogicseq+0)+0,w
  2013  05C0  00F0               	movwf	(?_strcat)
  2014  05C1  30DA               	movlw	(_logic_d2)&0ffh
  2015  05C2  120A  158A  23D6   	fcall	_strcat
              120A  118A         
  2016                           	line	282
  2017                           	
  2018  05C7                     l3529:	
  2019                           ;prev04.c: 282: write( logic_d2,2,0); ;
  2020  05C7  30DA               	movlw	(_logic_d2&0ffh)
  2021  05C8  1283               	bcf	status, 5	;RP0=0, select bank0
  2022  05C9  1303               	bcf	status, 6	;RP1=0, select bank0
  2023  05CA  00C2               	movwf	(?_write)
  2024  05CB  3000               	movlw	(0x1/2)
  2025  05CC  00C3               	movwf	(?_write+1)
  2026  05CD  3002               	movlw	low(02h)
  2027  05CE  00C4               	movwf	0+(?_write)+02h
  2028  05CF  3000               	movlw	high(02h)
  2029  05D0  00C5               	movwf	(0+(?_write)+02h)+1
  2030  05D1  3000               	movlw	low(0)
  2031  05D2  00C6               	movwf	0+(?_write)+04h
  2032  05D3  3000               	movlw	high(0)
  2033  05D4  00C7               	movwf	(0+(?_write)+04h)+1
  2034  05D5  120A  158A  250C   	fcall	_write
              120A  118A         
  2035                           	line	283
  2036                           	
  2037  05DA                     l3531:	
  2038                           ;prev04.c: 283: wf=1;
  2039  05DA  3001               	movlw	low(01h)
  2040  05DB  1683               	bsf	status, 5	;RP0=1, select bank1
  2041  05DC  1303               	bcf	status, 6	;RP1=0, select bank1
  2042  05DD  00D4               	movwf	(getlogicseq@wf)^080h
  2043  05DE  3000               	movlw	high(01h)
  2044  05DF  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2045                           	line	284
  2046                           	
  2047  05E0                     l3533:	
  2048                           ;prev04.c: 284: ccount++;
  2049  05E0  3001               	movlw	low(01h)
  2050  05E1  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2051  05E2  1803               	skipnc
  2052  05E3  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2053  05E4  3000               	movlw	high(01h)
  2054  05E5  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2055  05E6  2DEB               	goto	l3537
  2056                           	line	285
  2057                           	
  2058  05E7                     l739:	
  2059                           	line	286
  2060                           ;prev04.c: 285: }
  2061                           ;prev04.c: 286: }
  2062  05E7  2DEB               	goto	l3537
  2063                           	line	287
  2064                           	
  2065  05E8                     l736:	
  2066                           	line	288
  2067                           	
  2068  05E8                     l3535:	
  2069                           ;prev04.c: 287: else{
  2070                           ;prev04.c: 288: wf=0;
  2071  05E8  01D4               	clrf	(getlogicseq@wf)^080h
  2072  05E9  01D5               	clrf	(getlogicseq@wf+1)^080h
  2073  05EA  2DEB               	goto	l3537
  2074                           	line	289
  2075                           	
  2076  05EB                     l741:	
  2077                           	line	290
  2078                           	
  2079  05EB                     l3537:	
  2080                           ;prev04.c: 289: }
  2081                           ;prev04.c: 290: if(ccount>3)
  2082  05EB  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2083  05EC  3A80               	xorlw	80h
  2084  05ED  00FF               	movwf	btemp+1
  2085  05EE  3080               	movlw	(high(04h))^80h
  2086  05EF  027F               	subwf	btemp+1,w
  2087  05F0  1D03               	skipz
  2088  05F1  2DF4               	goto	u4775
  2089  05F2  3004               	movlw	low(04h)
  2090  05F3  0256               	subwf	(getlogicseq@ccount)^080h,w
  2091  05F4                     u4775:
  2092                           
  2093  05F4  1C03               	skipc
  2094  05F5  2DF7               	goto	u4771
  2095  05F6  2DF8               	goto	u4770
  2096  05F7                     u4771:
  2097  05F7  2DFA               	goto	l3541
  2098  05F8                     u4770:
  2099  05F8  2E1C               	goto	l3551
  2100                           	line	291
  2101                           	
  2102  05F9                     l3539:	
  2103                           ;prev04.c: 291: break;
  2104  05F9  2E1C               	goto	l3551
  2105                           	
  2106  05FA                     l742:	
  2107                           	line	293
  2108                           	
  2109  05FA                     l3541:	
  2110                           ;prev04.c: 293: if(num==2)
  2111  05FA  3002               	movlw	02h
  2112  05FB  1683               	bsf	status, 5	;RP0=1, select bank1
  2113  05FC  1303               	bcf	status, 6	;RP1=0, select bank1
  2114  05FD  0658               	xorwf	(getlogicseq@num)^080h,w
  2115  05FE  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2116  05FF  1D03               	skipz
  2117  0600  2E02               	goto	u4781
  2118  0601  2E03               	goto	u4780
  2119  0602                     u4781:
  2120  0602  2E0F               	goto	l3547
  2121  0603                     u4780:
  2122                           	line	295
  2123                           	
  2124  0603                     l3543:	
  2125                           ;prev04.c: 294: {
  2126                           ;prev04.c: 295: if(nf==0){
  2127  0603  0853               	movf	((getlogicseq@nf+1)^080h),w
  2128  0604  0452               	iorwf	((getlogicseq@nf)^080h),w
  2129  0605  1D03               	skipz
  2130  0606  2E08               	goto	u4791
  2131  0607  2E09               	goto	u4790
  2132  0608                     u4791:
  2133  0608  2D64               	goto	l3515
  2134  0609                     u4790:
  2135                           	line	296
  2136                           	
  2137  0609                     l3545:	
  2138                           ;prev04.c: 296: nf=1;
  2139  0609  3001               	movlw	low(01h)
  2140  060A  00D2               	movwf	(getlogicseq@nf)^080h
  2141  060B  3000               	movlw	high(01h)
  2142  060C  00D3               	movwf	((getlogicseq@nf)^080h)+1
  2143                           	line	297
  2144                           ;prev04.c: 297: break;
  2145  060D  2E1C               	goto	l3551
  2146                           	line	298
  2147                           	
  2148  060E                     l745:	
  2149                           	line	299
  2150                           ;prev04.c: 298: }
  2151                           ;prev04.c: 299: }
  2152  060E  2D64               	goto	l3515
  2153                           	line	300
  2154                           	
  2155  060F                     l744:	
  2156                           	
  2157  060F                     l3547:	
  2158                           ;prev04.c: 300: else if(num==99){
  2159  060F  3063               	movlw	063h
  2160  0610  0658               	xorwf	(getlogicseq@num)^080h,w
  2161  0611  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2162  0612  1D03               	skipz
  2163  0613  2E15               	goto	u4801
  2164  0614  2E16               	goto	u4800
  2165  0615                     u4801:
  2166  0615  2D64               	goto	l3515
  2167  0616                     u4800:
  2168                           	line	301
  2169                           	
  2170  0616                     l3549:	
  2171                           ;prev04.c: 301: nf=0;
  2172  0616  01D2               	clrf	(getlogicseq@nf)^080h
  2173  0617  01D3               	clrf	(getlogicseq@nf+1)^080h
  2174  0618  2D64               	goto	l3515
  2175                           	line	302
  2176                           	
  2177  0619                     l747:	
  2178  0619  2D64               	goto	l3515
  2179                           	line	303
  2180                           	
  2181  061A                     l746:	
  2182  061A  2D64               	goto	l3515
  2183                           	
  2184  061B                     l748:	
  2185                           	line	272
  2186  061B  2D64               	goto	l3515
  2187                           	
  2188  061C                     l743:	
  2189                           	line	306
  2190                           	
  2191  061C                     l3551:	
  2192                           ;prev04.c: 302: }
  2193                           ;prev04.c: 303: }
  2194                           ;prev04.c: 306: wf=0;ccount=0;
  2195  061C  1683               	bsf	status, 5	;RP0=1, select bank1
  2196  061D  1303               	bcf	status, 6	;RP1=0, select bank1
  2197  061E  01D4               	clrf	(getlogicseq@wf)^080h
  2198  061F  01D5               	clrf	(getlogicseq@wf+1)^080h
  2199  0620  01D6               	clrf	(getlogicseq@ccount)^080h
  2200  0621  01D7               	clrf	(getlogicseq@ccount+1)^080h
  2201                           	line	307
  2202                           	
  2203  0622                     l3553:	
  2204                           ;prev04.c: 307: strcpy(str,"Enter Logic DEV3:  ");
  2205  0622  3051               	movlw	low((STR_11-__stringbase))
  2206  0623  00F0               	movwf	(?_strcpy)
  2207  0624  3080               	movlw	80h
  2208  0625  00F1               	movwf	(?_strcpy+1)
  2209  0626  30A0               	movlw	(getlogicseq@str)&0ffh
  2210  0627  120A  158A  23AD   	fcall	_strcpy
              120A  118A         
  2211                           	line	308
  2212                           	
  2213  062C                     l3555:	
  2214                           ;prev04.c: 308: write(str,1,1);
  2215  062C  30A0               	movlw	(getlogicseq@str&0ffh)
  2216  062D  1283               	bcf	status, 5	;RP0=0, select bank0
  2217  062E  1303               	bcf	status, 6	;RP1=0, select bank0
  2218  062F  00C2               	movwf	(?_write)
  2219  0630  3000               	movlw	(0x1/2)
  2220  0631  00C3               	movwf	(?_write+1)
  2221  0632  3001               	movlw	low(01h)
  2222  0633  00C4               	movwf	0+(?_write)+02h
  2223  0634  3000               	movlw	high(01h)
  2224  0635  00C5               	movwf	(0+(?_write)+02h)+1
  2225  0636  3001               	movlw	low(01h)
  2226  0637  00C6               	movwf	0+(?_write)+04h
  2227  0638  3000               	movlw	high(01h)
  2228  0639  00C7               	movwf	(0+(?_write)+04h)+1
  2229  063A  120A  158A  250C   	fcall	_write
              120A  118A         
  2230                           	line	309
  2231                           	
  2232  063F                     l3557:	
  2233                           ;prev04.c: 309: write(logic_d3,2,0);
  2234  063F  30DF               	movlw	(_logic_d3&0ffh)
  2235  0640  1283               	bcf	status, 5	;RP0=0, select bank0
  2236  0641  1303               	bcf	status, 6	;RP1=0, select bank0
  2237  0642  00C2               	movwf	(?_write)
  2238  0643  3000               	movlw	(0x1/2)
  2239  0644  00C3               	movwf	(?_write+1)
  2240  0645  3002               	movlw	low(02h)
  2241  0646  00C4               	movwf	0+(?_write)+02h
  2242  0647  3000               	movlw	high(02h)
  2243  0648  00C5               	movwf	(0+(?_write)+02h)+1
  2244  0649  3000               	movlw	low(0)
  2245  064A  00C6               	movwf	0+(?_write)+04h
  2246  064B  3000               	movlw	high(0)
  2247  064C  00C7               	movwf	(0+(?_write)+04h)+1
  2248  064D  120A  158A  250C   	fcall	_write
              120A  118A         
  2249  0652  2E53               	goto	l3559
  2250                           	line	311
  2251                           ;prev04.c: 311: while(1)
  2252                           	
  2253  0653                     l749:	
  2254                           	line	313
  2255                           	
  2256  0653                     l3559:	
  2257                           ;prev04.c: 312: {
  2258                           ;prev04.c: 313: num=scan();
  2259  0653  120A  158A  2718   	fcall	_scan
              120A  118A         
  2260  0658  0875               	movf	(1+(?_scan)),w
  2261  0659  1683               	bsf	status, 5	;RP0=1, select bank1
  2262  065A  1303               	bcf	status, 6	;RP1=0, select bank1
  2263  065B  01D9               	clrf	(getlogicseq@num+1)^080h
  2264  065C  07D9               	addwf	(getlogicseq@num+1)^080h
  2265  065D  0874               	movf	(0+(?_scan)),w
  2266  065E  01D8               	clrf	(getlogicseq@num)^080h
  2267  065F  07D8               	addwf	(getlogicseq@num)^080h
  2268                           
  2269                           	line	314
  2270                           	
  2271  0660                     l3561:	
  2272                           ;prev04.c: 314: if(num==1||num==0){
  2273  0660  3001               	movlw	01h
  2274  0661  0658               	xorwf	(getlogicseq@num)^080h,w
  2275  0662  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2276  0663  1903               	skipnz
  2277  0664  2E66               	goto	u4811
  2278  0665  2E67               	goto	u4810
  2279  0666                     u4811:
  2280  0666  2E6E               	goto	l3565
  2281  0667                     u4810:
  2282                           	
  2283  0667                     l3563:	
  2284  0667  0859               	movf	((getlogicseq@num+1)^080h),w
  2285  0668  0458               	iorwf	((getlogicseq@num)^080h),w
  2286  0669  1D03               	skipz
  2287  066A  2E6C               	goto	u4821
  2288  066B  2E6D               	goto	u4820
  2289  066C                     u4821:
  2290  066C  2ED7               	goto	l3579
  2291  066D                     u4820:
  2292  066D  2E6E               	goto	l3565
  2293                           	
  2294  066E                     l752:	
  2295                           	line	315
  2296                           	
  2297  066E                     l3565:	
  2298                           ;prev04.c: 315: if(wf==0)
  2299  066E  0855               	movf	((getlogicseq@wf+1)^080h),w
  2300  066F  0454               	iorwf	((getlogicseq@wf)^080h),w
  2301  0670  1D03               	skipz
  2302  0671  2E73               	goto	u4831
  2303  0672  2E74               	goto	u4830
  2304  0673                     u4831:
  2305  0673  2EDA               	goto	l3581
  2306  0674                     u4830:
  2307                           	line	316
  2308                           	
  2309  0674                     l3567:	
  2310                           ;prev04.c: 316: { if(ccount==0)
  2311  0674  0857               	movf	((getlogicseq@ccount+1)^080h),w
  2312  0675  0456               	iorwf	((getlogicseq@ccount)^080h),w
  2313  0676  1D03               	skipz
  2314  0677  2E79               	goto	u4841
  2315  0678  2E7A               	goto	u4840
  2316  0679                     u4841:
  2317  0679  2E84               	goto	l754
  2318  067A                     u4840:
  2319                           	line	317
  2320                           	
  2321  067A                     l3569:	
  2322                           ;prev04.c: 317: strcpy(logic_d3,"");
  2323  067A  303C               	movlw	low((STR_12-__stringbase))
  2324  067B  00F0               	movwf	(?_strcpy)
  2325  067C  3080               	movlw	80h
  2326  067D  00F1               	movwf	(?_strcpy+1)
  2327  067E  30DF               	movlw	(_logic_d3)&0ffh
  2328  067F  120A  158A  23AD   	fcall	_strcpy
              120A  118A         
  2329                           	
  2330  0684                     l754:	
  2331                           	line	318
  2332                           ;prev04.c: 318: write("----",2,0);
  2333  0684  3079               	movlw	low((STR_13-__stringbase))
  2334  0685  1283               	bcf	status, 5	;RP0=0, select bank0
  2335  0686  1303               	bcf	status, 6	;RP1=0, select bank0
  2336  0687  00C2               	movwf	(?_write)
  2337  0688  3080               	movlw	80h
  2338  0689  00C3               	movwf	(?_write+1)
  2339  068A  3002               	movlw	low(02h)
  2340  068B  00C4               	movwf	0+(?_write)+02h
  2341  068C  3000               	movlw	high(02h)
  2342  068D  00C5               	movwf	(0+(?_write)+02h)+1
  2343  068E  3000               	movlw	low(0)
  2344  068F  00C6               	movwf	0+(?_write)+04h
  2345  0690  3000               	movlw	high(0)
  2346  0691  00C7               	movwf	(0+(?_write)+04h)+1
  2347  0692  120A  158A  250C   	fcall	_write
              120A  118A         
  2348                           	line	319
  2349                           ;prev04.c: 319: itoaa(num, snum);
  2350  0697  1683               	bsf	status, 5	;RP0=1, select bank1
  2351  0698  1303               	bcf	status, 6	;RP1=0, select bank1
  2352  0699  0859               	movf	(getlogicseq@num+1)^080h,w
  2353  069A  01FA               	clrf	(?_itoaa+1)
  2354  069B  07FA               	addwf	(?_itoaa+1)
  2355  069C  0858               	movf	(getlogicseq@num)^080h,w
  2356  069D  01F9               	clrf	(?_itoaa)
  2357  069E  07F9               	addwf	(?_itoaa)
  2358                           
  2359  069F  30C2               	movlw	(getlogicseq@snum)&0ffh
  2360  06A0  1283               	bcf	status, 5	;RP0=0, select bank0
  2361  06A1  1303               	bcf	status, 6	;RP1=0, select bank0
  2362  06A2  00DC               	movwf	(??_getlogicseq+0)+0
  2363  06A3  085C               	movf	(??_getlogicseq+0)+0,w
  2364  06A4  00FB               	movwf	0+(?_itoaa)+02h
  2365  06A5  120A  118A  2041   	fcall	_itoaa
              120A  118A         
  2366                           	line	320
  2367                           	
  2368  06AA                     l3571:	
  2369                           ;prev04.c: 320: strcat(logic_d3,snum);
  2370  06AA  30C2               	movlw	(getlogicseq@snum)&0ffh
  2371  06AB  1283               	bcf	status, 5	;RP0=0, select bank0
  2372  06AC  1303               	bcf	status, 6	;RP1=0, select bank0
  2373  06AD  00DC               	movwf	(??_getlogicseq+0)+0
  2374  06AE  085C               	movf	(??_getlogicseq+0)+0,w
  2375  06AF  00F0               	movwf	(?_strcat)
  2376  06B0  30DF               	movlw	(_logic_d3)&0ffh
  2377  06B1  120A  158A  23D6   	fcall	_strcat
              120A  118A         
  2378                           	line	321
  2379                           	
  2380  06B6                     l3573:	
  2381                           ;prev04.c: 321: write( logic_d3,2,0); ;
  2382  06B6  30DF               	movlw	(_logic_d3&0ffh)
  2383  06B7  1283               	bcf	status, 5	;RP0=0, select bank0
  2384  06B8  1303               	bcf	status, 6	;RP1=0, select bank0
  2385  06B9  00C2               	movwf	(?_write)
  2386  06BA  3000               	movlw	(0x1/2)
  2387  06BB  00C3               	movwf	(?_write+1)
  2388  06BC  3002               	movlw	low(02h)
  2389  06BD  00C4               	movwf	0+(?_write)+02h
  2390  06BE  3000               	movlw	high(02h)
  2391  06BF  00C5               	movwf	(0+(?_write)+02h)+1
  2392  06C0  3000               	movlw	low(0)
  2393  06C1  00C6               	movwf	0+(?_write)+04h
  2394  06C2  3000               	movlw	high(0)
  2395  06C3  00C7               	movwf	(0+(?_write)+04h)+1
  2396  06C4  120A  158A  250C   	fcall	_write
              120A  118A         
  2397                           	line	322
  2398                           	
  2399  06C9                     l3575:	
  2400                           ;prev04.c: 322: wf=1;
  2401  06C9  3001               	movlw	low(01h)
  2402  06CA  1683               	bsf	status, 5	;RP0=1, select bank1
  2403  06CB  1303               	bcf	status, 6	;RP1=0, select bank1
  2404  06CC  00D4               	movwf	(getlogicseq@wf)^080h
  2405  06CD  3000               	movlw	high(01h)
  2406  06CE  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2407                           	line	323
  2408                           	
  2409  06CF                     l3577:	
  2410                           ;prev04.c: 323: ccount++;
  2411  06CF  3001               	movlw	low(01h)
  2412  06D0  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2413  06D1  1803               	skipnc
  2414  06D2  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2415  06D3  3000               	movlw	high(01h)
  2416  06D4  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2417  06D5  2EDA               	goto	l3581
  2418                           	line	324
  2419                           	
  2420  06D6                     l753:	
  2421                           	line	325
  2422                           ;prev04.c: 324: }
  2423                           ;prev04.c: 325: }
  2424  06D6  2EDA               	goto	l3581
  2425                           	line	326
  2426                           	
  2427  06D7                     l750:	
  2428                           	line	327
  2429                           	
  2430  06D7                     l3579:	
  2431                           ;prev04.c: 326: else{
  2432                           ;prev04.c: 327: wf=0;
  2433  06D7  01D4               	clrf	(getlogicseq@wf)^080h
  2434  06D8  01D5               	clrf	(getlogicseq@wf+1)^080h
  2435  06D9  2EDA               	goto	l3581
  2436                           	line	328
  2437                           	
  2438  06DA                     l755:	
  2439                           	line	329
  2440                           	
  2441  06DA                     l3581:	
  2442                           ;prev04.c: 328: }
  2443                           ;prev04.c: 329: if(ccount>3)
  2444  06DA  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2445  06DB  3A80               	xorlw	80h
  2446  06DC  00FF               	movwf	btemp+1
  2447  06DD  3080               	movlw	(high(04h))^80h
  2448  06DE  027F               	subwf	btemp+1,w
  2449  06DF  1D03               	skipz
  2450  06E0  2EE3               	goto	u4855
  2451  06E1  3004               	movlw	low(04h)
  2452  06E2  0256               	subwf	(getlogicseq@ccount)^080h,w
  2453  06E3                     u4855:
  2454                           
  2455  06E3  1C03               	skipc
  2456  06E4  2EE6               	goto	u4851
  2457  06E5  2EE7               	goto	u4850
  2458  06E6                     u4851:
  2459  06E6  2EE9               	goto	l3585
  2460  06E7                     u4850:
  2461  06E7  2F0B               	goto	l3595
  2462                           	line	330
  2463                           	
  2464  06E8                     l3583:	
  2465                           ;prev04.c: 330: break;
  2466  06E8  2F0B               	goto	l3595
  2467                           	
  2468  06E9                     l756:	
  2469                           	line	332
  2470                           	
  2471  06E9                     l3585:	
  2472                           ;prev04.c: 332: if(num==2)
  2473  06E9  3002               	movlw	02h
  2474  06EA  1683               	bsf	status, 5	;RP0=1, select bank1
  2475  06EB  1303               	bcf	status, 6	;RP1=0, select bank1
  2476  06EC  0658               	xorwf	(getlogicseq@num)^080h,w
  2477  06ED  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2478  06EE  1D03               	skipz
  2479  06EF  2EF1               	goto	u4861
  2480  06F0  2EF2               	goto	u4860
  2481  06F1                     u4861:
  2482  06F1  2EFE               	goto	l3591
  2483  06F2                     u4860:
  2484                           	line	334
  2485                           	
  2486  06F2                     l3587:	
  2487                           ;prev04.c: 333: {
  2488                           ;prev04.c: 334: if(nf==0){
  2489  06F2  0853               	movf	((getlogicseq@nf+1)^080h),w
  2490  06F3  0452               	iorwf	((getlogicseq@nf)^080h),w
  2491  06F4  1D03               	skipz
  2492  06F5  2EF7               	goto	u4871
  2493  06F6  2EF8               	goto	u4870
  2494  06F7                     u4871:
  2495  06F7  2E53               	goto	l3559
  2496  06F8                     u4870:
  2497                           	line	335
  2498                           	
  2499  06F8                     l3589:	
  2500                           ;prev04.c: 335: nf=1;
  2501  06F8  3001               	movlw	low(01h)
  2502  06F9  00D2               	movwf	(getlogicseq@nf)^080h
  2503  06FA  3000               	movlw	high(01h)
  2504  06FB  00D3               	movwf	((getlogicseq@nf)^080h)+1
  2505                           	line	336
  2506                           ;prev04.c: 336: break;
  2507  06FC  2F0B               	goto	l3595
  2508                           	line	337
  2509                           	
  2510  06FD                     l759:	
  2511                           	line	338
  2512                           ;prev04.c: 337: }
  2513                           ;prev04.c: 338: }
  2514  06FD  2E53               	goto	l3559
  2515                           	line	339
  2516                           	
  2517  06FE                     l758:	
  2518                           	
  2519  06FE                     l3591:	
  2520                           ;prev04.c: 339: else if(num==99){
  2521  06FE  3063               	movlw	063h
  2522  06FF  0658               	xorwf	(getlogicseq@num)^080h,w
  2523  0700  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2524  0701  1D03               	skipz
  2525  0702  2F04               	goto	u4881
  2526  0703  2F05               	goto	u4880
  2527  0704                     u4881:
  2528  0704  2E53               	goto	l3559
  2529  0705                     u4880:
  2530                           	line	340
  2531                           	
  2532  0705                     l3593:	
  2533                           ;prev04.c: 340: nf=0;
  2534  0705  01D2               	clrf	(getlogicseq@nf)^080h
  2535  0706  01D3               	clrf	(getlogicseq@nf+1)^080h
  2536  0707  2E53               	goto	l3559
  2537                           	line	341
  2538                           	
  2539  0708                     l761:	
  2540  0708  2E53               	goto	l3559
  2541                           	line	342
  2542                           	
  2543  0709                     l760:	
  2544  0709  2E53               	goto	l3559
  2545                           	
  2546  070A                     l762:	
  2547                           	line	311
  2548  070A  2E53               	goto	l3559
  2549                           	
  2550  070B                     l757:	
  2551                           	line	346
  2552                           	
  2553  070B                     l3595:	
  2554                           ;prev04.c: 341: }
  2555                           ;prev04.c: 342: }
  2556                           ;prev04.c: 346: wf=0;ccount=0;
  2557  070B  1683               	bsf	status, 5	;RP0=1, select bank1
  2558  070C  1303               	bcf	status, 6	;RP1=0, select bank1
  2559  070D  01D4               	clrf	(getlogicseq@wf)^080h
  2560  070E  01D5               	clrf	(getlogicseq@wf+1)^080h
  2561  070F  01D6               	clrf	(getlogicseq@ccount)^080h
  2562  0710  01D7               	clrf	(getlogicseq@ccount+1)^080h
  2563                           	line	347
  2564                           	
  2565  0711                     l3597:	
  2566                           ;prev04.c: 347: strcpy(str,"Enter Logic DEV4:  ");
  2567  0711  3065               	movlw	low((STR_14-__stringbase))
  2568  0712  00F0               	movwf	(?_strcpy)
  2569  0713  3080               	movlw	80h
  2570  0714  00F1               	movwf	(?_strcpy+1)
  2571  0715  30A0               	movlw	(getlogicseq@str)&0ffh
  2572  0716  120A  158A  23AD   	fcall	_strcpy
              120A  118A         
  2573                           	line	348
  2574                           	
  2575  071B                     l3599:	
  2576                           ;prev04.c: 348: write(str,1,1);
  2577  071B  30A0               	movlw	(getlogicseq@str&0ffh)
  2578  071C  1283               	bcf	status, 5	;RP0=0, select bank0
  2579  071D  1303               	bcf	status, 6	;RP1=0, select bank0
  2580  071E  00C2               	movwf	(?_write)
  2581  071F  3000               	movlw	(0x1/2)
  2582  0720  00C3               	movwf	(?_write+1)
  2583  0721  3001               	movlw	low(01h)
  2584  0722  00C4               	movwf	0+(?_write)+02h
  2585  0723  3000               	movlw	high(01h)
  2586  0724  00C5               	movwf	(0+(?_write)+02h)+1
  2587  0725  3001               	movlw	low(01h)
  2588  0726  00C6               	movwf	0+(?_write)+04h
  2589  0727  3000               	movlw	high(01h)
  2590  0728  00C7               	movwf	(0+(?_write)+04h)+1
  2591  0729  120A  158A  250C   	fcall	_write
              120A  118A         
  2592                           	line	349
  2593                           	
  2594  072E                     l3601:	
  2595                           ;prev04.c: 349: write(logic_d4,2,0);
  2596  072E  30E4               	movlw	(_logic_d4&0ffh)
  2597  072F  1283               	bcf	status, 5	;RP0=0, select bank0
  2598  0730  1303               	bcf	status, 6	;RP1=0, select bank0
  2599  0731  00C2               	movwf	(?_write)
  2600  0732  3000               	movlw	(0x1/2)
  2601  0733  00C3               	movwf	(?_write+1)
  2602  0734  3002               	movlw	low(02h)
  2603  0735  00C4               	movwf	0+(?_write)+02h
  2604  0736  3000               	movlw	high(02h)
  2605  0737  00C5               	movwf	(0+(?_write)+02h)+1
  2606  0738  3000               	movlw	low(0)
  2607  0739  00C6               	movwf	0+(?_write)+04h
  2608  073A  3000               	movlw	high(0)
  2609  073B  00C7               	movwf	(0+(?_write)+04h)+1
  2610  073C  120A  158A  250C   	fcall	_write
              120A  118A         
  2611  0741  2F42               	goto	l3603
  2612                           	line	351
  2613                           ;prev04.c: 351: while(1)
  2614                           	
  2615  0742                     l763:	
  2616                           	line	353
  2617                           	
  2618  0742                     l3603:	
  2619                           ;prev04.c: 352: {
  2620                           ;prev04.c: 353: num=scan();
  2621  0742  120A  158A  2718   	fcall	_scan
              120A  118A         
  2622  0747  0875               	movf	(1+(?_scan)),w
  2623  0748  1683               	bsf	status, 5	;RP0=1, select bank1
  2624  0749  1303               	bcf	status, 6	;RP1=0, select bank1
  2625  074A  01D9               	clrf	(getlogicseq@num+1)^080h
  2626  074B  07D9               	addwf	(getlogicseq@num+1)^080h
  2627  074C  0874               	movf	(0+(?_scan)),w
  2628  074D  01D8               	clrf	(getlogicseq@num)^080h
  2629  074E  07D8               	addwf	(getlogicseq@num)^080h
  2630                           
  2631                           	line	354
  2632                           	
  2633  074F                     l3605:	
  2634                           ;prev04.c: 354: if(num==1||num==0){
  2635  074F  3001               	movlw	01h
  2636  0750  0658               	xorwf	(getlogicseq@num)^080h,w
  2637  0751  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2638  0752  1903               	skipnz
  2639  0753  2F55               	goto	u4891
  2640  0754  2F56               	goto	u4890
  2641  0755                     u4891:
  2642  0755  2F5D               	goto	l3609
  2643  0756                     u4890:
  2644                           	
  2645  0756                     l3607:	
  2646  0756  0859               	movf	((getlogicseq@num+1)^080h),w
  2647  0757  0458               	iorwf	((getlogicseq@num)^080h),w
  2648  0758  1D03               	skipz
  2649  0759  2F5B               	goto	u4901
  2650  075A  2F5C               	goto	u4900
  2651  075B                     u4901:
  2652  075B  2FC6               	goto	l3623
  2653  075C                     u4900:
  2654  075C  2F5D               	goto	l3609
  2655                           	
  2656  075D                     l766:	
  2657                           	line	355
  2658                           	
  2659  075D                     l3609:	
  2660                           ;prev04.c: 355: if(wf==0)
  2661  075D  0855               	movf	((getlogicseq@wf+1)^080h),w
  2662  075E  0454               	iorwf	((getlogicseq@wf)^080h),w
  2663  075F  1D03               	skipz
  2664  0760  2F62               	goto	u4911
  2665  0761  2F63               	goto	u4910
  2666  0762                     u4911:
  2667  0762  2FC9               	goto	l3625
  2668  0763                     u4910:
  2669                           	line	357
  2670                           	
  2671  0763                     l3611:	
  2672                           ;prev04.c: 356: {
  2673                           ;prev04.c: 357: if(ccount==0)
  2674  0763  0857               	movf	((getlogicseq@ccount+1)^080h),w
  2675  0764  0456               	iorwf	((getlogicseq@ccount)^080h),w
  2676  0765  1D03               	skipz
  2677  0766  2F68               	goto	u4921
  2678  0767  2F69               	goto	u4920
  2679  0768                     u4921:
  2680  0768  2F73               	goto	l768
  2681  0769                     u4920:
  2682                           	line	358
  2683                           	
  2684  0769                     l3613:	
  2685                           ;prev04.c: 358: strcpy(logic_d4,"");
  2686  0769  303C               	movlw	low((STR_15-__stringbase))
  2687  076A  00F0               	movwf	(?_strcpy)
  2688  076B  3080               	movlw	80h
  2689  076C  00F1               	movwf	(?_strcpy+1)
  2690  076D  30E4               	movlw	(_logic_d4)&0ffh
  2691  076E  120A  158A  23AD   	fcall	_strcpy
              120A  118A         
  2692                           	
  2693  0773                     l768:	
  2694                           	line	359
  2695                           ;prev04.c: 359: write("----",2,0);
  2696  0773  3079               	movlw	low((STR_16-__stringbase))
  2697  0774  1283               	bcf	status, 5	;RP0=0, select bank0
  2698  0775  1303               	bcf	status, 6	;RP1=0, select bank0
  2699  0776  00C2               	movwf	(?_write)
  2700  0777  3080               	movlw	80h
  2701  0778  00C3               	movwf	(?_write+1)
  2702  0779  3002               	movlw	low(02h)
  2703  077A  00C4               	movwf	0+(?_write)+02h
  2704  077B  3000               	movlw	high(02h)
  2705  077C  00C5               	movwf	(0+(?_write)+02h)+1
  2706  077D  3000               	movlw	low(0)
  2707  077E  00C6               	movwf	0+(?_write)+04h
  2708  077F  3000               	movlw	high(0)
  2709  0780  00C7               	movwf	(0+(?_write)+04h)+1
  2710  0781  120A  158A  250C   	fcall	_write
              120A  118A         
  2711                           	line	360
  2712                           ;prev04.c: 360: itoaa(num, snum);
  2713  0786  1683               	bsf	status, 5	;RP0=1, select bank1
  2714  0787  1303               	bcf	status, 6	;RP1=0, select bank1
  2715  0788  0859               	movf	(getlogicseq@num+1)^080h,w
  2716  0789  01FA               	clrf	(?_itoaa+1)
  2717  078A  07FA               	addwf	(?_itoaa+1)
  2718  078B  0858               	movf	(getlogicseq@num)^080h,w
  2719  078C  01F9               	clrf	(?_itoaa)
  2720  078D  07F9               	addwf	(?_itoaa)
  2721                           
  2722  078E  30C2               	movlw	(getlogicseq@snum)&0ffh
  2723  078F  1283               	bcf	status, 5	;RP0=0, select bank0
  2724  0790  1303               	bcf	status, 6	;RP1=0, select bank0
  2725  0791  00DC               	movwf	(??_getlogicseq+0)+0
  2726  0792  085C               	movf	(??_getlogicseq+0)+0,w
  2727  0793  00FB               	movwf	0+(?_itoaa)+02h
  2728  0794  120A  118A  2041   	fcall	_itoaa
              120A  118A         
  2729                           	line	361
  2730                           	
  2731  0799                     l3615:	
  2732                           ;prev04.c: 361: strcat(logic_d4,snum);
  2733  0799  30C2               	movlw	(getlogicseq@snum)&0ffh
  2734  079A  1283               	bcf	status, 5	;RP0=0, select bank0
  2735  079B  1303               	bcf	status, 6	;RP1=0, select bank0
  2736  079C  00DC               	movwf	(??_getlogicseq+0)+0
  2737  079D  085C               	movf	(??_getlogicseq+0)+0,w
  2738  079E  00F0               	movwf	(?_strcat)
  2739  079F  30E4               	movlw	(_logic_d4)&0ffh
  2740  07A0  120A  158A  23D6   	fcall	_strcat
              120A  118A         
  2741                           	line	362
  2742                           	
  2743  07A5                     l3617:	
  2744                           ;prev04.c: 362: write( logic_d4,2,0); ;
  2745  07A5  30E4               	movlw	(_logic_d4&0ffh)
  2746  07A6  1283               	bcf	status, 5	;RP0=0, select bank0
  2747  07A7  1303               	bcf	status, 6	;RP1=0, select bank0
  2748  07A8  00C2               	movwf	(?_write)
  2749  07A9  3000               	movlw	(0x1/2)
  2750  07AA  00C3               	movwf	(?_write+1)
  2751  07AB  3002               	movlw	low(02h)
  2752  07AC  00C4               	movwf	0+(?_write)+02h
  2753  07AD  3000               	movlw	high(02h)
  2754  07AE  00C5               	movwf	(0+(?_write)+02h)+1
  2755  07AF  3000               	movlw	low(0)
  2756  07B0  00C6               	movwf	0+(?_write)+04h
  2757  07B1  3000               	movlw	high(0)
  2758  07B2  00C7               	movwf	(0+(?_write)+04h)+1
  2759  07B3  120A  158A  250C   	fcall	_write
              120A  118A         
  2760                           	line	363
  2761                           	
  2762  07B8                     l3619:	
  2763                           ;prev04.c: 363: wf=1;
  2764  07B8  3001               	movlw	low(01h)
  2765  07B9  1683               	bsf	status, 5	;RP0=1, select bank1
  2766  07BA  1303               	bcf	status, 6	;RP1=0, select bank1
  2767  07BB  00D4               	movwf	(getlogicseq@wf)^080h
  2768  07BC  3000               	movlw	high(01h)
  2769  07BD  00D5               	movwf	((getlogicseq@wf)^080h)+1
  2770                           	line	364
  2771                           	
  2772  07BE                     l3621:	
  2773                           ;prev04.c: 364: ccount++;
  2774  07BE  3001               	movlw	low(01h)
  2775  07BF  07D6               	addwf	(getlogicseq@ccount)^080h,f
  2776  07C0  1803               	skipnc
  2777  07C1  0AD7               	incf	(getlogicseq@ccount+1)^080h,f
  2778  07C2  3000               	movlw	high(01h)
  2779  07C3  07D7               	addwf	(getlogicseq@ccount+1)^080h,f
  2780  07C4  2FC9               	goto	l3625
  2781                           	line	365
  2782                           	
  2783  07C5                     l767:	
  2784                           	line	366
  2785                           ;prev04.c: 365: }
  2786                           ;prev04.c: 366: }
  2787  07C5  2FC9               	goto	l3625
  2788                           	line	367
  2789                           	
  2790  07C6                     l764:	
  2791                           	line	368
  2792                           	
  2793  07C6                     l3623:	
  2794                           ;prev04.c: 367: else{
  2795                           ;prev04.c: 368: wf=0;
  2796  07C6  01D4               	clrf	(getlogicseq@wf)^080h
  2797  07C7  01D5               	clrf	(getlogicseq@wf+1)^080h
  2798  07C8  2FC9               	goto	l3625
  2799                           	line	369
  2800                           	
  2801  07C9                     l769:	
  2802                           	line	370
  2803                           	
  2804  07C9                     l3625:	
  2805                           ;prev04.c: 369: }
  2806                           ;prev04.c: 370: if(ccount>3)
  2807  07C9  0857               	movf	(getlogicseq@ccount+1)^080h,w
  2808  07CA  3A80               	xorlw	80h
  2809  07CB  00FF               	movwf	btemp+1
  2810  07CC  3080               	movlw	(high(04h))^80h
  2811  07CD  027F               	subwf	btemp+1,w
  2812  07CE  1D03               	skipz
  2813  07CF  2FD2               	goto	u4935
  2814  07D0  3004               	movlw	low(04h)
  2815  07D1  0256               	subwf	(getlogicseq@ccount)^080h,w
  2816  07D2                     u4935:
  2817                           
  2818  07D2  1C03               	skipc
  2819  07D3  2FD5               	goto	u4931
  2820  07D4  2FD6               	goto	u4930
  2821  07D5                     u4931:
  2822  07D5  2FD8               	goto	l3629
  2823  07D6                     u4930:
  2824  07D6  2FFA               	goto	l3639
  2825                           	line	371
  2826                           	
  2827  07D7                     l3627:	
  2828                           ;prev04.c: 371: break;
  2829  07D7  2FFA               	goto	l3639
  2830                           	
  2831  07D8                     l770:	
  2832                           	line	373
  2833                           	
  2834  07D8                     l3629:	
  2835                           ;prev04.c: 373: if(num==2)
  2836  07D8  3002               	movlw	02h
  2837  07D9  1683               	bsf	status, 5	;RP0=1, select bank1
  2838  07DA  1303               	bcf	status, 6	;RP1=0, select bank1
  2839  07DB  0658               	xorwf	(getlogicseq@num)^080h,w
  2840  07DC  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2841  07DD  1D03               	skipz
  2842  07DE  2FE0               	goto	u4941
  2843  07DF  2FE1               	goto	u4940
  2844  07E0                     u4941:
  2845  07E0  2FED               	goto	l3635
  2846  07E1                     u4940:
  2847                           	line	375
  2848                           	
  2849  07E1                     l3631:	
  2850                           ;prev04.c: 374: {
  2851                           ;prev04.c: 375: if(nf==0){
  2852  07E1  0853               	movf	((getlogicseq@nf+1)^080h),w
  2853  07E2  0452               	iorwf	((getlogicseq@nf)^080h),w
  2854  07E3  1D03               	skipz
  2855  07E4  2FE6               	goto	u4951
  2856  07E5  2FE7               	goto	u4950
  2857  07E6                     u4951:
  2858  07E6  2F42               	goto	l3603
  2859  07E7                     u4950:
  2860                           	line	376
  2861                           	
  2862  07E7                     l3633:	
  2863                           ;prev04.c: 376: nf=1;
  2864  07E7  3001               	movlw	low(01h)
  2865  07E8  00D2               	movwf	(getlogicseq@nf)^080h
  2866  07E9  3000               	movlw	high(01h)
  2867  07EA  00D3               	movwf	((getlogicseq@nf)^080h)+1
  2868                           	line	377
  2869                           ;prev04.c: 377: break;
  2870  07EB  2FFA               	goto	l3639
  2871                           	line	378
  2872                           	
  2873  07EC                     l773:	
  2874                           	line	379
  2875                           ;prev04.c: 378: }
  2876                           ;prev04.c: 379: }
  2877  07EC  2F42               	goto	l3603
  2878                           	line	380
  2879                           	
  2880  07ED                     l772:	
  2881                           	
  2882  07ED                     l3635:	
  2883                           ;prev04.c: 380: else if(num==99){
  2884  07ED  3063               	movlw	063h
  2885  07EE  0658               	xorwf	(getlogicseq@num)^080h,w
  2886  07EF  0459               	iorwf	(getlogicseq@num+1)^080h,w
  2887  07F0  1D03               	skipz
  2888  07F1  2FF3               	goto	u4961
  2889  07F2  2FF4               	goto	u4960
  2890  07F3                     u4961:
  2891  07F3  2F42               	goto	l3603
  2892  07F4                     u4960:
  2893                           	line	381
  2894                           	
  2895  07F4                     l3637:	
  2896                           ;prev04.c: 381: nf=0;
  2897  07F4  01D2               	clrf	(getlogicseq@nf)^080h
  2898  07F5  01D3               	clrf	(getlogicseq@nf+1)^080h
  2899  07F6  2F42               	goto	l3603
  2900                           	line	382
  2901                           	
  2902  07F7                     l775:	
  2903  07F7  2F42               	goto	l3603
  2904                           	line	383
  2905                           	
  2906  07F8                     l774:	
  2907  07F8  2F42               	goto	l3603
  2908                           	
  2909  07F9                     l776:	
  2910                           	line	351
  2911  07F9  2F42               	goto	l3603
  2912                           	
  2913  07FA                     l771:	
  2914                           	line	384
  2915                           	
  2916  07FA                     l3639:	
  2917                           ;prev04.c: 382: }
  2918                           ;prev04.c: 383: }
  2919                           ;prev04.c: 384: startswitch();;
  2920  07FA  120A  118A  2270   	fcall	_startswitch
              120A  118A         
  2921                           	line	387
  2922                           	
  2923  07FF                     l777:	
  2924  07FF  0008               	return
  2925                           	opt stack 0
  2926                           GLOBAL	__end_of_getlogicseq
  2927  0800                     	__end_of_getlogicseq:
  2928 ;; =============== function _getlogicseq ends ============
  2929                           
  2930                           	signat	_getlogicseq,88
  2931                           	global	_scroll
  2932                           psect	text533,local,class=CODE,delta=2
  2933                           global __ptext533
  2934  0E4A                     __ptext533:
  2935                           
  2936 ;; *************** function _scroll *****************
  2937 ;; Defined at:
  2938 ;;		line 601 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  str             1    wreg     PTR unsigned char 
  2941 ;;		 -> STR_4(38), 
  2942 ;;  loops           2   40[BANK0 ] int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  str             1   55[BANK0 ] PTR unsigned char 
  2945 ;;		 -> STR_4(38), 
  2946 ;;  dest           32    0        unsigned char [32]
  2947 ;;  endat           2   51[BANK0 ] int 
  2948 ;;  startat         2   49[BANK0 ] int 
  2949 ;;  i               2   58[BANK0 ] int 
  2950 ;;  len             2   56[BANK0 ] int 
  2951 ;;  loopn           2   53[BANK0 ] int 
  2952 ;;  en              2   47[BANK0 ] int 
  2953 ;;  st              2   45[BANK0 ] int 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;		None               void
  2956 ;; Registers used:
  2957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       2       0       0       0
  2964 ;;      Locals:         0      15       0       0       0
  2965 ;;      Temps:          0       3       0       0       0
  2966 ;;      Totals:         0      20       0       0       0
  2967 ;;Total ram usage:       20 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    5
  2970 ;; This function calls:
  2971 ;;		_write
  2972 ;;		_delay
  2973 ;;		_cmd
  2974 ;; This function is called by:
  2975 ;;		_getlogicseq
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           psect	text533
  2979                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  2980                           	line	601
  2981                           	global	__size_of_scroll
  2982  00CE                     	__size_of_scroll	equ	__end_of_scroll-_scroll
  2983                           	
  2984  0E4A                     _scroll:	
  2985                           	opt	stack 1
  2986                           ; Regs used in _scroll: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2987                           ;scroll@str stored from wreg
  2988                           	line	603
  2989  0E4A  1283               	bcf	status, 5	;RP0=0, select bank0
  2990  0E4B  1303               	bcf	status, 6	;RP1=0, select bank0
  2991  0E4C  00D7               	movwf	(scroll@str)
  2992                           	
  2993  0E4D                     l3409:	
  2994                           ;prev04.c: 603: write(str,1,0); ;
  2995  0E4D  0857               	movf	(scroll@str),w
  2996  0E4E  00C2               	movwf	(?_write)
  2997  0E4F  3080               	movlw	80h
  2998  0E50  00C3               	movwf	(?_write+1)
  2999  0E51  3001               	movlw	low(01h)
  3000  0E52  00C4               	movwf	0+(?_write)+02h
  3001  0E53  3000               	movlw	high(01h)
  3002  0E54  00C5               	movwf	(0+(?_write)+02h)+1
  3003  0E55  3000               	movlw	low(0)
  3004  0E56  00C6               	movwf	0+(?_write)+04h
  3005  0E57  3000               	movlw	high(0)
  3006  0E58  00C7               	movwf	(0+(?_write)+04h)+1
  3007  0E59  120A  158A  250C   	fcall	_write
              120A  158A         
  3008                           	line	604
  3009                           	
  3010  0E5E                     l3411:	
  3011                           ;prev04.c: 604: int loopn=0;
  3012  0E5E  1283               	bcf	status, 5	;RP0=0, select bank0
  3013  0E5F  1303               	bcf	status, 6	;RP1=0, select bank0
  3014  0E60  01D5               	clrf	(scroll@loopn)
  3015  0E61  01D6               	clrf	(scroll@loopn+1)
  3016                           	line	606
  3017                           	
  3018  0E62                     l3413:	
  3019                           ;prev04.c: 605: int i;
  3020                           ;prev04.c: 606: int len=0;;
  3021  0E62  01D8               	clrf	(scroll@len)
  3022  0E63  01D9               	clrf	(scroll@len+1)
  3023                           	line	607
  3024                           	
  3025  0E64                     l3415:	
  3026                           ;prev04.c: 607: int st=0;
  3027  0E64  01CD               	clrf	(scroll@st)
  3028  0E65  01CE               	clrf	(scroll@st+1)
  3029                           	line	609
  3030                           ;prev04.c: 608: int en;
  3031                           ;prev04.c: 609: while(str[i]!='\0')
  3032  0E66  2E74               	goto	l3419
  3033                           	
  3034  0E67                     l869:	
  3035                           	line	610
  3036                           	
  3037  0E67                     l3417:	
  3038                           ;prev04.c: 610: { i++;
  3039  0E67  3001               	movlw	low(01h)
  3040  0E68  07DA               	addwf	(scroll@i),f
  3041  0E69  1803               	skipnc
  3042  0E6A  0ADB               	incf	(scroll@i+1),f
  3043  0E6B  3000               	movlw	high(01h)
  3044  0E6C  07DB               	addwf	(scroll@i+1),f
  3045                           	line	611
  3046                           ;prev04.c: 611: len++;
  3047  0E6D  3001               	movlw	low(01h)
  3048  0E6E  07D8               	addwf	(scroll@len),f
  3049  0E6F  1803               	skipnc
  3050  0E70  0AD9               	incf	(scroll@len+1),f
  3051  0E71  3000               	movlw	high(01h)
  3052  0E72  07D9               	addwf	(scroll@len+1),f
  3053  0E73  2E74               	goto	l3419
  3054                           	line	612
  3055                           	
  3056  0E74                     l868:	
  3057                           	line	609
  3058                           	
  3059  0E74                     l3419:	
  3060  0E74  085A               	movf	(scroll@i),w
  3061  0E75  0757               	addwf	(scroll@str),w
  3062  0E76  0084               	movwf	fsr0
  3063  0E77  120A  158A  200A   	fcall	stringdir
              120A  158A         
  3064  0E7C  3800               	iorlw	0
  3065  0E7D  1D03               	skipz
  3066  0E7E  2E80               	goto	u4591
  3067  0E7F  2E81               	goto	u4590
  3068  0E80                     u4591:
  3069  0E80  2E67               	goto	l3417
  3070  0E81                     u4590:
  3071  0E81  2E82               	goto	l3421
  3072                           	
  3073  0E82                     l870:	
  3074                           	line	613
  3075                           	
  3076  0E82                     l3421:	
  3077                           ;prev04.c: 612: }
  3078                           ;prev04.c: 613: en=len-1;
  3079  0E82  0858               	movf	(scroll@len),w
  3080  0E83  3EFF               	addlw	low(-1)
  3081  0E84  00CF               	movwf	(scroll@en)
  3082  0E85  0859               	movf	(scroll@len+1),w
  3083  0E86  1803               	skipnc
  3084  0E87  3E01               	addlw	1
  3085  0E88  3EFF               	addlw	high(-1)
  3086  0E89  00D0               	movwf	1+(scroll@en)
  3087                           	line	615
  3088                           	
  3089  0E8A                     l3423:	
  3090                           ;prev04.c: 615: if(len>32)
  3091  0E8A  0859               	movf	(scroll@len+1),w
  3092  0E8B  3A80               	xorlw	80h
  3093  0E8C  00FF               	movwf	btemp+1
  3094  0E8D  3080               	movlw	(high(021h))^80h
  3095  0E8E  027F               	subwf	btemp+1,w
  3096  0E8F  1D03               	skipz
  3097  0E90  2E93               	goto	u4605
  3098  0E91  3021               	movlw	low(021h)
  3099  0E92  0258               	subwf	(scroll@len),w
  3100  0E93                     u4605:
  3101                           
  3102  0E93  1C03               	skipc
  3103  0E94  2E96               	goto	u4601
  3104  0E95  2E97               	goto	u4600
  3105  0E96                     u4601:
  3106  0E96  2F17               	goto	l880
  3107  0E97                     u4600:
  3108                           	line	619
  3109                           	
  3110  0E97                     l3425:	
  3111                           ;prev04.c: 616: {
  3112                           ;prev04.c: 618: char dest [32] ;
  3113                           ;prev04.c: 619: int startat=0;
  3114  0E97  1283               	bcf	status, 5	;RP0=0, select bank0
  3115  0E98  1303               	bcf	status, 6	;RP1=0, select bank0
  3116  0E99  01D1               	clrf	(scroll@startat)
  3117  0E9A  01D2               	clrf	(scroll@startat+1)
  3118                           	line	620
  3119                           	
  3120  0E9B                     l3427:	
  3121                           ;prev04.c: 620: int endat=31;
  3122  0E9B  301F               	movlw	low(01Fh)
  3123  0E9C  00D3               	movwf	(scroll@endat)
  3124  0E9D  3000               	movlw	high(01Fh)
  3125  0E9E  00D4               	movwf	((scroll@endat))+1
  3126  0E9F  2EA0               	goto	l3429
  3127                           	line	621
  3128                           ;prev04.c: 621: START:
  3129                           	
  3130  0EA0                     l872:	
  3131                           	line	622
  3132                           	
  3133  0EA0                     l3429:	
  3134                           ;prev04.c: 622: i=0;
  3135  0EA0  1283               	bcf	status, 5	;RP0=0, select bank0
  3136  0EA1  1303               	bcf	status, 6	;RP1=0, select bank0
  3137  0EA2  01DA               	clrf	(scroll@i)
  3138  0EA3  01DB               	clrf	(scroll@i+1)
  3139                           	line	623
  3140                           ;prev04.c: 623: while(i++<32)
  3141  0EA4  2EB8               	goto	l3435
  3142                           	
  3143  0EA5                     l874:	
  3144                           	line	626
  3145                           	
  3146  0EA5                     l3431:	
  3147                           ;prev04.c: 624: {
  3148                           ;prev04.c: 626: delay(3000);
  3149  0EA5  30B8               	movlw	low(0BB8h)
  3150  0EA6  00F0               	movwf	(?_delay)
  3151  0EA7  300B               	movlw	high(0BB8h)
  3152  0EA8  00F1               	movwf	((?_delay))+1
  3153  0EA9  120A  158A  2307   	fcall	_delay
              120A  158A         
  3154                           	line	627
  3155                           	
  3156  0EAE                     l3433:	
  3157                           ;prev04.c: 627: cmd(0x1E);
  3158  0EAE  301E               	movlw	low(01Eh)
  3159  0EAF  00F8               	movwf	(?_cmd)
  3160  0EB0  3000               	movlw	high(01Eh)
  3161  0EB1  00F9               	movwf	((?_cmd))+1
  3162  0EB2  120A  158A  2363   	fcall	_cmd
              120A  158A         
  3163  0EB7  2EB8               	goto	l3435
  3164                           	line	630
  3165                           	
  3166  0EB8                     l873:	
  3167                           	line	623
  3168                           	
  3169  0EB8                     l3435:	
  3170  0EB8  3001               	movlw	low(01h)
  3171  0EB9  1283               	bcf	status, 5	;RP0=0, select bank0
  3172  0EBA  1303               	bcf	status, 6	;RP1=0, select bank0
  3173  0EBB  07DA               	addwf	(scroll@i),f
  3174  0EBC  1803               	skipnc
  3175  0EBD  0ADB               	incf	(scroll@i+1),f
  3176  0EBE  3000               	movlw	high(01h)
  3177  0EBF  07DB               	addwf	(scroll@i+1),f
  3178  0EC0  085B               	movf	((scroll@i+1)),w
  3179  0EC1  3A80               	xorlw	80h
  3180  0EC2  00FF               	movwf	btemp+1
  3181  0EC3  3080               	movlw	(high(021h))^80h
  3182  0EC4  027F               	subwf	btemp+1,w
  3183  0EC5  1D03               	skipz
  3184  0EC6  2EC9               	goto	u4615
  3185  0EC7  3021               	movlw	low(021h)
  3186  0EC8  025A               	subwf	((scroll@i)),w
  3187  0EC9                     u4615:
  3188                           
  3189  0EC9  1C03               	skipc
  3190  0ECA  2ECC               	goto	u4611
  3191  0ECB  2ECD               	goto	u4610
  3192  0ECC                     u4611:
  3193  0ECC  2EA5               	goto	l3431
  3194  0ECD                     u4610:
  3195  0ECD  2ECE               	goto	l3437
  3196                           	
  3197  0ECE                     l875:	
  3198                           	line	632
  3199                           	
  3200  0ECE                     l3437:	
  3201                           ;prev04.c: 630: }
  3202                           ;prev04.c: 632: i=0;
  3203  0ECE  1283               	bcf	status, 5	;RP0=0, select bank0
  3204  0ECF  1303               	bcf	status, 6	;RP1=0, select bank0
  3205  0ED0  01DA               	clrf	(scroll@i)
  3206  0ED1  01DB               	clrf	(scroll@i+1)
  3207                           	line	633
  3208                           ;prev04.c: 633: while(i++<32)
  3209  0ED2  2EE6               	goto	l3443
  3210                           	
  3211  0ED3                     l877:	
  3212                           	line	636
  3213                           	
  3214  0ED3                     l3439:	
  3215                           ;prev04.c: 634: {
  3216                           ;prev04.c: 636: delay(3000);
  3217  0ED3  30B8               	movlw	low(0BB8h)
  3218  0ED4  00F0               	movwf	(?_delay)
  3219  0ED5  300B               	movlw	high(0BB8h)
  3220  0ED6  00F1               	movwf	((?_delay))+1
  3221  0ED7  120A  158A  2307   	fcall	_delay
              120A  158A         
  3222                           	line	637
  3223                           	
  3224  0EDC                     l3441:	
  3225                           ;prev04.c: 637: cmd(0x18);
  3226  0EDC  3018               	movlw	low(018h)
  3227  0EDD  00F8               	movwf	(?_cmd)
  3228  0EDE  3000               	movlw	high(018h)
  3229  0EDF  00F9               	movwf	((?_cmd))+1
  3230  0EE0  120A  158A  2363   	fcall	_cmd
              120A  158A         
  3231  0EE5  2EE6               	goto	l3443
  3232                           	line	640
  3233                           	
  3234  0EE6                     l876:	
  3235                           	line	633
  3236                           	
  3237  0EE6                     l3443:	
  3238  0EE6  3001               	movlw	low(01h)
  3239  0EE7  1283               	bcf	status, 5	;RP0=0, select bank0
  3240  0EE8  1303               	bcf	status, 6	;RP1=0, select bank0
  3241  0EE9  07DA               	addwf	(scroll@i),f
  3242  0EEA  1803               	skipnc
  3243  0EEB  0ADB               	incf	(scroll@i+1),f
  3244  0EEC  3000               	movlw	high(01h)
  3245  0EED  07DB               	addwf	(scroll@i+1),f
  3246  0EEE  085B               	movf	((scroll@i+1)),w
  3247  0EEF  3A80               	xorlw	80h
  3248  0EF0  00FF               	movwf	btemp+1
  3249  0EF1  3080               	movlw	(high(021h))^80h
  3250  0EF2  027F               	subwf	btemp+1,w
  3251  0EF3  1D03               	skipz
  3252  0EF4  2EF7               	goto	u4625
  3253  0EF5  3021               	movlw	low(021h)
  3254  0EF6  025A               	subwf	((scroll@i)),w
  3255  0EF7                     u4625:
  3256                           
  3257  0EF7  1C03               	skipc
  3258  0EF8  2EFA               	goto	u4621
  3259  0EF9  2EFB               	goto	u4620
  3260  0EFA                     u4621:
  3261  0EFA  2ED3               	goto	l3439
  3262  0EFB                     u4620:
  3263  0EFB  2EFC               	goto	l3445
  3264                           	
  3265  0EFC                     l878:	
  3266                           	line	641
  3267                           	
  3268  0EFC                     l3445:	
  3269                           ;prev04.c: 640: }
  3270                           ;prev04.c: 641: if(loopn++<loops)
  3271  0EFC  1283               	bcf	status, 5	;RP0=0, select bank0
  3272  0EFD  1303               	bcf	status, 6	;RP1=0, select bank0
  3273  0EFE  0856               	movf	(scroll@loopn+1),w
  3274  0EFF  00CB               	movwf	(??_scroll+0)+0+1
  3275  0F00  0855               	movf	(scroll@loopn),w
  3276  0F01  00CA               	movwf	(??_scroll+0)+0
  3277  0F02  3001               	movlw	(01h)
  3278  0F03  07D5               	addwf	(scroll@loopn),f
  3279  0F04  1803               	skipnc
  3280  0F05  0AD6               	incf	(scroll@loopn+1),f
  3281  0F06  084B               	movf	1+(??_scroll+0)+0,w
  3282  0F07  3A80               	xorlw	80h
  3283  0F08  00CC               	movwf	(??_scroll+2)+0
  3284  0F09  0849               	movf	(scroll@loops+1),w
  3285  0F0A  3A80               	xorlw	80h
  3286  0F0B  024C               	subwf	(??_scroll+2)+0,w
  3287  0F0C  1D03               	skipz
  3288  0F0D  2F10               	goto	u4635
  3289  0F0E  0848               	movf	(scroll@loops),w
  3290  0F0F  024A               	subwf	0+(??_scroll+0)+0,w
  3291  0F10                     u4635:
  3292                           
  3293  0F10  1803               	skipnc
  3294  0F11  2F13               	goto	u4631
  3295  0F12  2F14               	goto	u4630
  3296  0F13                     u4631:
  3297  0F13  2F17               	goto	l880
  3298  0F14                     u4630:
  3299  0F14  2EA0               	goto	l3429
  3300                           	line	642
  3301                           	
  3302  0F15                     l3447:	
  3303                           ;prev04.c: 642: goto START;
  3304  0F15  2EA0               	goto	l3429
  3305                           	
  3306  0F16                     l879:	
  3307  0F16  2F17               	goto	l880
  3308                           	line	643
  3309                           	
  3310  0F17                     l871:	
  3311                           	line	648
  3312                           	
  3313  0F17                     l880:	
  3314  0F17  0008               	return
  3315                           	opt stack 0
  3316                           GLOBAL	__end_of_scroll
  3317  0F18                     	__end_of_scroll:
  3318 ;; =============== function _scroll ends ============
  3319                           
  3320                           	signat	_scroll,8312
  3321                           	global	_startswitch
  3322                           psect	text534,local,class=CODE,delta=2
  3323                           global __ptext534
  3324  0270                     __ptext534:
  3325                           
  3326 ;; *************** function _startswitch *****************
  3327 ;; Defined at:
  3328 ;;		line 129 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;		None               void
  3335 ;; Registers used:
  3336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0
  3344 ;;      Temps:          0       1       0       0       0
  3345 ;;      Totals:         0       1       0       0       0
  3346 ;;Total ram usage:        1 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    5
  3349 ;; This function calls:
  3350 ;;		_strcpy
  3351 ;;		_strcmp
  3352 ;;		_check
  3353 ;;		_write
  3354 ;; This function is called by:
  3355 ;;		_getlogicseq
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           psect	text534
  3359                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  3360                           	line	129
  3361                           	global	__size_of_startswitch
  3362  01A1                     	__size_of_startswitch	equ	__end_of_startswitch-_startswitch
  3363                           	
  3364  0270                     _startswitch:	
  3365                           	opt	stack 1
  3366                           ; Regs used in _startswitch: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3367                           	line	132
  3368                           	
  3369  0270                     l3327:	
  3370                           ;prev04.c: 132: strcpy(plo,lo);
  3371  0270  3060               	movlw	(_lo&0ffh)
  3372  0271  00F0               	movwf	(?_strcpy)
  3373  0272  3000               	movlw	(0x0/2)
  3374  0273  00F1               	movwf	(?_strcpy+1)
  3375  0274  30E9               	movlw	(_plo)&0ffh
  3376  0275  120A  158A  23AD   	fcall	_strcpy
              120A  118A         
  3377                           	line	133
  3378                           ;prev04.c: 133: strcpy(lo,"0000");;
  3379  027A  307E               	movlw	low((STR_1-__stringbase))
  3380  027B  00F0               	movwf	(?_strcpy)
  3381  027C  3080               	movlw	80h
  3382  027D  00F1               	movwf	(?_strcpy+1)
  3383  027E  3060               	movlw	(_lo)&0ffh
  3384  027F  120A  158A  23AD   	fcall	_strcpy
              120A  118A         
  3385                           	line	135
  3386                           	
  3387  0284                     l3329:	
  3388                           ;prev04.c: 135: if(RC4==1)
  3389  0284  1283               	bcf	status, 5	;RP0=0, select bank0
  3390  0285  1303               	bcf	status, 6	;RP1=0, select bank0
  3391  0286  1E07               	btfss	(60/8),(60)&7
  3392  0287  2A89               	goto	u4431
  3393  0288  2A8A               	goto	u4430
  3394  0289                     u4431:
  3395  0289  2A8F               	goto	l3333
  3396  028A                     u4430:
  3397                           	line	136
  3398                           	
  3399  028A                     l3331:	
  3400                           ;prev04.c: 136: lo[0]='1';
  3401  028A  3031               	movlw	(031h)
  3402  028B  00C8               	movwf	(??_startswitch+0)+0
  3403  028C  0848               	movf	(??_startswitch+0)+0,w
  3404  028D  00E0               	movwf	(_lo)
  3405  028E  2A8F               	goto	l3333
  3406                           	
  3407  028F                     l695:	
  3408                           	line	137
  3409                           	
  3410  028F                     l3333:	
  3411                           ;prev04.c: 137: if(RC5==1)
  3412  028F  1E87               	btfss	(61/8),(61)&7
  3413  0290  2A92               	goto	u4441
  3414  0291  2A93               	goto	u4440
  3415  0292                     u4441:
  3416  0292  2A98               	goto	l3337
  3417  0293                     u4440:
  3418                           	line	138
  3419                           	
  3420  0293                     l3335:	
  3421                           ;prev04.c: 138: lo[1]='1';
  3422  0293  3031               	movlw	(031h)
  3423  0294  00C8               	movwf	(??_startswitch+0)+0
  3424  0295  0848               	movf	(??_startswitch+0)+0,w
  3425  0296  00E1               	movwf	0+(_lo)+01h
  3426  0297  2A98               	goto	l3337
  3427                           	
  3428  0298                     l696:	
  3429                           	line	139
  3430                           	
  3431  0298                     l3337:	
  3432                           ;prev04.c: 139: if(RC6==1)
  3433  0298  1F07               	btfss	(62/8),(62)&7
  3434  0299  2A9B               	goto	u4451
  3435  029A  2A9C               	goto	u4450
  3436  029B                     u4451:
  3437  029B  2AA1               	goto	l3341
  3438  029C                     u4450:
  3439                           	line	140
  3440                           	
  3441  029C                     l3339:	
  3442                           ;prev04.c: 140: lo[2]='1';
  3443  029C  3031               	movlw	(031h)
  3444  029D  00C8               	movwf	(??_startswitch+0)+0
  3445  029E  0848               	movf	(??_startswitch+0)+0,w
  3446  029F  00E2               	movwf	0+(_lo)+02h
  3447  02A0  2AA1               	goto	l3341
  3448                           	
  3449  02A1                     l697:	
  3450                           	line	141
  3451                           	
  3452  02A1                     l3341:	
  3453                           ;prev04.c: 141: if(RC0==1)
  3454  02A1  1C07               	btfss	(56/8),(56)&7
  3455  02A2  2AA4               	goto	u4461
  3456  02A3  2AA5               	goto	u4460
  3457  02A4                     u4461:
  3458  02A4  2AAA               	goto	l3345
  3459  02A5                     u4460:
  3460                           	line	142
  3461                           	
  3462  02A5                     l3343:	
  3463                           ;prev04.c: 142: lo[4]='1';
  3464  02A5  3031               	movlw	(031h)
  3465  02A6  00C8               	movwf	(??_startswitch+0)+0
  3466  02A7  0848               	movf	(??_startswitch+0)+0,w
  3467  02A8  00E4               	movwf	0+(_lo)+04h
  3468  02A9  2AAA               	goto	l3345
  3469                           	
  3470  02AA                     l698:	
  3471                           	line	145
  3472                           	
  3473  02AA                     l3345:	
  3474                           ;prev04.c: 145: pdev=dev;
  3475  02AA  086B               	movf	(_dev+1),w
  3476  02AB  01EF               	clrf	(_pdev+1)
  3477  02AC  07EF               	addwf	(_pdev+1)
  3478  02AD  086A               	movf	(_dev),w
  3479  02AE  01EE               	clrf	(_pdev)
  3480  02AF  07EE               	addwf	(_pdev)
  3481                           
  3482                           	line	146
  3483                           	
  3484  02B0                     l3347:	
  3485                           ;prev04.c: 146: dev=0b0000;
  3486  02B0  01EA               	clrf	(_dev)
  3487  02B1  01EB               	clrf	(_dev+1)
  3488                           	line	148
  3489                           	
  3490  02B2                     l3349:	
  3491                           ;prev04.c: 148: if(strcmp(lo,plo)!=0&&strcmp(lo,"0000")!=0)
  3492  02B2  30E9               	movlw	(_plo&0ffh)
  3493  02B3  00F0               	movwf	(?_strcmp)
  3494  02B4  3000               	movlw	(0x1/2)
  3495  02B5  00F1               	movwf	(?_strcmp+1)
  3496  02B6  3060               	movlw	(_lo)&0ffh
  3497  02B7  120A  158A  248A   	fcall	_strcmp
              120A  118A         
  3498  02BC  0871               	movf	(1+(?_strcmp)),w
  3499  02BD  0470               	iorwf	(0+(?_strcmp)),w
  3500  02BE  1903               	skipnz
  3501  02BF  2AC1               	goto	u4471
  3502  02C0  2AC2               	goto	u4470
  3503  02C1                     u4471:
  3504  02C1  2C10               	goto	l708
  3505  02C2                     u4470:
  3506                           	
  3507  02C2                     l3351:	
  3508  02C2  307E               	movlw	low((STR_2-__stringbase))
  3509  02C3  00F0               	movwf	(?_strcmp)
  3510  02C4  3080               	movlw	80h
  3511  02C5  00F1               	movwf	(?_strcmp+1)
  3512  02C6  3060               	movlw	(_lo)&0ffh
  3513  02C7  120A  158A  248A   	fcall	_strcmp
              120A  118A         
  3514  02CC  0871               	movf	(1+(?_strcmp)),w
  3515  02CD  0470               	iorwf	(0+(?_strcmp)),w
  3516  02CE  1903               	skipnz
  3517  02CF  2AD1               	goto	u4481
  3518  02D0  2AD2               	goto	u4480
  3519  02D1                     u4481:
  3520  02D1  2C10               	goto	l708
  3521  02D2                     u4480:
  3522                           	line	154
  3523                           	
  3524  02D2                     l3353:	
  3525                           ;prev04.c: 149: {
  3526                           ;prev04.c: 154: if(check(lo,logic_d1))
  3527  02D2  3065               	movlw	(_logic_d1)&0ffh
  3528  02D3  1283               	bcf	status, 5	;RP0=0, select bank0
  3529  02D4  1303               	bcf	status, 6	;RP1=0, select bank0
  3530  02D5  00C8               	movwf	(??_startswitch+0)+0
  3531  02D6  0848               	movf	(??_startswitch+0)+0,w
  3532  02D7  00F0               	movwf	(?_check)
  3533  02D8  3060               	movlw	(_lo)&0ffh
  3534  02D9  120A  158A  24C3   	fcall	_check
              120A  118A         
  3535  02DE  0871               	movf	(1+(?_check)),w
  3536  02DF  0470               	iorwf	(0+(?_check)),w
  3537  02E0  1903               	skipnz
  3538  02E1  2AE3               	goto	u4491
  3539  02E2  2AE4               	goto	u4490
  3540  02E3                     u4491:
  3541  02E3  2AED               	goto	l3357
  3542  02E4                     u4490:
  3543                           	line	155
  3544                           	
  3545  02E4                     l3355:	
  3546                           ;prev04.c: 155: dev=dev|0b0001;
  3547  02E4  3001               	movlw	low(01h)
  3548  02E5  1283               	bcf	status, 5	;RP0=0, select bank0
  3549  02E6  1303               	bcf	status, 6	;RP1=0, select bank0
  3550  02E7  046A               	iorwf	(_dev),w
  3551  02E8  00EA               	movwf	(_dev)
  3552  02E9  3000               	movlw	high(01h)
  3553  02EA  046B               	iorwf	(_dev+1),w
  3554  02EB  00EB               	movwf	1+(_dev)
  3555  02EC  2AF6               	goto	l3359
  3556                           	line	156
  3557                           	
  3558  02ED                     l700:	
  3559                           	line	157
  3560                           	
  3561  02ED                     l3357:	
  3562                           ;prev04.c: 156: else
  3563                           ;prev04.c: 157: dev=dev&0b1110;
  3564  02ED  300E               	movlw	low(0Eh)
  3565  02EE  1283               	bcf	status, 5	;RP0=0, select bank0
  3566  02EF  1303               	bcf	status, 6	;RP1=0, select bank0
  3567  02F0  056A               	andwf	(_dev),w
  3568  02F1  00EA               	movwf	(_dev)
  3569  02F2  3000               	movlw	high(0Eh)
  3570  02F3  056B               	andwf	(_dev+1),w
  3571  02F4  00EB               	movwf	1+(_dev)
  3572  02F5  2AF6               	goto	l3359
  3573                           	
  3574  02F6                     l701:	
  3575                           	line	159
  3576                           	
  3577  02F6                     l3359:	
  3578                           ;prev04.c: 159: if(check(lo,logic_d2))
  3579  02F6  30DA               	movlw	(_logic_d2)&0ffh
  3580  02F7  00C8               	movwf	(??_startswitch+0)+0
  3581  02F8  0848               	movf	(??_startswitch+0)+0,w
  3582  02F9  00F0               	movwf	(?_check)
  3583  02FA  3060               	movlw	(_lo)&0ffh
  3584  02FB  120A  158A  24C3   	fcall	_check
              120A  118A         
  3585  0300  0871               	movf	(1+(?_check)),w
  3586  0301  0470               	iorwf	(0+(?_check)),w
  3587  0302  1903               	skipnz
  3588  0303  2B05               	goto	u4501
  3589  0304  2B06               	goto	u4500
  3590  0305                     u4501:
  3591  0305  2B0F               	goto	l3363
  3592  0306                     u4500:
  3593                           	line	160
  3594                           	
  3595  0306                     l3361:	
  3596                           ;prev04.c: 160: dev=dev|0b0010;
  3597  0306  3002               	movlw	low(02h)
  3598  0307  1283               	bcf	status, 5	;RP0=0, select bank0
  3599  0308  1303               	bcf	status, 6	;RP1=0, select bank0
  3600  0309  046A               	iorwf	(_dev),w
  3601  030A  00EA               	movwf	(_dev)
  3602  030B  3000               	movlw	high(02h)
  3603  030C  046B               	iorwf	(_dev+1),w
  3604  030D  00EB               	movwf	1+(_dev)
  3605  030E  2B18               	goto	l3365
  3606                           	line	161
  3607                           	
  3608  030F                     l702:	
  3609                           	line	162
  3610                           	
  3611  030F                     l3363:	
  3612                           ;prev04.c: 161: else
  3613                           ;prev04.c: 162: dev=dev&0b1101;
  3614  030F  300D               	movlw	low(0Dh)
  3615  0310  1283               	bcf	status, 5	;RP0=0, select bank0
  3616  0311  1303               	bcf	status, 6	;RP1=0, select bank0
  3617  0312  056A               	andwf	(_dev),w
  3618  0313  00EA               	movwf	(_dev)
  3619  0314  3000               	movlw	high(0Dh)
  3620  0315  056B               	andwf	(_dev+1),w
  3621  0316  00EB               	movwf	1+(_dev)
  3622  0317  2B18               	goto	l3365
  3623                           	
  3624  0318                     l703:	
  3625                           	line	165
  3626                           	
  3627  0318                     l3365:	
  3628                           ;prev04.c: 165: if(check(lo,logic_d3))
  3629  0318  30DF               	movlw	(_logic_d3)&0ffh
  3630  0319  00C8               	movwf	(??_startswitch+0)+0
  3631  031A  0848               	movf	(??_startswitch+0)+0,w
  3632  031B  00F0               	movwf	(?_check)
  3633  031C  3060               	movlw	(_lo)&0ffh
  3634  031D  120A  158A  24C3   	fcall	_check
              120A  118A         
  3635  0322  0871               	movf	(1+(?_check)),w
  3636  0323  0470               	iorwf	(0+(?_check)),w
  3637  0324  1903               	skipnz
  3638  0325  2B27               	goto	u4511
  3639  0326  2B28               	goto	u4510
  3640  0327                     u4511:
  3641  0327  2B31               	goto	l3369
  3642  0328                     u4510:
  3643                           	line	166
  3644                           	
  3645  0328                     l3367:	
  3646                           ;prev04.c: 166: dev=dev|0b0100;
  3647  0328  3004               	movlw	low(04h)
  3648  0329  1283               	bcf	status, 5	;RP0=0, select bank0
  3649  032A  1303               	bcf	status, 6	;RP1=0, select bank0
  3650  032B  046A               	iorwf	(_dev),w
  3651  032C  00EA               	movwf	(_dev)
  3652  032D  3000               	movlw	high(04h)
  3653  032E  046B               	iorwf	(_dev+1),w
  3654  032F  00EB               	movwf	1+(_dev)
  3655  0330  2B3A               	goto	l3371
  3656                           	line	167
  3657                           	
  3658  0331                     l704:	
  3659                           	line	168
  3660                           	
  3661  0331                     l3369:	
  3662                           ;prev04.c: 167: else
  3663                           ;prev04.c: 168: dev=dev&0b1011;
  3664  0331  300B               	movlw	low(0Bh)
  3665  0332  1283               	bcf	status, 5	;RP0=0, select bank0
  3666  0333  1303               	bcf	status, 6	;RP1=0, select bank0
  3667  0334  056A               	andwf	(_dev),w
  3668  0335  00EA               	movwf	(_dev)
  3669  0336  3000               	movlw	high(0Bh)
  3670  0337  056B               	andwf	(_dev+1),w
  3671  0338  00EB               	movwf	1+(_dev)
  3672  0339  2B3A               	goto	l3371
  3673                           	
  3674  033A                     l705:	
  3675                           	line	171
  3676                           	
  3677  033A                     l3371:	
  3678                           ;prev04.c: 171: if(check(lo,logic_d4))
  3679  033A  30E4               	movlw	(_logic_d4)&0ffh
  3680  033B  00C8               	movwf	(??_startswitch+0)+0
  3681  033C  0848               	movf	(??_startswitch+0)+0,w
  3682  033D  00F0               	movwf	(?_check)
  3683  033E  3060               	movlw	(_lo)&0ffh
  3684  033F  120A  158A  24C3   	fcall	_check
              120A  118A         
  3685  0344  0871               	movf	(1+(?_check)),w
  3686  0345  0470               	iorwf	(0+(?_check)),w
  3687  0346  1903               	skipnz
  3688  0347  2B49               	goto	u4521
  3689  0348  2B4A               	goto	u4520
  3690  0349                     u4521:
  3691  0349  2B53               	goto	l3375
  3692  034A                     u4520:
  3693                           	line	172
  3694                           	
  3695  034A                     l3373:	
  3696                           ;prev04.c: 172: dev=dev|0b1000;
  3697  034A  3008               	movlw	low(08h)
  3698  034B  1283               	bcf	status, 5	;RP0=0, select bank0
  3699  034C  1303               	bcf	status, 6	;RP1=0, select bank0
  3700  034D  046A               	iorwf	(_dev),w
  3701  034E  00EA               	movwf	(_dev)
  3702  034F  3000               	movlw	high(08h)
  3703  0350  046B               	iorwf	(_dev+1),w
  3704  0351  00EB               	movwf	1+(_dev)
  3705  0352  2B5B               	goto	l707
  3706                           	line	173
  3707                           	
  3708  0353                     l706:	
  3709                           	line	174
  3710                           	
  3711  0353                     l3375:	
  3712                           ;prev04.c: 173: else
  3713                           ;prev04.c: 174: dev=dev&0b0111;
  3714  0353  3007               	movlw	low(07h)
  3715  0354  1283               	bcf	status, 5	;RP0=0, select bank0
  3716  0355  1303               	bcf	status, 6	;RP1=0, select bank0
  3717  0356  056A               	andwf	(_dev),w
  3718  0357  00EA               	movwf	(_dev)
  3719  0358  3000               	movlw	high(07h)
  3720  0359  056B               	andwf	(_dev+1),w
  3721  035A  00EB               	movwf	1+(_dev)
  3722                           	
  3723  035B                     l707:	
  3724                           	line	177
  3725                           ;prev04.c: 177: PORTA=dev;
  3726  035B  086A               	movf	(_dev),w
  3727  035C  0085               	movwf	(5)	;volatile
  3728  035D  2C10               	goto	l708
  3729                           	line	178
  3730                           	
  3731  035E                     l699:	
  3732  035E  2C10               	goto	l708
  3733                           	line	179
  3734                           	
  3735  035F                     l3377:	
  3736                           ;prev04.c: 178: }
  3737                           ;prev04.c: 179: return;
  3738  035F  2C10               	goto	l708
  3739                           	line	182
  3740                           	
  3741  0360                     l3379:	
  3742                           ;prev04.c: 182: if(strcmp(lo,logic_d1)==0)
  3743  0360  3065               	movlw	(_logic_d1&0ffh)
  3744  0361  00F0               	movwf	(?_strcmp)
  3745  0362  3000               	movlw	(0x0/2)
  3746  0363  00F1               	movwf	(?_strcmp+1)
  3747  0364  3060               	movlw	(_lo)&0ffh
  3748  0365  120A  158A  248A   	fcall	_strcmp
              120A  118A         
  3749  036A  0871               	movf	((1+(?_strcmp))),w
  3750  036B  0470               	iorwf	((0+(?_strcmp))),w
  3751  036C  1D03               	skipz
  3752  036D  2B6F               	goto	u4531
  3753  036E  2B70               	goto	u4530
  3754  036F                     u4531:
  3755  036F  2B77               	goto	l3383
  3756  0370                     u4530:
  3757                           	line	183
  3758                           	
  3759  0370                     l3381:	
  3760                           ;prev04.c: 183: dev=0b0001;
  3761  0370  3001               	movlw	low(01h)
  3762  0371  1283               	bcf	status, 5	;RP0=0, select bank0
  3763  0372  1303               	bcf	status, 6	;RP1=0, select bank0
  3764  0373  00EA               	movwf	(_dev)
  3765  0374  3000               	movlw	high(01h)
  3766  0375  00EB               	movwf	((_dev))+1
  3767  0376  2B77               	goto	l3383
  3768                           	
  3769  0377                     l709:	
  3770                           	line	185
  3771                           	
  3772  0377                     l3383:	
  3773                           ;prev04.c: 185: if(strcmp(lo,logic_d2)==0)
  3774  0377  30DA               	movlw	(_logic_d2&0ffh)
  3775  0378  00F0               	movwf	(?_strcmp)
  3776  0379  3000               	movlw	(0x1/2)
  3777  037A  00F1               	movwf	(?_strcmp+1)
  3778  037B  3060               	movlw	(_lo)&0ffh
  3779  037C  120A  158A  248A   	fcall	_strcmp
              120A  118A         
  3780  0381  0871               	movf	((1+(?_strcmp))),w
  3781  0382  0470               	iorwf	((0+(?_strcmp))),w
  3782  0383  1D03               	skipz
  3783  0384  2B86               	goto	u4541
  3784  0385  2B87               	goto	u4540
  3785  0386                     u4541:
  3786  0386  2B90               	goto	l3387
  3787  0387                     u4540:
  3788                           	line	186
  3789                           	
  3790  0387                     l3385:	
  3791                           ;prev04.c: 186: dev=dev|0b0010;
  3792  0387  3002               	movlw	low(02h)
  3793  0388  1283               	bcf	status, 5	;RP0=0, select bank0
  3794  0389  1303               	bcf	status, 6	;RP1=0, select bank0
  3795  038A  046A               	iorwf	(_dev),w
  3796  038B  00EA               	movwf	(_dev)
  3797  038C  3000               	movlw	high(02h)
  3798  038D  046B               	iorwf	(_dev+1),w
  3799  038E  00EB               	movwf	1+(_dev)
  3800  038F  2B90               	goto	l3387
  3801                           	
  3802  0390                     l710:	
  3803                           	line	188
  3804                           	
  3805  0390                     l3387:	
  3806                           ;prev04.c: 188: if(strcmp(lo,logic_d3)==0)
  3807  0390  30DF               	movlw	(_logic_d3&0ffh)
  3808  0391  00F0               	movwf	(?_strcmp)
  3809  0392  3000               	movlw	(0x1/2)
  3810  0393  00F1               	movwf	(?_strcmp+1)
  3811  0394  3060               	movlw	(_lo)&0ffh
  3812  0395  120A  158A  248A   	fcall	_strcmp
              120A  118A         
  3813  039A  0871               	movf	((1+(?_strcmp))),w
  3814  039B  0470               	iorwf	((0+(?_strcmp))),w
  3815  039C  1D03               	skipz
  3816  039D  2B9F               	goto	u4551
  3817  039E  2BA0               	goto	u4550
  3818  039F                     u4551:
  3819  039F  2BA9               	goto	l3391
  3820  03A0                     u4550:
  3821                           	line	189
  3822                           	
  3823  03A0                     l3389:	
  3824                           ;prev04.c: 189: dev=dev|0b0100;
  3825  03A0  3004               	movlw	low(04h)
  3826  03A1  1283               	bcf	status, 5	;RP0=0, select bank0
  3827  03A2  1303               	bcf	status, 6	;RP1=0, select bank0
  3828  03A3  046A               	iorwf	(_dev),w
  3829  03A4  00EA               	movwf	(_dev)
  3830  03A5  3000               	movlw	high(04h)
  3831  03A6  046B               	iorwf	(_dev+1),w
  3832  03A7  00EB               	movwf	1+(_dev)
  3833  03A8  2BA9               	goto	l3391
  3834                           	
  3835  03A9                     l711:	
  3836                           	line	191
  3837                           	
  3838  03A9                     l3391:	
  3839                           ;prev04.c: 191: if(strcmp(lo,logic_d4)==0)
  3840  03A9  30E4               	movlw	(_logic_d4&0ffh)
  3841  03AA  00F0               	movwf	(?_strcmp)
  3842  03AB  3000               	movlw	(0x1/2)
  3843  03AC  00F1               	movwf	(?_strcmp+1)
  3844  03AD  3060               	movlw	(_lo)&0ffh
  3845  03AE  120A  158A  248A   	fcall	_strcmp
              120A  118A         
  3846  03B3  0871               	movf	((1+(?_strcmp))),w
  3847  03B4  0470               	iorwf	((0+(?_strcmp))),w
  3848  03B5  1D03               	skipz
  3849  03B6  2BB8               	goto	u4561
  3850  03B7  2BB9               	goto	u4560
  3851  03B8                     u4561:
  3852  03B8  2BC2               	goto	l3395
  3853  03B9                     u4560:
  3854                           	line	192
  3855                           	
  3856  03B9                     l3393:	
  3857                           ;prev04.c: 192: dev=dev|0b1000;
  3858  03B9  3008               	movlw	low(08h)
  3859  03BA  1283               	bcf	status, 5	;RP0=0, select bank0
  3860  03BB  1303               	bcf	status, 6	;RP1=0, select bank0
  3861  03BC  046A               	iorwf	(_dev),w
  3862  03BD  00EA               	movwf	(_dev)
  3863  03BE  3000               	movlw	high(08h)
  3864  03BF  046B               	iorwf	(_dev+1),w
  3865  03C0  00EB               	movwf	1+(_dev)
  3866  03C1  2BC2               	goto	l3395
  3867                           	
  3868  03C2                     l712:	
  3869                           	line	193
  3870                           	
  3871  03C2                     l3395:	
  3872                           ;prev04.c: 193: write(lo,1,1);
  3873  03C2  3060               	movlw	(_lo&0ffh)
  3874  03C3  1283               	bcf	status, 5	;RP0=0, select bank0
  3875  03C4  1303               	bcf	status, 6	;RP1=0, select bank0
  3876  03C5  00C2               	movwf	(?_write)
  3877  03C6  3000               	movlw	(0x0/2)
  3878  03C7  00C3               	movwf	(?_write+1)
  3879  03C8  3001               	movlw	low(01h)
  3880  03C9  00C4               	movwf	0+(?_write)+02h
  3881  03CA  3000               	movlw	high(01h)
  3882  03CB  00C5               	movwf	(0+(?_write)+02h)+1
  3883  03CC  3001               	movlw	low(01h)
  3884  03CD  00C6               	movwf	0+(?_write)+04h
  3885  03CE  3000               	movlw	high(01h)
  3886  03CF  00C7               	movwf	(0+(?_write)+04h)+1
  3887  03D0  120A  158A  250C   	fcall	_write
              120A  118A         
  3888                           	line	195
  3889                           	
  3890  03D5                     l3397:	
  3891                           ;prev04.c: 195: if(pdev!=dev)
  3892  03D5  1283               	bcf	status, 5	;RP0=0, select bank0
  3893  03D6  1303               	bcf	status, 6	;RP1=0, select bank0
  3894  03D7  086B               	movf	(_dev+1),w
  3895  03D8  066F               	xorwf	(_pdev+1),w
  3896  03D9  1D03               	skipz
  3897  03DA  2BDD               	goto	u4575
  3898  03DB  086A               	movf	(_dev),w
  3899  03DC  066E               	xorwf	(_pdev),w
  3900  03DD                     u4575:
  3901                           
  3902  03DD  1903               	skipnz
  3903  03DE  2BE0               	goto	u4571
  3904  03DF  2BE1               	goto	u4570
  3905  03E0                     u4571:
  3906  03E0  2BF7               	goto	l3403
  3907  03E1                     u4570:
  3908                           	line	197
  3909                           	
  3910  03E1                     l3399:	
  3911                           ;prev04.c: 196: {
  3912                           ;prev04.c: 197: write(lo,1,1);
  3913  03E1  3060               	movlw	(_lo&0ffh)
  3914  03E2  00C2               	movwf	(?_write)
  3915  03E3  3000               	movlw	(0x0/2)
  3916  03E4  00C3               	movwf	(?_write+1)
  3917  03E5  3001               	movlw	low(01h)
  3918  03E6  00C4               	movwf	0+(?_write)+02h
  3919  03E7  3000               	movlw	high(01h)
  3920  03E8  00C5               	movwf	(0+(?_write)+02h)+1
  3921  03E9  3001               	movlw	low(01h)
  3922  03EA  00C6               	movwf	0+(?_write)+04h
  3923  03EB  3000               	movlw	high(01h)
  3924  03EC  00C7               	movwf	(0+(?_write)+04h)+1
  3925  03ED  120A  158A  250C   	fcall	_write
              120A  118A         
  3926                           	line	198
  3927                           	
  3928  03F2                     l3401:	
  3929                           ;prev04.c: 198: PORTA=dev;
  3930  03F2  1283               	bcf	status, 5	;RP0=0, select bank0
  3931  03F3  1303               	bcf	status, 6	;RP1=0, select bank0
  3932  03F4  086A               	movf	(_dev),w
  3933  03F5  0085               	movwf	(5)	;volatile
  3934  03F6  2BF7               	goto	l3403
  3935                           	line	199
  3936                           	
  3937  03F7                     l713:	
  3938                           	line	201
  3939                           	
  3940  03F7                     l3403:	
  3941                           ;prev04.c: 199: }
  3942                           ;prev04.c: 201: if(strcmp(lo,"1000")==0)
  3943  03F7  3083               	movlw	low((STR_3-__stringbase))
  3944  03F8  00F0               	movwf	(?_strcmp)
  3945  03F9  3080               	movlw	80h
  3946  03FA  00F1               	movwf	(?_strcmp+1)
  3947  03FB  3060               	movlw	(_lo)&0ffh
  3948  03FC  120A  158A  248A   	fcall	_strcmp
              120A  118A         
  3949  0401  0871               	movf	((1+(?_strcmp))),w
  3950  0402  0470               	iorwf	((0+(?_strcmp))),w
  3951  0403  1D03               	skipz
  3952  0404  2C06               	goto	u4581
  3953  0405  2C07               	goto	u4580
  3954  0406                     u4581:
  3955  0406  2C0C               	goto	l3407
  3956  0407                     u4580:
  3957                           	line	202
  3958                           	
  3959  0407                     l3405:	
  3960                           ;prev04.c: 202: PORTA=0xF;
  3961  0407  300F               	movlw	(0Fh)
  3962  0408  1283               	bcf	status, 5	;RP0=0, select bank0
  3963  0409  1303               	bcf	status, 6	;RP1=0, select bank0
  3964  040A  0085               	movwf	(5)	;volatile
  3965  040B  2C10               	goto	l708
  3966                           	line	203
  3967                           	
  3968  040C                     l714:	
  3969                           	line	204
  3970                           	
  3971  040C                     l3407:	
  3972                           ;prev04.c: 203: else
  3973                           ;prev04.c: 204: PORTA=0x0;
  3974  040C  1283               	bcf	status, 5	;RP0=0, select bank0
  3975  040D  1303               	bcf	status, 6	;RP1=0, select bank0
  3976  040E  0185               	clrf	(5)	;volatile
  3977  040F  2C10               	goto	l708
  3978                           	
  3979  0410                     l715:	
  3980                           	line	206
  3981                           	
  3982  0410                     l708:	
  3983  0410  0008               	return
  3984                           	opt stack 0
  3985                           GLOBAL	__end_of_startswitch
  3986  0411                     	__end_of_startswitch:
  3987 ;; =============== function _startswitch ends ============
  3988                           
  3989                           	signat	_startswitch,88
  3990                           	global	_write
  3991                           psect	text535,local,class=CODE,delta=2
  3992                           global __ptext535
  3993  0D0C                     __ptext535:
  3994                           
  3995 ;; *************** function _write *****************
  3996 ;; Defined at:
  3997 ;;		line 580 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  str             2   34[BANK0 ] PTR unsigned char 
  4000 ;;		 -> STR_16(5), STR_13(5), STR_10(5), STR_7(5), 
  4001 ;;		 -> getlogicseq@str(32), STR_4(38), logic_d4(5), logic_d3(5), 
  4002 ;;		 -> logic_d2(5), logic_d1(5), lo(5), 
  4003 ;;  line            2   36[BANK0 ] int 
  4004 ;;  erase           2   38[BANK0 ] int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  i               2   12[COMMON] int 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;		None               void
  4009 ;; Registers used:
  4010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4016 ;;      Params:         0       6       0       0       0
  4017 ;;      Locals:         2       0       0       0       0
  4018 ;;      Temps:          2       0       0       0       0
  4019 ;;      Totals:         4       6       0       0       0
  4020 ;;Total ram usage:       10 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    4
  4023 ;; This function calls:
  4024 ;;		_clearlcd
  4025 ;;		_cmd
  4026 ;;		_dat
  4027 ;; This function is called by:
  4028 ;;		_startswitch
  4029 ;;		_getlogicseq
  4030 ;;		_scroll
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           psect	text535
  4034                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  4035                           	line	580
  4036                           	global	__size_of_write
  4037  0064                     	__size_of_write	equ	__end_of_write-_write
  4038                           	
  4039  0D0C                     _write:	
  4040                           	opt	stack 1
  4041                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4042                           	line	581
  4043                           	
  4044  0D0C                     l3309:	
  4045                           ;prev04.c: 581: if(erase==1)
  4046  0D0C  3001               	movlw	01h
  4047  0D0D  1283               	bcf	status, 5	;RP0=0, select bank0
  4048  0D0E  1303               	bcf	status, 6	;RP1=0, select bank0
  4049  0D0F  0646               	xorwf	(write@erase),w
  4050  0D10  0447               	iorwf	(write@erase+1),w
  4051  0D11  1D03               	skipz
  4052  0D12  2D14               	goto	u4401
  4053  0D13  2D15               	goto	u4400
  4054  0D14                     u4401:
  4055  0D14  2D1B               	goto	l3313
  4056  0D15                     u4400:
  4057                           	line	582
  4058                           	
  4059  0D15                     l3311:	
  4060                           ;prev04.c: 582: clearlcd();
  4061  0D15  120A  158A  22E2   	fcall	_clearlcd
              120A  158A         
  4062  0D1A  2D1B               	goto	l3313
  4063                           	
  4064  0D1B                     l859:	
  4065                           	line	584
  4066                           	
  4067  0D1B                     l3313:	
  4068                           ;prev04.c: 584: if(line==2)
  4069  0D1B  3002               	movlw	02h
  4070  0D1C  1283               	bcf	status, 5	;RP0=0, select bank0
  4071  0D1D  1303               	bcf	status, 6	;RP1=0, select bank0
  4072  0D1E  0644               	xorwf	(write@line),w
  4073  0D1F  0445               	iorwf	(write@line+1),w
  4074  0D20  1D03               	skipz
  4075  0D21  2D23               	goto	u4411
  4076  0D22  2D24               	goto	u4410
  4077  0D23                     u4411:
  4078  0D23  2D2E               	goto	l3317
  4079  0D24                     u4410:
  4080                           	line	585
  4081                           	
  4082  0D24                     l3315:	
  4083                           ;prev04.c: 585: cmd(0xC0);
  4084  0D24  30C0               	movlw	low(0C0h)
  4085  0D25  00F8               	movwf	(?_cmd)
  4086  0D26  3000               	movlw	high(0C0h)
  4087  0D27  00F9               	movwf	((?_cmd))+1
  4088  0D28  120A  158A  2363   	fcall	_cmd
              120A  158A         
  4089  0D2D  2D38               	goto	l3319
  4090                           	line	586
  4091                           	
  4092  0D2E                     l860:	
  4093                           	line	587
  4094                           	
  4095  0D2E                     l3317:	
  4096                           ;prev04.c: 586: else
  4097                           ;prev04.c: 587: cmd(0x2);
  4098  0D2E  3002               	movlw	low(02h)
  4099  0D2F  00F8               	movwf	(?_cmd)
  4100  0D30  3000               	movlw	high(02h)
  4101  0D31  00F9               	movwf	((?_cmd))+1
  4102  0D32  120A  158A  2363   	fcall	_cmd
              120A  158A         
  4103  0D37  2D38               	goto	l3319
  4104                           	
  4105  0D38                     l861:	
  4106                           	line	589
  4107                           	
  4108  0D38                     l3319:	
  4109                           ;prev04.c: 589: int i=0;
  4110  0D38  01FC               	clrf	(write@i)
  4111  0D39  01FD               	clrf	(write@i+1)
  4112                           	line	590
  4113                           ;prev04.c: 590: while(str[i]!='\0')
  4114  0D3A  2D5B               	goto	l3325
  4115                           	
  4116  0D3B                     l863:	
  4117                           	line	592
  4118                           	
  4119  0D3B                     l3321:	
  4120                           ;prev04.c: 591: {
  4121                           ;prev04.c: 592: dat(str[i]);
  4122  0D3B  087C               	movf	(write@i),w
  4123  0D3C  1283               	bcf	status, 5	;RP0=0, select bank0
  4124  0D3D  1303               	bcf	status, 6	;RP1=0, select bank0
  4125  0D3E  0742               	addwf	(write@str),w
  4126  0D3F  0084               	movwf	fsr0
  4127  0D40  0843               	movf	(write@str+1),w
  4128  0D41  1803               	skipnc
  4129  0D42  0A43               	incf	(write@str+1),w
  4130  0D43  00FF               	movwf	btemp+1
  4131  0D44  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4132  0D49  00FA               	movwf	(??_write+0)+0
  4133  0D4A  01FB               	clrf	(??_write+0)+0+1
  4134  0D4B  087A               	movf	0+(??_write+0)+0,w
  4135  0D4C  00F8               	movwf	(?_dat)
  4136  0D4D  087B               	movf	1+(??_write+0)+0,w
  4137  0D4E  00F9               	movwf	(?_dat+1)
  4138  0D4F  120A  158A  2388   	fcall	_dat
              120A  158A         
  4139                           	line	593
  4140                           	
  4141  0D54                     l3323:	
  4142                           ;prev04.c: 593: i++;
  4143  0D54  3001               	movlw	low(01h)
  4144  0D55  07FC               	addwf	(write@i),f
  4145  0D56  1803               	skipnc
  4146  0D57  0AFD               	incf	(write@i+1),f
  4147  0D58  3000               	movlw	high(01h)
  4148  0D59  07FD               	addwf	(write@i+1),f
  4149  0D5A  2D5B               	goto	l3325
  4150                           	line	594
  4151                           	
  4152  0D5B                     l862:	
  4153                           	line	590
  4154                           	
  4155  0D5B                     l3325:	
  4156  0D5B  087C               	movf	(write@i),w
  4157  0D5C  1283               	bcf	status, 5	;RP0=0, select bank0
  4158  0D5D  1303               	bcf	status, 6	;RP1=0, select bank0
  4159  0D5E  0742               	addwf	(write@str),w
  4160  0D5F  0084               	movwf	fsr0
  4161  0D60  0843               	movf	(write@str+1),w
  4162  0D61  1803               	skipnc
  4163  0D62  0A43               	incf	(write@str+1),w
  4164  0D63  00FF               	movwf	btemp+1
  4165  0D64  120A  158A  2000   	fcall	stringtab
              120A  158A         
  4166  0D69  3800               	iorlw	0
  4167  0D6A  1D03               	skipz
  4168  0D6B  2D6D               	goto	u4421
  4169  0D6C  2D6E               	goto	u4420
  4170  0D6D                     u4421:
  4171  0D6D  2D3B               	goto	l3321
  4172  0D6E                     u4420:
  4173  0D6E  2D6F               	goto	l865
  4174                           	
  4175  0D6F                     l864:	
  4176                           	line	597
  4177                           	
  4178  0D6F                     l865:	
  4179  0D6F  0008               	return
  4180                           	opt stack 0
  4181                           GLOBAL	__end_of_write
  4182  0D70                     	__end_of_write:
  4183 ;; =============== function _write ends ============
  4184                           
  4185                           	signat	_write,12408
  4186                           	global	_clearlcd
  4187                           psect	text536,local,class=CODE,delta=2
  4188                           global __ptext536
  4189  0AE2                     __ptext536:
  4190                           
  4191 ;; *************** function _clearlcd *****************
  4192 ;; Defined at:
  4193 ;;		line 523 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;		None               void
  4200 ;; Registers used:
  4201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4207 ;;      Params:         0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0
  4210 ;;      Totals:         0       0       0       0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    3
  4214 ;; This function calls:
  4215 ;;		_cmd
  4216 ;; This function is called by:
  4217 ;;		_write
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           psect	text536
  4221                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  4222                           	line	523
  4223                           	global	__size_of_clearlcd
  4224  000A                     	__size_of_clearlcd	equ	__end_of_clearlcd-_clearlcd
  4225                           	
  4226  0AE2                     _clearlcd:	
  4227                           	opt	stack 1
  4228                           ; Regs used in _clearlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4229                           	line	524
  4230                           	
  4231  0AE2                     l3307:	
  4232                           ;prev04.c: 524: cmd(0x01);
  4233  0AE2  3001               	movlw	low(01h)
  4234  0AE3  00F8               	movwf	(?_cmd)
  4235  0AE4  3000               	movlw	high(01h)
  4236  0AE5  00F9               	movwf	((?_cmd))+1
  4237  0AE6  120A  158A  2363   	fcall	_cmd
              120A  158A         
  4238                           	line	525
  4239                           	
  4240  0AEB                     l843:	
  4241  0AEB  0008               	return
  4242                           	opt stack 0
  4243                           GLOBAL	__end_of_clearlcd
  4244  0AEC                     	__end_of_clearlcd:
  4245 ;; =============== function _clearlcd ends ============
  4246                           
  4247                           	signat	_clearlcd,88
  4248                           	global	_scan
  4249                           psect	text537,local,class=CODE,delta=2
  4250                           global __ptext537
  4251  0F18                     __ptext537:
  4252                           
  4253 ;; *************** function _scan *****************
  4254 ;; Defined at:
  4255 ;;		line 662 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  2    4[COMMON] int 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, pclath, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4269 ;;      Params:         2       0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0
  4272 ;;      Totals:         2       0       0       0       0
  4273 ;;Total ram usage:        2 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    2
  4276 ;; This function calls:
  4277 ;;		_actrow
  4278 ;; This function is called by:
  4279 ;;		_getlogicseq
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           psect	text537
  4283                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  4284                           	line	662
  4285                           	global	__size_of_scan
  4286  00E8                     	__size_of_scan	equ	__end_of_scan-_scan
  4287                           	
  4288  0F18                     _scan:	
  4289                           	opt	stack 4
  4290                           ; Regs used in _scan: [wreg+status,2+status,0+pclath+cstack]
  4291                           	line	663
  4292                           	
  4293  0F18                     l3199:	
  4294                           ;prev04.c: 663: actrow(1) ;
  4295  0F18  3001               	movlw	low(01h)
  4296  0F19  00F2               	movwf	(?_actrow)
  4297  0F1A  3000               	movlw	high(01h)
  4298  0F1B  00F3               	movwf	((?_actrow))+1
  4299  0F1C  120A  118A  2003   	fcall	_actrow
              120A  158A         
  4300                           	line	664
  4301                           	
  4302  0F21                     l3201:	
  4303                           ;prev04.c: 664: if( RC2==1)
  4304  0F21  1283               	bcf	status, 5	;RP0=0, select bank0
  4305  0F22  1303               	bcf	status, 6	;RP1=0, select bank0
  4306  0F23  1D07               	btfss	(58/8),(58)&7
  4307  0F24  2F26               	goto	u4241
  4308  0F25  2F27               	goto	u4240
  4309  0F26                     u4241:
  4310  0F26  2F2C               	goto	l886
  4311  0F27                     u4240:
  4312                           	line	665
  4313                           	
  4314  0F27                     l3203:	
  4315                           ;prev04.c: 665: return 0;
  4316  0F27  01F4               	clrf	(?_scan)
  4317  0F28  01F5               	clrf	(?_scan+1)
  4318  0F29  2FFF               	goto	l887
  4319                           	
  4320  0F2A                     l3205:	
  4321  0F2A  2FFF               	goto	l887
  4322                           	
  4323  0F2B                     l3207:	
  4324  0F2B  2F4F               	goto	l3225
  4325                           	line	666
  4326                           	
  4327  0F2C                     l886:	
  4328                           ;prev04.c: 666: else if(RC3==1)
  4329  0F2C  1D87               	btfss	(59/8),(59)&7
  4330  0F2D  2F2F               	goto	u4251
  4331  0F2E  2F30               	goto	u4250
  4332  0F2F                     u4251:
  4333  0F2F  2F37               	goto	l889
  4334  0F30                     u4250:
  4335                           	line	667
  4336                           	
  4337  0F30                     l3209:	
  4338                           ;prev04.c: 667: return 1;
  4339  0F30  3001               	movlw	low(01h)
  4340  0F31  00F4               	movwf	(?_scan)
  4341  0F32  3000               	movlw	high(01h)
  4342  0F33  00F5               	movwf	((?_scan))+1
  4343  0F34  2FFF               	goto	l887
  4344                           	
  4345  0F35                     l3211:	
  4346  0F35  2FFF               	goto	l887
  4347                           	
  4348  0F36                     l3213:	
  4349  0F36  2F4F               	goto	l3225
  4350                           	line	668
  4351                           	
  4352  0F37                     l889:	
  4353                           ;prev04.c: 668: else if(RB6==1)
  4354  0F37  1F06               	btfss	(54/8),(54)&7
  4355  0F38  2F3A               	goto	u4261
  4356  0F39  2F3B               	goto	u4260
  4357  0F3A                     u4261:
  4358  0F3A  2F42               	goto	l891
  4359  0F3B                     u4260:
  4360                           	line	669
  4361                           	
  4362  0F3B                     l3215:	
  4363                           ;prev04.c: 669: return 2;
  4364  0F3B  3002               	movlw	low(02h)
  4365  0F3C  00F4               	movwf	(?_scan)
  4366  0F3D  3000               	movlw	high(02h)
  4367  0F3E  00F5               	movwf	((?_scan))+1
  4368  0F3F  2FFF               	goto	l887
  4369                           	
  4370  0F40                     l3217:	
  4371  0F40  2FFF               	goto	l887
  4372                           	
  4373  0F41                     l3219:	
  4374  0F41  2F4F               	goto	l3225
  4375                           	line	670
  4376                           	
  4377  0F42                     l891:	
  4378                           ;prev04.c: 670: else if(RB7==1)
  4379  0F42  1F86               	btfss	(55/8),(55)&7
  4380  0F43  2F45               	goto	u4271
  4381  0F44  2F46               	goto	u4270
  4382  0F45                     u4271:
  4383  0F45  2F4F               	goto	l3225
  4384  0F46                     u4270:
  4385                           	line	671
  4386                           	
  4387  0F46                     l3221:	
  4388                           ;prev04.c: 671: return 4;
  4389  0F46  3004               	movlw	low(04h)
  4390  0F47  00F4               	movwf	(?_scan)
  4391  0F48  3000               	movlw	high(04h)
  4392  0F49  00F5               	movwf	((?_scan))+1
  4393  0F4A  2FFF               	goto	l887
  4394                           	
  4395  0F4B                     l3223:	
  4396  0F4B  2FFF               	goto	l887
  4397                           	
  4398  0F4C                     l893:	
  4399  0F4C  2F4F               	goto	l3225
  4400                           	line	673
  4401                           	
  4402  0F4D                     l892:	
  4403  0F4D  2F4F               	goto	l3225
  4404                           	
  4405  0F4E                     l890:	
  4406  0F4E  2F4F               	goto	l3225
  4407                           	
  4408  0F4F                     l888:	
  4409                           	
  4410  0F4F                     l3225:	
  4411                           ;prev04.c: 673: actrow(2) ;
  4412  0F4F  3002               	movlw	low(02h)
  4413  0F50  00F2               	movwf	(?_actrow)
  4414  0F51  3000               	movlw	high(02h)
  4415  0F52  00F3               	movwf	((?_actrow))+1
  4416  0F53  120A  118A  2003   	fcall	_actrow
              120A  158A         
  4417                           	line	675
  4418                           	
  4419  0F58                     l3227:	
  4420                           ;prev04.c: 675: if( RC2==1)
  4421  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  4422  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  4423  0F5A  1D07               	btfss	(58/8),(58)&7
  4424  0F5B  2F5D               	goto	u4281
  4425  0F5C  2F5E               	goto	u4280
  4426  0F5D                     u4281:
  4427  0F5D  2F65               	goto	l894
  4428  0F5E                     u4280:
  4429                           	line	676
  4430                           	
  4431  0F5E                     l3229:	
  4432                           ;prev04.c: 676: return 5;
  4433  0F5E  3005               	movlw	low(05h)
  4434  0F5F  00F4               	movwf	(?_scan)
  4435  0F60  3000               	movlw	high(05h)
  4436  0F61  00F5               	movwf	((?_scan))+1
  4437  0F62  2FFF               	goto	l887
  4438                           	
  4439  0F63                     l3231:	
  4440  0F63  2FFF               	goto	l887
  4441                           	
  4442  0F64                     l3233:	
  4443  0F64  2F88               	goto	l3251
  4444                           	line	677
  4445                           	
  4446  0F65                     l894:	
  4447                           ;prev04.c: 677: else if(RC3==1)
  4448  0F65  1D87               	btfss	(59/8),(59)&7
  4449  0F66  2F68               	goto	u4291
  4450  0F67  2F69               	goto	u4290
  4451  0F68                     u4291:
  4452  0F68  2F70               	goto	l896
  4453  0F69                     u4290:
  4454                           	line	678
  4455                           	
  4456  0F69                     l3235:	
  4457                           ;prev04.c: 678: return 6;
  4458  0F69  3006               	movlw	low(06h)
  4459  0F6A  00F4               	movwf	(?_scan)
  4460  0F6B  3000               	movlw	high(06h)
  4461  0F6C  00F5               	movwf	((?_scan))+1
  4462  0F6D  2FFF               	goto	l887
  4463                           	
  4464  0F6E                     l3237:	
  4465  0F6E  2FFF               	goto	l887
  4466                           	
  4467  0F6F                     l3239:	
  4468  0F6F  2F88               	goto	l3251
  4469                           	line	679
  4470                           	
  4471  0F70                     l896:	
  4472                           ;prev04.c: 679: else if(RB6==1)
  4473  0F70  1F06               	btfss	(54/8),(54)&7
  4474  0F71  2F73               	goto	u4301
  4475  0F72  2F74               	goto	u4300
  4476  0F73                     u4301:
  4477  0F73  2F7B               	goto	l898
  4478  0F74                     u4300:
  4479                           	line	680
  4480                           	
  4481  0F74                     l3241:	
  4482                           ;prev04.c: 680: return 7;
  4483  0F74  3007               	movlw	low(07h)
  4484  0F75  00F4               	movwf	(?_scan)
  4485  0F76  3000               	movlw	high(07h)
  4486  0F77  00F5               	movwf	((?_scan))+1
  4487  0F78  2FFF               	goto	l887
  4488                           	
  4489  0F79                     l3243:	
  4490  0F79  2FFF               	goto	l887
  4491                           	
  4492  0F7A                     l3245:	
  4493  0F7A  2F88               	goto	l3251
  4494                           	line	681
  4495                           	
  4496  0F7B                     l898:	
  4497                           ;prev04.c: 681: else if(RB7==1)
  4498  0F7B  1F86               	btfss	(55/8),(55)&7
  4499  0F7C  2F7E               	goto	u4311
  4500  0F7D  2F7F               	goto	u4310
  4501  0F7E                     u4311:
  4502  0F7E  2F88               	goto	l3251
  4503  0F7F                     u4310:
  4504                           	line	682
  4505                           	
  4506  0F7F                     l3247:	
  4507                           ;prev04.c: 682: return 8;
  4508  0F7F  3008               	movlw	low(08h)
  4509  0F80  00F4               	movwf	(?_scan)
  4510  0F81  3000               	movlw	high(08h)
  4511  0F82  00F5               	movwf	((?_scan))+1
  4512  0F83  2FFF               	goto	l887
  4513                           	
  4514  0F84                     l3249:	
  4515  0F84  2FFF               	goto	l887
  4516                           	
  4517  0F85                     l900:	
  4518  0F85  2F88               	goto	l3251
  4519                           	line	684
  4520                           	
  4521  0F86                     l899:	
  4522  0F86  2F88               	goto	l3251
  4523                           	
  4524  0F87                     l897:	
  4525  0F87  2F88               	goto	l3251
  4526                           	
  4527  0F88                     l895:	
  4528                           	
  4529  0F88                     l3251:	
  4530                           ;prev04.c: 684: actrow(3) ;
  4531  0F88  3003               	movlw	low(03h)
  4532  0F89  00F2               	movwf	(?_actrow)
  4533  0F8A  3000               	movlw	high(03h)
  4534  0F8B  00F3               	movwf	((?_actrow))+1
  4535  0F8C  120A  118A  2003   	fcall	_actrow
              120A  158A         
  4536                           	line	686
  4537                           	
  4538  0F91                     l3253:	
  4539                           ;prev04.c: 686: if( RC2==1)
  4540  0F91  1283               	bcf	status, 5	;RP0=0, select bank0
  4541  0F92  1303               	bcf	status, 6	;RP1=0, select bank0
  4542  0F93  1D07               	btfss	(58/8),(58)&7
  4543  0F94  2F96               	goto	u4321
  4544  0F95  2F97               	goto	u4320
  4545  0F96                     u4321:
  4546  0F96  2F9E               	goto	l901
  4547  0F97                     u4320:
  4548                           	line	687
  4549                           	
  4550  0F97                     l3255:	
  4551                           ;prev04.c: 687: return 9;
  4552  0F97  3009               	movlw	low(09h)
  4553  0F98  00F4               	movwf	(?_scan)
  4554  0F99  3000               	movlw	high(09h)
  4555  0F9A  00F5               	movwf	((?_scan))+1
  4556  0F9B  2FFF               	goto	l887
  4557                           	
  4558  0F9C                     l3257:	
  4559  0F9C  2FFF               	goto	l887
  4560                           	
  4561  0F9D                     l3259:	
  4562  0F9D  2FC1               	goto	l3277
  4563                           	line	688
  4564                           	
  4565  0F9E                     l901:	
  4566                           ;prev04.c: 688: else if(RC3==1)
  4567  0F9E  1D87               	btfss	(59/8),(59)&7
  4568  0F9F  2FA1               	goto	u4331
  4569  0FA0  2FA2               	goto	u4330
  4570  0FA1                     u4331:
  4571  0FA1  2FA9               	goto	l903
  4572  0FA2                     u4330:
  4573                           	line	689
  4574                           	
  4575  0FA2                     l3261:	
  4576                           ;prev04.c: 689: return 10;
  4577  0FA2  300A               	movlw	low(0Ah)
  4578  0FA3  00F4               	movwf	(?_scan)
  4579  0FA4  3000               	movlw	high(0Ah)
  4580  0FA5  00F5               	movwf	((?_scan))+1
  4581  0FA6  2FFF               	goto	l887
  4582                           	
  4583  0FA7                     l3263:	
  4584  0FA7  2FFF               	goto	l887
  4585                           	
  4586  0FA8                     l3265:	
  4587  0FA8  2FC1               	goto	l3277
  4588                           	line	690
  4589                           	
  4590  0FA9                     l903:	
  4591                           ;prev04.c: 690: else if(RB6==1)
  4592  0FA9  1F06               	btfss	(54/8),(54)&7
  4593  0FAA  2FAC               	goto	u4341
  4594  0FAB  2FAD               	goto	u4340
  4595  0FAC                     u4341:
  4596  0FAC  2FB4               	goto	l905
  4597  0FAD                     u4340:
  4598                           	line	691
  4599                           	
  4600  0FAD                     l3267:	
  4601                           ;prev04.c: 691: return 11;
  4602  0FAD  300B               	movlw	low(0Bh)
  4603  0FAE  00F4               	movwf	(?_scan)
  4604  0FAF  3000               	movlw	high(0Bh)
  4605  0FB0  00F5               	movwf	((?_scan))+1
  4606  0FB1  2FFF               	goto	l887
  4607                           	
  4608  0FB2                     l3269:	
  4609  0FB2  2FFF               	goto	l887
  4610                           	
  4611  0FB3                     l3271:	
  4612  0FB3  2FC1               	goto	l3277
  4613                           	line	692
  4614                           	
  4615  0FB4                     l905:	
  4616                           ;prev04.c: 692: else if(RB7==1)
  4617  0FB4  1F86               	btfss	(55/8),(55)&7
  4618  0FB5  2FB7               	goto	u4351
  4619  0FB6  2FB8               	goto	u4350
  4620  0FB7                     u4351:
  4621  0FB7  2FC1               	goto	l3277
  4622  0FB8                     u4350:
  4623                           	line	693
  4624                           	
  4625  0FB8                     l3273:	
  4626                           ;prev04.c: 693: return 12;
  4627  0FB8  300C               	movlw	low(0Ch)
  4628  0FB9  00F4               	movwf	(?_scan)
  4629  0FBA  3000               	movlw	high(0Ch)
  4630  0FBB  00F5               	movwf	((?_scan))+1
  4631  0FBC  2FFF               	goto	l887
  4632                           	
  4633  0FBD                     l3275:	
  4634  0FBD  2FFF               	goto	l887
  4635                           	
  4636  0FBE                     l907:	
  4637  0FBE  2FC1               	goto	l3277
  4638                           	line	696
  4639                           	
  4640  0FBF                     l906:	
  4641  0FBF  2FC1               	goto	l3277
  4642                           	
  4643  0FC0                     l904:	
  4644  0FC0  2FC1               	goto	l3277
  4645                           	
  4646  0FC1                     l902:	
  4647                           	
  4648  0FC1                     l3277:	
  4649                           ;prev04.c: 696: actrow(4) ;
  4650  0FC1  3004               	movlw	low(04h)
  4651  0FC2  00F2               	movwf	(?_actrow)
  4652  0FC3  3000               	movlw	high(04h)
  4653  0FC4  00F3               	movwf	((?_actrow))+1
  4654  0FC5  120A  118A  2003   	fcall	_actrow
              120A  158A         
  4655                           	line	698
  4656                           	
  4657  0FCA                     l3279:	
  4658                           ;prev04.c: 698: if( RC2==1)
  4659  0FCA  1283               	bcf	status, 5	;RP0=0, select bank0
  4660  0FCB  1303               	bcf	status, 6	;RP1=0, select bank0
  4661  0FCC  1D07               	btfss	(58/8),(58)&7
  4662  0FCD  2FCF               	goto	u4361
  4663  0FCE  2FD0               	goto	u4360
  4664  0FCF                     u4361:
  4665  0FCF  2FD7               	goto	l908
  4666  0FD0                     u4360:
  4667                           	line	699
  4668                           	
  4669  0FD0                     l3281:	
  4670                           ;prev04.c: 699: return 13;
  4671  0FD0  300D               	movlw	low(0Dh)
  4672  0FD1  00F4               	movwf	(?_scan)
  4673  0FD2  3000               	movlw	high(0Dh)
  4674  0FD3  00F5               	movwf	((?_scan))+1
  4675  0FD4  2FFF               	goto	l887
  4676                           	
  4677  0FD5                     l3283:	
  4678  0FD5  2FFF               	goto	l887
  4679                           	
  4680  0FD6                     l3285:	
  4681  0FD6  2FFA               	goto	l3303
  4682                           	line	700
  4683                           	
  4684  0FD7                     l908:	
  4685                           ;prev04.c: 700: else if(RC3==1)
  4686  0FD7  1D87               	btfss	(59/8),(59)&7
  4687  0FD8  2FDA               	goto	u4371
  4688  0FD9  2FDB               	goto	u4370
  4689  0FDA                     u4371:
  4690  0FDA  2FE2               	goto	l910
  4691  0FDB                     u4370:
  4692                           	line	701
  4693                           	
  4694  0FDB                     l3287:	
  4695                           ;prev04.c: 701: return 14;
  4696  0FDB  300E               	movlw	low(0Eh)
  4697  0FDC  00F4               	movwf	(?_scan)
  4698  0FDD  3000               	movlw	high(0Eh)
  4699  0FDE  00F5               	movwf	((?_scan))+1
  4700  0FDF  2FFF               	goto	l887
  4701                           	
  4702  0FE0                     l3289:	
  4703  0FE0  2FFF               	goto	l887
  4704                           	
  4705  0FE1                     l3291:	
  4706  0FE1  2FFA               	goto	l3303
  4707                           	line	702
  4708                           	
  4709  0FE2                     l910:	
  4710                           ;prev04.c: 702: else if(RB6==1)
  4711  0FE2  1F06               	btfss	(54/8),(54)&7
  4712  0FE3  2FE5               	goto	u4381
  4713  0FE4  2FE6               	goto	u4380
  4714  0FE5                     u4381:
  4715  0FE5  2FED               	goto	l912
  4716  0FE6                     u4380:
  4717                           	line	703
  4718                           	
  4719  0FE6                     l3293:	
  4720                           ;prev04.c: 703: return 15;
  4721  0FE6  300F               	movlw	low(0Fh)
  4722  0FE7  00F4               	movwf	(?_scan)
  4723  0FE8  3000               	movlw	high(0Fh)
  4724  0FE9  00F5               	movwf	((?_scan))+1
  4725  0FEA  2FFF               	goto	l887
  4726                           	
  4727  0FEB                     l3295:	
  4728  0FEB  2FFF               	goto	l887
  4729                           	
  4730  0FEC                     l3297:	
  4731  0FEC  2FFA               	goto	l3303
  4732                           	line	704
  4733                           	
  4734  0FED                     l912:	
  4735                           ;prev04.c: 704: else if(RB7==1)
  4736  0FED  1F86               	btfss	(55/8),(55)&7
  4737  0FEE  2FF0               	goto	u4391
  4738  0FEF  2FF1               	goto	u4390
  4739  0FF0                     u4391:
  4740  0FF0  2FFA               	goto	l3303
  4741  0FF1                     u4390:
  4742                           	line	705
  4743                           	
  4744  0FF1                     l3299:	
  4745                           ;prev04.c: 705: return 16;
  4746  0FF1  3010               	movlw	low(010h)
  4747  0FF2  00F4               	movwf	(?_scan)
  4748  0FF3  3000               	movlw	high(010h)
  4749  0FF4  00F5               	movwf	((?_scan))+1
  4750  0FF5  2FFF               	goto	l887
  4751                           	
  4752  0FF6                     l3301:	
  4753  0FF6  2FFF               	goto	l887
  4754                           	
  4755  0FF7                     l914:	
  4756  0FF7  2FFA               	goto	l3303
  4757                           	line	709
  4758                           	
  4759  0FF8                     l913:	
  4760  0FF8  2FFA               	goto	l3303
  4761                           	
  4762  0FF9                     l911:	
  4763  0FF9  2FFA               	goto	l3303
  4764                           	
  4765  0FFA                     l909:	
  4766                           	
  4767  0FFA                     l3303:	
  4768                           ;prev04.c: 709: return 99;
  4769  0FFA  3063               	movlw	low(063h)
  4770  0FFB  00F4               	movwf	(?_scan)
  4771  0FFC  3000               	movlw	high(063h)
  4772  0FFD  00F5               	movwf	((?_scan))+1
  4773  0FFE  2FFF               	goto	l887
  4774                           	
  4775  0FFF                     l3305:	
  4776                           	line	713
  4777                           	
  4778  0FFF                     l887:	
  4779  0FFF  0008               	return
  4780                           	opt stack 0
  4781                           GLOBAL	__end_of_scan
  4782  1000                     	__end_of_scan:
  4783 ;; =============== function _scan ends ============
  4784                           
  4785                           	signat	_scan,90
  4786                           	global	_initlcd
  4787                           psect	text538,local,class=CODE,delta=2
  4788                           global __ptext538
  4789  0C57                     __ptext538:
  4790                           
  4791 ;; *************** function _initlcd *****************
  4792 ;; Defined at:
  4793 ;;		line 505 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;		None               void
  4800 ;; Registers used:
  4801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4807 ;;      Params:         0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0
  4810 ;;      Totals:         0       0       0       0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    3
  4814 ;; This function calls:
  4815 ;;		_cmd
  4816 ;; This function is called by:
  4817 ;;		_main
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           psect	text538
  4821                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  4822                           	line	505
  4823                           	global	__size_of_initlcd
  4824  0033                     	__size_of_initlcd	equ	__end_of_initlcd-_initlcd
  4825                           	
  4826  0C57                     _initlcd:	
  4827                           	opt	stack 4
  4828                           ; Regs used in _initlcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4829                           	line	507
  4830                           	
  4831  0C57                     l3185:	
  4832                           ;prev04.c: 507: TRISC=0b00111111;
  4833  0C57  303F               	movlw	(03Fh)
  4834  0C58  1683               	bsf	status, 5	;RP0=1, select bank1
  4835  0C59  1303               	bcf	status, 6	;RP1=0, select bank1
  4836  0C5A  0087               	movwf	(135)^080h	;volatile
  4837                           	line	509
  4838                           	
  4839  0C5B                     l3187:	
  4840                           ;prev04.c: 509: TRISD=0x00;
  4841  0C5B  0188               	clrf	(136)^080h	;volatile
  4842                           	line	511
  4843                           	
  4844  0C5C                     l3189:	
  4845                           ;prev04.c: 511: cmd(0x38);
  4846  0C5C  3038               	movlw	low(038h)
  4847  0C5D  00F8               	movwf	(?_cmd)
  4848  0C5E  3000               	movlw	high(038h)
  4849  0C5F  00F9               	movwf	((?_cmd))+1
  4850  0C60  120A  158A  2363   	fcall	_cmd
              120A  158A         
  4851                           	line	513
  4852                           	
  4853  0C65                     l3191:	
  4854                           ;prev04.c: 513: cmd(0x0C);
  4855  0C65  300C               	movlw	low(0Ch)
  4856  0C66  00F8               	movwf	(?_cmd)
  4857  0C67  3000               	movlw	high(0Ch)
  4858  0C68  00F9               	movwf	((?_cmd))+1
  4859  0C69  120A  158A  2363   	fcall	_cmd
              120A  158A         
  4860                           	line	515
  4861                           	
  4862  0C6E                     l3193:	
  4863                           ;prev04.c: 515: cmd(0x01);
  4864  0C6E  3001               	movlw	low(01h)
  4865  0C6F  00F8               	movwf	(?_cmd)
  4866  0C70  3000               	movlw	high(01h)
  4867  0C71  00F9               	movwf	((?_cmd))+1
  4868  0C72  120A  158A  2363   	fcall	_cmd
              120A  158A         
  4869                           	line	517
  4870                           	
  4871  0C77                     l3195:	
  4872                           ;prev04.c: 517: cmd(0x80);
  4873  0C77  3080               	movlw	low(080h)
  4874  0C78  00F8               	movwf	(?_cmd)
  4875  0C79  3000               	movlw	high(080h)
  4876  0C7A  00F9               	movwf	((?_cmd))+1
  4877  0C7B  120A  158A  2363   	fcall	_cmd
              120A  158A         
  4878                           	line	519
  4879                           	
  4880  0C80                     l3197:	
  4881                           ;prev04.c: 519: cmd(0x0f);
  4882  0C80  300F               	movlw	low(0Fh)
  4883  0C81  00F8               	movwf	(?_cmd)
  4884  0C82  3000               	movlw	high(0Fh)
  4885  0C83  00F9               	movwf	((?_cmd))+1
  4886  0C84  120A  158A  2363   	fcall	_cmd
              120A  158A         
  4887                           	line	521
  4888                           	
  4889  0C89                     l840:	
  4890  0C89  0008               	return
  4891                           	opt stack 0
  4892                           GLOBAL	__end_of_initlcd
  4893  0C8A                     	__end_of_initlcd:
  4894 ;; =============== function _initlcd ends ============
  4895                           
  4896                           	signat	_initlcd,88
  4897                           	global	_actrow
  4898                           psect	text539,local,class=CODE,delta=2
  4899                           global __ptext539
  4900  0003                     __ptext539:
  4901                           
  4902 ;; *************** function _actrow *****************
  4903 ;; Defined at:
  4904 ;;		line 721 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  n               2    2[COMMON] int 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;		None               void
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, pclath, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4918 ;;      Params:         2       0       0       0       0
  4919 ;;      Locals:         0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0
  4921 ;;      Totals:         2       0       0       0       0
  4922 ;;Total ram usage:        2 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    1
  4925 ;; This function calls:
  4926 ;;		_resetout
  4927 ;;		_delay
  4928 ;; This function is called by:
  4929 ;;		_scan
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           psect	text539
  4933                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  4934                           	line	721
  4935                           	global	__size_of_actrow
  4936  003E                     	__size_of_actrow	equ	__end_of_actrow-_actrow
  4937                           	
  4938  0003                     _actrow:	
  4939                           	opt	stack 4
  4940                           ; Regs used in _actrow: [wreg+status,2+status,0+pclath+cstack]
  4941                           	line	722
  4942                           	
  4943  0003                     l3165:	
  4944                           ;prev04.c: 722: resetout();
  4945  0003  120A  158A  22CB   	fcall	_resetout
              120A  118A         
  4946                           	line	724
  4947                           	
  4948  0008                     l3167:	
  4949                           ;prev04.c: 724: if(n==1)
  4950  0008  3001               	movlw	01h
  4951  0009  0672               	xorwf	(actrow@n),w
  4952  000A  0473               	iorwf	(actrow@n+1),w
  4953  000B  1D03               	skipz
  4954  000C  280E               	goto	u4201
  4955  000D  280F               	goto	u4200
  4956  000E                     u4201:
  4957  000E  2813               	goto	l3171
  4958  000F                     u4200:
  4959                           	line	726
  4960                           	
  4961  000F                     l3169:	
  4962                           ;prev04.c: 725: {
  4963                           ;prev04.c: 726: RB0=1;
  4964  000F  1283               	bcf	status, 5	;RP0=0, select bank0
  4965  0010  1303               	bcf	status, 6	;RP1=0, select bank0
  4966  0011  1406               	bsf	(48/8),(48)&7
  4967                           	line	727
  4968                           ;prev04.c: 727: }
  4969  0012  2837               	goto	l3183
  4970                           	line	728
  4971                           	
  4972  0013                     l920:	
  4973                           	
  4974  0013                     l3171:	
  4975                           ;prev04.c: 728: else if(n==2)
  4976  0013  3002               	movlw	02h
  4977  0014  0672               	xorwf	(actrow@n),w
  4978  0015  0473               	iorwf	(actrow@n+1),w
  4979  0016  1D03               	skipz
  4980  0017  2819               	goto	u4211
  4981  0018  281A               	goto	u4210
  4982  0019                     u4211:
  4983  0019  281E               	goto	l3175
  4984  001A                     u4210:
  4985                           	line	730
  4986                           	
  4987  001A                     l3173:	
  4988                           ;prev04.c: 729: {
  4989                           ;prev04.c: 730: RB1=1;
  4990  001A  1283               	bcf	status, 5	;RP0=0, select bank0
  4991  001B  1303               	bcf	status, 6	;RP1=0, select bank0
  4992  001C  1486               	bsf	(49/8),(49)&7
  4993                           	line	731
  4994                           ;prev04.c: 731: }
  4995  001D  2837               	goto	l3183
  4996                           	line	732
  4997                           	
  4998  001E                     l922:	
  4999                           	
  5000  001E                     l3175:	
  5001                           ;prev04.c: 732: else if(n==3)
  5002  001E  3003               	movlw	03h
  5003  001F  0672               	xorwf	(actrow@n),w
  5004  0020  0473               	iorwf	(actrow@n+1),w
  5005  0021  1D03               	skipz
  5006  0022  2824               	goto	u4221
  5007  0023  2825               	goto	u4220
  5008  0024                     u4221:
  5009  0024  2829               	goto	l3179
  5010  0025                     u4220:
  5011                           	line	734
  5012                           	
  5013  0025                     l3177:	
  5014                           ;prev04.c: 733: {
  5015                           ;prev04.c: 734: RB2=1;
  5016  0025  1283               	bcf	status, 5	;RP0=0, select bank0
  5017  0026  1303               	bcf	status, 6	;RP1=0, select bank0
  5018  0027  1506               	bsf	(50/8),(50)&7
  5019                           	line	735
  5020                           ;prev04.c: 735: }
  5021  0028  2837               	goto	l3183
  5022                           	line	736
  5023                           	
  5024  0029                     l924:	
  5025                           	
  5026  0029                     l3179:	
  5027                           ;prev04.c: 736: else if(n==4)
  5028  0029  3004               	movlw	04h
  5029  002A  0672               	xorwf	(actrow@n),w
  5030  002B  0473               	iorwf	(actrow@n+1),w
  5031  002C  1D03               	skipz
  5032  002D  282F               	goto	u4231
  5033  002E  2830               	goto	u4230
  5034  002F                     u4231:
  5035  002F  2837               	goto	l3183
  5036  0030                     u4230:
  5037                           	line	738
  5038                           	
  5039  0030                     l3181:	
  5040                           ;prev04.c: 737: {
  5041                           ;prev04.c: 738: RB3=1;
  5042  0030  1283               	bcf	status, 5	;RP0=0, select bank0
  5043  0031  1303               	bcf	status, 6	;RP1=0, select bank0
  5044  0032  1586               	bsf	(51/8),(51)&7
  5045  0033  2837               	goto	l3183
  5046                           	line	739
  5047                           	
  5048  0034                     l926:	
  5049  0034  2837               	goto	l3183
  5050                           	line	740
  5051                           	
  5052  0035                     l925:	
  5053  0035  2837               	goto	l3183
  5054                           	
  5055  0036                     l923:	
  5056  0036  2837               	goto	l3183
  5057                           	
  5058  0037                     l921:	
  5059                           	
  5060  0037                     l3183:	
  5061                           ;prev04.c: 739: }
  5062                           ;prev04.c: 740: delay(200);
  5063  0037  30C8               	movlw	low(0C8h)
  5064  0038  00F0               	movwf	(?_delay)
  5065  0039  3000               	movlw	high(0C8h)
  5066  003A  00F1               	movwf	((?_delay))+1
  5067  003B  120A  158A  2307   	fcall	_delay
              120A  118A         
  5068                           	line	743
  5069                           	
  5070  0040                     l927:	
  5071  0040  0008               	return
  5072                           	opt stack 0
  5073                           GLOBAL	__end_of_actrow
  5074  0041                     	__end_of_actrow:
  5075 ;; =============== function _actrow ends ============
  5076                           
  5077                           	signat	_actrow,4216
  5078                           	global	_dat
  5079                           psect	text540,local,class=CODE,delta=2
  5080                           global __ptext540
  5081  0B88                     __ptext540:
  5082                           
  5083 ;; *************** function _dat *****************
  5084 ;; Defined at:
  5085 ;;		line 538 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  Command         2    8[COMMON] unsigned int 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;		None
  5090 ;; Return value:  Size  Location     Type
  5091 ;;		None               void
  5092 ;; Registers used:
  5093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5099 ;;      Params:         2       0       0       0       0
  5100 ;;      Locals:         0       0       0       0       0
  5101 ;;      Temps:          0       0       0       0       0
  5102 ;;      Totals:         2       0       0       0       0
  5103 ;;Total ram usage:        2 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    2
  5106 ;; This function calls:
  5107 ;;		_setLCD
  5108 ;;		_delay
  5109 ;; This function is called by:
  5110 ;;		_write
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           psect	text540
  5114                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  5115                           	line	538
  5116                           	global	__size_of_dat
  5117  0025                     	__size_of_dat	equ	__end_of_dat-_dat
  5118                           	
  5119  0B88                     _dat:	
  5120                           	opt	stack 2
  5121                           ; Regs used in _dat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5122                           	line	539
  5123                           	
  5124  0B88                     l3153:	
  5125                           ;prev04.c: 539: setLCD(Command);
  5126  0B88  0879               	movf	(dat@Command+1),w
  5127  0B89  01F1               	clrf	(?_setLCD+1)
  5128  0B8A  07F1               	addwf	(?_setLCD+1)
  5129  0B8B  0878               	movf	(dat@Command),w
  5130  0B8C  01F0               	clrf	(?_setLCD)
  5131  0B8D  07F0               	addwf	(?_setLCD)
  5132                           
  5133  0B8E  120A  118A  212C   	fcall	_setLCD
              120A  158A         
  5134                           	line	541
  5135                           	
  5136  0B93                     l3155:	
  5137                           ;prev04.c: 541: RC0=1;
  5138  0B93  1283               	bcf	status, 5	;RP0=0, select bank0
  5139  0B94  1303               	bcf	status, 6	;RP1=0, select bank0
  5140  0B95  1407               	bsf	(56/8),(56)&7
  5141                           	line	543
  5142                           	
  5143  0B96                     l3157:	
  5144                           ;prev04.c: 543: RC1=1;
  5145  0B96  1487               	bsf	(57/8),(57)&7
  5146                           	line	545
  5147                           	
  5148  0B97                     l3159:	
  5149                           ;prev04.c: 545: delay(20);
  5150  0B97  3014               	movlw	low(014h)
  5151  0B98  00F0               	movwf	(?_delay)
  5152  0B99  3000               	movlw	high(014h)
  5153  0B9A  00F1               	movwf	((?_delay))+1
  5154  0B9B  120A  158A  2307   	fcall	_delay
              120A  158A         
  5155                           	line	547
  5156                           	
  5157  0BA0                     l3161:	
  5158                           ;prev04.c: 547: RC1=0;
  5159  0BA0  1283               	bcf	status, 5	;RP0=0, select bank0
  5160  0BA1  1303               	bcf	status, 6	;RP1=0, select bank0
  5161  0BA2  1087               	bcf	(57/8),(57)&7
  5162                           	line	549
  5163                           	
  5164  0BA3                     l3163:	
  5165                           ;prev04.c: 549: delay(20);
  5166  0BA3  3014               	movlw	low(014h)
  5167  0BA4  00F0               	movwf	(?_delay)
  5168  0BA5  3000               	movlw	high(014h)
  5169  0BA6  00F1               	movwf	((?_delay))+1
  5170  0BA7  120A  158A  2307   	fcall	_delay
              120A  158A         
  5171                           	line	555
  5172                           	
  5173  0BAC                     l849:	
  5174  0BAC  0008               	return
  5175                           	opt stack 0
  5176                           GLOBAL	__end_of_dat
  5177  0BAD                     	__end_of_dat:
  5178 ;; =============== function _dat ends ============
  5179                           
  5180                           	signat	_dat,4216
  5181                           	global	_cmd
  5182                           psect	text541,local,class=CODE,delta=2
  5183                           global __ptext541
  5184  0B63                     __ptext541:
  5185                           
  5186 ;; *************** function _cmd *****************
  5187 ;; Defined at:
  5188 ;;		line 527 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  Command         2    8[COMMON] unsigned int 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;		None               void
  5195 ;; Registers used:
  5196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5202 ;;      Params:         2       0       0       0       0
  5203 ;;      Locals:         0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0
  5205 ;;      Totals:         2       0       0       0       0
  5206 ;;Total ram usage:        2 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    2
  5209 ;; This function calls:
  5210 ;;		_setLCD
  5211 ;;		_delay
  5212 ;; This function is called by:
  5213 ;;		_initlcd
  5214 ;;		_clearlcd
  5215 ;;		_write
  5216 ;;		_scroll
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           psect	text541
  5220                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  5221                           	line	527
  5222                           	global	__size_of_cmd
  5223  0025                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  5224                           	
  5225  0B63                     _cmd:	
  5226                           	opt	stack 2
  5227                           ; Regs used in _cmd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5228                           	line	528
  5229                           	
  5230  0B63                     l3141:	
  5231                           ;prev04.c: 528: setLCD(Command);
  5232  0B63  0879               	movf	(cmd@Command+1),w
  5233  0B64  01F1               	clrf	(?_setLCD+1)
  5234  0B65  07F1               	addwf	(?_setLCD+1)
  5235  0B66  0878               	movf	(cmd@Command),w
  5236  0B67  01F0               	clrf	(?_setLCD)
  5237  0B68  07F0               	addwf	(?_setLCD)
  5238                           
  5239  0B69  120A  118A  212C   	fcall	_setLCD
              120A  158A         
  5240                           	line	529
  5241                           	
  5242  0B6E                     l3143:	
  5243                           ;prev04.c: 529: RC0=0;
  5244  0B6E  1283               	bcf	status, 5	;RP0=0, select bank0
  5245  0B6F  1303               	bcf	status, 6	;RP1=0, select bank0
  5246  0B70  1007               	bcf	(56/8),(56)&7
  5247                           	line	530
  5248                           	
  5249  0B71                     l3145:	
  5250                           ;prev04.c: 530: RC1=1;
  5251  0B71  1487               	bsf	(57/8),(57)&7
  5252                           	line	531
  5253                           	
  5254  0B72                     l3147:	
  5255                           ;prev04.c: 531: delay(20);
  5256  0B72  3014               	movlw	low(014h)
  5257  0B73  00F0               	movwf	(?_delay)
  5258  0B74  3000               	movlw	high(014h)
  5259  0B75  00F1               	movwf	((?_delay))+1
  5260  0B76  120A  158A  2307   	fcall	_delay
              120A  158A         
  5261                           	line	532
  5262                           	
  5263  0B7B                     l3149:	
  5264                           ;prev04.c: 532: RC1=0;
  5265  0B7B  1283               	bcf	status, 5	;RP0=0, select bank0
  5266  0B7C  1303               	bcf	status, 6	;RP1=0, select bank0
  5267  0B7D  1087               	bcf	(57/8),(57)&7
  5268                           	line	533
  5269                           	
  5270  0B7E                     l3151:	
  5271                           ;prev04.c: 533: delay(20);
  5272  0B7E  3014               	movlw	low(014h)
  5273  0B7F  00F0               	movwf	(?_delay)
  5274  0B80  3000               	movlw	high(014h)
  5275  0B81  00F1               	movwf	((?_delay))+1
  5276  0B82  120A  158A  2307   	fcall	_delay
              120A  158A         
  5277                           	line	535
  5278                           	
  5279  0B87                     l846:	
  5280  0B87  0008               	return
  5281                           	opt stack 0
  5282                           GLOBAL	__end_of_cmd
  5283  0B88                     	__end_of_cmd:
  5284 ;; =============== function _cmd ends ============
  5285                           
  5286                           	signat	_cmd,4216
  5287                           	global	_itoaa
  5288                           psect	text542,local,class=CODE,delta=2
  5289                           global __ptext542
  5290  0041                     __ptext542:
  5291                           
  5292 ;; *************** function _itoaa *****************
  5293 ;; Defined at:
  5294 ;;		line 478 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  value           2    9[COMMON] int 
  5297 ;;  ptr             1   11[COMMON] PTR unsigned char 
  5298 ;;		 -> getlogicseq@snum(16), 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  temp            2    2[BANK0 ] int 
  5301 ;;  count           2    0[BANK0 ] int 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  2    9[COMMON] int 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5311 ;;      Params:         3       0       0       0       0
  5312 ;;      Locals:         0       4       0       0       0
  5313 ;;      Temps:          1       0       0       0       0
  5314 ;;      Totals:         4       4       0       0       0
  5315 ;;Total ram usage:        8 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    1
  5318 ;; This function calls:
  5319 ;;		___wmul
  5320 ;;		___awdiv
  5321 ;;		___awmod
  5322 ;; This function is called by:
  5323 ;;		_getlogicseq
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           psect	text542
  5327                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  5328                           	line	478
  5329                           	global	__size_of_itoaa
  5330  00EB                     	__size_of_itoaa	equ	__end_of_itoaa-_itoaa
  5331                           	
  5332  0041                     _itoaa:	
  5333                           	opt	stack 5
  5334                           ; Regs used in _itoaa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5335                           	line	479
  5336                           	
  5337  0041                     l3093:	
  5338                           ;prev04.c: 479: int count=0,temp;
  5339  0041  1283               	bcf	status, 5	;RP0=0, select bank0
  5340  0042  1303               	bcf	status, 6	;RP1=0, select bank0
  5341  0043  01A0               	clrf	(itoaa@count)
  5342  0044  01A1               	clrf	(itoaa@count+1)
  5343                           	line	480
  5344                           	
  5345  0045                     l3095:	
  5346                           ;prev04.c: 480: if(ptr==(0))
  5347  0045  08FB               	movf	(itoaa@ptr),f
  5348  0046  1D03               	skipz
  5349  0047  2849               	goto	u4131
  5350  0048  284A               	goto	u4130
  5351  0049                     u4131:
  5352  0049  284C               	goto	l3099
  5353  004A                     u4130:
  5354  004A  292B               	goto	l831
  5355                           	line	481
  5356                           	
  5357  004B                     l3097:	
  5358                           ;prev04.c: 481: return 0;
  5359                           ;	Return value of _itoaa is never used
  5360  004B  292B               	goto	l831
  5361                           	
  5362  004C                     l830:	
  5363                           	line	482
  5364                           	
  5365  004C                     l3099:	
  5366                           ;prev04.c: 482: if(value==0)
  5367  004C  087A               	movf	((itoaa@value+1)),w
  5368  004D  0479               	iorwf	((itoaa@value)),w
  5369  004E  1D03               	skipz
  5370  004F  2851               	goto	u4141
  5371  0050  2852               	goto	u4140
  5372  0051                     u4141:
  5373  0051  285B               	goto	l832
  5374  0052                     u4140:
  5375                           	line	484
  5376                           	
  5377  0052                     l3101:	
  5378                           ;prev04.c: 483: {
  5379                           ;prev04.c: 484: *ptr='0';
  5380  0052  3030               	movlw	(030h)
  5381  0053  00FC               	movwf	(??_itoaa+0)+0
  5382  0054  087B               	movf	(itoaa@ptr),w
  5383  0055  0084               	movwf	fsr0
  5384  0056  087C               	movf	(??_itoaa+0)+0,w
  5385  0057  1383               	bcf	status, 7	;select IRP bank0
  5386  0058  0080               	movwf	indf
  5387  0059  292B               	goto	l831
  5388                           	line	485
  5389                           	
  5390  005A                     l3103:	
  5391                           ;prev04.c: 485: return 1;
  5392                           ;	Return value of _itoaa is never used
  5393  005A  292B               	goto	l831
  5394                           	line	486
  5395                           	
  5396  005B                     l832:	
  5397                           	line	488
  5398                           ;prev04.c: 486: }
  5399                           ;prev04.c: 488: if(value<0)
  5400  005B  1FFA               	btfss	(itoaa@value+1),7
  5401  005C  285E               	goto	u4151
  5402  005D  285F               	goto	u4150
  5403  005E                     u4151:
  5404  005E  2888               	goto	l3113
  5405  005F                     u4150:
  5406                           	line	490
  5407                           	
  5408  005F                     l3105:	
  5409                           ;prev04.c: 489: {
  5410                           ;prev04.c: 490: value*=(-1);
  5411  005F  30FF               	movlw	low(-1)
  5412  0060  00F0               	movwf	(?___wmul)
  5413  0061  30FF               	movlw	high(-1)
  5414  0062  00F1               	movwf	((?___wmul))+1
  5415  0063  087A               	movf	(itoaa@value+1),w
  5416  0064  01F3               	clrf	1+(?___wmul)+02h
  5417  0065  07F3               	addwf	1+(?___wmul)+02h
  5418  0066  0879               	movf	(itoaa@value),w
  5419  0067  01F2               	clrf	0+(?___wmul)+02h
  5420  0068  07F2               	addwf	0+(?___wmul)+02h
  5421                           
  5422  0069  120A  158A  23FF   	fcall	___wmul
              120A  118A         
  5423  006E  0871               	movf	(1+(?___wmul)),w
  5424  006F  01FA               	clrf	(itoaa@value+1)
  5425  0070  07FA               	addwf	(itoaa@value+1)
  5426  0071  0870               	movf	(0+(?___wmul)),w
  5427  0072  01F9               	clrf	(itoaa@value)
  5428  0073  07F9               	addwf	(itoaa@value)
  5429                           
  5430                           	line	491
  5431                           	
  5432  0074                     l3107:	
  5433                           ;prev04.c: 491: *ptr++='-';
  5434  0074  302D               	movlw	(02Dh)
  5435  0075  00FC               	movwf	(??_itoaa+0)+0
  5436  0076  087B               	movf	(itoaa@ptr),w
  5437  0077  0084               	movwf	fsr0
  5438  0078  087C               	movf	(??_itoaa+0)+0,w
  5439  0079  1383               	bcf	status, 7	;select IRP bank0
  5440  007A  0080               	movwf	indf
  5441                           	
  5442  007B                     l3109:	
  5443  007B  3001               	movlw	(01h)
  5444  007C  00FC               	movwf	(??_itoaa+0)+0
  5445  007D  087C               	movf	(??_itoaa+0)+0,w
  5446  007E  07FB               	addwf	(itoaa@ptr),f
  5447                           	line	492
  5448                           	
  5449  007F                     l3111:	
  5450                           ;prev04.c: 492: count++;
  5451  007F  3001               	movlw	low(01h)
  5452  0080  1283               	bcf	status, 5	;RP0=0, select bank0
  5453  0081  1303               	bcf	status, 6	;RP1=0, select bank0
  5454  0082  07A0               	addwf	(itoaa@count),f
  5455  0083  1803               	skipnc
  5456  0084  0AA1               	incf	(itoaa@count+1),f
  5457  0085  3000               	movlw	high(01h)
  5458  0086  07A1               	addwf	(itoaa@count+1),f
  5459  0087  2888               	goto	l3113
  5460                           	line	493
  5461                           	
  5462  0088                     l833:	
  5463                           	line	494
  5464                           	
  5465  0088                     l3113:	
  5466                           ;prev04.c: 493: }
  5467                           ;prev04.c: 494: for(temp=value;temp>0;temp/=10,ptr++);
  5468  0088  087A               	movf	(itoaa@value+1),w
  5469  0089  01A3               	clrf	(itoaa@temp+1)
  5470  008A  07A3               	addwf	(itoaa@temp+1)
  5471  008B  0879               	movf	(itoaa@value),w
  5472  008C  01A2               	clrf	(itoaa@temp)
  5473  008D  07A2               	addwf	(itoaa@temp)
  5474                           
  5475                           	
  5476  008E                     l3115:	
  5477  008E  0823               	movf	(itoaa@temp+1),w
  5478  008F  3A80               	xorlw	80h
  5479  0090  00FF               	movwf	btemp+1
  5480  0091  3080               	movlw	(high(01h))^80h
  5481  0092  027F               	subwf	btemp+1,w
  5482  0093  1D03               	skipz
  5483  0094  2897               	goto	u4165
  5484  0095  3001               	movlw	low(01h)
  5485  0096  0222               	subwf	(itoaa@temp),w
  5486  0097                     u4165:
  5487                           
  5488  0097  1803               	skipnc
  5489  0098  289A               	goto	u4161
  5490  0099  289B               	goto	u4160
  5491  009A                     u4161:
  5492  009A  289D               	goto	l3119
  5493  009B                     u4160:
  5494  009B  28C8               	goto	l3125
  5495                           	
  5496  009C                     l3117:	
  5497  009C  28C8               	goto	l3125
  5498                           	
  5499  009D                     l834:	
  5500                           	
  5501  009D                     l3119:	
  5502  009D  300A               	movlw	low(0Ah)
  5503  009E  00F0               	movwf	(?___awdiv)
  5504  009F  3000               	movlw	high(0Ah)
  5505  00A0  00F1               	movwf	((?___awdiv))+1
  5506  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  5507  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  5508  00A3  0823               	movf	(itoaa@temp+1),w
  5509  00A4  01F3               	clrf	1+(?___awdiv)+02h
  5510  00A5  07F3               	addwf	1+(?___awdiv)+02h
  5511  00A6  0822               	movf	(itoaa@temp),w
  5512  00A7  01F2               	clrf	0+(?___awdiv)+02h
  5513  00A8  07F2               	addwf	0+(?___awdiv)+02h
  5514                           
  5515  00A9  120A  158A  25D6   	fcall	___awdiv
              120A  118A         
  5516  00AE  0871               	movf	(1+(?___awdiv)),w
  5517  00AF  1283               	bcf	status, 5	;RP0=0, select bank0
  5518  00B0  1303               	bcf	status, 6	;RP1=0, select bank0
  5519  00B1  01A3               	clrf	(itoaa@temp+1)
  5520  00B2  07A3               	addwf	(itoaa@temp+1)
  5521  00B3  0870               	movf	(0+(?___awdiv)),w
  5522  00B4  01A2               	clrf	(itoaa@temp)
  5523  00B5  07A2               	addwf	(itoaa@temp)
  5524                           
  5525                           	
  5526  00B6                     l3121:	
  5527  00B6  3001               	movlw	(01h)
  5528  00B7  00FC               	movwf	(??_itoaa+0)+0
  5529  00B8  087C               	movf	(??_itoaa+0)+0,w
  5530  00B9  07FB               	addwf	(itoaa@ptr),f
  5531                           	
  5532  00BA                     l3123:	
  5533  00BA  0823               	movf	(itoaa@temp+1),w
  5534  00BB  3A80               	xorlw	80h
  5535  00BC  00FF               	movwf	btemp+1
  5536  00BD  3080               	movlw	(high(01h))^80h
  5537  00BE  027F               	subwf	btemp+1,w
  5538  00BF  1D03               	skipz
  5539  00C0  28C3               	goto	u4175
  5540  00C1  3001               	movlw	low(01h)
  5541  00C2  0222               	subwf	(itoaa@temp),w
  5542  00C3                     u4175:
  5543                           
  5544  00C3  1803               	skipnc
  5545  00C4  28C6               	goto	u4171
  5546  00C5  28C7               	goto	u4170
  5547  00C6                     u4171:
  5548  00C6  289D               	goto	l3119
  5549  00C7                     u4170:
  5550  00C7  28C8               	goto	l3125
  5551                           	
  5552  00C8                     l835:	
  5553                           	line	495
  5554                           	
  5555  00C8                     l3125:	
  5556                           ;prev04.c: 495: *ptr='\0';
  5557  00C8  087B               	movf	(itoaa@ptr),w
  5558  00C9  0084               	movwf	fsr0
  5559  00CA  1383               	bcf	status, 7	;select IRP bank0
  5560  00CB  0180               	clrf	indf
  5561                           	line	496
  5562                           	
  5563  00CC                     l3127:	
  5564                           ;prev04.c: 496: for(temp=value;temp>0;temp/=10)
  5565  00CC  087A               	movf	(itoaa@value+1),w
  5566  00CD  1283               	bcf	status, 5	;RP0=0, select bank0
  5567  00CE  1303               	bcf	status, 6	;RP1=0, select bank0
  5568  00CF  01A3               	clrf	(itoaa@temp+1)
  5569  00D0  07A3               	addwf	(itoaa@temp+1)
  5570  00D1  0879               	movf	(itoaa@value),w
  5571  00D2  01A2               	clrf	(itoaa@temp)
  5572  00D3  07A2               	addwf	(itoaa@temp)
  5573                           
  5574                           	
  5575  00D4                     l3129:	
  5576  00D4  0823               	movf	(itoaa@temp+1),w
  5577  00D5  3A80               	xorlw	80h
  5578  00D6  00FF               	movwf	btemp+1
  5579  00D7  3080               	movlw	(high(01h))^80h
  5580  00D8  027F               	subwf	btemp+1,w
  5581  00D9  1D03               	skipz
  5582  00DA  28DD               	goto	u4185
  5583  00DB  3001               	movlw	low(01h)
  5584  00DC  0222               	subwf	(itoaa@temp),w
  5585  00DD                     u4185:
  5586                           
  5587  00DD  1803               	skipnc
  5588  00DE  28E0               	goto	u4181
  5589  00DF  28E1               	goto	u4180
  5590  00E0                     u4181:
  5591  00E0  28E3               	goto	l3133
  5592  00E1                     u4180:
  5593  00E1  292B               	goto	l831
  5594                           	
  5595  00E2                     l3131:	
  5596  00E2  292B               	goto	l831
  5597                           	line	497
  5598                           	
  5599  00E3                     l836:	
  5600                           	line	498
  5601                           	
  5602  00E3                     l3133:	
  5603                           ;prev04.c: 497: {
  5604                           ;prev04.c: 498: *--ptr=temp%10+'0';
  5605  00E3  300A               	movlw	low(0Ah)
  5606  00E4  00F0               	movwf	(?___awmod)
  5607  00E5  3000               	movlw	high(0Ah)
  5608  00E6  00F1               	movwf	((?___awmod))+1
  5609  00E7  1283               	bcf	status, 5	;RP0=0, select bank0
  5610  00E8  1303               	bcf	status, 6	;RP1=0, select bank0
  5611  00E9  0823               	movf	(itoaa@temp+1),w
  5612  00EA  01F3               	clrf	1+(?___awmod)+02h
  5613  00EB  07F3               	addwf	1+(?___awmod)+02h
  5614  00EC  0822               	movf	(itoaa@temp),w
  5615  00ED  01F2               	clrf	0+(?___awmod)+02h
  5616  00EE  07F2               	addwf	0+(?___awmod)+02h
  5617                           
  5618  00EF  120A  158A  2570   	fcall	___awmod
              120A  118A         
  5619  00F4  0870               	movf	(0+(?___awmod)),w
  5620  00F5  3E30               	addlw	030h
  5621  00F6  00FC               	movwf	(??_itoaa+0)+0
  5622  00F7  3001               	movlw	low(01h)
  5623  00F8  02FB               	subwf	(itoaa@ptr),f
  5624  00F9  087B               	movf	((itoaa@ptr)),w
  5625  00FA  0084               	movwf	fsr0
  5626  00FB  087C               	movf	(??_itoaa+0)+0,w
  5627  00FC  1383               	bcf	status, 7	;select IRP bank0
  5628  00FD  0080               	movwf	indf
  5629                           	line	499
  5630                           	
  5631  00FE                     l3135:	
  5632                           ;prev04.c: 499: count++;
  5633  00FE  3001               	movlw	low(01h)
  5634  00FF  1283               	bcf	status, 5	;RP0=0, select bank0
  5635  0100  1303               	bcf	status, 6	;RP1=0, select bank0
  5636  0101  07A0               	addwf	(itoaa@count),f
  5637  0102  1803               	skipnc
  5638  0103  0AA1               	incf	(itoaa@count+1),f
  5639  0104  3000               	movlw	high(01h)
  5640  0105  07A1               	addwf	(itoaa@count+1),f
  5641                           	line	496
  5642                           	
  5643  0106                     l3137:	
  5644  0106  300A               	movlw	low(0Ah)
  5645  0107  00F0               	movwf	(?___awdiv)
  5646  0108  3000               	movlw	high(0Ah)
  5647  0109  00F1               	movwf	((?___awdiv))+1
  5648  010A  0823               	movf	(itoaa@temp+1),w
  5649  010B  01F3               	clrf	1+(?___awdiv)+02h
  5650  010C  07F3               	addwf	1+(?___awdiv)+02h
  5651  010D  0822               	movf	(itoaa@temp),w
  5652  010E  01F2               	clrf	0+(?___awdiv)+02h
  5653  010F  07F2               	addwf	0+(?___awdiv)+02h
  5654                           
  5655  0110  120A  158A  25D6   	fcall	___awdiv
              120A  118A         
  5656  0115  0871               	movf	(1+(?___awdiv)),w
  5657  0116  1283               	bcf	status, 5	;RP0=0, select bank0
  5658  0117  1303               	bcf	status, 6	;RP1=0, select bank0
  5659  0118  01A3               	clrf	(itoaa@temp+1)
  5660  0119  07A3               	addwf	(itoaa@temp+1)
  5661  011A  0870               	movf	(0+(?___awdiv)),w
  5662  011B  01A2               	clrf	(itoaa@temp)
  5663  011C  07A2               	addwf	(itoaa@temp)
  5664                           
  5665                           	
  5666  011D                     l3139:	
  5667  011D  0823               	movf	(itoaa@temp+1),w
  5668  011E  3A80               	xorlw	80h
  5669  011F  00FF               	movwf	btemp+1
  5670  0120  3080               	movlw	(high(01h))^80h
  5671  0121  027F               	subwf	btemp+1,w
  5672  0122  1D03               	skipz
  5673  0123  2926               	goto	u4195
  5674  0124  3001               	movlw	low(01h)
  5675  0125  0222               	subwf	(itoaa@temp),w
  5676  0126                     u4195:
  5677                           
  5678  0126  1803               	skipnc
  5679  0127  2929               	goto	u4191
  5680  0128  292A               	goto	u4190
  5681  0129                     u4191:
  5682  0129  28E3               	goto	l3133
  5683  012A                     u4190:
  5684  012A  292B               	goto	l831
  5685                           	
  5686  012B                     l837:	
  5687                           	line	502
  5688                           ;prev04.c: 500: }
  5689                           ;prev04.c: 501: return count;
  5690                           ;	Return value of _itoaa is never used
  5691                           	
  5692  012B                     l831:	
  5693  012B  0008               	return
  5694                           	opt stack 0
  5695                           GLOBAL	__end_of_itoaa
  5696  012C                     	__end_of_itoaa:
  5697 ;; =============== function _itoaa ends ============
  5698                           
  5699                           	signat	_itoaa,8314
  5700                           	global	___awmod
  5701                           psect	text543,local,class=CODE,delta=2
  5702                           global __ptext543
  5703  0D70                     __ptext543:
  5704                           
  5705 ;; *************** function ___awmod *****************
  5706 ;; Defined at:
  5707 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  divisor         2    0[COMMON] int 
  5710 ;;  dividend        2    2[COMMON] int 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  sign            1    6[COMMON] unsigned char 
  5713 ;;  counter         1    5[COMMON] unsigned char 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  2    0[COMMON] int 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, status,0
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5723 ;;      Params:         4       0       0       0       0
  5724 ;;      Locals:         2       0       0       0       0
  5725 ;;      Temps:          1       0       0       0       0
  5726 ;;      Totals:         7       0       0       0       0
  5727 ;;Total ram usage:        7 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_itoaa
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           psect	text543
  5736                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awmod.c"
  5737                           	line	5
  5738                           	global	__size_of___awmod
  5739  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  5740                           	
  5741  0D70                     ___awmod:	
  5742                           	opt	stack 5
  5743                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5744                           	line	8
  5745                           	
  5746  0D70                     l3059:	
  5747  0D70  01F6               	clrf	(___awmod@sign)
  5748                           	line	9
  5749  0D71  1FF3               	btfss	(___awmod@dividend+1),7
  5750  0D72  2D74               	goto	u4041
  5751  0D73  2D75               	goto	u4040
  5752  0D74                     u4041:
  5753  0D74  2D7E               	goto	l3063
  5754  0D75                     u4040:
  5755                           	line	10
  5756                           	
  5757  0D75                     l3061:	
  5758  0D75  09F2               	comf	(___awmod@dividend),f
  5759  0D76  09F3               	comf	(___awmod@dividend+1),f
  5760  0D77  0AF2               	incf	(___awmod@dividend),f
  5761  0D78  1903               	skipnz
  5762  0D79  0AF3               	incf	(___awmod@dividend+1),f
  5763                           	line	11
  5764  0D7A  01F6               	clrf	(___awmod@sign)
  5765  0D7B  1403               	bsf	status,0
  5766  0D7C  0DF6               	rlf	(___awmod@sign),f
  5767  0D7D  2D7E               	goto	l3063
  5768                           	line	12
  5769                           	
  5770  0D7E                     l1167:	
  5771                           	line	13
  5772                           	
  5773  0D7E                     l3063:	
  5774  0D7E  1FF1               	btfss	(___awmod@divisor+1),7
  5775  0D7F  2D81               	goto	u4051
  5776  0D80  2D82               	goto	u4050
  5777  0D81                     u4051:
  5778  0D81  2D88               	goto	l3067
  5779  0D82                     u4050:
  5780                           	line	14
  5781                           	
  5782  0D82                     l3065:	
  5783  0D82  09F0               	comf	(___awmod@divisor),f
  5784  0D83  09F1               	comf	(___awmod@divisor+1),f
  5785  0D84  0AF0               	incf	(___awmod@divisor),f
  5786  0D85  1903               	skipnz
  5787  0D86  0AF1               	incf	(___awmod@divisor+1),f
  5788  0D87  2D88               	goto	l3067
  5789                           	
  5790  0D88                     l1168:	
  5791                           	line	15
  5792                           	
  5793  0D88                     l3067:	
  5794  0D88  0871               	movf	(___awmod@divisor+1),w
  5795  0D89  0470               	iorwf	(___awmod@divisor),w
  5796  0D8A  1903               	skipnz
  5797  0D8B  2D8D               	goto	u4061
  5798  0D8C  2D8E               	goto	u4060
  5799  0D8D                     u4061:
  5800  0D8D  2DC4               	goto	l3085
  5801  0D8E                     u4060:
  5802                           	line	16
  5803                           	
  5804  0D8E                     l3069:	
  5805  0D8E  01F5               	clrf	(___awmod@counter)
  5806  0D8F  1403               	bsf	status,0
  5807  0D90  0DF5               	rlf	(___awmod@counter),f
  5808                           	line	17
  5809  0D91  2D9E               	goto	l3075
  5810                           	
  5811  0D92                     l1171:	
  5812                           	line	18
  5813                           	
  5814  0D92                     l3071:	
  5815  0D92  3001               	movlw	01h
  5816                           	
  5817  0D93                     u4075:
  5818  0D93  1003               	clrc
  5819  0D94  0DF0               	rlf	(___awmod@divisor),f
  5820  0D95  0DF1               	rlf	(___awmod@divisor+1),f
  5821  0D96  3EFF               	addlw	-1
  5822  0D97  1D03               	skipz
  5823  0D98  2D93               	goto	u4075
  5824                           	line	19
  5825                           	
  5826  0D99                     l3073:	
  5827  0D99  3001               	movlw	(01h)
  5828  0D9A  00F4               	movwf	(??___awmod+0)+0
  5829  0D9B  0874               	movf	(??___awmod+0)+0,w
  5830  0D9C  07F5               	addwf	(___awmod@counter),f
  5831  0D9D  2D9E               	goto	l3075
  5832                           	line	20
  5833                           	
  5834  0D9E                     l1170:	
  5835                           	line	17
  5836                           	
  5837  0D9E                     l3075:	
  5838  0D9E  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  5839  0D9F  2DA1               	goto	u4081
  5840  0DA0  2DA2               	goto	u4080
  5841  0DA1                     u4081:
  5842  0DA1  2D92               	goto	l3071
  5843  0DA2                     u4080:
  5844  0DA2  2DA4               	goto	l3077
  5845                           	
  5846  0DA3                     l1172:	
  5847  0DA3  2DA4               	goto	l3077
  5848                           	line	21
  5849                           	
  5850  0DA4                     l1173:	
  5851                           	line	22
  5852                           	
  5853  0DA4                     l3077:	
  5854  0DA4  0871               	movf	(___awmod@divisor+1),w
  5855  0DA5  0273               	subwf	(___awmod@dividend+1),w
  5856  0DA6  1D03               	skipz
  5857  0DA7  2DAA               	goto	u4095
  5858  0DA8  0870               	movf	(___awmod@divisor),w
  5859  0DA9  0272               	subwf	(___awmod@dividend),w
  5860  0DAA                     u4095:
  5861  0DAA  1C03               	skipc
  5862  0DAB  2DAD               	goto	u4091
  5863  0DAC  2DAE               	goto	u4090
  5864  0DAD                     u4091:
  5865  0DAD  2DB5               	goto	l3081
  5866  0DAE                     u4090:
  5867                           	line	23
  5868                           	
  5869  0DAE                     l3079:	
  5870  0DAE  0870               	movf	(___awmod@divisor),w
  5871  0DAF  02F2               	subwf	(___awmod@dividend),f
  5872  0DB0  0871               	movf	(___awmod@divisor+1),w
  5873  0DB1  1C03               	skipc
  5874  0DB2  03F3               	decf	(___awmod@dividend+1),f
  5875  0DB3  02F3               	subwf	(___awmod@dividend+1),f
  5876  0DB4  2DB5               	goto	l3081
  5877                           	
  5878  0DB5                     l1174:	
  5879                           	line	24
  5880                           	
  5881  0DB5                     l3081:	
  5882  0DB5  3001               	movlw	01h
  5883                           	
  5884  0DB6                     u4105:
  5885  0DB6  1003               	clrc
  5886  0DB7  0CF1               	rrf	(___awmod@divisor+1),f
  5887  0DB8  0CF0               	rrf	(___awmod@divisor),f
  5888  0DB9  3EFF               	addlw	-1
  5889  0DBA  1D03               	skipz
  5890  0DBB  2DB6               	goto	u4105
  5891                           	line	25
  5892                           	
  5893  0DBC                     l3083:	
  5894  0DBC  3001               	movlw	low(01h)
  5895  0DBD  02F5               	subwf	(___awmod@counter),f
  5896  0DBE  1D03               	btfss	status,2
  5897  0DBF  2DC1               	goto	u4111
  5898  0DC0  2DC2               	goto	u4110
  5899  0DC1                     u4111:
  5900  0DC1  2DA4               	goto	l3077
  5901  0DC2                     u4110:
  5902  0DC2  2DC4               	goto	l3085
  5903                           	
  5904  0DC3                     l1175:	
  5905  0DC3  2DC4               	goto	l3085
  5906                           	line	26
  5907                           	
  5908  0DC4                     l1169:	
  5909                           	line	27
  5910                           	
  5911  0DC4                     l3085:	
  5912  0DC4  0876               	movf	(___awmod@sign),w
  5913  0DC5  1D03               	skipz
  5914  0DC6  2DC8               	goto	u4120
  5915  0DC7  2DCE               	goto	l3089
  5916  0DC8                     u4120:
  5917                           	line	28
  5918                           	
  5919  0DC8                     l3087:	
  5920  0DC8  09F2               	comf	(___awmod@dividend),f
  5921  0DC9  09F3               	comf	(___awmod@dividend+1),f
  5922  0DCA  0AF2               	incf	(___awmod@dividend),f
  5923  0DCB  1903               	skipnz
  5924  0DCC  0AF3               	incf	(___awmod@dividend+1),f
  5925  0DCD  2DCE               	goto	l3089
  5926                           	
  5927  0DCE                     l1176:	
  5928                           	line	29
  5929                           	
  5930  0DCE                     l3089:	
  5931  0DCE  0873               	movf	(___awmod@dividend+1),w
  5932  0DCF  01F1               	clrf	(?___awmod+1)
  5933  0DD0  07F1               	addwf	(?___awmod+1)
  5934  0DD1  0872               	movf	(___awmod@dividend),w
  5935  0DD2  01F0               	clrf	(?___awmod)
  5936  0DD3  07F0               	addwf	(?___awmod)
  5937                           
  5938  0DD4  2DD5               	goto	l1177
  5939                           	
  5940  0DD5                     l3091:	
  5941                           	line	30
  5942                           	
  5943  0DD5                     l1177:	
  5944  0DD5  0008               	return
  5945                           	opt stack 0
  5946                           GLOBAL	__end_of___awmod
  5947  0DD6                     	__end_of___awmod:
  5948 ;; =============== function ___awmod ends ============
  5949                           
  5950                           	signat	___awmod,8314
  5951                           	global	___awdiv
  5952                           psect	text544,local,class=CODE,delta=2
  5953                           global __ptext544
  5954  0DD6                     __ptext544:
  5955                           
  5956 ;; *************** function ___awdiv *****************
  5957 ;; Defined at:
  5958 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;  divisor         2    0[COMMON] int 
  5961 ;;  dividend        2    2[COMMON] int 
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  quotient        2    7[COMMON] int 
  5964 ;;  sign            1    6[COMMON] unsigned char 
  5965 ;;  counter         1    5[COMMON] unsigned char 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  2    0[COMMON] int 
  5968 ;; Registers used:
  5969 ;;		wreg, status,2, status,0
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5975 ;;      Params:         4       0       0       0       0
  5976 ;;      Locals:         4       0       0       0       0
  5977 ;;      Temps:          1       0       0       0       0
  5978 ;;      Totals:         9       0       0       0       0
  5979 ;;Total ram usage:        9 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_itoaa
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           psect	text544
  5988                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  5989                           	line	5
  5990                           	global	__size_of___awdiv
  5991  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5992                           	
  5993  0DD6                     ___awdiv:	
  5994                           	opt	stack 5
  5995                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5996                           	line	9
  5997                           	
  5998  0DD6                     l3019:	
  5999  0DD6  01F6               	clrf	(___awdiv@sign)
  6000                           	line	10
  6001  0DD7  1FF1               	btfss	(___awdiv@divisor+1),7
  6002  0DD8  2DDA               	goto	u3941
  6003  0DD9  2DDB               	goto	u3940
  6004  0DDA                     u3941:
  6005  0DDA  2DE4               	goto	l3023
  6006  0DDB                     u3940:
  6007                           	line	11
  6008                           	
  6009  0DDB                     l3021:	
  6010  0DDB  09F0               	comf	(___awdiv@divisor),f
  6011  0DDC  09F1               	comf	(___awdiv@divisor+1),f
  6012  0DDD  0AF0               	incf	(___awdiv@divisor),f
  6013  0DDE  1903               	skipnz
  6014  0DDF  0AF1               	incf	(___awdiv@divisor+1),f
  6015                           	line	12
  6016  0DE0  01F6               	clrf	(___awdiv@sign)
  6017  0DE1  1403               	bsf	status,0
  6018  0DE2  0DF6               	rlf	(___awdiv@sign),f
  6019  0DE3  2DE4               	goto	l3023
  6020                           	line	13
  6021                           	
  6022  0DE4                     l1099:	
  6023                           	line	14
  6024                           	
  6025  0DE4                     l3023:	
  6026  0DE4  1FF3               	btfss	(___awdiv@dividend+1),7
  6027  0DE5  2DE7               	goto	u3951
  6028  0DE6  2DE8               	goto	u3950
  6029  0DE7                     u3951:
  6030  0DE7  2DF2               	goto	l3029
  6031  0DE8                     u3950:
  6032                           	line	15
  6033                           	
  6034  0DE8                     l3025:	
  6035  0DE8  09F2               	comf	(___awdiv@dividend),f
  6036  0DE9  09F3               	comf	(___awdiv@dividend+1),f
  6037  0DEA  0AF2               	incf	(___awdiv@dividend),f
  6038  0DEB  1903               	skipnz
  6039  0DEC  0AF3               	incf	(___awdiv@dividend+1),f
  6040                           	line	16
  6041                           	
  6042  0DED                     l3027:	
  6043  0DED  3001               	movlw	(01h)
  6044  0DEE  00F4               	movwf	(??___awdiv+0)+0
  6045  0DEF  0874               	movf	(??___awdiv+0)+0,w
  6046  0DF0  06F6               	xorwf	(___awdiv@sign),f
  6047  0DF1  2DF2               	goto	l3029
  6048                           	line	17
  6049                           	
  6050  0DF2                     l1100:	
  6051                           	line	18
  6052                           	
  6053  0DF2                     l3029:	
  6054  0DF2  01F7               	clrf	(___awdiv@quotient)
  6055  0DF3  01F8               	clrf	(___awdiv@quotient+1)
  6056                           	line	19
  6057                           	
  6058  0DF4                     l3031:	
  6059  0DF4  0871               	movf	(___awdiv@divisor+1),w
  6060  0DF5  0470               	iorwf	(___awdiv@divisor),w
  6061  0DF6  1903               	skipnz
  6062  0DF7  2DF9               	goto	u3961
  6063  0DF8  2DFA               	goto	u3960
  6064  0DF9                     u3961:
  6065  0DF9  2E38               	goto	l3051
  6066  0DFA                     u3960:
  6067                           	line	20
  6068                           	
  6069  0DFA                     l3033:	
  6070  0DFA  01F5               	clrf	(___awdiv@counter)
  6071  0DFB  1403               	bsf	status,0
  6072  0DFC  0DF5               	rlf	(___awdiv@counter),f
  6073                           	line	21
  6074  0DFD  2E0A               	goto	l3039
  6075                           	
  6076  0DFE                     l1103:	
  6077                           	line	22
  6078                           	
  6079  0DFE                     l3035:	
  6080  0DFE  3001               	movlw	01h
  6081                           	
  6082  0DFF                     u3975:
  6083  0DFF  1003               	clrc
  6084  0E00  0DF0               	rlf	(___awdiv@divisor),f
  6085  0E01  0DF1               	rlf	(___awdiv@divisor+1),f
  6086  0E02  3EFF               	addlw	-1
  6087  0E03  1D03               	skipz
  6088  0E04  2DFF               	goto	u3975
  6089                           	line	23
  6090                           	
  6091  0E05                     l3037:	
  6092  0E05  3001               	movlw	(01h)
  6093  0E06  00F4               	movwf	(??___awdiv+0)+0
  6094  0E07  0874               	movf	(??___awdiv+0)+0,w
  6095  0E08  07F5               	addwf	(___awdiv@counter),f
  6096  0E09  2E0A               	goto	l3039
  6097                           	line	24
  6098                           	
  6099  0E0A                     l1102:	
  6100                           	line	21
  6101                           	
  6102  0E0A                     l3039:	
  6103  0E0A  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  6104  0E0B  2E0D               	goto	u3981
  6105  0E0C  2E0E               	goto	u3980
  6106  0E0D                     u3981:
  6107  0E0D  2DFE               	goto	l3035
  6108  0E0E                     u3980:
  6109  0E0E  2E10               	goto	l3041
  6110                           	
  6111  0E0F                     l1104:	
  6112  0E0F  2E10               	goto	l3041
  6113                           	line	25
  6114                           	
  6115  0E10                     l1105:	
  6116                           	line	26
  6117                           	
  6118  0E10                     l3041:	
  6119  0E10  3001               	movlw	01h
  6120                           	
  6121  0E11                     u3995:
  6122  0E11  1003               	clrc
  6123  0E12  0DF7               	rlf	(___awdiv@quotient),f
  6124  0E13  0DF8               	rlf	(___awdiv@quotient+1),f
  6125  0E14  3EFF               	addlw	-1
  6126  0E15  1D03               	skipz
  6127  0E16  2E11               	goto	u3995
  6128                           	line	27
  6129  0E17  0871               	movf	(___awdiv@divisor+1),w
  6130  0E18  0273               	subwf	(___awdiv@dividend+1),w
  6131  0E19  1D03               	skipz
  6132  0E1A  2E1D               	goto	u4005
  6133  0E1B  0870               	movf	(___awdiv@divisor),w
  6134  0E1C  0272               	subwf	(___awdiv@dividend),w
  6135  0E1D                     u4005:
  6136  0E1D  1C03               	skipc
  6137  0E1E  2E20               	goto	u4001
  6138  0E1F  2E21               	goto	u4000
  6139  0E20                     u4001:
  6140  0E20  2E29               	goto	l3047
  6141  0E21                     u4000:
  6142                           	line	28
  6143                           	
  6144  0E21                     l3043:	
  6145  0E21  0870               	movf	(___awdiv@divisor),w
  6146  0E22  02F2               	subwf	(___awdiv@dividend),f
  6147  0E23  0871               	movf	(___awdiv@divisor+1),w
  6148  0E24  1C03               	skipc
  6149  0E25  03F3               	decf	(___awdiv@dividend+1),f
  6150  0E26  02F3               	subwf	(___awdiv@dividend+1),f
  6151                           	line	29
  6152                           	
  6153  0E27                     l3045:	
  6154  0E27  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  6155  0E28  2E29               	goto	l3047
  6156                           	line	30
  6157                           	
  6158  0E29                     l1106:	
  6159                           	line	31
  6160                           	
  6161  0E29                     l3047:	
  6162  0E29  3001               	movlw	01h
  6163                           	
  6164  0E2A                     u4015:
  6165  0E2A  1003               	clrc
  6166  0E2B  0CF1               	rrf	(___awdiv@divisor+1),f
  6167  0E2C  0CF0               	rrf	(___awdiv@divisor),f
  6168  0E2D  3EFF               	addlw	-1
  6169  0E2E  1D03               	skipz
  6170  0E2F  2E2A               	goto	u4015
  6171                           	line	32
  6172                           	
  6173  0E30                     l3049:	
  6174  0E30  3001               	movlw	low(01h)
  6175  0E31  02F5               	subwf	(___awdiv@counter),f
  6176  0E32  1D03               	btfss	status,2
  6177  0E33  2E35               	goto	u4021
  6178  0E34  2E36               	goto	u4020
  6179  0E35                     u4021:
  6180  0E35  2E10               	goto	l3041
  6181  0E36                     u4020:
  6182  0E36  2E38               	goto	l3051
  6183                           	
  6184  0E37                     l1107:	
  6185  0E37  2E38               	goto	l3051
  6186                           	line	33
  6187                           	
  6188  0E38                     l1101:	
  6189                           	line	34
  6190                           	
  6191  0E38                     l3051:	
  6192  0E38  0876               	movf	(___awdiv@sign),w
  6193  0E39  1D03               	skipz
  6194  0E3A  2E3C               	goto	u4030
  6195  0E3B  2E42               	goto	l3055
  6196  0E3C                     u4030:
  6197                           	line	35
  6198                           	
  6199  0E3C                     l3053:	
  6200  0E3C  09F7               	comf	(___awdiv@quotient),f
  6201  0E3D  09F8               	comf	(___awdiv@quotient+1),f
  6202  0E3E  0AF7               	incf	(___awdiv@quotient),f
  6203  0E3F  1903               	skipnz
  6204  0E40  0AF8               	incf	(___awdiv@quotient+1),f
  6205  0E41  2E42               	goto	l3055
  6206                           	
  6207  0E42                     l1108:	
  6208                           	line	36
  6209                           	
  6210  0E42                     l3055:	
  6211  0E42  0878               	movf	(___awdiv@quotient+1),w
  6212  0E43  01F1               	clrf	(?___awdiv+1)
  6213  0E44  07F1               	addwf	(?___awdiv+1)
  6214  0E45  0877               	movf	(___awdiv@quotient),w
  6215  0E46  01F0               	clrf	(?___awdiv)
  6216  0E47  07F0               	addwf	(?___awdiv)
  6217                           
  6218  0E48  2E49               	goto	l1109
  6219                           	
  6220  0E49                     l3057:	
  6221                           	line	37
  6222                           	
  6223  0E49                     l1109:	
  6224  0E49  0008               	return
  6225                           	opt stack 0
  6226                           GLOBAL	__end_of___awdiv
  6227  0E4A                     	__end_of___awdiv:
  6228 ;; =============== function ___awdiv ends ============
  6229                           
  6230                           	signat	___awdiv,8314
  6231                           	global	___wmul
  6232                           psect	text545,local,class=CODE,delta=2
  6233                           global __ptext545
  6234  0BFF                     __ptext545:
  6235                           
  6236 ;; *************** function ___wmul *****************
  6237 ;; Defined at:
  6238 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  multiplier      2    0[COMMON] unsigned int 
  6241 ;;  multiplicand    2    2[COMMON] unsigned int 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  product         2    4[COMMON] unsigned int 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  2    0[COMMON] unsigned int 
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6253 ;;      Params:         4       0       0       0       0
  6254 ;;      Locals:         2       0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0
  6256 ;;      Totals:         6       0       0       0       0
  6257 ;;Total ram usage:        6 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_itoaa
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           psect	text545
  6266                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\wmul.c"
  6267                           	line	3
  6268                           	global	__size_of___wmul
  6269  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6270                           	
  6271  0BFF                     ___wmul:	
  6272                           	opt	stack 5
  6273                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6274                           	line	4
  6275                           	
  6276  0BFF                     l3007:	
  6277  0BFF  01F4               	clrf	(___wmul@product)
  6278  0C00  01F5               	clrf	(___wmul@product+1)
  6279  0C01  2C02               	goto	l3009
  6280                           	line	6
  6281                           	
  6282  0C02                     l959:	
  6283                           	line	7
  6284                           	
  6285  0C02                     l3009:	
  6286  0C02  1C70               	btfss	(___wmul@multiplier),(0)&7
  6287  0C03  2C05               	goto	u3901
  6288  0C04  2C06               	goto	u3900
  6289  0C05                     u3901:
  6290  0C05  2C0C               	goto	l960
  6291  0C06                     u3900:
  6292                           	line	8
  6293                           	
  6294  0C06                     l3011:	
  6295  0C06  0872               	movf	(___wmul@multiplicand),w
  6296  0C07  07F4               	addwf	(___wmul@product),f
  6297  0C08  1803               	skipnc
  6298  0C09  0AF5               	incf	(___wmul@product+1),f
  6299  0C0A  0873               	movf	(___wmul@multiplicand+1),w
  6300  0C0B  07F5               	addwf	(___wmul@product+1),f
  6301                           	
  6302  0C0C                     l960:	
  6303                           	line	9
  6304  0C0C  3001               	movlw	01h
  6305                           	
  6306  0C0D                     u3915:
  6307  0C0D  1003               	clrc
  6308  0C0E  0DF2               	rlf	(___wmul@multiplicand),f
  6309  0C0F  0DF3               	rlf	(___wmul@multiplicand+1),f
  6310  0C10  3EFF               	addlw	-1
  6311  0C11  1D03               	skipz
  6312  0C12  2C0D               	goto	u3915
  6313                           	line	10
  6314                           	
  6315  0C13                     l3013:	
  6316  0C13  3001               	movlw	01h
  6317                           	
  6318  0C14                     u3925:
  6319  0C14  1003               	clrc
  6320  0C15  0CF1               	rrf	(___wmul@multiplier+1),f
  6321  0C16  0CF0               	rrf	(___wmul@multiplier),f
  6322  0C17  3EFF               	addlw	-1
  6323  0C18  1D03               	skipz
  6324  0C19  2C14               	goto	u3925
  6325                           	line	11
  6326  0C1A  0871               	movf	((___wmul@multiplier+1)),w
  6327  0C1B  0470               	iorwf	((___wmul@multiplier)),w
  6328  0C1C  1D03               	skipz
  6329  0C1D  2C1F               	goto	u3931
  6330  0C1E  2C20               	goto	u3930
  6331  0C1F                     u3931:
  6332  0C1F  2C02               	goto	l3009
  6333  0C20                     u3930:
  6334  0C20  2C21               	goto	l3015
  6335                           	
  6336  0C21                     l961:	
  6337                           	line	12
  6338                           	
  6339  0C21                     l3015:	
  6340  0C21  0875               	movf	(___wmul@product+1),w
  6341  0C22  01F1               	clrf	(?___wmul+1)
  6342  0C23  07F1               	addwf	(?___wmul+1)
  6343  0C24  0874               	movf	(___wmul@product),w
  6344  0C25  01F0               	clrf	(?___wmul)
  6345  0C26  07F0               	addwf	(?___wmul)
  6346                           
  6347  0C27  2C28               	goto	l962
  6348                           	
  6349  0C28                     l3017:	
  6350                           	line	13
  6351                           	
  6352  0C28                     l962:	
  6353  0C28  0008               	return
  6354                           	opt stack 0
  6355                           GLOBAL	__end_of___wmul
  6356  0C29                     	__end_of___wmul:
  6357 ;; =============== function ___wmul ends ============
  6358                           
  6359                           	signat	___wmul,8314
  6360                           	global	_resetout
  6361                           psect	text546,local,class=CODE,delta=2
  6362                           global __ptext546
  6363  0ACB                     __ptext546:
  6364                           
  6365 ;; *************** function _resetout *****************
  6366 ;; Defined at:
  6367 ;;		line 717 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;		None               void
  6374 ;; Registers used:
  6375 ;;		None
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6381 ;;      Params:         0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0
  6383 ;;      Temps:          0       0       0       0       0
  6384 ;;      Totals:         0       0       0       0       0
  6385 ;;Total ram usage:        0 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		_actrow
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           psect	text546
  6394                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  6395                           	line	717
  6396                           	global	__size_of_resetout
  6397  0007                     	__size_of_resetout	equ	__end_of_resetout-_resetout
  6398                           	
  6399  0ACB                     _resetout:	
  6400                           	opt	stack 4
  6401                           ; Regs used in _resetout: []
  6402                           	line	718
  6403                           	
  6404  0ACB                     l3005:	
  6405                           ;prev04.c: 718: RC2=0;RC3=0;RB6=0;RB7=0;
  6406  0ACB  1283               	bcf	status, 5	;RP0=0, select bank0
  6407  0ACC  1303               	bcf	status, 6	;RP1=0, select bank0
  6408  0ACD  1107               	bcf	(58/8),(58)&7
  6409  0ACE  1187               	bcf	(59/8),(59)&7
  6410  0ACF  1306               	bcf	(54/8),(54)&7
  6411  0AD0  1386               	bcf	(55/8),(55)&7
  6412                           	line	719
  6413                           	
  6414  0AD1                     l917:	
  6415  0AD1  0008               	return
  6416                           	opt stack 0
  6417                           GLOBAL	__end_of_resetout
  6418  0AD2                     	__end_of_resetout:
  6419 ;; =============== function _resetout ends ============
  6420                           
  6421                           	signat	_resetout,88
  6422                           	global	_setLCD
  6423                           psect	text547,local,class=CODE,delta=2
  6424                           global __ptext547
  6425  012C                     __ptext547:
  6426                           
  6427 ;; *************** function _setLCD *****************
  6428 ;; Defined at:
  6429 ;;		line 557 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  number          2    0[COMMON] int 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  vbool          32    0[BANK0 ] int [16]
  6434 ;;  i               2   32[BANK0 ] int 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;		None               void
  6437 ;; Registers used:
  6438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6444 ;;      Params:         2       0       0       0       0
  6445 ;;      Locals:         0      34       0       0       0
  6446 ;;      Temps:          6       0       0       0       0
  6447 ;;      Totals:         8      34       0       0       0
  6448 ;;Total ram usage:       42 bytes
  6449 ;; Hardware stack levels used:    2
  6450 ;; This function calls:
  6451 ;;		Nothing
  6452 ;; This function is called by:
  6453 ;;		_cmd
  6454 ;;		_dat
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           psect	text547
  6458                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  6459                           	line	557
  6460                           	global	__size_of_setLCD
  6461  0144                     	__size_of_setLCD	equ	__end_of_setLCD-_setLCD
  6462                           	
  6463  012C                     _setLCD:	
  6464                           	opt	stack 2
  6465                           ; Regs used in _setLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6466                           	line	562
  6467                           	
  6468  012C                     l2991:	
  6469                           ;prev04.c: 558: const int size=8*sizeof(int);
  6470                           ;prev04.c: 559: int vbool[8*sizeof(int)];
  6471                           ;prev04.c: 560: int i;;
  6472                           ;prev04.c: 562: for (i = 0; i <size; i++)
  6473  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  6474  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  6475  012E  01C0               	clrf	(setLCD@i)
  6476  012F  01C1               	clrf	(setLCD@i+1)
  6477                           	
  6478  0130                     l2993:	
  6479  0130  3001               	movlw	(setLCD@size-__stringbase)
  6480  0131  0084               	movwf	fsr0
  6481  0132  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6482  0137  00F2               	movwf	(??_setLCD+0)+0
  6483  0138  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6484  013D  00F3               	movwf	(??_setLCD+0)+0+1
  6485  013E  0841               	movf	(setLCD@i+1),w
  6486  013F  3A80               	xorlw	80h
  6487  0140  00F4               	movwf	(??_setLCD+2)+0
  6488  0141  0873               	movf	1+(??_setLCD+0)+0,w
  6489  0142  3A80               	xorlw	80h
  6490  0143  0274               	subwf	(??_setLCD+2)+0,w
  6491  0144  1D03               	skipz
  6492  0145  2948               	goto	u3715
  6493  0146  0872               	movf	0+(??_setLCD+0)+0,w
  6494  0147  0240               	subwf	(setLCD@i),w
  6495  0148                     u3715:
  6496                           
  6497  0148  1C03               	skipc
  6498  0149  294B               	goto	u3711
  6499  014A  294C               	goto	u3710
  6500  014B                     u3711:
  6501  014B  294E               	goto	l2997
  6502  014C                     u3710:
  6503  014C  298F               	goto	l3003
  6504                           	
  6505  014D                     l2995:	
  6506  014D  298F               	goto	l3003
  6507                           	line	563
  6508                           	
  6509  014E                     l854:	
  6510                           	line	564
  6511                           	
  6512  014E                     l2997:	
  6513                           ;prev04.c: 563: {
  6514                           ;prev04.c: 564: vbool[i] = number<<i < 0;
  6515  014E  1283               	bcf	status, 5	;RP0=0, select bank0
  6516  014F  1303               	bcf	status, 6	;RP1=0, select bank0
  6517  0150  0A40               	incf	(setLCD@i),w
  6518  0151  00F2               	movwf	(??_setLCD+0)+0
  6519  0152  0871               	movf	(setLCD@number+1),w
  6520  0153  00F4               	movwf	(??_setLCD+1)+0+1
  6521  0154  0870               	movf	(setLCD@number),w
  6522  0155  00F3               	movwf	(??_setLCD+1)+0
  6523  0156  295A               	goto	u3724
  6524  0157                     u3725:
  6525  0157  1003               	clrc
  6526  0158  0DF3               	rlf	(??_setLCD+1)+0,f
  6527  0159  0DF4               	rlf	(??_setLCD+1)+1,f
  6528  015A                     u3724:
  6529  015A  0BF2               	decfsz	(??_setLCD+0)+0,f
  6530  015B  2957               	goto	u3725
  6531  015C  3000               	movlw	0
  6532  015D  1BF4               	btfsc	1+(??_setLCD+1)+0,7
  6533  015E  3001               	movlw	1
  6534  015F  00F5               	movwf	(??_setLCD+3)+0
  6535  0160  01F6               	clrf	(??_setLCD+3)+0+1
  6536  0161  0840               	movf	(setLCD@i),w
  6537  0162  00F7               	movwf	(??_setLCD+5)+0
  6538  0163  0777               	addwf	(??_setLCD+5)+0,w
  6539  0164  3E20               	addlw	setLCD@vbool&0ffh
  6540  0165  0084               	movwf	fsr0
  6541  0166  0875               	movf	0+(??_setLCD+3)+0,w
  6542  0167  1383               	bcf	status, 7	;select IRP bank0
  6543  0168  0080               	movwf	indf
  6544  0169  0A84               	incf	fsr0,f
  6545  016A  0876               	movf	1+(??_setLCD+3)+0,w
  6546  016B  0080               	movwf	indf
  6547                           	line	562
  6548                           	
  6549  016C                     l2999:	
  6550  016C  3001               	movlw	low(01h)
  6551  016D  07C0               	addwf	(setLCD@i),f
  6552  016E  1803               	skipnc
  6553  016F  0AC1               	incf	(setLCD@i+1),f
  6554  0170  3000               	movlw	high(01h)
  6555  0171  07C1               	addwf	(setLCD@i+1),f
  6556                           	
  6557  0172                     l3001:	
  6558  0172  3001               	movlw	(setLCD@size-__stringbase)
  6559  0173  0084               	movwf	fsr0
  6560  0174  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6561  0179  00F2               	movwf	(??_setLCD+0)+0
  6562  017A  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6563  017F  00F3               	movwf	(??_setLCD+0)+0+1
  6564  0180  0841               	movf	(setLCD@i+1),w
  6565  0181  3A80               	xorlw	80h
  6566  0182  00F4               	movwf	(??_setLCD+2)+0
  6567  0183  0873               	movf	1+(??_setLCD+0)+0,w
  6568  0184  3A80               	xorlw	80h
  6569  0185  0274               	subwf	(??_setLCD+2)+0,w
  6570  0186  1D03               	skipz
  6571  0187  298A               	goto	u3735
  6572  0188  0872               	movf	0+(??_setLCD+0)+0,w
  6573  0189  0240               	subwf	(setLCD@i),w
  6574  018A                     u3735:
  6575                           
  6576  018A  1C03               	skipc
  6577  018B  298D               	goto	u3731
  6578  018C  298E               	goto	u3730
  6579  018D                     u3731:
  6580  018D  294E               	goto	l2997
  6581  018E                     u3730:
  6582  018E  298F               	goto	l3003
  6583                           	
  6584  018F                     l855:	
  6585                           	line	567
  6586                           	
  6587  018F                     l3003:	
  6588                           ;prev04.c: 565: }
  6589                           ;prev04.c: 567: RD0=vbool[size-1];
  6590  018F  3001               	movlw	(setLCD@size-__stringbase)
  6591  0190  0084               	movwf	fsr0
  6592  0191  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6593  0196  00F2               	movwf	(??_setLCD+0)+0
  6594  0197  0772               	addwf	(??_setLCD+0)+0,w
  6595  0198  3EFE               	addlw	0FEh
  6596  0199  3E20               	addlw	setLCD@vbool&0ffh
  6597  019A  0084               	movwf	fsr0
  6598  019B  1383               	bcf	status, 7	;select IRP bank0
  6599  019C  0800               	movf	indf,w
  6600  019D  00F3               	movwf	(??_setLCD+1)+0+0
  6601  019E  0A84               	incf	fsr0,f
  6602  019F  0800               	movf	indf,w
  6603  01A0  00F4               	movwf	(??_setLCD+1)+0+1
  6604  01A1  1873               	btfsc	0+(??_setLCD+1)+0,0
  6605  01A2  29A4               	goto	u3741
  6606  01A3  29A8               	goto	u3740
  6607                           	
  6608  01A4                     u3741:
  6609  01A4  1283               	bcf	status, 5	;RP0=0, select bank0
  6610  01A5  1303               	bcf	status, 6	;RP1=0, select bank0
  6611  01A6  1408               	bsf	(64/8),(64)&7
  6612  01A7  29AB               	goto	u3754
  6613  01A8                     u3740:
  6614  01A8  1283               	bcf	status, 5	;RP0=0, select bank0
  6615  01A9  1303               	bcf	status, 6	;RP1=0, select bank0
  6616  01AA  1008               	bcf	(64/8),(64)&7
  6617  01AB                     u3754:
  6618                           	line	568
  6619                           ;prev04.c: 568: RD1=vbool[size-2];
  6620  01AB  3001               	movlw	(setLCD@size-__stringbase)
  6621  01AC  0084               	movwf	fsr0
  6622  01AD  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6623  01B2  00F2               	movwf	(??_setLCD+0)+0
  6624  01B3  0772               	addwf	(??_setLCD+0)+0,w
  6625  01B4  3EFC               	addlw	0FCh
  6626  01B5  3E20               	addlw	setLCD@vbool&0ffh
  6627  01B6  0084               	movwf	fsr0
  6628  01B7  1383               	bcf	status, 7	;select IRP bank0
  6629  01B8  0800               	movf	indf,w
  6630  01B9  00F3               	movwf	(??_setLCD+1)+0+0
  6631  01BA  0A84               	incf	fsr0,f
  6632  01BB  0800               	movf	indf,w
  6633  01BC  00F4               	movwf	(??_setLCD+1)+0+1
  6634  01BD  1873               	btfsc	0+(??_setLCD+1)+0,0
  6635  01BE  29C0               	goto	u3761
  6636  01BF  29C4               	goto	u3760
  6637                           	
  6638  01C0                     u3761:
  6639  01C0  1283               	bcf	status, 5	;RP0=0, select bank0
  6640  01C1  1303               	bcf	status, 6	;RP1=0, select bank0
  6641  01C2  1488               	bsf	(65/8),(65)&7
  6642  01C3  29C7               	goto	u3774
  6643  01C4                     u3760:
  6644  01C4  1283               	bcf	status, 5	;RP0=0, select bank0
  6645  01C5  1303               	bcf	status, 6	;RP1=0, select bank0
  6646  01C6  1088               	bcf	(65/8),(65)&7
  6647  01C7                     u3774:
  6648                           	line	569
  6649                           ;prev04.c: 569: RD2=vbool[size-3];
  6650  01C7  3001               	movlw	(setLCD@size-__stringbase)
  6651  01C8  0084               	movwf	fsr0
  6652  01C9  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6653  01CE  00F2               	movwf	(??_setLCD+0)+0
  6654  01CF  0772               	addwf	(??_setLCD+0)+0,w
  6655  01D0  3EFA               	addlw	0FAh
  6656  01D1  3E20               	addlw	setLCD@vbool&0ffh
  6657  01D2  0084               	movwf	fsr0
  6658  01D3  1383               	bcf	status, 7	;select IRP bank0
  6659  01D4  0800               	movf	indf,w
  6660  01D5  00F3               	movwf	(??_setLCD+1)+0+0
  6661  01D6  0A84               	incf	fsr0,f
  6662  01D7  0800               	movf	indf,w
  6663  01D8  00F4               	movwf	(??_setLCD+1)+0+1
  6664  01D9  1873               	btfsc	0+(??_setLCD+1)+0,0
  6665  01DA  29DC               	goto	u3781
  6666  01DB  29E0               	goto	u3780
  6667                           	
  6668  01DC                     u3781:
  6669  01DC  1283               	bcf	status, 5	;RP0=0, select bank0
  6670  01DD  1303               	bcf	status, 6	;RP1=0, select bank0
  6671  01DE  1508               	bsf	(66/8),(66)&7
  6672  01DF  29E3               	goto	u3794
  6673  01E0                     u3780:
  6674  01E0  1283               	bcf	status, 5	;RP0=0, select bank0
  6675  01E1  1303               	bcf	status, 6	;RP1=0, select bank0
  6676  01E2  1108               	bcf	(66/8),(66)&7
  6677  01E3                     u3794:
  6678                           	line	570
  6679                           ;prev04.c: 570: RD3=vbool[size-4];
  6680  01E3  3001               	movlw	(setLCD@size-__stringbase)
  6681  01E4  0084               	movwf	fsr0
  6682  01E5  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6683  01EA  00F2               	movwf	(??_setLCD+0)+0
  6684  01EB  0772               	addwf	(??_setLCD+0)+0,w
  6685  01EC  3EF8               	addlw	0F8h
  6686  01ED  3E20               	addlw	setLCD@vbool&0ffh
  6687  01EE  0084               	movwf	fsr0
  6688  01EF  1383               	bcf	status, 7	;select IRP bank0
  6689  01F0  0800               	movf	indf,w
  6690  01F1  00F3               	movwf	(??_setLCD+1)+0+0
  6691  01F2  0A84               	incf	fsr0,f
  6692  01F3  0800               	movf	indf,w
  6693  01F4  00F4               	movwf	(??_setLCD+1)+0+1
  6694  01F5  1873               	btfsc	0+(??_setLCD+1)+0,0
  6695  01F6  29F8               	goto	u3801
  6696  01F7  29FC               	goto	u3800
  6697                           	
  6698  01F8                     u3801:
  6699  01F8  1283               	bcf	status, 5	;RP0=0, select bank0
  6700  01F9  1303               	bcf	status, 6	;RP1=0, select bank0
  6701  01FA  1588               	bsf	(67/8),(67)&7
  6702  01FB  29FF               	goto	u3814
  6703  01FC                     u3800:
  6704  01FC  1283               	bcf	status, 5	;RP0=0, select bank0
  6705  01FD  1303               	bcf	status, 6	;RP1=0, select bank0
  6706  01FE  1188               	bcf	(67/8),(67)&7
  6707  01FF                     u3814:
  6708                           	line	571
  6709                           ;prev04.c: 571: RD4=vbool[size-5];
  6710  01FF  3001               	movlw	(setLCD@size-__stringbase)
  6711  0200  0084               	movwf	fsr0
  6712  0201  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6713  0206  00F2               	movwf	(??_setLCD+0)+0
  6714  0207  0772               	addwf	(??_setLCD+0)+0,w
  6715  0208  3EF6               	addlw	0F6h
  6716  0209  3E20               	addlw	setLCD@vbool&0ffh
  6717  020A  0084               	movwf	fsr0
  6718  020B  1383               	bcf	status, 7	;select IRP bank0
  6719  020C  0800               	movf	indf,w
  6720  020D  00F3               	movwf	(??_setLCD+1)+0+0
  6721  020E  0A84               	incf	fsr0,f
  6722  020F  0800               	movf	indf,w
  6723  0210  00F4               	movwf	(??_setLCD+1)+0+1
  6724  0211  1873               	btfsc	0+(??_setLCD+1)+0,0
  6725  0212  2A14               	goto	u3821
  6726  0213  2A18               	goto	u3820
  6727                           	
  6728  0214                     u3821:
  6729  0214  1283               	bcf	status, 5	;RP0=0, select bank0
  6730  0215  1303               	bcf	status, 6	;RP1=0, select bank0
  6731  0216  1608               	bsf	(68/8),(68)&7
  6732  0217  2A1B               	goto	u3834
  6733  0218                     u3820:
  6734  0218  1283               	bcf	status, 5	;RP0=0, select bank0
  6735  0219  1303               	bcf	status, 6	;RP1=0, select bank0
  6736  021A  1208               	bcf	(68/8),(68)&7
  6737  021B                     u3834:
  6738                           	line	572
  6739                           ;prev04.c: 572: RD5=vbool[size-6];
  6740  021B  3001               	movlw	(setLCD@size-__stringbase)
  6741  021C  0084               	movwf	fsr0
  6742  021D  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6743  0222  00F2               	movwf	(??_setLCD+0)+0
  6744  0223  0772               	addwf	(??_setLCD+0)+0,w
  6745  0224  3EF4               	addlw	0F4h
  6746  0225  3E20               	addlw	setLCD@vbool&0ffh
  6747  0226  0084               	movwf	fsr0
  6748  0227  1383               	bcf	status, 7	;select IRP bank0
  6749  0228  0800               	movf	indf,w
  6750  0229  00F3               	movwf	(??_setLCD+1)+0+0
  6751  022A  0A84               	incf	fsr0,f
  6752  022B  0800               	movf	indf,w
  6753  022C  00F4               	movwf	(??_setLCD+1)+0+1
  6754  022D  1873               	btfsc	0+(??_setLCD+1)+0,0
  6755  022E  2A30               	goto	u3841
  6756  022F  2A34               	goto	u3840
  6757                           	
  6758  0230                     u3841:
  6759  0230  1283               	bcf	status, 5	;RP0=0, select bank0
  6760  0231  1303               	bcf	status, 6	;RP1=0, select bank0
  6761  0232  1688               	bsf	(69/8),(69)&7
  6762  0233  2A37               	goto	u3854
  6763  0234                     u3840:
  6764  0234  1283               	bcf	status, 5	;RP0=0, select bank0
  6765  0235  1303               	bcf	status, 6	;RP1=0, select bank0
  6766  0236  1288               	bcf	(69/8),(69)&7
  6767  0237                     u3854:
  6768                           	line	573
  6769                           ;prev04.c: 573: RD6=vbool[size-7];
  6770  0237  3001               	movlw	(setLCD@size-__stringbase)
  6771  0238  0084               	movwf	fsr0
  6772  0239  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6773  023E  00F2               	movwf	(??_setLCD+0)+0
  6774  023F  0772               	addwf	(??_setLCD+0)+0,w
  6775  0240  3EF2               	addlw	0F2h
  6776  0241  3E20               	addlw	setLCD@vbool&0ffh
  6777  0242  0084               	movwf	fsr0
  6778  0243  1383               	bcf	status, 7	;select IRP bank0
  6779  0244  0800               	movf	indf,w
  6780  0245  00F3               	movwf	(??_setLCD+1)+0+0
  6781  0246  0A84               	incf	fsr0,f
  6782  0247  0800               	movf	indf,w
  6783  0248  00F4               	movwf	(??_setLCD+1)+0+1
  6784  0249  1873               	btfsc	0+(??_setLCD+1)+0,0
  6785  024A  2A4C               	goto	u3861
  6786  024B  2A50               	goto	u3860
  6787                           	
  6788  024C                     u3861:
  6789  024C  1283               	bcf	status, 5	;RP0=0, select bank0
  6790  024D  1303               	bcf	status, 6	;RP1=0, select bank0
  6791  024E  1708               	bsf	(70/8),(70)&7
  6792  024F  2A53               	goto	u3874
  6793  0250                     u3860:
  6794  0250  1283               	bcf	status, 5	;RP0=0, select bank0
  6795  0251  1303               	bcf	status, 6	;RP1=0, select bank0
  6796  0252  1308               	bcf	(70/8),(70)&7
  6797  0253                     u3874:
  6798                           	line	574
  6799                           ;prev04.c: 574: RD7=vbool[size-8];
  6800  0253  3001               	movlw	(setLCD@size-__stringbase)
  6801  0254  0084               	movwf	fsr0
  6802  0255  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6803  025A  00F2               	movwf	(??_setLCD+0)+0
  6804  025B  0772               	addwf	(??_setLCD+0)+0,w
  6805  025C  3EF0               	addlw	0F0h
  6806  025D  3E20               	addlw	setLCD@vbool&0ffh
  6807  025E  0084               	movwf	fsr0
  6808  025F  1383               	bcf	status, 7	;select IRP bank0
  6809  0260  0800               	movf	indf,w
  6810  0261  00F3               	movwf	(??_setLCD+1)+0+0
  6811  0262  0A84               	incf	fsr0,f
  6812  0263  0800               	movf	indf,w
  6813  0264  00F4               	movwf	(??_setLCD+1)+0+1
  6814  0265  1873               	btfsc	0+(??_setLCD+1)+0,0
  6815  0266  2A68               	goto	u3881
  6816  0267  2A6C               	goto	u3880
  6817                           	
  6818  0268                     u3881:
  6819  0268  1283               	bcf	status, 5	;RP0=0, select bank0
  6820  0269  1303               	bcf	status, 6	;RP1=0, select bank0
  6821  026A  1788               	bsf	(71/8),(71)&7
  6822  026B  2A6F               	goto	u3894
  6823  026C                     u3880:
  6824  026C  1283               	bcf	status, 5	;RP0=0, select bank0
  6825  026D  1303               	bcf	status, 6	;RP1=0, select bank0
  6826  026E  1388               	bcf	(71/8),(71)&7
  6827  026F                     u3894:
  6828                           	line	578
  6829                           	
  6830  026F                     l856:	
  6831  026F  0008               	return
  6832                           	opt stack 0
  6833                           GLOBAL	__end_of_setLCD
  6834  0270                     	__end_of_setLCD:
  6835 ;; =============== function _setLCD ends ============
  6836                           
  6837                           	signat	_setLCD,4216
  6838                           	global	_delay
  6839                           psect	text548,local,class=CODE,delta=2
  6840                           global __ptext548
  6841  0B07                     __ptext548:
  6842                           
  6843 ;; *************** function _delay *****************
  6844 ;; Defined at:
  6845 ;;		line 472 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  x               2    0[COMMON] unsigned int 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;		None
  6850 ;; Return value:  Size  Location     Type
  6851 ;;		None               void
  6852 ;; Registers used:
  6853 ;;		wreg
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6859 ;;      Params:         2       0       0       0       0
  6860 ;;      Locals:         0       0       0       0       0
  6861 ;;      Temps:          0       0       0       0       0
  6862 ;;      Totals:         2       0       0       0       0
  6863 ;;Total ram usage:        2 bytes
  6864 ;; Hardware stack levels used:    1
  6865 ;; This function calls:
  6866 ;;		Nothing
  6867 ;; This function is called by:
  6868 ;;		_cmd
  6869 ;;		_dat
  6870 ;;		_scroll
  6871 ;;		_actrow
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           psect	text548
  6875                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  6876                           	line	472
  6877                           	global	__size_of_delay
  6878  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  6879                           	
  6880  0B07                     _delay:	
  6881                           	opt	stack 3
  6882                           ; Regs used in _delay: [wreg]
  6883                           	line	473
  6884                           	
  6885  0B07                     l2987:	
  6886                           ;prev04.c: 473: while(x-->0);
  6887  0B07  2B09               	goto	l2989
  6888                           	
  6889  0B08                     l825:	
  6890  0B08  2B09               	goto	l2989
  6891                           	
  6892  0B09                     l824:	
  6893                           	
  6894  0B09                     l2989:	
  6895  0B09  3001               	movlw	low(01h)
  6896  0B0A  02F0               	subwf	(delay@x),f
  6897  0B0B  3000               	movlw	high(01h)
  6898  0B0C  1C03               	skipc
  6899  0B0D  03F1               	decf	(delay@x+1),f
  6900  0B0E  02F1               	subwf	(delay@x+1),f
  6901  0B0F  30FF               	movlw	high(0FFFFh)
  6902  0B10  0671               	xorwf	((delay@x+1)),w
  6903  0B11  1D03               	skipz
  6904  0B12  2B15               	goto	u3705
  6905  0B13  30FF               	movlw	low(0FFFFh)
  6906  0B14  0670               	xorwf	((delay@x)),w
  6907  0B15                     u3705:
  6908                           
  6909  0B15  1D03               	skipz
  6910  0B16  2B18               	goto	u3701
  6911  0B17  2B19               	goto	u3700
  6912  0B18                     u3701:
  6913  0B18  2B09               	goto	l2989
  6914  0B19                     u3700:
  6915  0B19  2B1A               	goto	l827
  6916                           	
  6917  0B1A                     l826:	
  6918                           	line	474
  6919                           	
  6920  0B1A                     l827:	
  6921  0B1A  0008               	return
  6922                           	opt stack 0
  6923                           GLOBAL	__end_of_delay
  6924  0B1B                     	__end_of_delay:
  6925 ;; =============== function _delay ends ============
  6926                           
  6927                           	signat	_delay,4216
  6928                           	global	_strcat
  6929                           psect	text549,local,class=CODE,delta=2
  6930                           global __ptext549
  6931  0BD6                     __ptext549:
  6932                           
  6933 ;; *************** function _strcat *****************
  6934 ;; Defined at:
  6935 ;;		line 10 in file "../../common/strcat.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  to              1    wreg     PTR unsigned char 
  6938 ;;		 -> logic_d4(5), logic_d3(5), logic_d2(5), logic_d1(5), 
  6939 ;;  from            1    0[COMMON] PTR const unsigned char 
  6940 ;;		 -> getlogicseq@snum(16), 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  to              1    2[COMMON] PTR unsigned char 
  6943 ;;		 -> logic_d4(5), logic_d3(5), logic_d2(5), logic_d1(5), 
  6944 ;;  cp              1    3[COMMON] PTR unsigned char 
  6945 ;;		 -> logic_d4(5), logic_d3(5), logic_d2(5), logic_d1(5), 
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  1    wreg      PTR unsigned char 
  6948 ;; Registers used:
  6949 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6955 ;;      Params:         1       0       0       0       0
  6956 ;;      Locals:         2       0       0       0       0
  6957 ;;      Temps:          1       0       0       0       0
  6958 ;;      Totals:         4       0       0       0       0
  6959 ;;Total ram usage:        4 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; This function calls:
  6962 ;;		Nothing
  6963 ;; This function is called by:
  6964 ;;		_getlogicseq
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           psect	text549
  6968                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcat.c"
  6969                           	line	10
  6970                           	global	__size_of_strcat
  6971  0029                     	__size_of_strcat	equ	__end_of_strcat-_strcat
  6972                           	
  6973  0BD6                     _strcat:	
  6974                           	opt	stack 6
  6975                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  6976                           ;strcat@to stored from wreg
  6977                           	line	18
  6978  0BD6  00F2               	movwf	(strcat@to)
  6979                           	
  6980  0BD7                     l2911:	
  6981  0BD7  0872               	movf	(strcat@to),w
  6982  0BD8  00F1               	movwf	(??_strcat+0)+0
  6983  0BD9  0871               	movf	(??_strcat+0)+0,w
  6984  0BDA  00F3               	movwf	(strcat@cp)
  6985                           	line	19
  6986  0BDB  2BE1               	goto	l2915
  6987                           	
  6988  0BDC                     l931:	
  6989                           	line	20
  6990                           	
  6991  0BDC                     l2913:	
  6992  0BDC  3001               	movlw	(01h)
  6993  0BDD  00F1               	movwf	(??_strcat+0)+0
  6994  0BDE  0871               	movf	(??_strcat+0)+0,w
  6995  0BDF  07F3               	addwf	(strcat@cp),f
  6996  0BE0  2BE1               	goto	l2915
  6997                           	
  6998  0BE1                     l930:	
  6999                           	line	19
  7000                           	
  7001  0BE1                     l2915:	
  7002  0BE1  0873               	movf	(strcat@cp),w
  7003  0BE2  0084               	movwf	fsr0
  7004  0BE3  1383               	bcf	status, 7	;select IRP bank0
  7005  0BE4  0880               	movf	indf,f
  7006  0BE5  1D03               	skipz
  7007  0BE6  2BE8               	goto	u3521
  7008  0BE7  2BE9               	goto	u3520
  7009  0BE8                     u3521:
  7010  0BE8  2BDC               	goto	l2913
  7011  0BE9                     u3520:
  7012  0BE9  2BEC               	goto	l2917
  7013                           	
  7014  0BEA                     l932:	
  7015                           	line	21
  7016  0BEA  2BEC               	goto	l2917
  7017                           	
  7018  0BEB                     l934:	
  7019                           	line	22
  7020  0BEB  2BEC               	goto	l2917
  7021                           	
  7022  0BEC                     l933:	
  7023                           	line	21
  7024                           	
  7025  0BEC                     l2917:	
  7026  0BEC  0870               	movf	(strcat@from),w
  7027  0BED  0084               	movwf	fsr0
  7028  0BEE  3001               	movlw	01h
  7029  0BEF  07F0               	addwf	(strcat@from),f
  7030  0BF0  0800               	movf	indf,w
  7031  0BF1  00F1               	movwf	(??_strcat+0)+0
  7032  0BF2  0873               	movf	(strcat@cp),w
  7033  0BF3  0084               	movwf	fsr0
  7034  0BF4  3001               	movlw	01h
  7035  0BF5  07F3               	addwf	(strcat@cp),f
  7036  0BF6  0871               	movf	(??_strcat+0)+0,w
  7037  0BF7  0080               	movwf	indf
  7038  0BF8  0880               	movf	(indf),f
  7039  0BF9  1D03               	skipz
  7040  0BFA  2BFC               	goto	u3531
  7041  0BFB  2BFD               	goto	u3530
  7042  0BFC                     u3531:
  7043  0BFC  2BEC               	goto	l2917
  7044  0BFD                     u3530:
  7045  0BFD  2BFE               	goto	l936
  7046                           	
  7047  0BFE                     l935:	
  7048                           	line	24
  7049                           ;	Return value of _strcat is never used
  7050                           	
  7051  0BFE                     l936:	
  7052  0BFE  0008               	return
  7053                           	opt stack 0
  7054                           GLOBAL	__end_of_strcat
  7055  0BFF                     	__end_of_strcat:
  7056 ;; =============== function _strcat ends ============
  7057                           
  7058                           	signat	_strcat,8313
  7059                           	global	_check
  7060                           psect	text550,local,class=CODE,delta=2
  7061                           global __ptext550
  7062  0CC3                     __ptext550:
  7063                           
  7064 ;; *************** function _check *****************
  7065 ;; Defined at:
  7066 ;;		line 404 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  input           1    wreg     PTR unsigned char 
  7069 ;;		 -> lo(5), 
  7070 ;;  logic           1    0[COMMON] PTR unsigned char 
  7071 ;;		 -> logic_d4(5), logic_d3(5), logic_d2(5), logic_d1(5), 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  input           1    3[COMMON] PTR unsigned char 
  7074 ;;		 -> lo(5), 
  7075 ;;  i               2    4[COMMON] int 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  2    0[COMMON] int 
  7078 ;; Registers used:
  7079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7085 ;;      Params:         2       0       0       0       0
  7086 ;;      Locals:         3       0       0       0       0
  7087 ;;      Temps:          1       0       0       0       0
  7088 ;;      Totals:         6       0       0       0       0
  7089 ;;Total ram usage:        6 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_startswitch
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           psect	text550
  7098                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  7099                           	line	404
  7100                           	global	__size_of_check
  7101  0049                     	__size_of_check	equ	__end_of_check-_check
  7102                           	
  7103  0CC3                     _check:	
  7104                           	opt	stack 5
  7105                           ; Regs used in _check: [wreg-fsr0h+status,2+status,0+btemp+1]
  7106                           ;check@input stored from wreg
  7107                           	line	406
  7108  0CC3  00F3               	movwf	(check@input)
  7109                           	
  7110  0CC4                     l2889:	
  7111                           ;prev04.c: 406: int i=0;
  7112  0CC4  01F4               	clrf	(check@i)
  7113  0CC5  01F5               	clrf	(check@i+1)
  7114                           	line	408
  7115                           ;prev04.c: 408: for(i=0;i<4;i++)
  7116  0CC6  01F4               	clrf	(check@i)
  7117  0CC7  01F5               	clrf	(check@i+1)
  7118                           	
  7119  0CC8                     l2891:	
  7120  0CC8  0875               	movf	(check@i+1),w
  7121  0CC9  3A80               	xorlw	80h
  7122  0CCA  00FF               	movwf	btemp+1
  7123  0CCB  3080               	movlw	(high(04h))^80h
  7124  0CCC  027F               	subwf	btemp+1,w
  7125  0CCD  1D03               	skipz
  7126  0CCE  2CD1               	goto	u3485
  7127  0CCF  3004               	movlw	low(04h)
  7128  0CD0  0274               	subwf	(check@i),w
  7129  0CD1                     u3485:
  7130                           
  7131  0CD1  1C03               	skipc
  7132  0CD2  2CD4               	goto	u3481
  7133  0CD3  2CD5               	goto	u3480
  7134  0CD4                     u3481:
  7135  0CD4  2CD7               	goto	l2895
  7136  0CD5                     u3480:
  7137  0CD5  2D06               	goto	l2907
  7138                           	
  7139  0CD6                     l2893:	
  7140  0CD6  2D06               	goto	l2907
  7141                           	line	409
  7142                           	
  7143  0CD7                     l784:	
  7144                           	line	410
  7145                           	
  7146  0CD7                     l2895:	
  7147                           ;prev04.c: 409: {
  7148                           ;prev04.c: 410: if(input[i]=='0'&&logic[i]=='1')
  7149  0CD7  0874               	movf	(check@i),w
  7150  0CD8  0773               	addwf	(check@input),w
  7151  0CD9  00F2               	movwf	(??_check+0)+0
  7152  0CDA  0872               	movf	0+(??_check+0)+0,w
  7153  0CDB  0084               	movwf	fsr0
  7154  0CDC  1383               	bcf	status, 7	;select IRP bank0
  7155  0CDD  0800               	movf	indf,w
  7156  0CDE  3A30               	xorlw	030h
  7157  0CDF  1D03               	skipz
  7158  0CE0  2CE2               	goto	u3491
  7159  0CE1  2CE3               	goto	u3490
  7160  0CE2                     u3491:
  7161  0CE2  2CF2               	goto	l2903
  7162  0CE3                     u3490:
  7163                           	
  7164  0CE3                     l2897:	
  7165  0CE3  0874               	movf	(check@i),w
  7166  0CE4  0770               	addwf	(check@logic),w
  7167  0CE5  00F2               	movwf	(??_check+0)+0
  7168  0CE6  0872               	movf	0+(??_check+0)+0,w
  7169  0CE7  0084               	movwf	fsr0
  7170  0CE8  0800               	movf	indf,w
  7171  0CE9  3A31               	xorlw	031h
  7172  0CEA  1D03               	skipz
  7173  0CEB  2CED               	goto	u3501
  7174  0CEC  2CEE               	goto	u3500
  7175  0CED                     u3501:
  7176  0CED  2CF2               	goto	l2903
  7177  0CEE                     u3500:
  7178                           	line	411
  7179                           	
  7180  0CEE                     l2899:	
  7181                           ;prev04.c: 411: return 0;
  7182  0CEE  01F0               	clrf	(?_check)
  7183  0CEF  01F1               	clrf	(?_check+1)
  7184  0CF0  2D0B               	goto	l787
  7185                           	
  7186  0CF1                     l2901:	
  7187  0CF1  2D0B               	goto	l787
  7188                           	
  7189  0CF2                     l786:	
  7190                           	line	408
  7191                           	
  7192  0CF2                     l2903:	
  7193  0CF2  3001               	movlw	low(01h)
  7194  0CF3  07F4               	addwf	(check@i),f
  7195  0CF4  1803               	skipnc
  7196  0CF5  0AF5               	incf	(check@i+1),f
  7197  0CF6  3000               	movlw	high(01h)
  7198  0CF7  07F5               	addwf	(check@i+1),f
  7199                           	
  7200  0CF8                     l2905:	
  7201  0CF8  0875               	movf	(check@i+1),w
  7202  0CF9  3A80               	xorlw	80h
  7203  0CFA  00FF               	movwf	btemp+1
  7204  0CFB  3080               	movlw	(high(04h))^80h
  7205  0CFC  027F               	subwf	btemp+1,w
  7206  0CFD  1D03               	skipz
  7207  0CFE  2D01               	goto	u3515
  7208  0CFF  3004               	movlw	low(04h)
  7209  0D00  0274               	subwf	(check@i),w
  7210  0D01                     u3515:
  7211                           
  7212  0D01  1C03               	skipc
  7213  0D02  2D04               	goto	u3511
  7214  0D03  2D05               	goto	u3510
  7215  0D04                     u3511:
  7216  0D04  2CD7               	goto	l2895
  7217  0D05                     u3510:
  7218  0D05  2D06               	goto	l2907
  7219                           	
  7220  0D06                     l785:	
  7221                           	line	413
  7222                           	
  7223  0D06                     l2907:	
  7224                           ;prev04.c: 412: }
  7225                           ;prev04.c: 413: return 1;
  7226  0D06  3001               	movlw	low(01h)
  7227  0D07  00F0               	movwf	(?_check)
  7228  0D08  3000               	movlw	high(01h)
  7229  0D09  00F1               	movwf	((?_check))+1
  7230  0D0A  2D0B               	goto	l787
  7231                           	
  7232  0D0B                     l2909:	
  7233                           	line	414
  7234                           	
  7235  0D0B                     l787:	
  7236  0D0B  0008               	return
  7237                           	opt stack 0
  7238                           GLOBAL	__end_of_check
  7239  0D0C                     	__end_of_check:
  7240 ;; =============== function _check ends ============
  7241                           
  7242                           	signat	_check,8314
  7243                           	global	_strcmp
  7244                           psect	text551,local,class=CODE,delta=2
  7245                           global __ptext551
  7246  0C8A                     __ptext551:
  7247                           
  7248 ;; *************** function _strcmp *****************
  7249 ;; Defined at:
  7250 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  s1              1    wreg     PTR const unsigned char 
  7253 ;;		 -> lo(5), 
  7254 ;;  s2              2    0[COMMON] PTR const unsigned char 
  7255 ;;		 -> STR_32(5), STR_31(5), STR_30(5), STR_29(5), 
  7256 ;;		 -> STR_28(5), STR_27(5), STR_26(5), STR_25(5), 
  7257 ;;		 -> STR_24(5), STR_23(5), STR_22(5), STR_21(5), 
  7258 ;;		 -> STR_20(5), STR_19(5), STR_18(5), STR_17(5), 
  7259 ;;		 -> STR_3(5), logic_d4(5), logic_d3(5), logic_d2(5), 
  7260 ;;		 -> logic_d1(5), STR_2(5), plo(5), 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;  s1              1    7[COMMON] PTR const unsigned char 
  7263 ;;		 -> lo(5), 
  7264 ;;  r               1    6[COMMON] char 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  2    0[COMMON] int 
  7267 ;; Registers used:
  7268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7274 ;;      Params:         2       0       0       0       0
  7275 ;;      Locals:         2       0       0       0       0
  7276 ;;      Temps:          4       0       0       0       0
  7277 ;;      Totals:         8       0       0       0       0
  7278 ;;Total ram usage:        8 bytes
  7279 ;; Hardware stack levels used:    2
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_startswitch
  7284 ;;		_parselogic
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           psect	text551
  7288                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  7289                           	line	34
  7290                           	global	__size_of_strcmp
  7291  0039                     	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  7292                           	
  7293  0C8A                     _strcmp:	
  7294                           	opt	stack 4
  7295                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7296                           ;strcmp@s1 stored from wreg
  7297  0C8A  00F7               	movwf	(strcmp@s1)
  7298                           	line	37
  7299                           	
  7300  0C8B                     l2879:	
  7301  0C8B  2C8D               	goto	l2881
  7302                           	
  7303  0C8C                     l940:	
  7304                           	line	38
  7305  0C8C  2C8D               	goto	l2881
  7306                           	
  7307  0C8D                     l939:	
  7308                           	line	37
  7309                           	
  7310  0C8D                     l2881:	
  7311  0C8D  0877               	movf	(strcmp@s1),w
  7312  0C8E  0084               	movwf	fsr
  7313  0C8F  1383               	bcf	status, 7	;select IRP bank0
  7314  0C90  0800               	movf	indf,w
  7315  0C91  00F2               	movwf	(??_strcmp+0)+0
  7316  0C92  0871               	movf	(strcmp@s2+1),w
  7317  0C93  00F4               	movwf	(??_strcmp+1)+0+1
  7318  0C94  0870               	movf	(strcmp@s2),w
  7319  0C95  00F3               	movwf	(??_strcmp+1)+0
  7320  0C96  3001               	movlw	(01h)
  7321  0C97  07F0               	addwf	(strcmp@s2),f
  7322  0C98  1803               	skipnc
  7323  0C99  0AF1               	incf	(strcmp@s2+1),f
  7324  0C9A  0874               	movf	1+(??_strcmp+1)+0,w
  7325  0C9B  1283               	bcf	status, 5	;RP0=0, select bank0
  7326  0C9C  1303               	bcf	status, 6	;RP1=0, select bank0
  7327  0C9D  00FF               	movwf	btemp+1
  7328  0C9E  0873               	movf	0+(??_strcmp+1)+0,w
  7329  0C9F  0084               	movwf	fsr0
  7330  0CA0  120A  158A  2000   	fcall	stringtab
              120A  158A         
  7331  0CA5  3AFF               	xorlw	0ffh
  7332  0CA6  3E01               	addlw	1
  7333  0CA7  0772               	addwf	(??_strcmp+0)+0,w
  7334  0CA8  00F5               	movwf	(??_strcmp+3)+0
  7335  0CA9  0875               	movf	(??_strcmp+3)+0,w
  7336  0CAA  00F6               	movwf	(strcmp@r)
  7337  0CAB  08F6               	movf	((strcmp@r)),f
  7338  0CAC  1D03               	skipz
  7339  0CAD  2CAF               	goto	u3461
  7340  0CAE  2CB0               	goto	u3460
  7341  0CAF                     u3461:
  7342  0CAF  2CBC               	goto	l2885
  7343  0CB0                     u3460:
  7344                           	
  7345  0CB0                     l2883:	
  7346  0CB0  0877               	movf	(strcmp@s1),w
  7347  0CB1  0084               	movwf	fsr0
  7348  0CB2  3001               	movlw	01h
  7349  0CB3  07F7               	addwf	(strcmp@s1),f
  7350  0CB4  1383               	bcf	status, 7	;select IRP bank0
  7351  0CB5  0880               	movf	indf,f
  7352  0CB6  1D03               	skipz
  7353  0CB7  2CB9               	goto	u3471
  7354  0CB8  2CBA               	goto	u3470
  7355  0CB9                     u3471:
  7356  0CB9  2C8D               	goto	l2881
  7357  0CBA                     u3470:
  7358  0CBA  2CBC               	goto	l2885
  7359                           	
  7360  0CBB                     l942:	
  7361  0CBB  2CBC               	goto	l2885
  7362                           	
  7363  0CBC                     l943:	
  7364                           	line	39
  7365                           	
  7366  0CBC                     l2885:	
  7367  0CBC  0876               	movf	(strcmp@r),w
  7368  0CBD  00F0               	movwf	(?_strcmp)
  7369  0CBE  01F1               	clrf	(?_strcmp+1)
  7370  0CBF  1BF0               	btfsc	(?_strcmp),7
  7371  0CC0  03F1               	decf	(?_strcmp+1),f
  7372  0CC1  2CC2               	goto	l944
  7373                           	
  7374  0CC2                     l2887:	
  7375                           	line	40
  7376                           	
  7377  0CC2                     l944:	
  7378  0CC2  0008               	return
  7379                           	opt stack 0
  7380                           GLOBAL	__end_of_strcmp
  7381  0CC3                     	__end_of_strcmp:
  7382 ;; =============== function _strcmp ends ============
  7383                           
  7384                           	signat	_strcmp,8314
  7385                           	global	_strcpy
  7386                           psect	text552,local,class=CODE,delta=2
  7387                           global __ptext552
  7388  0BAD                     __ptext552:
  7389                           
  7390 ;; *************** function _strcpy *****************
  7391 ;; Defined at:
  7392 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  to              1    wreg     PTR unsigned char 
  7395 ;;		 -> getlogicseq@str(32), logic_d4(5), logic_d3(5), logic_d2(5), 
  7396 ;;		 -> logic_d1(5), lo(5), plo(5), 
  7397 ;;  from            2    0[COMMON] PTR const unsigned char 
  7398 ;;		 -> STR_15(1), STR_14(20), STR_12(1), STR_11(20), 
  7399 ;;		 -> STR_9(1), STR_8(20), STR_6(1), STR_5(20), 
  7400 ;;		 -> STR_1(5), lo(5), 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  to              1    5[COMMON] PTR unsigned char 
  7403 ;;		 -> getlogicseq@str(32), logic_d4(5), logic_d3(5), logic_d2(5), 
  7404 ;;		 -> logic_d1(5), lo(5), plo(5), 
  7405 ;;  cp              1    6[COMMON] PTR unsigned char 
  7406 ;;		 -> getlogicseq@str(32), logic_d4(5), logic_d3(5), logic_d2(5), 
  7407 ;;		 -> logic_d1(5), lo(5), plo(5), 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      PTR unsigned char 
  7410 ;; Registers used:
  7411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7417 ;;      Params:         2       0       0       0       0
  7418 ;;      Locals:         2       0       0       0       0
  7419 ;;      Temps:          3       0       0       0       0
  7420 ;;      Totals:         7       0       0       0       0
  7421 ;;Total ram usage:        7 bytes
  7422 ;; Hardware stack levels used:    2
  7423 ;; This function calls:
  7424 ;;		Nothing
  7425 ;; This function is called by:
  7426 ;;		_startswitch
  7427 ;;		_getlogicseq
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           psect	text552
  7431                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\strcpy.c"
  7432                           	line	10
  7433                           	global	__size_of_strcpy
  7434  0029                     	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  7435                           	
  7436  0BAD                     _strcpy:	
  7437                           	opt	stack 4
  7438                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7439                           ;strcpy@to stored from wreg
  7440                           	line	18
  7441  0BAD  00F5               	movwf	(strcpy@to)
  7442                           	
  7443  0BAE                     l2875:	
  7444  0BAE  0875               	movf	(strcpy@to),w
  7445  0BAF  00F2               	movwf	(??_strcpy+0)+0
  7446  0BB0  0872               	movf	(??_strcpy+0)+0,w
  7447  0BB1  00F6               	movwf	(strcpy@cp)
  7448                           	line	19
  7449  0BB2  2BB4               	goto	l2877
  7450                           	
  7451  0BB3                     l948:	
  7452                           	line	20
  7453  0BB3  2BB4               	goto	l2877
  7454                           	
  7455  0BB4                     l947:	
  7456                           	line	19
  7457                           	
  7458  0BB4                     l2877:	
  7459  0BB4  0871               	movf	(strcpy@from+1),w
  7460  0BB5  00F3               	movwf	(??_strcpy+0)+0+1
  7461  0BB6  0870               	movf	(strcpy@from),w
  7462  0BB7  00F2               	movwf	(??_strcpy+0)+0
  7463  0BB8  3001               	movlw	(01h)
  7464  0BB9  07F0               	addwf	(strcpy@from),f
  7465  0BBA  1803               	skipnc
  7466  0BBB  0AF1               	incf	(strcpy@from+1),f
  7467  0BBC  0873               	movf	1+(??_strcpy+0)+0,w
  7468  0BBD  1283               	bcf	status, 5	;RP0=0, select bank0
  7469  0BBE  1303               	bcf	status, 6	;RP1=0, select bank0
  7470  0BBF  00FF               	movwf	btemp+1
  7471  0BC0  0872               	movf	0+(??_strcpy+0)+0,w
  7472  0BC1  0084               	movwf	fsr0
  7473  0BC2  120A  158A  2000   	fcall	stringtab
              120A  158A         
  7474  0BC7  00F4               	movwf	(??_strcpy+2)+0
  7475  0BC8  0876               	movf	(strcpy@cp),w
  7476  0BC9  0084               	movwf	fsr0
  7477  0BCA  3001               	movlw	01h
  7478  0BCB  07F6               	addwf	(strcpy@cp),f
  7479  0BCC  0874               	movf	(??_strcpy+2)+0,w
  7480  0BCD  1383               	bcf	status, 7	;select IRP bank0
  7481  0BCE  0080               	movwf	indf
  7482  0BCF  0880               	movf	(indf),f
  7483  0BD0  1D03               	skipz
  7484  0BD1  2BD3               	goto	u3451
  7485  0BD2  2BD4               	goto	u3450
  7486  0BD3                     u3451:
  7487  0BD3  2BB4               	goto	l2877
  7488  0BD4                     u3450:
  7489  0BD4  2BD5               	goto	l950
  7490                           	
  7491  0BD5                     l949:	
  7492                           	line	22
  7493                           ;	Return value of _strcpy is never used
  7494                           	
  7495  0BD5                     l950:	
  7496  0BD5  0008               	return
  7497                           	opt stack 0
  7498                           GLOBAL	__end_of_strcpy
  7499  0BD6                     	__end_of_strcpy:
  7500 ;; =============== function _strcpy ends ============
  7501                           
  7502                           	signat	_strcpy,8313
  7503                           	global	_init_fun
  7504                           psect	text553,local,class=CODE,delta=2
  7505                           global __ptext553
  7506  0B48                     __ptext553:
  7507                           
  7508 ;; *************** function _init_fun *****************
  7509 ;; Defined at:
  7510 ;;		line 391 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;		None
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;		None               void
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7524 ;;      Params:         0       0       0       0       0
  7525 ;;      Locals:         0       0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0
  7527 ;;      Totals:         0       0       0       0       0
  7528 ;;Total ram usage:        0 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_main
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           psect	text553
  7537                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  7538                           	line	391
  7539                           	global	__size_of_init_fun
  7540  001B                     	__size_of_init_fun	equ	__end_of_init_fun-_init_fun
  7541                           	
  7542  0B48                     _init_fun:	
  7543                           	opt	stack 7
  7544                           ; Regs used in _init_fun: [wreg+status,2+status,0]
  7545                           	line	392
  7546                           	
  7547  0B48                     l2863:	
  7548                           ;prev04.c: 392: if(done_init==0)
  7549  0B48  1283               	bcf	status, 5	;RP0=0, select bank0
  7550  0B49  1303               	bcf	status, 6	;RP1=0, select bank0
  7551  0B4A  086D               	movf	((_done_init+1)),w
  7552  0B4B  046C               	iorwf	((_done_init)),w
  7553  0B4C  1D03               	skipz
  7554  0B4D  2B4F               	goto	u3441
  7555  0B4E  2B50               	goto	u3440
  7556  0B4F                     u3441:
  7557  0B4F  2B62               	goto	l781
  7558  0B50                     u3440:
  7559                           	line	395
  7560                           	
  7561  0B50                     l2865:	
  7562                           ;prev04.c: 393: {
  7563                           ;prev04.c: 395: TRISA=0b110000;
  7564  0B50  3030               	movlw	(030h)
  7565  0B51  1683               	bsf	status, 5	;RP0=1, select bank1
  7566  0B52  1303               	bcf	status, 6	;RP1=0, select bank1
  7567  0B53  0085               	movwf	(133)^080h	;volatile
  7568                           	line	396
  7569                           	
  7570  0B54                     l2867:	
  7571                           ;prev04.c: 396: PORTA=0x0;
  7572  0B54  1283               	bcf	status, 5	;RP0=0, select bank0
  7573  0B55  1303               	bcf	status, 6	;RP1=0, select bank0
  7574  0B56  0185               	clrf	(5)	;volatile
  7575                           	line	397
  7576                           	
  7577  0B57                     l2869:	
  7578                           ;prev04.c: 397: RCEN=0;
  7579  0B57  1683               	bsf	status, 5	;RP0=1, select bank1
  7580  0B58  1303               	bcf	status, 6	;RP1=0, select bank1
  7581  0B59  1191               	bcf	(1163/8)^080h,(1163)&7
  7582                           	line	398
  7583                           	
  7584  0B5A                     l2871:	
  7585                           ;prev04.c: 398: TXEN=0;
  7586  0B5A  1298               	bcf	(1221/8)^080h,(1221)&7
  7587                           	line	399
  7588                           	
  7589  0B5B                     l2873:	
  7590                           ;prev04.c: 399: done_init=1;
  7591  0B5B  3001               	movlw	low(01h)
  7592  0B5C  1283               	bcf	status, 5	;RP0=0, select bank0
  7593  0B5D  1303               	bcf	status, 6	;RP1=0, select bank0
  7594  0B5E  00EC               	movwf	(_done_init)
  7595  0B5F  3000               	movlw	high(01h)
  7596  0B60  00ED               	movwf	((_done_init))+1
  7597  0B61  2B62               	goto	l781
  7598                           	line	400
  7599                           	
  7600  0B62                     l780:	
  7601                           	line	401
  7602                           	
  7603  0B62                     l781:	
  7604  0B62  0008               	return
  7605                           	opt stack 0
  7606                           GLOBAL	__end_of_init_fun
  7607  0B63                     	__end_of_init_fun:
  7608 ;; =============== function _init_fun ends ============
  7609                           
  7610                           	signat	_init_fun,88
  7611                           	global	_initkeypad
  7612                           psect	text554,local,class=CODE,delta=2
  7613                           global __ptext554
  7614  0AD2                     __ptext554:
  7615                           
  7616 ;; *************** function _initkeypad *****************
  7617 ;; Defined at:
  7618 ;;		line 655 in file "C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;		None
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;		None               void
  7625 ;; Registers used:
  7626 ;;		wreg, status,2
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7632 ;;      Params:         0       0       0       0       0
  7633 ;;      Locals:         0       0       0       0       0
  7634 ;;      Temps:          0       0       0       0       0
  7635 ;;      Totals:         0       0       0       0       0
  7636 ;;Total ram usage:        0 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_main
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           psect	text554
  7645                           	file	"C:\PIC\PROJECTS\Training_Project\Code\prev0\prev04.c"
  7646                           	line	655
  7647                           	global	__size_of_initkeypad
  7648  0008                     	__size_of_initkeypad	equ	__end_of_initkeypad-_initkeypad
  7649                           	
  7650  0AD2                     _initkeypad:	
  7651                           	opt	stack 7
  7652                           ; Regs used in _initkeypad: [wreg+status,2]
  7653                           	line	656
  7654                           	
  7655  0AD2                     l1379:	
  7656                           ;prev04.c: 656: PORTB = 0x0;
  7657  0AD2  1283               	bcf	status, 5	;RP0=0, select bank0
  7658  0AD3  1303               	bcf	status, 6	;RP1=0, select bank0
  7659  0AD4  0186               	clrf	(6)	;volatile
  7660                           	line	657
  7661                           	
  7662  0AD5                     l1381:	
  7663                           ;prev04.c: 657: TRISB = 0b11000000;
  7664  0AD5  30C0               	movlw	(0C0h)
  7665  0AD6  1683               	bsf	status, 5	;RP0=1, select bank1
  7666  0AD7  1303               	bcf	status, 6	;RP1=0, select bank1
  7667  0AD8  0086               	movwf	(134)^080h	;volatile
  7668                           	line	659
  7669                           	
  7670  0AD9                     l883:	
  7671  0AD9  0008               	return
  7672                           	opt stack 0
  7673                           GLOBAL	__end_of_initkeypad
  7674  0ADA                     	__end_of_initkeypad:
  7675 ;; =============== function _initkeypad ends ============
  7676                           
  7677                           	signat	_initkeypad,88
  7678                           psect	text555,local,class=CODE,delta=2
  7679                           global __ptext555
  7680  0000                     __ptext555:
  7681                           	global	btemp
  7682  007E                     	btemp set 07Eh
  7683                           
  7684                           	DABS	1,126,2	;btemp
  7685                           	global	wtemp0
  7686  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Fri Jul 28 12:33:38 2017

                   pc 0002          ___awdiv@sign 0076                    _lo 0060                    fsr 0004  
 ___wmul@multiplicand 0072                   l700 02ED                   l701 02F6                   l710 0390  
                 l702 030F                   l711 03A9                   l703 0318                   l712 03C2  
                 l704 0331                   l720 0440                   l713 03F7                   l705 033A  
                 l721 0475                   l714 040C                   l706 0353                   l730 0520  
                 l722 04F9                   l715 0410                   l707 035B                   l731 051F  
                 l900 0F85                   l708 0410                   l740 0595                   l732 052B  
                 l724 0490                   l901 0F9E                   l709 0377                   l741 05EB  
                 l733 052A                   l725 04F8                   l830 004C                   l910 0FE2  
                 l902 0FC1                   l750 06D7                   l742 05FA                   l734 052C  
                 l726 04A6                   l831 012B                   l911 0FF9                   l903 0FA9  
                 l743 061C                   l735 0564                   l727 04FC                   l824 0B09  
                 l832 005B                   l920 0013                   l840 0C89                   l912 0FED  
                 l904 0FC0                   l760 0709                   l752 066E                   l744 060F  
                 l736 05E8                   l728 050B                   l825 0B08                   l833 0088  
                 l921 0037                   l913 0FF8                   l905 0FB4                   l761 0708  
                 l753 06D6                   l745 060E                   l729 052D                   l930 0BE1  
                 l826 0B1A                   l834 009D                   l922 001E                   l914 0FF7  
                 l906 0FBF                   l770 07D8                   l762 070A                   l754 0684  
                 l746 061A                   l738 057F                   l690 0B44                   l931 0BDC  
                 l827 0B1A                   l835 00C8                   l923 0036                   l907 0FBE  
                 l843 0AEB                   l771 07FA                   l763 0742                   l755 06DA  
                 l747 0619                   l739 05E7                   l691 0B45                   l780 0B62  
                 l940 0C8C                   l932 0BEA                   l836 00E3                   l924 0029  
                 l908 0FD7                   l860 0D2E                   l772 07ED                   l764 07C6  
                 l756 06E9                   l748 061B                   l692 0B45                   l781 0B62  
                 l933 0BEC                   l917 0AD1                   l837 012B                   l925 0035  
                 l909 0FFA                   l861 0D38                   l773 07EC                   l757 070B  
                 l749 0653                   l950 0BD5                   l942 0CBB                   l934 0BEB  
                 l854 014E                   l846 0B87                   l926 0034                   l862 0D5B  
                 l870 0E82                   l774 07F8                   l766 075D                   l758 06FE  
                 l943 0CBC                   l935 0BFE                   l855 018F                   l927 0040  
                 l863 0D3B                   l695 028F                   l871 0F17                   l775 07F7  
                 l767 07C5                   l759 06FD                   l944 0CC2                   l784 0CD7  
                 l936 0BFE                   l856 026F                   l960 0C0C                   l864 0D6F  
                 l696 0298                   l872 0EA0                   l880 0F17                   l776 07F9  
                 l768 0773                   l785 0D06                   l961 0C21                   l849 0BAC  
                 l865 0D6F                   l697 02A1                   l873 0EB8                   l777 07FF  
                 l769 07C9                   l689 0B3E                   l786 0CF2                   l962 0C28  
                 l890 0F4E                   l698 02AA                   l874 0EA5                   l883 0AD9  
                 l947 0BB4                   l939 0C8D                   l787 0D0B                   l891 0F42  
                 l859 0D1B                   l699 035E                   l875 0ECE                   l948 0BB3  
                 l892 0F4D                   l876 0EE6                   l868 0E74                   l949 0BD5  
                 l893 0F4C                   l877 0ED3                   l869 0E67                   l894 0F65  
                 l886 0F2C                   l878 0EFC                   l959 0C02                   l895 0F88  
                 l887 0FFF                   l879 0F16                   l896 0F70                   l888 0F4F  
                 l897 0F87                   l889 0F37                   l898 0F7B                   l899 0F86  
                 _RB0 0030                   _RB1 0031                   _RC0 0038                   _RB2 0032  
                 _RC1 0039                   _RB3 0033                   _RD0 0040                   _RC2 003A  
                 _RD1 0041                   _RC3 003B                   _RD2 0042                   _RC4 003C  
                 _RB6 0036                   _RD3 0043                   _RC5 003D                   _RB7 0037  
                 _RD4 0044                   _RC6 003E                   _RD5 0045                   _RD6 0046  
                 _RD7 0047                   _dat 0B88                   _cmd 0B63                   _dev 006A  
                 _plo 00E9          ?_getlogicseq 0070                   fsr0 0004                   indf 0000  
        ___awmod@sign 0076           _startswitch 0270                  l1100 0DF2                  l1101 0E38  
                l1102 0E0A                  l1103 0DFE                  l1104 0E0F                  l1105 0E10  
                l1106 0E29                  l1107 0E37                  l1108 0E42                  l1109 0E49  
                l3001 0172                  l1170 0D9E                  l3003 018F                  l3011 0C06  
                l1171 0D92                  l1172 0DA3                  l3005 0ACB                  l3013 0C13  
                l3021 0DDB                  l1173 0DA4                  l3101 0052                  l1174 0DB5  
                ?_dat 0078                  l3015 0C21                  l3007 0BFF                  l3031 0DF4  
                l3023 0DE4                  l1175 0DC3                  l1167 0D7E                  l3111 007F  
                l3103 005A                  l1176 0DCE                  l1168 0D88                  l3017 0C28  
                l3009 0C02                  l3041 0E10                  l3033 0DFA                  l3025 0DE8  
                l1177 0DD5                  l1169 0DC4                  l3121 00B6                  l3105 005F  
                l3113 0088                  l3201 0F21                  ?_cmd 0078                  l3043 0E21  
                l3035 0DFE                  l3051 0E38                  l3027 0DED                  l1099 0DE4  
                l3019 0DD6                  l3131 00E2                  l3123 00BA                  l3115 008E  
                l3107 0074                  l3211 0F35                  l3203 0F27                  l1381 0AD5  
                l3053 0E3C                  l3045 0E27                  l3037 0E05                  l3029 0DF2  
                l3061 0D75                  l3133 00E3                  l3117 009C                  l3125 00C8  
                l3109 007B                  l3141 0B63                  l3301 0FF6                  l3221 0F46  
                l3213 0F36                  l3205 0F2A                  l3055 0E42                  l3047 0E29  
                l3039 0E0A                  l3071 0D92                  l3063 0D7E                  l3135 00FE  
                l3127 00CC                  l3119 009D                  l3151 0B7E                  l3143 0B6E  
                l3303 0FFA                  l3231 0F63                  l3223 0F4B                  l3215 0F3B  
                l3207 0F2B                  l3311 0D15                  l3057 0E49                  l3049 0E30  
                l3081 0DB5                  l3073 0D99                  l3065 0D82                  l3137 0106  
                l3129 00D4                  l3145 0B71                  l3161 0BA0                  l3153 0B88  
                l3305 0FFF                  l3241 0F74                  l3233 0F64                  l3217 0F40  
                l3209 0F30                  l3225 0F4F                  l3321 0D3B                  l3313 0D1B  
                l3401 03F2                  l1379 0AD2                  l3091 0DD5                  l3083 0DBC  
                l3075 0D9E                  l3067 0D88                  l3059 0D70                  l3139 011D  
                l3147 0B72                  l3163 0BA3                  l3155 0B93                  l3171 0013  
                l3243 0F79                  l3235 0F69                  l3251 0F88                  l3227 0F58  
                l3219 0F41                  l3307 0AE2                  l3323 0D54                  l3315 0D24  
                l3403 03F7                  l3331 028A                  l3411 0E5E                  l3077 0DA4  
                l3069 0D8E                  l3085 0DC4                  l3093 0041                  l3149 0B7B  
                l3157 0B96                  l3181 0030                  l3173 001A                  l3165 0003  
                l3261 0FA2                  l3253 0F91                  l3245 0F7A                  l3237 0F6E  
                l3229 0F5E                  l3325 0D5B                  l3317 0D2E                  l3309 0D0C  
                l3405 0407                  l3341 02A1                  l3333 028F                  l3421 0E82  
                l3413 0E62                  l3501 051A                  l3087 0DC8                  l3079 0DAE  
                l3095 0045                  l3159 0B97                  l3175 001E                  l3183 0037  
                l3167 0008                  l3191 0C65                  l3271 0FB3                  l3263 0FA7  
                l3255 0F97                  l3247 0F7F                  l3239 0F6F                  l3319 0D38  
                l3407 040C                  l3351 02C2                  l3343 02A5                  l3335 0293  
                l3327 0270                  l3431 0EA5                  l3423 0E8A                  l3415 0E64  
                l3511 053D                  l3503 0520                  l3089 0DCE                  l3097 004B  
                l3177 0025                  l3169 000F                  l3193 0C6E                  l3185 0C57  
                l3281 0FD0                  l3273 0FB8                  l3265 0FA8                  l3257 0F9C  
                l3249 0F84                  l3361 0306                  l3353 02D2                  l3345 02AA  
                l3337 0298                  l3329 0284                  l3441 0EDC                  l3433 0EAE  
                l3425 0E97                  l3417 0E67                  l3409 0E4D                  l3601 072E  
                l3521 057F                  l3513 0550                  l3505 0527                  l3099 004C  
                l3179 0029                  l3195 0C77                  l3187 0C5B                  l3291 0FE1  
                l3283 0FD5                  l3275 0FBD                  l3267 0FAD                  l3259 0F9D  
                l3371 033A                  l3363 030F                  l3355 02E4                  l3347 02B0  
                l3339 029C                  l3443 0EE6                  l3435 0EB8                  l3427 0E9B  
                l3419 0E74                  l3611 0763                  l3603 0742                  l3531 05DA  
                l3523 0585                  l3515 0564                  l3507 052D                  l3451 041D  
                l2901 0CF1                  l3197 0C80                  l3189 0C5C                  l3293 0FE6  
                l3285 0FD6                  l3269 0FB2                  l3277 0FC1                  l3381 0370  
                l3373 034A                  l3365 0318                  l3357 02ED                  l3349 02B2  
                l3445 0EFC                  l3437 0ECE                  l3429 0EA0                  l3621 07BE  
                l3613 0769                  l3605 074F                  l3541 05FA                  l3533 05E0  
                l3525 058B                  l3517 0571                  l3509 0533                  l3461 0440  
                l3453 0435                  l2903 0CF2                  l2911 0BD7                  l3295 0FEB  
                l3287 0FDB                  l3279 0FCA                  l3199 0F18                  l3391 03A9  
                l3383 0377                  l3375 0353                  l3367 0328                  l3359 02F6  
                l3447 0F15                  l3439 0ED3                  l3631 07E1                  l3615 0799  
                l3623 07C6                  l3607 0756                  l3543 0603                  l3551 061C  
                l3527 05BB                  l3535 05E8                  l3519 0578                  l3471 0475  
                l3463 0442                  l3455 0439                  l2905 0CF8                  l2913 0BDC  
                l3297 0FEC                  l3289 0FE0                  l3393 03B9                  l3385 0387  
                l3377 035F                  l3369 0331                  l3633 07E7                  l3617 07A5  
                l3625 07C9                  l3609 075D                  l3561 0660                  l3553 0622  
                l3545 0609                  l3529 05C7                  l3537 05EB                  l3481 049C  
                l3473 0482                  l3465 0444                  l3457 043B                  l3449 0411  
                l3641 0B2F                  l2907 0D06                  l2915 0BE1                  l3299 0FF1  
                l3395 03C2                  l3387 0390                  l3379 0360                  l3635 07ED  
                l3627 07D7                  l3619 07B8                  l3571 06AA                  l3563 0667  
                l3555 062C                  l3547 060F                  l3539 05F9                  l3483 04CC  
                l3491 04F9                  l3475 0489                  l3467 044E                  l3459 043D  
                l3643 0B34                  l2909 0D0B                  l2917 0BEC                  l3397 03D5  
                l3389 03A0                  l3637 07F4                  l3629 07D8                  l3573 06B6  
                l3581 06DA                  l3565 066E                  l3557 063F                  l3549 0616  
                l3485 04D8                  l3493 04FC                  l3477 0490                  l3469 0461  
                l3645 0B39                  l2871 0B5A                  l2863 0B48                  l3399 03E1  
                l3639 07FA                  l3591 06FE                  l3583 06E8                  l3575 06C9  
                l3567 0674                  l3559 0653                  l3495 050A                  l3487 04EB  
                l3479 0496                  l2873 0B5B                  l2865 0B50                  l2881 0C8D  
                l3593 0705                  l3585 06E9                  l3577 06CF                  l3569 067A  
                l3497 050B                  l3489 04F1                  l2867 0B54                  l2875 0BAE  
                l2883 0CB0                  l2891 0CC8                  l3587 06F2                  l3595 070B  
                l3579 06D7                  l3499 0514                  l2869 0B57                  l2877 0BB4  
                l2885 0CBC                  l2893 0CD6                  l3597 0711                  l3589 06F8  
                l2887 0CC2                  l2879 0C8B                  l2895 0CD7                  l2991 012C  
                l3599 071B                  l2897 0CE3                  l2889 0CC4                  l2993 0130  
                l2899 0CEE                  l2987 0B07                  l2995 014D                  l2989 0B09  
                l2997 014E                  l2999 016C                  STR_1 088D                  STR_2 088D  
                STR_3 0892                  STR_4 0812                  STR_5 0838                  STR_6 084B  
                STR_7 0888                  STR_8 084C                  STR_9 084B                  u4000 0E21  
                u4001 0E20                  u4020 0E36                  u4021 0E35                  u4005 0E1D  
                u4030 0E3C                  u4110 0DC2                  u4015 0E2A                  u4111 0DC1  
                u4120 0DC8                  u4040 0D75                  u4200 000F                  u4105 0DB6  
                u4041 0D74                  u4201 000E                  u4050 0D82                  u4130 004A  
                u4210 001A                  u4051 0D81                  u4131 0049                  u4211 0019  
                u3500 0CEE                  u4060 0D8E                  u4140 0052                  u4220 0025  
                u4300 0F74                  u3501 0CED                  u4061 0D8D                  u4141 0051  
                u4221 0024                  u4301 0F73                  u3510 0D05                  u4150 005F  
                u4230 0030                  u4310 0F7F                  u3511 0D04                  u4151 005E  
                u4231 002F                  u4311 0F7E                  u3440 0B50                  u3520 0BE9  
                u4080 0DA2                  u4160 009B                  u4320 0F97                  u4240 0F27  
                u4400 0D15                  u3441 0B4F                  u3521 0BE8                  u4081 0DA1  
                u4161 009A                  u4321 0F96                  u4241 0F26                  u4401 0D14  
                u3450 0BD4                  u3530 0BFD                  u4090 0DAE                  u4170 00C7  
                u4330 0FA2                  u4250 0F30                  u4410 0D24                  u3451 0BD3  
                u3515 0D01                  u3531 0BFC                  u4091 0DAD                  u4075 0D93  
                u4171 00C6                  u4331 0FA1                  u4251 0F2F                  u4411 0D23  
                u3460 0CB0                  u3700 0B19                  u4180 00E1                  u4340 0FAD  
                u4260 0F3B                  u4420 0D6E                  u4500 0306                  u3461 0CAF  
                u3701 0B18                  u4181 00E0                  u4165 0097                  u4341 0FAC  
                u4261 0F3A                  u4421 0D6D                  u4501 0305                  u3470 0CBA  
                u3710 014C                  u4190 012A                  u4350 0FB8                  u4270 0F46  
                u4510 0328                  u4430 028A                  u3471 0CB9                  u3711 014B  
                u4095 0DAA                  u4191 0129                  u4175 00C3                  u4351 0FB7  
                u4271 0F45                  u4511 0327                  u4431 0289                  u3480 0CD5  
                u3800 01FC                  u4360 0FD0                  u4280 0F5E                  u4520 034A  
                u4440 0293                  u4600 0E97                  u3481 0CD4                  u3705 0B15  
                u3801 01F8                  u4185 00DD                  u4361 0FCF                  u4281 0F5D  
                u4521 0349                  u4441 0292                  u4601 0E96                  u3490 0CE3  
                u3730 018E                  u4370 0FDB                  u4290 0F69                  u4530 0370  
                u4450 029C                  u4610 0ECD                  u3491 0CE2                  u3731 018D  
                u3715 0148                  u4195 0126                  u4371 0FDA                  u4291 0F68  
                u4531 036F                  u4451 029B                  u4611 0ECC                  u3820 0218  
                u3740 01A8                  u3724 015A                  u3900 0C06                  u4380 0FE6  
                u4540 0387                  u4460 02A5                  u4620 0EFB                  u4700 0514  
                u3485 0CD1                  u3821 0214                  u3741 01A4                  u3725 0157  
                u3901 0C05                  u4381 0FE5                  u4541 0386                  u4461 02A4  
                u4621 0EFA                  u4605 0E93                  u4701 0513                  u3814 01FF  
                u4390 0FF1                  u4550 03A0                  u4470 02C2                  u4630 0F14  
                u4710 051A                  u3735 018A                  u4391 0FF0                  u4551 039F  
                u4471 02C1                  u4631 0F13                  u4615 0EC9                  u4711 0519  
                u3840 0234                  u3760 01C4                  u4560 03B9                  u4480 02D2  
                u4800 0616                  u4720 0527                  u4640 0427                  u3841 0230  
                u3761 01C0                  u4561 03B8                  u4481 02D1                  u4625 0EF7  
                u4801 0615                  u4721 0526                  u3834 021B                  u3754 01AB  
                u3930 0C20                  u4570 03E1                  u4490 02E4                  u4810 0667  
                u4730 0578                  u4650 0489                  u3931 0C1F                  u3915 0C0D  
                u4571 03E0                  u4491 02E3                  u4635 0F10                  u4811 0666  
                u4731 0577                  u4651 0488                  u3860 0250                  u3780 01E0  
                u3940 0DDB                  u4580 0407                  u4900 075C                  u4820 066D  
                u4740 057E                  u4660 048F                  _RCEN 048B                  u3861 024C  
                u3781 01DC                  u3925 0C14                  u3941 0DDA                  u4581 0406  
                u4901 075B                  u4821 066C                  u4741 057D                  u4661 048E  
                u3854 0237                  u3774 01C7                  u3950 0DE8                  u4590 0E81  
                u4910 0763                  u4830 0674                  u4750 0585                  u4670 0496  
                u3951 0DE7                  u4575 03DD                  u4591 0E80                  u4911 0762  
                u4831 0673                  u4751 0584                  u4671 0495                  u3880 026C  
                u3960 0DFA                  u4920 0769                  u4840 067A                  u4760 058B  
                u4680 049C                  u3881 0268                  u3961 0DF9                  u4921 0768  
                u4841 0679                  u4761 058A                  u4681 049B                  u3874 0253  
                u3794 01E3                  u4930 07D6                  u4850 06E7                  u4770 05F8  
                u4690 0509                  u4931 07D5                  u4851 06E6                  u4771 05F7  
                u4691 0508                  u3980 0E0E                  u4940 07E1                  u4860 06F2  
                u4780 0603                  u3981 0E0D                  u4941 07E0                  u4861 06F1  
                u4781 0602                  u3894 026F                  u4950 07E7                  u4870 06F8  
                u4790 0609                  u3975 0DFF                  u4951 07E6                  u4935 07D2  
                u4871 06F7                  u4855 06E3                  u4791 0608                  u4775 05F4  
                u4695 0505                  u4960 07F4                  u4880 0705                  u4961 07F3  
                u4881 0704                  u4890 0756                  u3995 0E11                  u4891 0755  
                _TXEN 04C5                  _main 0B2F                  _pdev 006E                  _scan 0F18  
                btemp 007E                  start 0000                 ??_dat 007A                 ??_cmd 007A  
               ?_main 0070                 ?_scan 0074       __end_of___awdiv 0E4A                 STR_10 0888  
               STR_11 0860                 STR_12 084B                 STR_20 08C9                 STR_13 0888  
               STR_21 0897                 STR_30 08C4                 STR_22 08BF                 STR_14 0874  
               STR_15 084B                 STR_31 08B0                 STR_23 08AB                 STR_16 0888  
               STR_32 08D8                 STR_24 08D3                 STR_26 08BA                 STR_18 08B5  
               STR_27 08A6                 STR_19 08A1                 STR_28 08CE       __end_of___awmod 0DD6  
               STR_29 089C       ___awdiv@divisor 0070       ___awdiv@counter 0075                 _PORTA 0005  
               _PORTB 0006                 _TRISA 0085                 _TRISB 0086                 _TRISC 0087  
               _TRISD 0088                 _check 0CC3                 _delay 0B07                 _itoaa 0041  
     __end_of_initlcd 0C8A                 _write 0D0C                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 0B48          __end_of_scan 1000                ??_main 007E  
              ??_scan 0076                ?_check 0070                ?_delay 0070                ?_itoaa 0079  
    ___awdiv@dividend 0072                ?_write 0042      __end_of_clearlcd 0AEC                ___wmul 0BFF  
           ??___awdiv 0074             ??___awmod 0074                _actrow 0003                check@i 0074  
         setLCD@vbool 0020                _setLCD 012C      __end_of_init_fun 0B63                delay@x 0070  
    ___awdiv@quotient 0077       ___awmod@divisor 0070                _scroll 0E4A       ___awmod@counter 0075  
              _strcat 0BD6                _strcmp 0C8A                clrloop 0ADB                _strcpy 0BAD  
           ??_initlcd 007A      __end_of_resetout 0AD2  __size_of_getlogicseq 03EF                write@i 007C  
      __pcstackCOMMON 0070          __pidataBANK0 0AEC          __pidataBANK1 0B1B         __end_of_check 0D0C  
       __end_of_delay 0B1B         __end_of_itoaa 012C         __end_of_write 0D70               ??_check 0072  
             ??_delay 0072          ?_startswitch 0070               ??_itoaa 007C               ??_write 007A  
          __pbssBANK0 006A            __pbssBANK3 0190            dat@Command 0078            __pmaintext 0B2F  
             ?___wmul 0070               ?_actrow 0072            cmd@Command 0078               ?_setLCD 0070  
             ?_scroll 0048               ?_strcat 0070               ?_strcmp 0070               ?_strcpy 0070  
       getlogicseq@bf 00C0         getlogicseq@nf 00D2         getlogicseq@wf 00D4             ?_clearlcd 0070  
           ?_init_fun 0070            check@logic 0070            check@input 0073             ?_resetout 0070  
             ___awdiv 0DD6               ___awmod 0D70       __size_of___wmul 002A       __size_of_actrow 003E  
     __size_of_setLCD 0144       __size_of_scroll 00CE            _initkeypad 0AD2       __size_of_strcat 0029  
     __size_of_strcmp 0039       __size_of_strcpy 0029          setLCD@number 0070          __size_of_dat 0025  
        __size_of_cmd 0025               _initlcd 0C57      ___awmod@dividend 0072               actrow@n 0072  
          ??_clearlcd 007A           scroll@endat 0053       getlogicseq@snum 00C2           scroll@loopn 0055  
         scroll@loops 0048  end_of_initialization 0C53               setLCD@i 0040               init_ram 0AFA  
          ??_init_fun 0070               scroll@i 005A            ??_resetout 0070               strcmp@r 0076  
__size_of_startswitch 01A1        __end_of___wmul 0C29        __end_of_actrow 0041           ?_initkeypad 0070  
      __end_of_setLCD 0270        __end_of_scroll 0F18         ??_getlogicseq 005C        __end_of_strcat 0BFF  
      __end_of_strcmp 0CC3        __end_of_strcpy 0BD6   start_initialization 0C29           __end_of_dat 0BAD  
         __end_of_cmd 0B88              ??___wmul 0074            setLCD@size 0810              ??_actrow 0074  
         __pdataBANK0 0060           __pdataBANK1 00DA              ??_setLCD 0072              ??_scroll 004A  
            ??_strcat 0071              ??_strcmp 0072              ??_strcpy 0072            itoaa@count 0020  
          itoaa@value 0079         __pcstackBANK0 0020         __pcstackBANK1 00A0     __size_of_clearlcd 000A  
 __end_of_getlogicseq 0800   __size_of_initkeypad 0008     __size_of_init_fun 001B              ?___awdiv 0070  
            ?___awmod 0070             __ptext540 0B88             __ptext532 0411             __ptext541 0B63  
           __ptext533 0E4A             __ptext550 0CC3             __ptext542 0041             __ptext534 0270  
           __ptext551 0C8A             __ptext543 0D70             __ptext535 0D0C             __ptext552 0BAD  
           __ptext544 0DD6             __ptext536 0AE2             __ptext553 0B48             __ptext545 0BFF  
           __ptext537 0F18             __ptext554 0AD2             __ptext546 0ACB             __ptext538 0C57  
           __ptext555 0000             __ptext547 012C             __ptext539 0003             __ptext548 0B07  
           __ptext549 0BD6     __size_of_resetout 0007             __pstrings 0800             _done_init 006C  
            ?_initlcd 0070        __size_of_check 0049        __size_of_delay 0014        __size_of_itoaa 00EB  
      __size_of_write 0064        getlogicseq@num 00D8        getlogicseq@str 00A0        ___wmul@product 0074  
   getlogicseq@ccount 00D6           __stringbase 080F     ___wmul@multiplier 0070         scroll@startat 0051  
         _getlogicseq 0411             init_fetch 0AF6      __size_of___awdiv 0074      __size_of___awmod 0066  
           itoaa@temp 0022          ??_initkeypad 0070            strcat@from 0070      __size_of_initlcd 0033  
            _clearlcd 0AE2         ??_startswitch 0048      getlogicseq@F1263 0190            strcpy@from 0070  
            _init_fun 0B48         __size_of_main 0019         __size_of_scan 00E8              _logic_d1 0065  
            _logic_d2 00DA              _logic_d3 00DF              _logic_d4 00E4             scroll@len 0058  
           scroll@str 0057    __end_of_initkeypad 0ADA              clear_ram 0ADA            write@erase 0046  
            _resetout 0ACB              itoaa@ptr 007B   __end_of_startswitch 0411             stringcode 080A  
            scroll@en 004F              scroll@st 004D             write@line 0044              strcat@cp 0073  
            strcat@to 0072              strcmp@s1 0077              strcmp@s2 0070              strcpy@cp 0076  
            strcpy@to 0075              stringdir 080A              stringtab 0800              write@str 0042  
